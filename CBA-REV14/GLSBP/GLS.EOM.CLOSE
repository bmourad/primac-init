*COPY>CPYLIB>COM1
*********************************************************************
* REVISION     - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM       - PRIMAC
* SOURCE       - GLSBP
* PROGRAM      - GLS.EOM.CLOSE
* BY           - WALID YAMOUT , C.B.A
* DATE         - 08/13/85
* DESCRIPTION  -
*T21177 diane 02/11/1997 * REV11 UPD ADD CLOSE
*T23278 markt 02/26/1999 * Ensure that JE processing is complete for
*                          every division before displaying 'CLOSED'.
*T25308 cm 07/07/2000 * Correct closing problem after task 23278 was
*                       added.
*T26008 cm 01/25/2002 * Automatically update the budget for the new
*                       period if there is existing budget information.
*T26480 lross 03/07/2002 * COA.DIST control record not being deleted.
*T27935 cmykleb 03/31/2004 * CO.GLS.HIST field is now multivalued.
*T29032 cmyklebu 12/29/2006 * Move pgm from rev12 to rev14.
*********************************************************************
*
*** INSERT FILES EQUETES   
*COPY>PMC.CPYLIB>COMPANY   
*COPY>PMC.CPYLIB>FISCAL
*COPY>PMC.CPYLIB>GLTABLE
*COPY>PMC.CPYLIB>COA
*COPY>GLS.CPYLIB>GLM
*COPY>GLS.CPYLIB>COA.BAL
*COPY>CPYLIB>EDIT.COM.DRIVER   
*COPY>CPYLIB>FILE.VARS   
*COPY>CPYLIB>CHAR   
*COPY>CPYLIB>SYSCOM
   MAT SYSCOM.REC =  ""; SYS.TYPE = 2
*
**** OPEN FILES   
   OPEN '','COMPANY' TO COMPANY ELSE ERRMSG = 'COMPANY FILE MISSING' ; GOTO 93000   
   OPEN '','GLS.SCREENS' TO M.SCREENS ELSE ERRMSG = 'GLS.SCREENS FILE MISSING' ; GOTO 93000   
   OPEN '','PREFIX' TO PREFIX ELSE ERRMSG = 'PREFIX FILE MISSING' ; GOTO 93000   
   OPEN '','CONTROL' TO CONTROL ELSE  ERRMSG = 'CONTROL FILE IS MISSING';GOTO 93000
   OPEN '','COA' TO COA ELSE  ERRMSG = 'COA FILE IS MISSING';GOTO 93000
   OPEN '','GLM' TO GLM ELSE  ERRMSG = 'GLM FILE IS MISSING';GOTO 93000
   OPEN '','GLA' TO GLA ELSE  ERRMSG = 'GLA FILE IS MISSING';GOTO 93000
   OPEN '','GLX' TO GLX ELSE  ERRMSG = 'GLX FILE IS MISSING';GOTO 93000
*** GET COMPANY NAME   
   MAT COMP.REC = ''
   CONO = ""
   CALL GET.CONO(CONO,MAT COMP.REC)
   IF CONO = 'END' THEN GOTO 99999
*** PRINT SCREEN   
   MAT EDIT.COM.DRIVER = ''   
   ECD.SCRN.CNT = 1   
   ECD.SCRN.NAME<1> = "GLS.EOM.CLOSE"
   ECD.ACTION=1;CALL SCRN.EDIT   
   ECD.SCRN.NO = 1
   MAT SCV.REC = ''
   ECD.ACTION = 2; CALL SCRN.EDIT
   READ FLG FROM CONTROL,CONO:"EOM.FLG" ELSE FLG = "N"
   IF FLG = "N" THEN 
      ERRMSG = "FILE BACKUP MUST BE RUN AFTER BALANCE UPDATE AND PRIOR TO CLOSE"
      GOSUB 91000
      ECD.ACTION = 99 ; CALL SCRN.EDIT
      GOTO 99999
   END
   READ PERIOD.REC FROM CONTROL, CONO:"ACCT.PERIODS" ELSE
      PERIOD.REC = ""
      PERIOD.REC<1> = 12
   END
   NUM.PERIODS = PERIOD.REC<1>
   MATREAD GLTABLE.REC FROM CONTROL, CONO : "GLTABLE" ELSE
      ERRMSG = "CANNOT LOCATE CONTROL, GLTABLE"
      GOSUB 91000
      ECD.ACTION = 99 ; CALL SCRN.EDIT
      GOTO 99999
   END
   MATREAD COA.REC FROM COA, CONO : GLTB.RET.EARN ELSE
      ERRMSG = "CANNOT LOCATE RETAINED EARNINGS ACCOUNT, ":GLTB.RET.EARN
      GOSUB 91000
      ECD.ACTION = 99 ; CALL SCRN.EDIT
      GOTO 99999
   END
   IF COA.TYPE # "O" THEN
      ERRMSG = "RETAINED EARNINGS ACCOUNT TYPE IS INVALID"
      GOSUB 91000
      ECD.ACTION = 99 ; CALL SCRN.EDIT
      GOTO 99999
   END
*T27935 v
*  IF CO.GLS.HIST = "Y" THEN
   IF CO.GLS.HIST<1,1> = "Y" THEN
*T27935 ^
      OPEN '','GLH' TO GLH ELSE
         ERRMSG = 'GLH FILE IS MISSING'
         GOSUB 91000
         ECD.ACTION = 99 ; CALL SCRN.EDIT
         GOTO 99999
      END
      OPEN '','GLHX' TO GLHX ELSE
         ERRMSG = 'GLHX FILE IS MISSING'
         GOSUB 91000
         ECD.ACTION = 99 ; CALL SCRN.EDIT
         GOTO 99999
      END
      OPEN '','CO.COA.BAL' TO CO.COA.BAL ELSE
         ERRMSG = 'CO.COA.BAL FILE IS MISSING'
         GOSUB 91000
         ECD.ACTION = 99 ; CALL SCRN.EDIT
         GOTO 99999
      END
      OPEN '','DV.COA.BAL' TO DV.COA.BAL ELSE
         ERRMSG = 'DV.COA.BAL FILE IS MISSING'
         GOSUB 91000
         ECD.ACTION = 99 ; CALL SCRN.EDIT
         GOTO 99999
      END
      OPEN '','DP.COA.BAL' TO DP.COA.BAL ELSE
         ERRMSG = 'DP.COA.BAL FILE IS MISSING'
         GOSUB 91000
         ECD.ACTION = 99 ; CALL SCRN.EDIT
         GOTO 99999
      END
      OPEN '','CC.COA.BAL' TO CC.COA.BAL ELSE
         ERRMSG = 'CC.COA.BAL FILE IS MISSING'
         GOSUB 91000
         ECD.ACTION = 99 ; CALL SCRN.EDIT
         GOTO 99999
      END
   END
   ACCT.LEN = LEN(CO.ACCT.PIC)
   CO.ID.LEN = ACCT.LEN + 3
   DV.ID.LEN = ACCT.LEN + 5
   DP.ID.LEN = ACCT.LEN + 7
   CC.ID.LEN = ACCT.LEN + 10
*
*--- MAIN PROCESS
*
   READ OPENDATES FROM CONTROL, CONO : "OPENDATES" ELSE
      ERRMSG = "CONTROL OPENDATES IS NOT ON FILE"
      GOSUB 91000
      ECD.ACTION = 99 ; CALL SCRN.EDIT
      GOTO 99999
   END
   READ SALESDATES FROM CONTROL, CONO : "SALESDATES" ELSE
      ERRMSG = "CONTROL SALESDATES IS NOT ON FILE"
      GOSUB 91000
      ECD.ACTION = 99 ; CALL SCRN.EDIT
      GOTO 99999
   END
   MATREADU FISCAL.REC FROM CONTROL, CONO : "FISCAL" ELSE
      RELEASE CONTROL, CONO : "FISCAL"
      ERRMSG = "CONTROL FISCAL IS NOT ON FILE"
      GOSUB 91000
      ECD.ACTION = 99 ; CALL SCRN.EDIT
      GOTO 99999
   END
   PERIOD = FR.CURR.PER
   CURR.PER = FR.CURR.PER[5,2]
   IF NOT(NUM(CURR.PER)) OR CURR.PER < 1 OR CURR.PER > NUM.PERIODS THEN
      RELEASE CONTROL, CONO : "FISCAL"
      ERRMSG = "ERROR IN PERIOD IN CONTROL FISCAL"
      GOSUB 91000
      ECD.ACTION = 99 ; CALL SCRN.EDIT
      GOTO 99999
   END
   READU GLS.UPD.CHK FROM CONTROL, CONO:"GLS.UPD.CHK" ELSE GLS.UPD.CHK = ""
   PER = CURR.PER + 1
   IF PER > NUM.PERIODS THEN
      PER = "01"
      FR.CURR.PER = FR.CURR.PER[1,4] + 1 : PER
      FR.CURR.DATE = OCONV(OPENDATES<1>,"D/")
      FR.CURR.DATE = FR.CURR.DATE[1,6] : FR.CURR.DATE[7,4] + 1
      FR.CURR.DATE = ICONV(FR.CURR.DATE,"D/")
      END.DATE = OCONV(OPENDATES<2>-1,"D/")
      END.DATE = END.DATE[1,6] : END.DATE[7,4] + 1
      END.DATE = ICONV(END.DATE,"D/")
   END ELSE
      PER = STR('0',2-LEN(PER)) : PER
      FR.CURR.PER = FR.CURR.PER[1,4] : PER
      FR.CURR.DATE = OPENDATES<PER>
      IF PER = NUM.PERIODS THEN
         END.DATE = OCONV(OPENDATES<1>-1,"D/")
         END.DATE = END.DATE[1,6] : END.DATE[7,4] + 1
         END.DATE = ICONV(END.DATE,"D/")
      END ELSE
         END.DATE = OPENDATES<PER> - 1
      END
   END
   MON = SALESDATES<CURR.PER+1,2>
   SCV.REC(1)<1> = PER
   SCV.REC(2)<1> = SALESDATES<PER+1,2>
   SCV.REC(3)<1> = FR.CURR.DATE
   NO.CLOSE = 0
   READ REC FROM CONTROL, CONO:"JE":PERIOD ELSE
      REC = "CLOSED"
      REC<2> = END.DATE
   END
*T23278 v
*  IF REC<1> # "CLOSED" THEN NO.CLOSE = 1
*  SCV.REC(4)<1> = REC<1>
*  SCV.REC(7)<1> = REC<2>
*T25308 v
* ENTRIES = DCOUNT(REC<1>,VM)
* NOT.FINISHED = 0
* FOR I = 1 TO ENTRIES UNTIL NOT.FINISHED
*     IF REC<1,I> # "CLOSED" THEN
*         IF REC<1,I> = "" THEN
*             REC<1,I> = "CLOSED"
*             REC<2,I> = END.DATE
*         END
*     END ELSE
*         NOT.FINISHED = 1
*         NO.CLOSE = 1
*     END
* NEXT I
* SCV.REC(4)<1> = REC<1,I-1>
* SCV.REC(7)<1> = REC<2,I-1>
   ENTRIES = DCOUNT(REC<1>,VM)
   NOT.FINISHED = 1
   FOR I = 1 TO ENTRIES WHILE NOT.FINISHED
      IF REC<1,I> # '' THEN
         SCV.REC(4)<1> = REC<1,I>
         SCV.REC(7)<1> = REC<2,I>
         IF REC<1,I> # 'CLOSED' THEN
            NOT.FINISHED = 0
            NO.CLOSE = 1
         END
      END
   NEXT I
*T25308 ^
*T23278 ^
   SCV.REC(5)<1> = CURR.PER
   SCV.REC(6)<1> = MON
   READ REC FROM CONTROL, CONO:"JE.REVERSE":PERIOD ELSE
      REC = "CLOSED"
      REC<2> = END.DATE
   END
*T23278 v
*  IF REC<1> # "CLOSED" THEN NO.CLOSE = 1
*  SCV.REC(4)<1,2> = REC<1>
*  SCV.REC(7)<1,2> = REC<2>
*T25308 v
* ENTRIES = DCOUNT(REC<1>,VM)
* NOT.FINISHED = 0
* FOR I = 1 TO ENTRIES UNTIL NOT.FINISHED
*     IF REC<1,I> # "CLOSED" THEN
*         IF REC<1,I> = "" THEN
*             REC<1,I> = "CLOSED"
*             REC<2,I> = END.DATE
*         END
*     END ELSE
*         NOT.FINISHED = 1
*         NO.CLOSE = 1
*     END
* NEXT I
* SCV.REC(4)<1,2> = REC<1,I-1>
* SCV.REC(7)<1,2> = REC<2,I-1>
   ENTRIES = DCOUNT(REC<1>,VM)
   NOT.FINISHED = 1
   FOR I = 1 TO ENTRIES WHILE NOT.FINISHED
      IF REC<1,I> # '' THEN
         SCV.REC(4)<1,2> = REC<1,I>
         SCV.REC(7)<1,2> = REC<2,I>
         IF REC<1,I> # 'CLOSED' THEN
            NOT.FINISED = 0
            NO.CLOSE = 1
         END
      END
   NEXT I
*T25308 ^
*T23278 ^
   SCV.REC(5)<1,2> = CURR.PER
   SCV.REC(6)<1,2> = MON
   READ REC FROM CONTROL, CONO:"JE.RECUR":PERIOD ELSE
      REC = "CLOSED"
      REC<2> = END.DATE
   END
*T23278 v
*  IF REC<1> # "CLOSED" THEN NO.CLOSE = 1
*  SCV.REC(4)<1,3> = REC<1>
*  SCV.REC(7)<1,3> = REC<2>
*T25308 v
* ENTRIES = DCOUNT(REC<1>,VM)
* NOT.FINISHED = 0
* FOR I = 1 TO ENTRIES UNTIL NOT.FINISHED
*     IF REC<1,I> # "CLOSED" THEN
*         IF REC<1,I> = "" THEN
*             REC<1,I> = "CLOSED"
*             REC<2,I> = END.DATE
*         END
*     END ELSE
*         NOT.FINISHED = 1
*         NO.CLOSE = 1
*     END
* NEXT I
* SCV.REC(4)<1,3> = REC<1,I-1>
* SCV.REC(7)<1,3> = REC<2,I-1>
   ENTRIES = DCOUNT(REC<1>,VM)
   NOT.FINISHED = 1
   FOR I = 1 TO ENTRIES WHILE NOT.FINISHED
      IF REC<1,I> # '' THEN
         SCV.REC(4)<1,3> = REC<1,I>
         SCV.REC(7)<1,3> = REC<2,I>
         IF REC<1,I> # 'CLOSED' THEN
            NOT.FINISHED = 0
            NO.CLOSE = 1
         END
      END
   NEXT I
*T25308 ^
*T23278 ^
   SCV.REC(5)<1,3> = CURR.PER
   SCV.REC(6)<1,3> = MON
   READ REC FROM CONTROL, CONO:"COA.DIST" ELSE
      REC = "CLOSED"
      REC<2> = END.DATE
      REC<3> = PERIOD
   END
   IF REC<3> < PERIOD THEN
      REC<1> = "ENTERED"
      REC<2> = END.DATE
      REC<3> = PERIOD
   END
   SCV.REC(4)<1,4> = REC<1>
   SCV.REC(5)<1,4> = REC<3>[5,2]
   SCV.REC(6)<1,4> = SALESDATES<(REC<3>[5,2]+1),2>
   SCV.REC(7)<1,4> = REC<2>
   TAPE.PER.ID = CONO : PERIOD[1,4] : "GLS.TAPE"
   READ TAPE.PERIOD FROM CONTROL, TAPE.PER.ID ELSE TAPE.PERIOD = ''
   IF TAPE.PERIOD<CURR.PER> = '' THEN
      SCV.REC(4)<1,5> = "ENTERED"
      FND = 0
      FOR I = CURR.PER TO 1 STEP -1 WHILE FND = 0
         IF TAPE.PERIOD<I> # '' THEN FND = I
      NEXT I
      IF FND = 0 THEN
         FND = "01"
         TAPE.PERIOD<1> = OPENDATES<1>
      END
      SCV.REC(5)<1,5> = STR("0",2-LEN(FND)) : FND
      SCV.REC(6)<1,5> = SALESDATES<FND+1,2>
      SCV.REC(7)<1,5> = TAPE.PERIOD<FND>
      NO.CLOSE = 1
   END ELSE
      SCV.REC(4)<1,5> = "CLOSED"
      SCV.REC(5)<1,5> = CURR.PER
      SCV.REC(6)<1,5> =  MON
      SCV.REC(7)<1,5> = TAPE.PERIOD<CURR.PER>
   END
   ECD.SUB.SUM = 1; ECD.ACTION = 3; CALL SCRN.EDIT
*** ENTER OPTIONS   
   MORE = 1
   LOOP
      ECD.NUM = 8; SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ""
      ECD.ACTION=4;CALL SCRN.EDIT
      OPTION = ECD.RET.VALUE
      BEGIN CASE
         CASE OPTION = 'END' OR OPTION = 'E'
            MORE = 0
         CASE OPTION = 'C' AND NO.CLOSE
            ERRMSG = 'CANNOT CLOSE BEFORE CLOSING ALL GLS SUB SYSTEMS'
            GOSUB 91000
         CASE OPTION = 'C' AND GLS.UPD.CHK<2> # ""
            BEGIN CASE
               CASE GLS.UPD.CHK<3> = "R"
                  ERRMSG = 'NEED TO WAIT FOR USER (':GLS.UPD.CHK<2>:') TO FINISH ACCOUNT DETAIL REPORT'
               CASE GLS.UPD.CHK<3> = "U"
                  ERRMSG = 'NEED TO WAIT FOR USER (':GLS.UPD.CHK<2>:') TO FINISH COA BALANCE UPDATE'
               CASE GLS.UPD.CHK<3> = "DR"
                  ERRMSG = 'NEED TO WAIT FOR USER (':GLS.UPD.CHK<2>:') TO FINISH ACCOUNT CURRENT DETAIL REPORT'
               CASE 1
                  ERRMSG = 'NEED TO WAIT FOR USER (':GLS.UPD.CHK<2>:') TO FINISH COA CURRENT BALANCE UPDATE'
            END CASE
            GOSUB 91000
         CASE OPTION = 'C' AND GLS.UPD.CHK<1> # "RU"
            ERRMSG = 'NEED TO RUN ACCOUNT DETAIL REPORT & BALANCE UPDATE BEFORE CLOSING THE PERIOD'
            GOSUB 91000
         CASE OPTION = 'C'
            P_X  = 3 ; P_Y = 23 ; P_VALUE = 'NOW PROCESSING GLA FILE' ; P_OPT = "CL"
            CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
            SELECT GLA
            CNT = 0
            DATA = 1
            LOOP
               READNEXT ID ELSE DATA = 0
            WHILE DATA DO
               IF ID[1,3] <> CONO THEN GOTO 199
               MATREADU GLM.REC FROM GLA, ID ELSE
                  RELEASE GLA, ID
                  GOTO 199
               END
               BEGIN CASE
                  CASE GLM.MON < PERIOD
                     DELETE GLA, ID
                  CASE GLM.MON = PERIOD
                     CNT = CNT + 1
                     RELEASE GLA, ID
                  CASE 1
                     RELEASE GLA, ID
               END CASE
199         REPEAT
            IF CNT > 0 THEN
               NO.CLOSE = 1
               ERRMSG = '(':CNT:') RECORDS NOT PROCESSED IN GLA FILE FOR THIS PERIOD'
               GOSUB 91000; GOTO 999
            END
            P_X  = 3 ; P_Y = 23 ; P_VALUE = 'NOW PROCESSING GLM FILE ' ; P_OPT = "CL"
            CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
            SELECT GLM
            DATA = 1
*T27935 v
*           IF CO.GLS.HIST # "Y" THEN GOTO 400
            IF CO.GLS.HIST<1,1> # "Y" THEN GOTO 400
*T27935 ^
200         READU NEXT.NO FROM CONTROL, CONO : "GLACOUNTER" ELSE NEXT.NO = 1
            LOOP
               READNEXT ID ELSE DATA = 0
            WHILE DATA DO
               IF ID[1,3] <> CONO THEN GOTO 299
               MATREADU GLM.REC FROM GLM, ID ELSE
                  RELEASE GLM, ID
                  GOTO 299
               END
               IF GLM.AMT + 0 <> 0 THEN
                  DV.NO = ID[4,2]
                  DP.NO = ID[6,2]
                  CC.NO = ID[8,3]
                  AC.NO = ID[11,ACCT.LEN]
                  CC.ID = ID[1,CC.ID.LEN]
                  DP.ID = CONO : DV.NO : DP.NO : AC.NO
                  DV.ID = CONO : DV.NO : AC.NO
                  CO.ID = CONO : AC.NO
                  GLM.NO = ID[CC.ID.LEN+1,6]
                  READU DUMMY FROM GLH, ID ELSE
                     MATWRITE GLM.REC ON GLH, ID
                     GLH.NO = GLM.NO
                     GOTO 250
                  END
                  PTR = 1
                  LOOP
                     GLH.NO = NEXT.NO
                     IF GLH.NO > 999999 THEN GLH.NO = 1
                     NEXT.NO = GLH.NO + 1
                     GLH.NO = STR("0",6-LEN(GLH.NO)) : GLH.NO
                     READ DUMMY FROM GLH, CC.ID : GLH.NO ELSE PTR = 0
                  WHILE PTR DO REPEAT
                  MATWRITE GLM.REC ON GLH, CC.ID : GLH.NO
                  RELEASE GLH, ID
250               READU GLX.REC FROM GLX, CO.ID ELSE GLX.REC = ""
                  LOCATE DV.NO IN GLX.REC,1 SETTING FND ELSE NULL
                  GLX.REC<FND> = DV.NO
                  WRITE GLX.REC ON GLX, CO.ID
                  READU GLX.REC FROM GLX, DV.ID ELSE GLX.REC = ""
                  LOCATE DP.NO IN GLX.REC,1 SETTING FND ELSE NULL
                  GLX.REC<FND> = DP.NO
                  WRITE GLX.REC ON GLX, DV.ID
                  READU GLX.REC FROM GLX, DP.ID ELSE GLX.REC = ""
                  LOCATE CC.NO IN GLX.REC,1 SETTING FND ELSE NULL
                  GLX.REC<FND> = CC.NO
                  WRITE GLX.REC ON GLX, DP.ID
                  READU GLX.REC FROM GLX, CC.ID ELSE GLX.REC = ""
                  LOCATE GLM.NO IN GLX.REC,1 SETTING FND ELSE NULL
                  GLX.REC<FND> = GLH.NO
                  WRITE GLX.REC ON GLX, CC.ID
               END
               DELETE GLM, ID
299         REPEAT
            WRITE NEXT.NO ON CONTROL, CONO : "GLACOUNTER"
            P_X  = 3 ; P_Y = 23 ; P_VALUE = 'NOW PROCESSING GLX FILE ' ; P_OPT = "CL"
            CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
            SELECT GLX
            DATA = 1
            LOOP
               READNEXT ID ELSE DATA = 0
            WHILE DATA DO
               IF ID[1,3] <> CONO THEN GOTO 399
               READU GLX.REC FROM GLX, ID ELSE
                  RELEASE GLX, ID
                  GOTO 399
               END
               ID.LEN = LEN(ID)
               BEGIN CASE
                  CASE ID.LEN = CO.ID.LEN
                     MATREAD CB.REC FROM CO.COA.BAL, ID ELSE MAT CB.REC = ""
                     GLX.REC = INSERT(GLX.REC,1,0,0,CB.CREDITS)
                     GLX.REC = INSERT(GLX.REC,1,0,0,CB.DEBITS)
                  CASE ID.LEN = DV.ID.LEN
                     MATREAD CB.REC FROM DV.COA.BAL, ID ELSE MAT CB.REC = ""
                     GLX.REC = INSERT(GLX.REC,1,0,0,CB.CREDITS)
                     GLX.REC = INSERT(GLX.REC,1,0,0,CB.DEBITS)
                  CASE ID.LEN = DP.ID.LEN
                     MATREAD CB.REC FROM DP.COA.BAL, ID ELSE MAT CB.REC = ""
                     GLX.REC = INSERT(GLX.REC,1,0,0,CB.CREDITS)
                     GLX.REC = INSERT(GLX.REC,1,0,0,CB.DEBITS)
                  CASE 1
                     MATREAD CB.REC FROM CC.COA.BAL, ID ELSE MAT CB.REC = ""
                     GLX.REC = INSERT(GLX.REC,1,0,0,CB.CREDITS)
                     GLX.REC = INSERT(GLX.REC,1,0,0,CB.DEBITS)
               END CASE
               WRITE GLX.REC ON GLHX, ID : PERIOD
               DELETE GLX, ID
399         REPEAT
            GOTO 600
400         LOOP
               READNEXT ID ELSE DATA = 0
            WHILE DATA DO
               IF ID[1,3] <> CONO THEN GOTO 499
               READU DUMMY FROM GLM, ID ELSE
                  RELEASE GLM, ID
                  GOTO 499
               END
               DELETE GLM, ID
499         REPEAT
            P_X  = 3 ; P_Y = 23 ; P_VALUE = 'NOW PROCESSING GLX FILE ' ; P_OPT = "CL"
            CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
            SELECT GLX
            DATA = 1
            LOOP
               READNEXT ID ELSE DATA = 0
            WHILE DATA DO
               IF ID[1,3] <> CONO THEN GOTO 599
               READU GLX.REC FROM GLX, ID ELSE
                  RELEASE GLX, ID
                  GOTO 599
               END
               DELETE GLX, ID
599         REPEAT
600         FR.CLOSE.DATE = DATE()
            IF CURR.PER > PER THEN
               MATWRITE FISCAL.REC ON CONTROL, CONO : "FISCALMON"
               DELETE CONTROL, CONO : "FISCAL"
               DELETE CONTROL, CONO:"GLS.BUD.CHK" ; * T26008
            END ELSE
               MATWRITE FISCAL.REC ON CONTROL, CONO : 'FISCAL'
               WRITE 'OK' ON CONTROL, CONO:"GLS.BUD.CHK" ; * T26008
            END
            DELETE CONTROL, CONO:"GLS.UPD.CHK"
            FND = 1
            READU REC FROM CONTROL, CONO:"JE":PERIOD ELSE
               FND = 0
               RELEASE CONTROL, CONO:"JE":PERIOD
            END
            IF FND THEN
               DELETE CONTROL, CONO:"JE":PERIOD
            END
            FND = 1
            READU REC FROM CONTROL, CONO:"JE.REVERSE":PERIOD ELSE
               FND = 0
               RELEASE CONTROL, CONO:"JE.REVERSE":PERIOD
            END
            IF FND THEN
               DELETE CONTROL, CONO:"JE.REVERSE":PERIOD
            END
            FND = 1
            READU REC FROM CONTROL, CONO:"JE.RECUR":PERIOD ELSE
               FND = 0
               RELEASE CONTROL, CONO:"JE.RECUR":PERIOD
            END
            IF FND THEN
               DELETE CONTROL, CONO:"JE.RECUR":PERIOD
            END
            FND = 1
            READU REC FROM CONTROL, CONO:"COA.DIST" ELSE
               FND = 0
*T26480 v      RELEASE CONTROL, CONO:"COA.DIST":PERIOD
               RELEASE CONTROL, CONO:"COA.DIST"
            END
            IF FND THEN
*T26480 v      DELETE CONTROL, CONO:"COA.DIST":PERIOD
               DELETE CONTROL, CONO:"COA.DIST"
            END
            MORE = 0
      END CASE
999 WHILE MORE DO REPEAT
   RELEASE CONTROL, CONO : "FISCAL"
   RELEASE CONTROL, CONO:"GLS.UPD.CHK"
   ECD.ACTION = 99 ; CALL SCRN.EDIT
   GOTO 99999
*
*--- ERROR ROUTINE
*
91000 ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC);RETURN
93000 ERR.TYPE=3;CALL SYSCOM(MAT SYSCOM.REC)
* 93000*
*      PRINT @(0,23) : CL : ERRMSG :
*      INPUT ERRMSG,1 :
99999*
END
