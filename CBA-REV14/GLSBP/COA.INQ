*COPY>CPYLIB>COM1
*COPY>PMC.CPYLIB>COM.COA
**************************************************************************
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM     - PRIMAC
* SOURCE     - GLSBP
* PROGRAM    - COA.INQ
* BY         - WALID YAMOUT , C.B.A
* DATE       - 10/15/86
* DESCRIPTION-
*   This program is an inquiry for G/L activities
*
* TASK 18573 LLH 4/95 - ACCOUNTING PERIODS 1-52
*
*T21876 diane 05/13/1997 * Display xref description
******* renee 08/18/1997 * Transferring changes made to this program in
*                          Rev10b to Rev11 for T21331.
*T21331 rick  12/13/1996 * Problem with display of ending balance during
*                          the last period
*T25978 adelgado 02/07/2002 * Add the use of prompts (S,SR,SB,ST).
*ENDDOC
**************************************************************************
*
*--- INSERT FILES EQUETES
*
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>COA
*COPY>PMC.CPYLIB>COA.FILE.VARS
*COPY>PMC.CPYLIB>DIVISION
*COPY>PMC.CPYLIB>DEPARTMENT
*COPY>PMC.CPYLIB>COST.CNTR
*COPY>GLS.CPYLIB>GLM
*COPY>GLS.CPYLIB>COA.BAL
*COPY>GLS.CPYLIB>ACCT.TYPE
*COPY>GLS.CPYLIB>ACCT.CATG
*COPY>GLS.CPYLIB>ACCT.SUB.CATG
*COPY>GLS.CPYLIB>CATG.AND.SUB
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>GEN.XREF
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
  MAT SYSCOM.REC =  ""; SYS.TYPE = 2
  ERRMSG = ""
*
*--- GET COMPANY
*
  MAT FILE.VARS = ""
  OPEN '','COMPANY' TO COMPANY ELSE ERRMSG = 'COMPANY FILE IS MISSING'; GOSUB 91000; GOTO 999999
  OPEN '','CONTROL' TO CONTROL ELSE ERRMSG = 'CONTROL FILE IS MISSING'; GOSUB 91000; GOTO 999999
  CONO = ""
  MAT COMP.REC = ""
  CALL GET.CONO(CONO,MAT COMP.REC)
  IF CONO = "END" THEN GOTO 999999
  READ FISCAL.REC FROM CONTROL, CONO : "FISCAL" ELSE FISCAL.REC = ""
  PERIOD = FISCAL.REC<1>[5,2] + 0
  IF PERIOD < 1 OR PERIOD > 52 THEN
    ERRMSG = "INVALID PERIOD ":PERIOD
    GOSUB 91000
    GOTO 999999
  END
*T21331 v
  READ PERIOD.REC FROM CONTROL,CONO:"ACCT.PERIODS" ELSE
    PERIOD.REC=12
  END
*T21331 ^
  OPN = CB.OPN + PERIOD
  IF PERIOD >= PERIOD.REC<1> THEN  ; * T21331
    OPNVAL = CB.OPN.YE             ; * T21331
  END ELSE                         ; * T21331
    OPNVAL = OPN+1                 ; * T21331
  END                              ; * T21331
  IN.ACCT.LEN = LEN(CO.ACCT.PIC)
  BASE.LEN = FIELD(CO.ACCT.STRUC,"-",1)
  IF NOT(NUM(BASE.LEN)) OR BASE.LEN > IN.ACCT.LEN THEN
    ERRMSG = "ERROR IN THE ACCOUNT STRUCTURE"
    GOSUB 91000
    GOTO 999999
  END
*
*--- OPEN FILES
*
  OPEN '','GLS.SCREENS' TO M.SCREENS ELSE ERRMSG = 'GLS.SCREENS FILE IS MISSING'; GOSUB 91000; GOTO 999999
  OPEN '','PREFIX' TO PREFIX ELSE ERRMSG = 'PREFIX FILE IS MISSING'; GOSUB 91000; GOTO 999999
  OPEN '','GLX' TO GLX ELSE ERRMSG = 'GLX FILE IS MISSING'; GOSUB 91000; GOTO 999999
  OPEN '','GLA' TO GLA ELSE ERRMSG = 'GLA FILE IS MISSING'; GOSUB 91000; GOTO 999999
  OPEN '','GLM' TO GLM ELSE ERRMSG = 'GLM FILE IS MISSING'; GOSUB 91000; GOTO 999999
  OPEN '','COA' TO COA ELSE ERRMSG = 'COA FILE IS MISSING'; GOSUB 91000; GOTO 999999
  OPEN '','COA.XREF' TO COA.XREF ELSE ERRMSG = 'COA.XREF FILE IS MISSING'; GOSUB 91000; GOTO 999999
  OPEN '','ACCT.TYPE' TO ACCT.TYPE ELSE ERRMSG = 'ACCT.TYPE FILE IS MISSING'; GOSUB 91000; GOTO 999999
  OPEN '','ACCT.CATG' TO ACCT.CATG ELSE ERRMSG = 'ACCT.CATG FILE IS MISSING'; GOSUB 91000; GOTO 999999
  OPEN '','ACCT.SUB.CATG' TO ACCT.SUB.CATG ELSE ERRMSG = 'ACCT.SUB.CATG FILE IS MISSING'; GOSUB 91000; GOTO 999999
  OPEN '','CATG.AND.SUB' TO CATG.AND.SUB ELSE ERRMSG = 'CATG.AND.SUB FILE IS MISSING'; GOSUB 91000; GOTO 999999
  OPEN '','DIVISION' TO DIVISION ELSE ERRMSG = 'DIVISION FILE IS MISSING'; GOSUB 91000; GOTO 999999
  OPEN '','DEPARTMENT' TO DEPARTMENT ELSE ERRMSG = 'DEPARTMENT FILE IS MISSING'; GOSUB 91000; GOTO 999999
  OPEN '','COST.CNTR' TO COST.CNTR ELSE ERRMSG = 'COST.CNTR FILE IS MISSING'; GOSUB 91000; GOTO 999999
  OPEN '','CO.COA.BAL' TO CO.COA.BAL ELSE ERRMSG = 'CO.COA.BAL FILE IS MISSING'; GOSUB 91000; GOTO 999999
  OPEN '','DV.COA.BAL' TO DV.COA.BAL ELSE ERRMSG = 'DV.COA.BAL FILE IS MISSING'; GOSUB 91000; GOTO 999999
  OPEN '','DP.COA.BAL' TO DP.COA.BAL ELSE ERRMSG = 'DP.COA.BAL FILE IS MISSING'; GOSUB 91000; GOTO 999999
  OPEN '','CC.COA.BAL' TO CC.COA.BAL ELSE ERRMSG = 'CC.COA.BAL FILE IS MISSING'; GOSUB 91000; GOTO 999999
*
*--- INITIALIZATION
*
  LINE.SPACE = 1
  BEGIN.PAGE = 11
  PAGE.SIZE = 9
  LINES = 0
  LN = 1
  OLD.START = 0
  GEN.DIV = "00"
  GEN.DEPT = "00"
  GEN.CCTR = "000"
  MAT GEN.XREF.REC = ""
  GXR.CO = CONO
  GXR.LOC = 0
  UNKNOWN = "UNKNOWN"
*
*--- SCREEN
*
*  MAT EDIT.COM = ""
*  TYP = 0
*  CALL EDIT.SUB
  FILL = "#"
  MAT EDIT.COM.DRIVER = ""
  ECD.SCRN.CNT = 1
  ECD.SCRN.NAME<1> = "COA.INQ"
  ECD.ACTION=1;CALL SCRN.EDIT
*
*--- MAIN PROCESS
*
100*
  ECD.SCRN.NO = 1
  MAT SCV.REC = ""
  ECD.ACTION=2;CALL SCRN.EDIT
110*
  ACCT.NO = ""
  GOSUB 1000
  IF ECD.RET.VALUE = "END" THEN
    IF ACCT.NO = "" THEN
      GOTO 999999
    END ELSE
      GOTO 110
    END
  END
  GOSUB 4000
*
*--- ENTER OPTIONS
*
500*
  ECD.NUM = 9
  SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ''
  ECD.ACTION=4;CALL SCRN.EDIT
  OPTION = ECD.RET.VALUE
  BEGIN CASE
    CASE OPTION = "END" OR OPTION = "E"
      GOTO 999999
    CASE OPTION = "AC"
      GOSUB 1000
      IF ECD.RET.VALUE # "END" THEN GOSUB 4000
    CASE OPTION = "DV"
      IF ACCT.NO = "" THEN
        GOSUB 1000
      END ELSE
        GOSUB 1100
      END
      IF ECD.RET.VALUE # "END" THEN GOSUB 4000
    CASE OPTION = "DP"
      IF ACCT.NO = "" THEN
        GOSUB 1000
      END ELSE
        IF DIV.CODE = "" OR DIV.CODE = GEN.DIV THEN
          GOSUB 1100
        END ELSE
          GOSUB 1200
        END
      END
      IF ECD.RET.VALUE # "END" THEN GOSUB 4000
    CASE OPTION = "CC"
      IF ACCT.NO = "" THEN
        GOSUB 1000
      END ELSE
        IF DIV.CODE = "" OR DIV.CODE = GEN.DIV THEN
          GOSUB 1100
        END ELSE
          IF DEPT.CODE = "" OR DEPT.CODE = GEN.DEPT THEN
            GOSUB 1200
          END ELSE
            GOSUB 1300
          END
        END
      END
      IF ECD.RET.VALUE # "END" THEN GOSUB 4000
    CASE OPTION = "S"
      GOSUB 30000
      BEGIN CASE
        CASE ECD.RET.VALUE = "END"
        * T25978 v
        CASE ECD.RET.VALUE = "" OR ECD.RET.VALUE = 0 OR ECD.RET.VALUE = 'S'
          LN = 1 + INT((LN - 1)/PAGE.SIZE) * PAGE.SIZE + PAGE.SIZE
          IF LN > LINES THEN LN = 1
          GOSUB 80000
        CASE ECD.RET.VALUE = "SR"
          LN = 1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE - PAGE.SIZE
          IF LN < 1 THEN LN = 1
          GOSUB 80000
        CASE ECD.RET.VALUE = "ST"
          LN = 1
          GOSUB 80000
        CASE ECD.RET.VALUE = "SB"
          LN = LINES
          GOSUB 80000
        * T25978 ^
        CASE NUM(ECD.RET.VALUE)
          LN = ECD.RET.VALUE
          GOSUB 80000
      END CASE
  END CASE
  GOTO 500
*---------------*
*  SUBROUTINES  *
*---------------*
*
*--- ACCOUNT NUMBER
*
1000*
  MAT COA.REC = ""
  ECD.NUM = 1
  SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ""
  ECD.ACTION = 5
  CALL SCRN.EDIT
  ECD.MAXL = IN.ACCT.LEN
  ECD.ACTION = 4
  CALL SCRN.EDIT
  BEGIN CASE
    CASE ECD.RET.VALUE = "END"
      ACCT.NO = ""
      GOTO 1999
    CASE NOT(NUM(ECD.RET.VALUE))
      BEGIN CASE
        CASE ECD.RET.VALUE = "D"
          GXR.ACTION = ECD.RET.VALUE
          GOSUB 2000
        CASE ECD.RET.VALUE = "T"
          GXR.ACTION = "C"
          GOSUB 3000
        CASE 1
          ERRMSG = "** NUMERIC INPUT REQUIRED **"
          GOSUB 91000
          ECD.RET.VALUE = "END"
      END CASE
      IF ECD.RET.VALUE = "END" THEN GOTO 1000
      GXR.ID = ""
      GXR.SRCH.ID = ECD.RET.VALUE
      GXR.LOC = 1
      GXR.FILE = COA
      CALL COA.GEN.XREF(MAT GEN.XREF.REC,PREFIX)
      IF GXR.ACTION # "X" THEN
        ECD.ACTION = 2
        CALL SCRN.EDIT
      END
      IF GXR.ID = "" THEN GOTO 1000
      ECD.RET.VALUE = GXR.ID
      ECD.NUM = 1
      SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ECD.RET.VALUE CO.ACCT.MASK
      ECD.ACTION = 5
      CALL SCRN.EDIT
      GXR.LOC = 0
    CASE LEN(ECD.RET.VALUE) < BASE.LEN
      ERRMSG = "MINIMUM LENGTH = ":BASE.LEN
      GOSUB 91000
      GOTO 1000
    CASE 1
      ECD.RET.VALUE = ECD.RET.VALUE : STR("0",IN.ACCT.LEN-LEN(ECD.RET.VALUE))
      SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ECD.RET.VALUE CO.ACCT.MASK
      ECD.ACTION = 5
      CALL SCRN.EDIT
  END CASE
  MATREAD COA.REC FROM COA, CONO : ECD.RET.VALUE ELSE
    ERRMSG = "Cannot locate account - " : ECD.RET.VALUE CO.ACCT.MASK
    GOSUB 91000
    GOTO 1000
  END
  READ ALL.DIV FROM GLX, CONO : ECD.RET.VALUE ELSE ALL.DIV = ""
  IF ALL.DIV = "" THEN
    ERRMSG = "No activities for account - " : ECD.RET.VALUE CO.ACCT.MASK
    GOSUB 91000
    GOTO 1000
  END
  ACCT.NO = ECD.RET.VALUE
*
*--- DIVISION
*
1100*
  ECD.NUM = 6
  SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ""
  ECD.ACTION = 4
  CALL SCRN.EDIT
  IF ECD.RET.VALUE = "END" THEN
    DIV.CODE = ""
    GOTO 1999
  END
  IF ECD.RET.VALUE = "S" THEN
    DIV.CODE = ECD.RET.VALUE
    GOTO 1999
  END
  IF ECD.RET.VALUE = "" THEN
    XCODE = ALL.DIV
    XDESC = ""
    XLINES = COUNT(ALL.DIV,VM) + (ALL.DIV # "")
    FOR XLN = 1 TO XLINES
      IF XCODE<1,XLN> = GEN.DIV THEN
        MAT DIV.REC = ""
        DIV.DESC = "GENERAL DIVISION"
      END ELSE
        MATREAD DIV.REC FROM DIVISION, CONO : XCODE<1,XLN> ELSE
          MAT DIV.REC = ""
          DIV.DESC = UNKNOWN
        END
      END
      XDESC<1,XLN> = DIV.DESC
    NEXT XLN
    XLN = 1
    XOLD.START = 0
    GOSUB 85000
    GOSUB 50000
    IF ECD.RET.VALUE = "END" OR ECD.RET.VALUE = "N" THEN GOTO 1100
    ECD.RET.VALUE = ALL.DIV<1,ECD.RET.VALUE>
    ECD.NUM = 6
    SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ECD.RET.VALUE
    ECD.ACTION = 5
    CALL SCRN.EDIT
  END
  LOCATE ECD.RET.VALUE IN ALL.DIV<1>,1 SETTING FND ELSE
    ERRMSG = "No activities for division - ":ECD.RET.VALUE
    GOSUB 91000
    GOTO 1100
  END
  IF ECD.RET.VALUE = GEN.DIV THEN
    READ LINE.CODE FROM GLX, CONO : GEN.DIV : GEN.DEPT : GEN.CCTR : ACCT.NO ELSE LINE.CODE = ""
    IF LINE.CODE = "" THEN
      ERRMSG = "No activities for division - ":ECD.RET.VALUE
      GOSUB 91000
      GOTO 1100
    END
    DIV.CODE = GEN.DIV
    DEPT.CODE = GEN.DEPT
    CCTR.CODE = GEN.CCTR
    GOTO 1999
  END ELSE
    READ ALL.DEPT FROM GLX, CONO : ECD.RET.VALUE : ACCT.NO ELSE ALL.DEPT = ""
    IF ALL.DEPT = "" THEN
      ERRMSG = "No activities for division - ":ECD.RET.VALUE
      GOSUB 91000
      GOTO 1100
    END
  END
  DIV.CODE = ECD.RET.VALUE
*
*--- DEPARTMENT
*
1200*
  ECD.NUM = 7
  SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ""
  ECD.ACTION = 4
  CALL SCRN.EDIT
  IF ECD.RET.VALUE = "END" THEN
    DEPT.CODE = ""
    GOTO 1999
  END
  IF ECD.RET.VALUE = "S" THEN
    DEPT.CODE = ECD.RET.VALUE
    GOTO 1999
  END
  IF ECD.RET.VALUE = "" THEN
    XCODE = ALL.DEPT
    XDESC = ""
    XLINES = COUNT(ALL.DEPT,VM) + (ALL.DEPT # "")
    FOR XLN = 1 TO XLINES
      IF XCODE<1,XLN> = GEN.DEPT THEN
        MAT DEPT.REC = ""
        DEPT.DESC = "GENERAL DEPARTMENT"
      END ELSE
        MATREAD DEPT.REC FROM DEPARTMENT, CONO : XCODE<1,XLN> ELSE
          MAT DEPT.REC = ""
          DEPT.DESC = UNKNOWN
        END
      END
      XDESC<1,XLN> = DEPT.DESC
    NEXT XLN
    XLN = 1
    XOLD.START = 0
    GOSUB 85000
    GOSUB 50000
    IF ECD.RET.VALUE = "END" OR ECD.RET.VALUE = "N" THEN GOTO 1200
    ECD.RET.VALUE = ALL.DEPT<1,ECD.RET.VALUE>
    ECD.NUM = 7
    SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ECD.RET.VALUE
    ECD.ACTION = 5
    CALL SCRN.EDIT
  END
  LOCATE ECD.RET.VALUE IN ALL.DEPT<1>,1 SETTING FND ELSE
    ERRMSG = "No activities for department - ":ECD.RET.VALUE
    GOSUB 91000
    GOTO 1200
  END
  IF ECD.RET.VALUE = GEN.DEPT THEN
    READ LINE.CODE FROM GLX, CONO : DIV.CODE : GEN.DEPT : GEN.CCTR : ACCT.NO ELSE LINE.CODE = ""
    IF LINE.CODE = "" THEN
      ERRMSG = "No activities for department - ":ECD.RET.VALUE
      GOSUB 91000
      GOTO 1200
    END
    DEPT.CODE = GEN.DEPT
    CCTR.CODE = GEN.CCTR
    GOTO 1999
  END ELSE
    READ ALL.CCTR FROM GLX, CONO : DIV.CODE : ECD.RET.VALUE : ACCT.NO ELSE ALL.CCTR = ""
    IF ALL.CCTR = "" THEN
      ERRMSG = "No activities for department - ":ECD.RET.VALUE
      GOSUB 91000
      GOTO 1200
    END
  END
  DEPT.CODE = ECD.RET.VALUE
*
*--- COST CENTER
*
1300*
  ECD.NUM = 8
  SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ""
  ECD.ACTION = 4
  CALL SCRN.EDIT
  IF ECD.RET.VALUE = "END" THEN
    CCTR.CODE = ""
    GOTO 1999
  END
  IF ECD.RET.VALUE = "S" THEN
    CCTR.CODE = ECD.RET.VALUE
    GOTO 1999
  END
  IF ECD.RET.VALUE = "" THEN
    XCODE = ALL.CCTR
    XDESC = ""
    XLINES = COUNT(ALL.CCTR,VM) + (ALL.CCTR # "")
    FOR XLN = 1 TO XLINES
      IF XCODE<1,XLN> = GEN.CCTR THEN
        MAT CCTR.REC = ""
        CCTR.DESC = "GENERAL COST CENTER"
      END ELSE
        MATREAD CCTR.REC FROM COST.CNTR, CONO : XCODE<1,XLN> ELSE
          MAT CCTR.REC = ""
          CCTR.DESC = UNKNOWN
        END
      END
      XDESC<1,XLN> = CCTR.DESC
    NEXT XLN
    XLN = 1
    XOLD.START = 0
    GOSUB 85000
    GOSUB 50000
    IF ECD.RET.VALUE = "END" OR ECD.RET.VALUE = "N" THEN GOTO 1300
    ECD.RET.VALUE = ALL.CCTR<1,ECD.RET.VALUE>
    ECD.NUM = 8
    SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ECD.RET.VALUE
    ECD.ACTION = 5
    CALL SCRN.EDIT
  END
  LOCATE ECD.RET.VALUE IN ALL.CCTR<1>,1 SETTING FND ELSE
    ERRMSG = "No activities for cost center - ":ECD.RET.VALUE
    GOSUB 91000
    GOTO 1300
  END
  READ LINE.CODE FROM GLX, CONO : DIV.CODE : DEPT.CODE : ECD.RET.VALUE : ACCT.NO ELSE LINE.CODE = ""
  IF LINE.CODE = "" THEN
    ERRMSG = "No activities for cost center - ":ECD.RET.VALUE
    GOSUB 91000
    GOTO 1300
  END
  CCTR.CODE = ECD.RET.VALUE
1999*
  RETURN
*
*--- GET COA.DESC
*
2000*
  ECD.NUM = 12
  ECD.ACTION = 4
  CALL SCRN.EDIT
  IF ECD.RET.VALUE # "END" THEN
    COA.L.DESC = ECD.RET.VALUE
  END
  SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ""
  ECD.ACTION = 5
  CALL SCRN.EDIT
  RETURN
*
*--- GET ACCOUNT TYPE
*
3000*
  ECD.NUM = 13
  ECD.ACTION = 4
  CALL SCRN.EDIT
  IF ECD.RET.VALUE # "END" THEN
    MATREAD AT.REC FROM ACCT.TYPE, ECD.RET.VALUE ELSE
      ERRMSG = "Cannot locate account type - ":ECD.RET.VALUE
      GOSUB 91000
      GOTO 3000
    END
    COA.TYPE = ECD.RET.VALUE
  END
  SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ""
  ECD.ACTION = 5
  CALL SCRN.EDIT
  RETURN
*
*--- PROCESS AND PRINT
*
4000*
  P_X  = 0 ; P_Y = 23 ; P_VALUE = "PROCESSING" ; P_OPT = "CL"
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  MATREAD CB.REC FROM CO.COA.BAL, CONO : ACCT.NO ELSE MAT CB.REC = ""
  SCV.REC(2)<ECD.SCRN.NO> = OCONV(CB.REC(OPN), "MD2Z,<")
  SCV.REC(3)<ECD.SCRN.NO> = OCONV(CB.DEBITS, "MD2Z,<")
  SCV.REC(4)<ECD.SCRN.NO> = OCONV(CB.CREDITS, "MD2Z,<")
  SCV.REC(5)<ECD.SCRN.NO> = OCONV(CB.REC(OPNVAL), "MD2Z,<")
  BEGIN CASE
    CASE DIV.CODE = "S"
      DIV.CODE = ""
      DEPT.CODE = ""
      CCTR.CODE = ""
      LINE.ID = ""
      LN = 0
      DVCNT = COUNT(ALL.DIV,VM) + (ALL.DIV # "")
      FOR DV = 1 TO DVCNT
        DIV = ALL.DIV<1,DV>
        READ ALL.DEPT FROM GLX, CONO : DIV : ACCT.NO ELSE ALL.DEPT = ""
        DPCNT = COUNT(ALL.DEPT,VM) + (ALL.DEPT # "")
        FOR DP = 1 TO DPCNT
          DEPT = ALL.DEPT<1,DP>
          READ ALL.CCTR FROM GLX, CONO : DIV : DEPT : ACCT.NO ELSE ALL.CCTR = ""
          CCCNT = COUNT(ALL.CCTR,VM) + (ALL.CCTR # "")
          FOR CC = 1 TO CCCNT
            CCTR = ALL.CCTR<1,CC>
            READ LINE.CODE FROM GLX, CONO : DIV : DEPT : CCTR : ACCT.NO ELSE LINE.CODE = ""
            SSCNT = COUNT(LINE.CODE,VM) + (LINE.CODE # "")
            FOR SS = 1 TO SSCNT
              LN = LN + 1
              LINE.ID<LN> = DIV : DEPT : CCTR : ACCT.NO : LINE.CODE<1,SS>
            NEXT SS
          NEXT CC
        NEXT DP
      NEXT DV
      LINES = LN
    CASE DEPT.CODE = "S"
      DEPT.CODE = ""
      CCTR.CODE = ""
      DIV = DIV.CODE
      MATREAD CB.REC FROM DV.COA.BAL, CONO : DIV : ACCT.NO ELSE MAT CB.REC = ""
      SCV.REC(2)<ECD.SCRN.NO,2> = OCONV(CB.REC(OPN), "MD2Z,<")
      SCV.REC(3)<ECD.SCRN.NO,2> = OCONV(CB.DEBITS, "MD2Z,<")
      SCV.REC(4)<ECD.SCRN.NO,2> = OCONV(CB.CREDITS, "MD2Z,<")
      SCV.REC(5)<ECD.SCRN.NO,2> = OCONV(CB.REC(OPNVAL), "MD2Z,<")
      LINE.ID = ""
      LN = 0
      DPCNT = COUNT(ALL.DEPT,VM) + (ALL.DEPT # "")
      FOR DP = 1 TO DPCNT
        DEPT = ALL.DEPT<1,DP>
        READ ALL.CCTR FROM GLX, CONO : DIV : DEPT : ACCT.NO ELSE ALL.CCTR = ""
        CCCNT = COUNT(ALL.CCTR,VM) + (ALL.CCTR # "")
        FOR CC = 1 TO CCCNT
          CCTR = ALL.CCTR<1,CC>
          READ LINE.CODE FROM GLX, CONO : DIV : DEPT : CCTR : ACCT.NO ELSE LINE.CODE = ""
          SSCNT = COUNT(LINE.CODE,VM) + (LINE.CODE # "")
          FOR SS = 1 TO SSCNT
            LN = LN + 1
            LINE.ID<LN> = DIV : DEPT : CCTR : ACCT.NO : LINE.CODE<1,SS>
          NEXT SS
        NEXT CC
      NEXT DP
      LINES = LN
    CASE CCTR.CODE = "S"
      CCTR.CODE = ""
      DIV = DIV.CODE
      DEPT = DEPT.CODE
      MATREAD CB.REC FROM DV.COA.BAL, CONO : DIV : ACCT.NO ELSE MAT CB.REC = ""
      SCV.REC(2)<ECD.SCRN.NO,2> = OCONV(CB.REC(OPN), "MD2Z,<")
      SCV.REC(3)<ECD.SCRN.NO,2> = OCONV(CB.DEBITS, "MD2Z,<")
      SCV.REC(4)<ECD.SCRN.NO,2> = OCONV(CB.CREDITS, "MD2Z,<")
      SCV.REC(5)<ECD.SCRN.NO,2> = OCONV(CB.REC(OPNVAL), "MD2Z,<")
      MATREAD CB.REC FROM DP.COA.BAL, CONO : DIV : DEPT : ACCT.NO ELSE MAT CB.REC = ""
      SCV.REC(2)<ECD.SCRN.NO,3> = OCONV(CB.REC(OPN), "MD2Z,<")
      SCV.REC(3)<ECD.SCRN.NO,3> = OCONV(CB.DEBITS, "MD2Z,<")
      SCV.REC(4)<ECD.SCRN.NO,3> = OCONV(CB.CREDITS, "MD2Z,<")
      SCV.REC(5)<ECD.SCRN.NO,3> = OCONV(CB.REC(OPNVAL), "MD2Z,<")
      LINE.ID = ""
      LN = 0
      CCCNT = COUNT(ALL.CCTR,VM) + (ALL.CCTR # "")
      FOR CC = 1 TO CCCNT
        CCTR = ALL.CCTR<1,CC>
        READ LINE.CODE FROM GLX, CONO : DIV : DEPT : CCTR : ACCT.NO ELSE LINE.CODE = ""
        SSCNT = COUNT(LINE.CODE,VM) + (LINE.CODE # "")
        FOR SS = 1 TO SSCNT
          LN = LN + 1
          LINE.ID<LN> = DIV : DEPT : CCTR : ACCT.NO : LINE.CODE<1,SS>
        NEXT SS
      NEXT CC
      LINES = LN
    CASE 1
      MATREAD CB.REC FROM DV.COA.BAL, CONO : DIV.CODE : ACCT.NO ELSE MAT CB.REC = ""
      SCV.REC(2)<ECD.SCRN.NO,2> = OCONV(CB.REC(OPN), "MD2Z,<")
      SCV.REC(3)<ECD.SCRN.NO,2> = OCONV(CB.DEBITS, "MD2Z,<")
      SCV.REC(4)<ECD.SCRN.NO,2> = OCONV(CB.CREDITS, "MD2Z,<")
      SCV.REC(5)<ECD.SCRN.NO,2> = OCONV(CB.REC(OPNVAL), "MD2Z,<")
      MATREAD CB.REC FROM DP.COA.BAL, CONO : DIV.CODE : DEPT.CODE : ACCT.NO ELSE MAT CB.REC = ""
      SCV.REC(2)<ECD.SCRN.NO,3> = OCONV(CB.REC(OPN), "MD2Z,<")
      SCV.REC(3)<ECD.SCRN.NO,3> = OCONV(CB.DEBITS, "MD2Z,<")
      SCV.REC(4)<ECD.SCRN.NO,3> = OCONV(CB.CREDITS, "MD2Z,<")
      SCV.REC(5)<ECD.SCRN.NO,3> = OCONV(CB.REC(OPNVAL), "MD2Z,<")
      MATREAD CB.REC FROM CC.COA.BAL, CONO : DIV.CODE : DEPT.CODE : CCTR.CODE : ACCT.NO ELSE MAT CB.REC = ""
      SCV.REC(2)<ECD.SCRN.NO,4> = OCONV(CB.REC(OPN), "MD2Z,<")
      SCV.REC(3)<ECD.SCRN.NO,4> = OCONV(CB.DEBITS, "MD2Z,<")
      SCV.REC(4)<ECD.SCRN.NO,4> = OCONV(CB.CREDITS, "MD2Z,<")
      SCV.REC(5)<ECD.SCRN.NO,4> = OCONV(CB.REC(OPNVAL), "MD2Z,<")
      LINES = COUNT(LINE.CODE,VM) + (LINE.CODE # "")
      LINE.ID = ""
      FOR LN = 1 TO LINES
        LINE.ID<LN> = DIV.CODE : DEPT.CODE : CCTR.CODE : ACCT.NO : LINE.CODE<1,LN>
      NEXT LN
  END CASE
  P_X  = 0 ; P_Y = 23 ; P_VALUE = "" ; P_OPT = "CL"
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  ECD.NUM = 6
  SCV.REC(ECD.NUM)<ECD.SCRN.NO> = DIV.CODE
  ECD.ACTION = 5
  CALL SCRN.EDIT
  ECD.NUM = 7
  SCV.REC(ECD.NUM)<ECD.SCRN.NO> = DEPT.CODE
  ECD.ACTION = 5
  CALL SCRN.EDIT
  ECD.NUM = 8
  SCV.REC(ECD.NUM)<ECD.SCRN.NO> = CCTR.CODE
  ECD.ACTION = 5
  CALL SCRN.EDIT
  ECD.NUM = 2
  ECD.SUB.NUM = 1
  ECD.ACTION = 7
  CALL SCRN.EDIT
  ECD.NUM = 3
  ECD.SUB.NUM = 1
  ECD.ACTION = 7
  CALL SCRN.EDIT
  ECD.NUM = 4
  ECD.SUB.NUM = 1
  ECD.ACTION = 7
  CALL SCRN.EDIT
  ECD.NUM = 5
  ECD.SUB.NUM = 1
  ECD.ACTION = 7
  CALL SCRN.EDIT
  LN = 1
  OLD.START = 0
  GOSUB 80000
  RETURN
*
*--- GET LINE NUMBER
*
30000*
  ECD.MINV = 1
  ECD.MAXV = LINES
  ECD.NUM = 10
  ECD.ACTION = 4; CALL SCRN.EDIT
  RETURN
*
*--- XREF SELECTION
*
50000*
  ECD.NUM = 11
  SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ""
  ECD.ACTION = 4
  CALL SCRN.EDIT
  BEGIN CASE
    CASE ECD.RET.VALUE = "END" OR ECD.RET.VALUE = "N"
      GOTO 59999
    CASE NUM(ECD.RET.VALUE)
      IF ECD.RET.VALUE < ST.LINE OR ECD.RET.VALUE > LST.LINE THEN
        ERRMSG = "* * * OUT OF RANGE * * *"
        GOSUB 91000
      END ELSE
        GOTO 59999
      END
    CASE ECD.RET.VALUE = "S"
      XLN = 1 + INT((XLN - 1)/PAGE.SIZE) * PAGE.SIZE + PAGE.SIZE
      IF XLN > XLINES THEN XLN = 1
      GOSUB 85000
    * T25978 v
    CASE ECD.RET.VALUE = 'SR'
      XLN = 1 + INT((XLN - 1)/PAGE.SIZE) * PAGE.SIZE - PAGE.SIZE
      IF XLN < 1 THEN XLN = 1
      GOSUB 85000
    CASE ECD.RET.VALUE = 'ST'
      XLN = 1
      GOSUB 85000
    CASE ECD.RET.VALUE = 'SB'
      XLN = XLINES
      GOSUB 85000
    * T25978 ^
  END CASE
  GOTO 50000
59999*
  CNT = 1
  GOSUB 85500
  RETURN
*
*--- SCROLL
*
80000*
  ST.LINE = 1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE
  LST.LINE = ST.LINE + PAGE.SIZE - 1
  IF LST.LINE > LINES THEN LST.LINE = LINES
  IF ST.LINE = OLD.START THEN RETURN
  OLD.START = ST.LINE
  CNT = 1
  FOR N = ST.LINE TO LST.LINE
    SSLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
    P_X  = 0 ; P_Y = SSLN ; P_VALUE = N "R#3" ; P_OPT = "CL"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    MATREAD GLM.REC FROM GLM, CONO : LINE.ID<N> ELSE
      MAT GLM.REC = ""
      GLM.DESC = LINE.ID<N>
    END
    P_X  = 4 ; P_Y = SSLN ; P_VALUE = GLM.DESC "L#35" ; P_OPT = ""
    P_X  := AM:40 ; P_Y := AM:SSLN ; P_VALUE := AM:OCONV(GLM.DATE, "D2/") "L#8"
    P_X  := AM:49 ; P_Y := AM:SSLN ; P_VALUE := AM:GLM.SRC "L#2"
    P_X  := AM:52 ; P_Y := AM:SSLN ; P_VALUE := AM:GLM.REF "L#8"
    P_X  := AM:61 ; P_Y := AM:SSLN ; P_VALUE := AM:OCONV(GLM.AMT, "MD2Z,<") "R#15"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    CNT = CNT + 1
  NEXT N
  FOR N = CNT TO PAGE.SIZE
    SSLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
    P_X  = 0 ; P_Y = SSLN ; P_VALUE = "" ; P_OPT = "CL"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  NEXT N
  RETURN
*
*--- SCROLL XREF
*
85000*
  ST.LINE = 1 + INT((XLN-1)/PAGE.SIZE) * PAGE.SIZE
  LST.LINE = ST.LINE + PAGE.SIZE - 1
  IF LST.LINE > XLINES THEN LST.LINE = XLINES
  IF ST.LINE = XOLD.START THEN RETURN
  XOLD.START = ST.LINE
  CNT = 1
  FOR N = ST.LINE TO LST.LINE
    SSLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
    P_X  = 0 ; P_Y = SSLN ; P_VALUE = N "R#3" ; P_OPT = "CL"
    P_X  := AM:4 ; P_Y := AM:SSLN ; P_VALUE := AM:XCODE<N> "L#3":'  ':XDESC<N> "L#30"     ;* T21876
*T21876 P_X  := AM:4 ; P_Y := AM:SSLN ; P_VALUE := AM:XCODE<N> "L#3"
*T21876 P_X  := AM:8 ; P_Y := AM:SSLN ; P_VALUE := AM:XDESC<N> "L#30"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    CNT = CNT + 1
  NEXT N
85500*
  FOR N = CNT TO PAGE.SIZE
    SSLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
    P_X  = 0 ; P_Y = SSLN ; P_VALUE = "" ; P_OPT = "CL"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  NEXT N
  RETURN
*
*--- ERROR ROUTINE
*
91000 ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC);RETURN
* 91000*
*    PRINT @(0,23):ERRMSG:CL:
*    INPUT REPLY,1 :
*    PRINT @(0,23):CL:
*    RETURN
999999*
END
