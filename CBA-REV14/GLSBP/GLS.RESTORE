*COPY>CPYLIB>COM1
*********************************************************************
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM     - PRIMAC
* SOURCE     - GLSBP
* PROGRAM    - GLS.TAPE.UPDATE
* BY         - DANIEL GRUENENFELDER
* DATE       - 07/16/91
* DESCRIPTION-
* MODIFICATION OF GLS.TAPE.UPDATE TO RESTORE FROM DISC FILES
*
*T18573 5/95 LLH 1-52 ACCOUNTING PERIODS
*T21177 diane 03/14/1997 * REV11 UPG
*T21911 diane 05/16/1997 * Update control record for menu process
*T26008 cmykleb 01/25/2002 * Remove the restore current budget quetion
*                            and response because the process has been
*                            changed to do it automatically.
*T27935 cmykleb 03/31/2004 * CO.GLS.HIST field is now multivalued.
*T29032 cmyklebu 12/29/2006 * Move pgm from rev12 to rev14.
*ENDDOC
*********************************************************************
*
*--- INSERT FILES EQUATES
*
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>FILE.VARS
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>FISCAL
*COPY>PMC.CPYLIB>COA
*COPY>PMC.CPYLIB>MENUS.CONTROL
*COPY>GLS.CPYLIB>COA.BAL
*COPY>GLS.CPYLIB>GLM
*COPY>CPYLIB>CHAR
*COPY>CPYLIB>SYSCOM
   MAT SYSCOM.REC =  ""; SYS.TYPE = 2
   DIM OCB.REC(300)
   DIM FFILE.NAME(30)
   PROC.LINE = "END"
   ERRMSG = ""
   PROCREAD BUFFER ELSE
      ERRMSG = "MUST RUN FROM PROC"; GOSUB 91000; GOTO 99999
   END
   ACTION = BUFFER<1>
   IF ACTION # 'UPDATE' THEN
      ERRMSG = "ERROR IN PROC BUFFER"; GOSUB 91000; GOTO 99999
   END
*
*--- GET COMPANY
*
   MAT FILE.VARS = ""
   OPEN '','COMPANY' TO COMPANY ELSE
      ERRMSG = 'COMPANY FILE IS MISSING'; GOSUB 91000; GOTO 99999
   END
   OPEN '','CONTROL' TO CONTROL ELSE
      ERRMSG = 'CONTROL FILE IS MISSING'; GOSUB 91000; GOTO 99999
   END
   OPEN '','VOC' TO VOC ELSE
      ERRMSG = 'VOC FILE IS MISSING'; GOSUB 91000; GOTO 99999
   END
*
*---- Get menus control record
*
   MATREAD MENU.REC FROM CONTROL, "MENUS.CONTROL" ELSE
      ERRMSG = "** Cannot Locate CONTROL, MENUS.CONTROL **"
      GOSUB 91000; GOTO 99999
   END
   PMC.PATH = PRIMAC.PATH
   CONO = ""
   MAT COMP.REC = ""
   CALL GET.CONO(CONO,MAT COMP.REC)
   IF CONO = "END" THEN GOTO 99999
   READ LOAD.YR FROM CONTROL, CONO:"GLS.TAPE.LOAD" ELSE LOAD.YR = ""
   READ BUD.PER FROM CONTROL, CONO:"GLS.BUD.PER" ELSE BUD.PER = ""
   NEW=1
*
*
*---- CHECK CONTROL RECORD
   DEL.CONTROL = 0
   READU PROCESS.CONTROL FROM CONTROL,CONO:'GLS.BACKUP.RESTORE' THEN
      IF PROCESS.CONTROL = 'B' THEN
         ERRMSG = 'GENERAL LEDGER BACKUP IN PROCESS'
         GOSUB 91000 ; GOTO 99999
      END
   END
   PROCESS.CONTROL = 'R'
   WRITE PROCESS.CONTROL ON CONTROL, CONO:'GLS.BACKUP.RESTORE'
   DEL.CONTROL = 1
*
*--- GET CURRENT FISCAL YEAR
*
   MATREAD FISCAL.REC FROM CONTROL, CONO : "FISCAL" ELSE
      ERRMSG = "CONTROL FISCAL IS MISSING"; GOSUB 91000; GOTO 99999
   END
   READ PERIOD.REC FROM CONTROL, CONO:"ACCT.PERIODS" ELSE
      PERIOD.REC = ""
      PERIOD.REC<1> = 12
   END
   NUM.PERIODS = PERIOD.REC<1>
   CURR.YR = FR.CURR.PER[1,4]
   CURR.PER = FR.CURR.PER[5,2]
   IF CURR.PER < 1 OR CURR.PER > NUM.PERIODS THEN
      ERRMSG = "INVALID CURRENT PERIOD IN CONTROL FISCAL"; GOSUB 91000; GOTO 99999
   END
   READ SALESDATES FROM CONTROL, CONO : "SALESDATES" ELSE
      ERRMSG = 'CANNOT LOCATE CONTROL SALESDATES'
      GOSUB 91000; GOTO 99999
   END
   READ OPENDATES FROM CONTROL, CONO : "OPENDATES" ELSE
      ERRMSG = 'CANNOT LOCATE CONTROL OPENDATES'
      GOSUB 91000; GOTO 99999
   END
*
*--- OPEN FILES
*
   OPEN '','GLS.SCREENS' TO M.SCREENS ELSE
      ERRMSG = 'GLS.SCREENS FILE IS MISSING'; GOSUB 91000; GOTO 99999
   END
   OPEN '','PREFIX' TO PREFIX ELSE
      ERRMSG = 'PREFIX FILE IS MISSING'; GOSUB 91000; GOTO 99999
   END
   OPEN '','COA' TO COA ELSE
      ERRMSG = 'COA FILE IS MISSING'; GOSUB 91000; GOTO 99999
   END
   OPEN '','CO.COA.BAL' TO CO.COA.BAL ELSE
      ERRMSG = 'CO.COA.BAL FILE IS MISSING'; GOSUB 91000; GOTO 99999 
   END
   OPEN '','DV.COA.BAL' TO DV.COA.BAL ELSE
      ERRMSG = 'DV.COA.BAL FILE IS MISSING'; GOSUB 91000; GOTO 99999    
   END
   OPEN '','DP.COA.BAL' TO DP.COA.BAL ELSE
      ERRMSG = 'DP.COA.BAL FILE IS MISSING'; GOSUB 91000; GOTO 99999
   END
   OPEN '','CC.COA.BAL' TO CC.COA.BAL ELSE
      ERRMSG = 'CC.COA.BAL FILE IS MISSING'; GOSUB 91000; GOTO 99999
   END
   OPEN '','GLA' TO GLA ELSE
      ERRMSG = 'GLA FILE IS MISSING'; GOSUB 91000; GOTO 99999
   END
   OPEN '','GLM' TO GLM ELSE
      ERRMSG = 'GLM FILE IS MISSING'; GOSUB 91000; GOTO 99999
   END
   OPEN '','GLX' TO GLX ELSE
      ERRMSG = 'GLX FILE IS MISSING'; GOSUB 91000; GOTO 99999
   END
*T27935 v
*  IF CO.GLS.HIST = "Y" THEN
   IF CO.GLS.HIST<1,1> = "Y" THEN
*T27935 ^
      OPEN '','GLH' TO GLH ELSE
         ERRMSG = 'GLH FILE IS MISSING'; GOSUB 91000; GOTO 99999
      END
      OPEN '','GLHX' TO GLHX ELSE
         ERRMSG = 'GLHX FILE IS MISSING'; GOSUB 91000; GOTO 99999
      END
   END
*
*--- SCREEN
*
   MAT EDIT.COM.DRIVER = ''
   ECD.SCRN.CNT = 1
   ECD.SCRN.NAME<1> = 'GLS.RESTORE'
   ECD.SCRN.NO = 1
   MAT SCV.REC = ''
   ECD.ACTION=1;CALL SCRN.EDIT
   ECD.ACTION=2;CALL SCRN.EDIT
   READ TAPE.PERIOD FROM CONTROL, CONO:CURR.YR:"GLS.TAPE" ELSE
      TAPE.PERIOD = ""
   END
   IF TAPE.PERIOD<CURR.PER> = "" THEN
      ERRMSG = 'YOU NEED TO BACKUP THIS PERIOD BEFORE RESTORING'
      GOSUB 91000; ECD.ACTION = 99 ; CALL SCRN.EDIT ; GOTO 99999
   END
*
*--- INITIALIZATION
*
   ACCT.LEN = LEN(CO.ACCT.PIC) + 10
   LINE.SPACE = 1
   BEGIN.PAGE = 9
   PAGE.SIZE = 11
   SP39 = SPACE(39)
   SCV.REC(2)<1> = CURR.YR
   SCV.REC(5)<1> = CURR.PER
   SCV.REC(6)<1> = SALESDATES<CURR.PER+1,2>
   ECD.ACTION = 3; CALL SCRN.EDIT
*
*--- GET START PERIOD
*
   ECD.NUM = 1
   IF NEW THEN
      ECD.MINV = (CURR.YR - 1) 
      ECD.MAXV = CURR.YR
      ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN ECD.ACTION = 99 ; CALL SCRN.EDIT ; GOTO 99999
      BEG.YR = ECD.RET.VALUE
   END ELSE
      BEG.YR = LOAD.YR[1,4]; SCV.REC(ECD.NUM)<1> = BEG.YR
      ECD.ACTION = 5; CALL SCRN.EDIT
   END
   READU TAPE.PERIOD FROM CONTROL, CONO:BEG.YR:"GLS.TAPE" ELSE
      TAPE.PERIOD = ""
   END
   ECD.NUM = 3
   IF NEW THEN
      IF BEG.YR = CURR.YR THEN
         ECD.MINV = 1; ECD.MAXV = CURR.PER - 1
      END
      ECD.ACTION = 4; CALL SCRN.EDIT
      IF ECD.RET.VALUE = "END" THEN ECD.ACTION = 99 ; CALL SCRN.EDIT ; GOTO 99999
      BEG.PER = ECD.RET.VALUE
   END ELSE
      BEG.PER = LOAD.YR[5,2]; SCV.REC(ECD.NUM)<1> = BEG.PER
      ECD.ACTION = 5; CALL SCRN.EDIT
   END
   ECD.NUM = 4; SCV.REC(ECD.NUM)<1> = SALESDATES<BEG.PER+1,2>
   ECD.ACTION = 5; CALL SCRN.EDIT
*T26008 v
*   110 ECD.NUM = 9; ECD.ACTION = 4; CALL SCRN.EDIT
*      IF ECD.RET.VALUE = "Y" THEN
*         BUD.PER<2> = ECD.RET.VALUE
*      END ELSE
*         ECD.NUM = 10; ECD.ACTION = 4; CALL SCRN.EDIT
*         IF ECD.RET.VALUE = "Y" THEN
*            BUD.PER<2> = "N"
*         END ELSE
*            GOTO 110
*         END
*      END
*T26008 ^
   WRITE BEG.YR:BEG.PER ON CONTROL, CONO : "GLS.TAPE.LOAD"
   WRITE BUD.PER ON CONTROL, CONO : "GLS.BUD.PER"
   SAVE.PER = ''; SAVE.PTR = 0
   SAVE.MON = ''; SAVE.DATE = ''
   NO.SAVE.PER = ''; NO.SAVE.PTR = 0
   NO.SAVE.MON = ''; NO.SAVE.DATE = ''
   NYR.PER = BEG.PER
   LST.PER = BEG.PER - 1
   IF LST.PER < 1 THEN
      LST.PER = (BEG.YR - 1) : NUM.PERIODS
   END ELSE
      LST.PER = STR("0",2-LEN(LST.PER)):LST.PER
      LST.PER = BEG.YR : LST.PER
   END
   IF BEG.YR < CURR.YR THEN
      FOR PER = BEG.PER TO NUM.PERIODS
         PERIOD = BEG.YR : STR("0",2-LEN(PER)):PER
         IF TAPE.PERIOD<PER> # '' THEN
            SAVE.PTR = SAVE.PTR + 1
            SAVE.PER<SAVE.PTR> = PERIOD
            SAVE.MON<SAVE.PTR> = SALESDATES<PER+1,2>
            SAVE.DATE<SAVE.PTR> = OCONV(OPENDATES<PER>,"D/")
            SAVE.DATE<SAVE.PTR> = SAVE.DATE<SAVE.PTR>[1,6] : SAVE.DATE<SAVE.PTR>[7,4] - 1
            SAVE.DATE<SAVE.PTR> = ICONV(SAVE.DATE<SAVE.PTR>,"D/")
            TAPE.PERIOD<PER> = ""
         END ELSE
            NO.SAVE.PTR = NO.SAVE.PTR + 1
            NO.SAVE.PER<NO.SAVE.PTR> = PERIOD
            NO.SAVE.MON<NO.SAVE.PTR> = SALESDATES<PER+1,2>
            NO.SAVE.DATE<NO.SAVE.PTR> = OCONV(OPENDATES<PER>,"D/")
            NO.SAVE.DATE<NO.SAVE.PTR> = NO.SAVE.DATE<NO.SAVE.PTR>[1,6] : NO.SAVE.DATE<NO.SAVE.PTR>[7,4] - 1
            NO.SAVE.DATE<NO.SAVE.PTR> = ICONV(NO.SAVE.DATE<NO.SAVE.PTR>,"D/")
         END
      NEXT PER
      OTAPE.PERIOD = TAPE.PERIOD
      READU TAPE.PERIOD FROM CONTROL, CONO:CURR.YR:"GLS.TAPE" ELSE
         TAPE.PERIOD = ""
      END
      NYR.PER = "01"
   END
   FOR PER = NYR.PER TO CURR.PER - 1
      PERIOD = CURR.YR : STR("0",2-LEN(PER)):PER
      IF TAPE.PERIOD<PER> # '' THEN
         SAVE.PTR = SAVE.PTR + 1
         SAVE.PER<SAVE.PTR> = PERIOD
         SAVE.MON<SAVE.PTR> = SALESDATES<PER+1,2>
         SAVE.DATE<SAVE.PTR> = OPENDATES<PER>
         TAPE.PERIOD<PER> = ""
      END ELSE
         NO.SAVE.PTR = NO.SAVE.PTR + 1
         NO.SAVE.PER<NO.SAVE.PTR> = PERIOD
         NO.SAVE.MON<NO.SAVE.PTR> = SALESDATES<PER+1,2>
         NO.SAVE.DATE<NO.SAVE.PTR> = OPENDATES<PER>
      END
   NEXT PER
   IF SAVE.PTR < 1 THEN
      ERRMSG = "THERE ARE NO PERIODS TO LOAD"; GOSUB 91000; ECD.ACTION = 99 ; CALL SCRN.EDIT ; GOTO 99999
   END
   L.LINES = SAVE.PTR
   S.LINES = NO.SAVE.PTR
   L.LN = 1
   S.LN = 1
   L.OLD.START = 0
   S.OLD.START = 0
   GOSUB 60000
   GOSUB 70000
   PROC.LINE = ""
   PROC.LINE<1> = CONO
   PROC.LINE<2> = CURR.YR
   IF CURR.YR = BEG.YR THEN
      PROC.LINE<3> = CURR.PER
   END ELSE
      PROC.LINE<3> = 13
   END
   PROC.LINE<4> = CURR.PER
   PROC.LINE<5> = BEG.YR
   PROC.LINE<6> = BEG.PER
   PROC.LINE<7> = "X"
   PROC.LINE<8> = "X"
   PROC.LINE<9> = "0"
   PROC.LINE<10> = "0"
*
*--- ENTER OPTIONS
*
   MORE = 1
   LOOP
      IF ACTION = "UPDATE" THEN ECD.NUM = 8 ELSE ECD.NUM = 7
      SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ""
      ECD.ACTION = 4; CALL SCRN.EDIT
      OPTION = ECD.RET.VALUE
      BEGIN CASE
         CASE OPTION = "END" OR OPTION = "E"
            PROC.LINE = 'END'
            RELEASE CONTROL, CONO:BEG.YR:"GLS.TAPE"
            IF BEG.YR < CURR.YR THEN
               RELEASE CONTROL, CONO:CURR.YR:"GLS.TAPE"
            END
            MORE = 0
         CASE OPTION = "SL"
            L.LN = 1 + INT((L.LN - 1)/PAGE.SIZE) * PAGE.SIZE + PAGE.SIZE
            IF L.LN > L.LINES THEN L.LN = 1
            GOSUB 60000
         CASE OPTION = "SS"
            S.LN = 1 + INT((S.LN - 1)/PAGE.SIZE) * PAGE.SIZE + PAGE.SIZE
            IF S.LN > S.LINES THEN S.LN = 1
            GOSUB 70000
         CASE NO.SAVE.PTR
            ERRMSG = 'CANNOT DO UPDATES UNTIL ALL PERIODS CAN BE RESTORED'
            GOSUB 91000
         CASE OPTION = 'C'
            WRITE BEG.YR:BEG.PER ON CONTROL, CONO : "GLS.TAPE.LOAD"
            BUD.PER = FR.CURR.PER
120 *
            IF ECD.RET.VALUE = "Y" THEN
               BUD.PER<2> = ECD.RET.VALUE
            END ELSE
*T26008 v
*              ECD.NUM = 10; ECD.ACTION = 4; CALL SCRN.EDIT
               ECD.RET.VALUE = "Y"
*T26008 ^
               IF ECD.RET.VALUE = "Y" THEN
                  BUD.PER<2> = "N"
               END ELSE
                  GOTO 120
               END
            END
            WRITE BUD.PER ON CONTROL, CONO : "GLS.BUD.PER"
            RELEASE CONTROL, CONO:BEG.YR:"GLS.TAPE"
            IF BEG.YR < CURR.YR THEN
               RELEASE CONTROL, CONO:CURR.YR:"GLS.TAPE"
            END
            MORE = 0
         CASE OPTION = 'R'
            ERRMSG = ""
            GOSUB 1000
            IF ERRMSG = "" THEN
               GOSUB 2000
               DELETE CONTROL, CONO : "GLS.TAPE.LOAD"
               IF BEG.YR < CURR.YR THEN
                  WRITE OTAPE.PERIOD ON CONTROL, CONO:BEG.YR:"GLS.TAPE"
               END
               WRITE TAPE.PERIOD ON CONTROL, CONO:CURR.YR:"GLS.TAPE"
               IF BUD.PER<2> # "Y" THEN
                  PROC.LINE<10> = BUD.PER<1>
                  DELETE CONTROL, CONO : "GLS.BUD.PER"
* CSF 19778 BUD.PER PERIOD MISSING
               END ELSE
* CSF 22651 FR.CURR.PER HAS ALREADY BEEN SET BACK TO STARTING PERIOD
*                BUD.PER<1> = FR.CURR.PER
                  CURR.PER = CURR.PER 'R%2'
                  BUD.PER<1> = CURR.YR:CURR.PER
                  WRITE BUD.PER ON CONTROL, CONO : "GLS.BUD.PER"
               END
            END ELSE
               PROC.LINE = 'END'
            END
            MORE = 0
      END CASE
   WHILE MORE DO REPEAT
   ECD.ACTION = 99 ; CALL SCRN.EDIT ; GOTO 99999
*---------------*
*  SUBROUTINES  *
*---------------*
*
*--- UPDATE FILES
*
1000 MAT FFILE.NAME = ''
   VOC.ITEM=''
   VOC.ITEM<1>='F'
   VAR.FILE = 'COA' : SAVE.PER<1>
   VOC.ITEM<2>=PMC.PATH:'-GLS-BACKUP/':VAR.FILE
   VOC.ITEM<3>=PMC.PATH:'-GLS-BACKUP/D_':VAR.FILE
   WRITE VOC.ITEM ON VOC, VAR.FILE
   OPEN '',VAR.FILE TO FFILE.NAME(1) ELSE
      ERRMSG = VAR.FILE:" FILE IS MISSING";GOSUB 91000; GOTO 1999
   END
   VAR.FILE = 'CO.COA' : SAVE.PER<1>
   VOC.ITEM<2>=PMC.PATH:'-GLS-BACKUP/':VAR.FILE
   VOC.ITEM<3>=PMC.PATH:'-GLS-BACKUP/D_':VAR.FILE
   WRITE VOC.ITEM ON VOC, VAR.FILE
   OPEN '',VAR.FILE TO FFILE.NAME(2) ELSE
      ERRMSG = VAR.FILE:" FILE IS MISSING";GOSUB 91000; GOTO 1999
   END
   VAR.FILE = 'DV.COA' : SAVE.PER<1>
   VOC.ITEM<2>=PMC.PATH:'-GLS-BACKUP/':VAR.FILE
   VOC.ITEM<3>=PMC.PATH:'-GLS-BACKUP/D_':VAR.FILE
   WRITE VOC.ITEM ON VOC, VAR.FILE
   OPEN '',VAR.FILE TO FFILE.NAME(3) ELSE
      ERRMSG = VAR.FILE:" FILE IS MISSING";GOSUB 91000; GOTO 1999
   END
   VAR.FILE = 'DP.COA' : SAVE.PER<1>
   VOC.ITEM<2>=PMC.PATH:'-GLS-BACKUP/':VAR.FILE
   VOC.ITEM<3>=PMC.PATH:'-GLS-BACKUP/D_':VAR.FILE
   WRITE VOC.ITEM ON VOC, VAR.FILE
   OPEN '',VAR.FILE TO FFILE.NAME(4) ELSE
      ERRMSG = VAR.FILE:" FILE IS MISSING";GOSUB 91000; GOTO 1999
   END
   VAR.FILE = 'CC.COA' : SAVE.PER<1>
   VOC.ITEM<2>=PMC.PATH:'-GLS-BACKUP/':VAR.FILE
   VOC.ITEM<3>=PMC.PATH:'-GLS-BACKUP/D_':VAR.FILE
   WRITE VOC.ITEM ON VOC, VAR.FILE
   OPEN '',VAR.FILE TO FFILE.NAME(5) ELSE
      ERRMSG = VAR.FILE:" FILE IS MISSING";GOSUB 91000; GOTO 1999
   END
   FFILE.NAME.PTR = 5
   FOR PER = 1 TO SAVE.PTR UNTIL ERRMSG # ""
      FFILE.NAME.PTR = FFILE.NAME.PTR + 1
      VAR.FILE = 'GLM' : SAVE.PER<PER>
      VOC.ITEM<2>=PMC.PATH:'-GLS-BACKUP/':VAR.FILE
      VOC.ITEM<3>=PMC.PATH:'-GLS-BACKUP/D_':VAR.FILE
      WRITE VOC.ITEM ON VOC, VAR.FILE
      OPEN '',VAR.FILE TO FFILE.NAME(FFILE.NAME.PTR) ELSE
         ERRMSG = VAR.FILE:" FILE IS MISSING";GOSUB 91000
      END
   NEXT PER
1999 RETURN
2000 *
   P_X  = 3 ; P_Y = 23 ; P_VALUE = 'NOW RESTORING COA FILE FOR PERIOD - ':SAVE.PER<1> ; P_OPT = "CL"
   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   SELECT FFILE.NAME(1)
   DATA = 1
   LOOP
      READNEXT COA.ID ELSE DATA = 0
   WHILE DATA DO
      IF COA.ID[1,3] <> CONO THEN GOTO 2100
      MATREAD COA.REC FROM COA, COA.ID ELSE
         MATREAD COA.REC FROM FFILE.NAME(1), COA.ID ELSE GOTO 2100
         MATWRITE COA.REC ON COA, COA.ID
      END
2100 REPEAT
   P_X  = 3 ; P_Y = 23 ; P_VALUE = 'NOW CLEARING CO.COA.BAL FILE FOR PERIOD - ':SAVE.PER<1> ; P_OPT = "CL"
   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   SELECT CO.COA.BAL
   DATA = 1
   LOOP
      READNEXT CO.ID ELSE DATA = 0
   WHILE DATA DO
      IF CO.ID[1,3] = CONO THEN
         READU DUMMY FROM CO.COA.BAL, CO.ID ELSE DUMMY = ""
         DELETE CO.COA.BAL, CO.ID
      END
   REPEAT
   P_X  = 3 ; P_Y = 23 ; P_VALUE = 'NOW RESTORING CO.COA.BAL FILE FOR PERIOD - ':SAVE.PER<1> ; P_OPT = "CL"
   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   SELECT FFILE.NAME(2)
   DATA = 1
   LOOP
      READNEXT CO.ID ELSE DATA = 0
   WHILE DATA DO
      IF CO.ID[1,3] <> CONO THEN GOTO 2200
      MATREAD CB.REC FROM FFILE.NAME(2), CO.ID ELSE GOTO 2200
      MATWRITE CB.REC ON CO.COA.BAL, CO.ID
2200 REPEAT
   P_X  = 3 ; P_Y = 23 ; P_VALUE = 'NOW CLEARING DV.COA.BAL FILE FOR PERIOD - ':SAVE.PER<1> ; P_OPT = "CL"
   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   SELECT DV.COA.BAL
   DATA = 1
   LOOP
      READNEXT DV.ID ELSE DATA = 0
   WHILE DATA DO
      IF DV.ID[1,3] = CONO THEN
         READU DUMMY FROM DV.COA.BAL, DV.ID ELSE DUMMY = ""
         DELETE DV.COA.BAL, DV.ID
      END
   REPEAT
   P_X  = 3 ; P_Y = 23 ; P_VALUE = 'NOW RESTORING DV.COA.BAL FILE FOR PERIOD - ':SAVE.PER<1> ; P_OPT = "CL"
   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   SELECT FFILE.NAME(3)
   DATA = 1
   LOOP
      READNEXT DV.ID ELSE DATA = 0
   WHILE DATA DO
      IF DV.ID[1,3] <> CONO THEN GOTO 2300
      MATREAD CB.REC FROM FFILE.NAME(3), DV.ID ELSE GOTO 2300
      MATWRITE CB.REC ON DV.COA.BAL, DV.ID
2300 REPEAT
   P_X  = 3 ; P_Y = 23 ; P_VALUE = 'NOW CLEARING DP.COA.BAL FILE FOR PERIOD - ':SAVE.PER<1> ; P_OPT = "CL"
   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   SELECT DP.COA.BAL
   DATA = 1
   LOOP
      READNEXT DP.ID ELSE DATA = 0
   WHILE DATA DO
      IF DP.ID[1,3] = CONO THEN
         READU DUMMY FROM DP.COA.BAL, DP.ID ELSE DUMMY = ""
         DELETE DP.COA.BAL, DP.ID
      END
   REPEAT
   P_X  = 3 ; P_Y = 23 ; P_VALUE = 'NOW RESTORING DP.COA.BAL FILE FOR PERIOD - ':SAVE.PER<1> ; P_OPT = "CL"
   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   SELECT FFILE.NAME(4)
   DATA = 1
   LOOP
      READNEXT DP.ID ELSE DATA = 0
   WHILE DATA DO
      IF DP.ID[1,3] <> CONO THEN GOTO 2400
      MATREAD CB.REC FROM FFILE.NAME(4), DP.ID ELSE GOTO 2400
      MATWRITE CB.REC ON DP.COA.BAL, DP.ID
2400 REPEAT
   P_X  = 3 ; P_Y = 23 ; P_VALUE = 'NOW CLEARING CC.COA.BAL FILE FOR PERIOD - ':SAVE.PER<1> ; P_OPT = "CL"
   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   SELECT CC.COA.BAL
   DATA = 1
   LOOP
      READNEXT CC.ID ELSE DATA = 0
   WHILE DATA DO
      IF CC.ID[1,3] = CONO THEN
         READU DUMMY FROM CC.COA.BAL, CC.ID ELSE DUMMY = ""
         DELETE CC.COA.BAL, CC.ID
      END
   REPEAT
   P_X  = 3 ; P_Y = 23 ; P_VALUE = 'NOW RESTORING CC.COA.BAL FILE FOR PERIOD - ':SAVE.PER<1> ; P_OPT = "CL"
   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   SELECT FFILE.NAME(5)
   DATA = 1
   LOOP
      READNEXT CC.ID ELSE DATA = 0
   WHILE DATA DO
      IF CC.ID[1,3] <> CONO THEN GOTO 2500
      MATREAD CB.REC FROM FFILE.NAME(5), CC.ID ELSE GOTO 2500
      MATWRITE CB.REC ON CC.COA.BAL, CC.ID
2500 REPEAT
   READU COUNTER FROM CONTROL, CONO : "GLACOUNTER" ELSE COUNTER = 1
   FOR PER = 1 TO SAVE.PTR
      P_X  = 3 ; P_Y = 23 ; P_VALUE = 'NOW RESTORING GLA FILE FOR PERIOD - ':SAVE.PER<PER> ; P_OPT = "CL"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      SELECT FFILE.NAME(PER + 5)
      DATA = 1
      LOOP
         READNEXT GLA.ID ELSE DATA = 0
      WHILE DATA DO
         IF GLA.ID[1,3] <> CONO THEN GOTO 2600
         MATREAD GLM.REC FROM FFILE.NAME(PER + 5), GLA.ID ELSE GOTO 2600
         IF GLM.MON <> SAVE.PER<PER> THEN GOTO 2600
         NEW.ID = GLA.ID; FND = 1
         LOOP
            READ DUMMY FROM GLA, NEW.ID ELSE FND = 0
         WHILE FND DO
            COUNTER = COUNTER + 1
            IF COUNTER > 999998 THEN COUNTER = 1
            COUNTER = STR("0",6-LEN(COUNTER)) : COUNTER
            NEW.ID = GLA.ID[1,ACCT.LEN] : COUNTER
         REPEAT
         MATWRITE GLM.REC ON GLA, NEW.ID
2600  REPEAT
   NEXT PER
   P_X  = 3 ; P_Y = 23 ; P_VALUE = 'NOW RESTORING CURRENT PERIOD (GLM)' ; P_OPT = "CL"
   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   SELECT GLM
   DATA = 1
   LOOP
      READNEXT GLA.ID ELSE DATA = 0
   WHILE DATA DO
      IF GLA.ID[1,3] <> CONO THEN GOTO 2655
      MATREADU GLM.REC FROM GLM, GLA.ID ELSE
         RELEASE GLM, GLA.ID
         GOTO 2655
      END
      NEW.ID = GLA.ID; FND = 1
      LOOP
         READ DUMMY FROM GLA, NEW.ID ELSE FND = 0
      WHILE FND DO
         COUNTER = COUNTER + 1
         IF COUNTER > 999998 THEN COUNTER = 1
         COUNTER = STR("0",6-LEN(COUNTER)) : COUNTER
         NEW.ID = GLA.ID[1,ACCT.LEN] : COUNTER
      REPEAT
      MATWRITE GLM.REC ON GLA, NEW.ID
2650  DELETE GLM, GLA.ID
2655 REPEAT
   WRITE COUNTER ON CONTROL, CONO : "GLACOUNTER"
   P_X  = 3 ; P_Y = 23 ; P_VALUE = 'NOW CLEARING GLX FILE' ; P_OPT = ""
   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   SELECT GLX
   DATA = 1
   LOOP
      READNEXT GLX.ID ELSE DATA = 0
   WHILE DATA DO
      IF GLX.ID[1,3] <> CONO THEN GOTO 2670
      READU DUMMY FROM GLX, GLX.ID ELSE
         RELEASE GLX, GLX.ID; GOTO 2670
      END
      DELETE GLX, GLX.ID
2670 REPEAT
*T27935 v
*  IF CO.GLS.HIST # "Y" THEN GOTO 3000
   IF CO.GLS.HIST<1,1> # "Y" THEN GOTO 3000
*T27935 ^
   P_X  = 3 ; P_Y = 23 ; P_VALUE = 'NOW CLEARING GLH FILE FROM PERIOD - ':LST.PER ; P_OPT = "CL"
   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   DATA = 1
   SELECT GLH
   LOOP
      READNEXT GLH.ID ELSE DATA = 0
   WHILE DATA DO
      IF GLH.ID[1,3] <> CONO THEN GOTO 2700
      MATREADU GLM.REC FROM GLH, GLH.ID ELSE
         RELEASE GLH, GLH.ID; GOTO 2700
      END
      IF GLM.MON > LST.PER THEN
         DELETE GLH, GLH.ID
      END ELSE
         RELEASE GLH, GLH.ID
      END
2700 REPEAT
   P_X  = 3 ; P_Y = 23 ; P_VALUE = 'NOW CLEARING GLHX FILE FROM PERIOD - ':LST.PER ; P_OPT = "CL"
   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   DATA = 1
   SELECT GLHX
   LOOP
      READNEXT GLHX.ID ELSE DATA = 0
   WHILE DATA DO
      IF GLHX.ID[1,3] <> CONO THEN GOTO 2800
      READU DUMMY FROM GLHX, GLHX.ID ELSE
         RELEASE GLHX, GLHX.ID; GOTO 2800
      END
      GLHX.PER = GLHX.ID[LEN(GLHX.ID)-5,6]
      IF GLHX.PER > LST.PER THEN
         DELETE GLHX, GLHX.ID
      END ELSE
         RELEASE GLHX, GLHX.ID
      END
2800 REPEAT
3000 MATREADU FISCAL.REC FROM CONTROL, CONO : "FISCAL" ELSE
      MAT FISCAL.REC = ""
   END
   FR.CURR.PER = SAVE.PER<1>
   FR.CURR.DATE = SAVE.DATE<1>
   MATWRITE FISCAL.REC ON CONTROL, CONO : "FISCAL"
   IF CURR.YR # BEG.YR THEN
      READU OPENDATES FROM CONTROL, CONO : "OPENDATES" ELSE
         OPENDATES = ""
         RELEASE CONTROL, CONO : "OPENDATES"
      END
      IF OPENDATES # "" THEN
         FOR PER = 1 TO NUM.PERIODS
            OPENDATES<PER> = OCONV(OPENDATES<PER>,"D/")
            OPENDATES<PER> = OPENDATES<PER>[1,6]:OPENDATES<PER>[7,4]-1
            OPENDATES<PER> = ICONV(OPENDATES<PER>,"D/")
         NEXT PER
         WRITE OPENDATES ON CONTROL, CONO : "OPENDATES"
      END
   END
   RETURN
*
*--- SCROLL LOADS
*
60000 ST.LINE = 1 + INT((L.LN-1)/PAGE.SIZE) * PAGE.SIZE
   LST.LINE = ST.LINE + PAGE.SIZE - 1
   IF LST.LINE > L.LINES THEN LST.LINE = L.LINES
   IF ST.LINE = L.OLD.START THEN RETURN
   L.OLD.START = ST.LINE
   CNT = 1
   FOR N = ST.LINE TO LST.LINE
      SSLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
      P_X  = 0 ; P_Y = SSLN ; P_VALUE = SP39 ; P_OPT = ""
      P_X  := AM:8 ; P_Y := AM:SSLN ; P_VALUE := AM:N "R#3"
      P_X  := AM:12 ; P_Y := AM:SSLN ; P_VALUE := AM:SAVE.PER<N>[1,4] "L#4"
      P_X  := AM:17 ; P_Y := AM:SSLN ; P_VALUE := AM:SAVE.PER<N>[5,2] "L#2"
      P_X  := AM:20 ; P_Y := AM:SSLN ; P_VALUE := AM:SAVE.MON<N> "L#3"
      P_X  := AM:24 ; P_Y := AM:SSLN ; P_VALUE := AM:OCONV(SAVE.DATE<N>, "D2/") "L#8"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      CNT = CNT + 1
   NEXT N
   FOR N = CNT TO PAGE.SIZE
      SSLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
      P_X  = 0 ; P_Y = SSLN ; P_VALUE = SP39 ; P_OPT = ""
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   NEXT N
   RETURN
*
*--- SCROLL SKIPS
*
70000 ST.LINE = 1 + INT((S.LN-1)/PAGE.SIZE) * PAGE.SIZE
   LST.LINE = ST.LINE + PAGE.SIZE - 1
   IF LST.LINE > S.LINES THEN LST.LINE = S.LINES
   IF ST.LINE = S.OLD.START THEN RETURN
   S.OLD.START = ST.LINE
   CNT = 1
   FOR N = ST.LINE TO LST.LINE
      SSLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
      P_X  = 40 ; P_Y = SSLN ; P_VALUE = SP39 ; P_OPT = ""
      P_X  := AM:48 ; P_Y := AM:SSLN ; P_VALUE := AM:N "R#3"
      P_X  := AM:52 ; P_Y := AM:SSLN ; P_VALUE := AM:NO.SAVE.PER<N>[1,4] "L#4"
      P_X  := AM:57 ; P_Y := AM:SSLN ; P_VALUE := AM:NO.SAVE.PER<N>[5,2] "L#2"
      P_X  := AM:60 ; P_Y := AM:SSLN ; P_VALUE := AM:NO.SAVE.MON<N> "L#3"
      P_X  := AM:64 ; P_Y := AM:SSLN ; P_VALUE := AM:OCONV(NO.SAVE.DATE<N>, "D2/") "L#8"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      CNT = CNT + 1
   NEXT N
   FOR N = CNT TO PAGE.SIZE
      SSLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
      P_X  = 40 ; P_Y = SSLN ; P_VALUE = SP39 ; P_OPT = ""
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   NEXT N
   RETURN
*
*--- ERROR ROUTINE
*
91000 ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC);RETURN
99999 PROCWRITE PROC.LINE
   IF DEL.CONTROL THEN
      READU PROCESS.CONTROL FROM CONTROL,CONO:'GLS.BACKUP.RESTORE' THEN
         PROCESS.CONTROL = ''
         WRITE PROCESS.CONTROL ON CONTROL, CONO:'GLS.BACKUP.RESTORE'
      END ELSE
         RELEASE CONTROL, CONO:'GLS.BACKUP.RESTORE'
      END
   END
END
