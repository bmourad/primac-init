*COPY>CPYLIB>COM1
*********************************************************************
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - GLSBP
* PROGRAM     - ACCT.TYPE.MAINT
* BY          - JIHAD YAMOUT ,C.B.A
* DATE        - 08/01/84
* DESCRIPTION - This program update ACCT.TYPE file.
*C33881 cm 07/27/1999 * Getting error message when exiting program 
*T26225 gat 10/15/2001 * FIX GLS DISPLAY PROBLEM
*T25978 adelgado 02/07/2002 * Add the use of prompts (S,SR,SB,ST).
*T26126 adelgado 02/28/2002 * Implement the LOCKED clause for READU.
*********************************************************************
*COPY>GLS.CPYLIB>ACCT.TYPE
*COPY>GLS.CPYLIB>ACCT.CATG
*COPY>GLS.CPYLIB>ACCT.SUB.CATG
*COPY>GLS.CPYLIB>CATG.AND.SUB
*COPY>PMC.CPYLIB>COA
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>PMC.CPYLIB>COMPANY
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
  DIM PRT.REC(10)
  EQU PRT.CATG    TO PRT.REC(1)
  EQU PRT.CURR    TO PRT.REC(2)
  EQU PRT.FIX     TO PRT.REC(3)
  EQU PRT.PROD    TO PRT.REC(4)
  EQU PRT.DESC    TO PRT.REC(5)
  EQU PRT.SUB     TO PRT.REC(6)
  EQU PRT.S.DESC  TO PRT.REC(7)
***** SETUP ERRMSG ROUTINE
  SYS.TYPE = 1
  CALL SYSCOM(MAT SYSCOM.REC)
**** OPEN FILES
  MAT FILE.VARS = ''
  OPEN '','ACCT.TYPE' TO ACCT.TYPE ELSE
    ERRMSG = 'CANNOT LOCATE ACCT.TYPE FILE'
    GOTO 93000
  END
  OPEN '','ACCT.CATG' TO ACCT.CATG ELSE
    ERRMSG = 'CANNOT LOCATE ACCT.CATG FILE'
    GOTO 93000
  END
  OPEN '','ACCT.SUB.CATG' TO ACCT.SUB.CATG ELSE
    ERRMSG = 'CANNOT LOCATE ACCT.SUB.CATG FILE'
    GOTO 93000
  END
  OPEN '','CATG.AND.SUB' TO CATG.AND.SUB ELSE
    ERRMSG = 'CANNOT LOCATE CATG.AND.SUB FILE'
    GOTO 93000
  END
  OPEN '','COA' TO COA ELSE
    ERRMSG = 'CANNOT LOCATE COA FILE'
    GOTO 93000
  END
  OPEN '','COMPANY' TO COMPANY ELSE
    ERRMSG = 'CANNOT LOCATE COMPANY FILE'
    GOTO 93000
  END
  OPEN '','GLS.SCREENS' TO M.SCREENS ELSE
    ERRMSG = 'CANNOT LOCATE M.SCREENS FILE'
    GOTO 93000
  END
  OPEN '','CONTROL' TO CONTROL ELSE
    ERRMSG = 'CANNOT LOCATE CONTROL FILE'
    GOTO 93000
  END
  OPEN '','PREFIX' TO PREFIX ELSE
    ERRMSG = 'CANNOT LOCATE PREFIX FILE'
    GOTO 93000
  END
***** GET COMPANY NAME
  MAT COMP.REC = ''
  CONO = ''
  CALL GET.CONO(CONO,MAT COMP.REC)
  IF CONO = 'END' THEN GOTO 99999
  MAT EDIT.COM.DRIVER = ''
*    MAT EDIT.COM = ''
*    TYP = 0
*    CALL EDIT.SUB
  FILL = '#'
  ALL.CONO = ""
  I = 0
10*
  READNEXT ID ELSE GOTO 19
  IF LEN(ID) # 3 AND NOT(NUM(ID)) THEN GOTO 10
  I = I + 1
  ALL.CONO<I> = ID
  GOTO 10
19*
  IF ALL.CONO = "" THEN ALL.CONO = CONO
  CCNT = COUNT(ALL.CONO,AM) + (ALL.CONO # "")
***** MAIN PROCESSING
  ECD.SCRN.CNT = 1
  ECD.SCRN.NAME<1> = 'ACCT.TYPE.MAINT'
  ECD.ACTION=1;CALL SCRN.EDIT
  BEGIN.PAGE = 6
  PAGE.SIZE = 14
  LINE.SPACE = 1
  CL1 = SPACE(35)
  CL2 = SPACE(31)
  ECD.SCRN.NO = 1
  LOOP
20 *
    TYPE.ID = ''; MAT AT.REC = ''; MAT PRT.REC = ''
    MAT SCV.REC = ""
    ECD.ACTION=2;CALL SCRN.EDIT
***** ENTER ACCOUNT TYPE
    ECD.NUM = 1
    ECD.ACTION=4;CALL SCRN.EDIT
    BEGIN CASE
      CASE ECD.RET.VALUE = 'END'
      CASE ECD.RET.VALUE # ''
        * T26126 v
        MATREADU AT.REC FROM ACCT.TYPE, ECD.RET.VALUE LOCKED
          ERRMSG = 'ACCOUNT TYPE record is locked by user - ':GETUSERNAME(STATUS())
          GOSUB 91000;GOTO 20 
        END ELSE
          MAT AT.REC = ""
        END
        * T26126 ^
        IF AT.DESC # "" THEN
          TYPE.ID = ECD.RET.VALUE
          ECD.NUM = 2; SCV.REC(ECD.NUM)<1> = AT.DESC
          ECD.ACTION = 5; CALL SCRN.EDIT
        END ELSE
          ERRMSG = "INVALID ACCT TYPE "
          GOSUB 91000
          GOTO 20
        END
*C33881 v
      CASE ECD.RET.VALUE = ""
        GOTO 99999
*C33881 ^
    END CASE
  WHILE TYPE.ID # '' DO
    LINES = COUNT(AT.CATG,VM) + (AT.CATG # '')
    PRT.CATG = AT.CATG
    FOR I = 1 TO LINES
      MATREAD AC.REC FROM ACCT.CATG, AT.CATG<1,I> ELSE
        MAT AC.REC = ''
        AC.DESC = 'UNKNOWN'
      END
      PRT.DESC<1,I> = AC.DESC
      LINES1 = COUNT(AC.SUB,VM) + (AC.SUB # '')
      FOR J = 1 TO LINES1
        PRT.SUB<1,I,J> = AC.SUB<1,J>
        MATREAD ASC.REC FROM ACCT.SUB.CATG, AC.SUB<1,J> ELSE
          MAT ASC.REC = ''
          ASC.DESC = 'UNKNOWN'
        END
        MATREAD CAS.REC FROM CATG.AND.SUB, CONO:PRT.CATG<1,I>:AC.SUB<1,J> ELSE
          MAT CAS.REC = ''
        END
        PRT.CURR<1,I,J> = CAS.CURR
        PRT.FIX<1,I,J> = CAS.FIX
        PRT.PROD<1,I,J> = CAS.PROD
        PRT.S.DESC<1,I,J> = ASC.DESC
      NEXT J
    NEXT I
    LN = 1; OLD.START.LINE = 0
    IF LINES THEN GOSUB 2900
    LOOP
      MORE = 1
      ECD.NUM = 3; SCV.REC(ECD.NUM)<1> = ''
      ECD.ACTION = 4; CALL SCRN.EDIT
      ACTION = ECD.RET.VALUE
      BEGIN CASE
        CASE ACTION = 'E' OR ACTION = 'END'
          RELEASE ACCT.TYPE, TYPE.ID
          MORE = 0
        CASE ACTION = 'A'
          LOOP
            LN = LINES + 1
            OLD.LINES = LINES
            GOSUB 2000
          WHILE LINES > OLD.LINES DO REPEAT
          LN = LINES
        CASE ACTION = 'C'
          GOSUB 2800
          IF LN.NO THEN
            LN = LN.NO
            GOSUB 2000
          END
        CASE ACTION = 'R'
          GOSUB 2800
          IF LN.NO THEN
            LN = LN.NO
            MATREAD AC.REC FROM ACCT.CATG, PRT.CATG<1,LN> ELSE
              MAT AC.REC = ''
            END
            SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN - 1,PAGE.SIZE)
            GOSUB 3000
          END
        CASE ACTION = 'D'
          GOSUB 2800
          IF LN.NO THEN
            BLK = 0
            SCNT = COUNT(PRT.SUB<1,LN.NO>,SVM) + (PRT.SUB<1,LN.NO> # "")
            FOR DL = 1 TO CCNT UNTIL BLK
              FOR DLL = 1 TO SCNT UNTIL BLK
                MATREAD CAS.REC FROM CATG.AND.SUB, ALL.CONO<DL> : PRT.CATG<1,LN.NO> : PRT.SUB<1,LN.NO,DLL> ELSE MAT CAS.REC = ""
                IF CAS.ACCT # "" THEN BLK = DL
              NEXT DLL
            NEXT DL
            IF BLK THEN
              ERRMSG = 'THIS CATEGORY IN COMPANY - ' : ALL.CONO<BLK>
              GOSUB 91000
            END ELSE
              LN = LN.NO
              PRT.CATG = DELETE(PRT.CATG,1,LN,0)
              PRT.DESC = DELETE(PRT.DESC,1,LN,0)
              PRT.SUB = DELETE(PRT.SUB,1,LN,0)
              PRT.CURR = DELETE(PRT.CURR,1,LN,0)
              PRT.FIX = DELETE(PRT.FIX,1,LN,0)
              PRT.PROD = DELETE(PRT.PROD,1,LN,0)
              PRT.S.DESC = DELETE(PRT.S.DESC,1,LN,0)
              LINES = COUNT(PRT.CATG,VM) + (PRT.CATG # '')
              IF LN > LINES THEN LN = LN - 1
              IF LN < 1 THEN LN = 1
              OLD.START.LINE = 0
            END
          END
          GOSUB 2900
        CASE ACTION = 'S'
          LN = 1 + INT((LN - 1)/PAGE.SIZE) * PAGE.SIZE + PAGE.SIZE
          IF LN > LINES THEN LN = 1
          GOSUB 2900
        * T25978 v
        CASE ACTION = 'SR'
          LN = 1 + INT((LN - 1)/PAGE.SIZE) * PAGE.SIZE - PAGE.SIZE
          IF LN < 1 THEN LN = 1
          GOSUB 2900
        CASE ACTION = 'ST'
          LN = 1
          GOSUB 2900
        CASE ACTION = 'SB'
          LN = LINES
          GOSUB 2900
        * T25978 ^
        CASE ACTION = 'F'
          GOSUB 5000
          MORE = 0
      END CASE
    WHILE MORE DO REPEAT
  REPEAT
  GOTO 99999
*-------------------*
*--- SUBROUTINES ---*
*-------------------*
*
*--- ENTER CATEGORY
*
2000*
  GOSUB 2900
  SLN = BEGIN.PAGE + LINE.SPACE * MOD(LN - 1,PAGE.SIZE)
  P_X  = 0 ; P_Y = SLN ; P_VALUE = LN "R#3" ; P_OPT = ""
  P_X  := AM:4 ; P_Y := AM:SLN ; P_VALUE := AM:" "
*DT P_X  := AM:4 ; P_Y := AM:SLN ; P_VALUE := AM:" "
  P_X  := AM:6 ; P_Y := AM:SLN ; P_VALUE := AM:"   "
  P_X  := AM:10 ; P_Y := AM:SLN ; P_VALUE := AM:SPACE(27)
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
2010*
  X = 6; Y = SLN; TYP = 3; MINL = 3; MAXL = MINL; O.R = 'O'
  DEFAULT = PRT.CATG<1,LN>
  CALL EDIT.SUB
  IF VALUE = '' OR VALUE = 'END' THEN
    IF ACTION = 'A' THEN
      PRT.CATG = DELETE(PRT.CATG,1,LN,0)
      PRT.DESC = DELETE(PRT.DESC,1,LN,0)
      PRT.SUB = DELETE(PRT.SUB,1,LN,0)
      PRT.CURR = DELETE(PRT.CURR,1,LN,0)
      PRT.FIX = DELETE(PRT.FIX,1,LN,0)
      PRT.PROD = DELETE(PRT.PROD,1,LN,0)
      PRT.S.DESC = DELETE(PRT.S.DESC,1,LN,0)
      P_X  = 0 ; P_Y = SLN ; P_VALUE = "   " ; P_OPT = ""
      P_X  := AM:4 ; P_Y := AM:SLN ; P_VALUE := AM:" "
*DT P_X  := AM:4 ; P_Y := AM:SLN ; P_VALUE := AM:" "
      P_X  := AM:6 ; P_Y := AM:SLN ; P_VALUE := AM:"   "
      P_X  := AM:10 ; P_Y := AM:SLN ; P_VALUE := AM:SPACE(27)
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      GOTO 2099
    END ELSE
      P_X  = 6 ; P_Y = SLN ; P_VALUE = PRT.CATG<1,LN> "L#3" ; P_OPT = ""
      P_X  := AM:10 ; P_Y := AM:SLN ; P_VALUE := AM:PRT.DESC<1,LN> "L#27"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      GOTO 2099
    END
  END
  LOCATE VALUE IN PRT.CATG<1>,1 SETTING FND ELSE FND = LN
  IF FND <> LN THEN
    ERRMSG = 'CATEGORY ALREADY EXIST ON LINE # ' : FND
    GOSUB 91000; GOTO 2010
  END
  MATREAD AC.REC FROM ACCT.CATG, VALUE ELSE
    MAT AC.REC = ''
    AC.TYPE = TYPE.ID
  END
  IF AC.TYPE # TYPE.ID THEN
    ERRMSG = 'THIS CATEGORY IS FOR TYPE ' : AC.TYPE
    GOSUB 91000; GOTO 2010
  END
  PRT.CATG<1,LN> = VALUE
  IF PRT.SUB<1,LN> = '' THEN
    LINES1 = COUNT(AC.SUB,VM) + (AC.SUB # '')
    FOR I = 1 TO LINES1
      PRT.SUB<1,LN,I> = AC.SUB<1,I>
      MATREAD ASC.REC FROM ACCT.SUB.CATG, AC.SUB<1,I> ELSE
        ASC.DESC = 'UNKNOWN'
      END
      MATREAD CAS.REC FROM CATG.AND.SUB, CONO:PRT.CATG<1,LN>:AC.SUB<1,I> ELSE
        MAT CAS.REC = ''
      END
      PRT.CURR<1,LN,I> = CAS.CURR
      PRT.FIX<1,LN,I> = CAS.FIX
      PRT.PROD<1,LN,I> = CAS.PROD
      PRT.S.DESC<1,LN,I> = ASC.DESC
    NEXT I
  END
*--- CATG DESC
2020*
  X = 10; Y = SLN; TYP = 1; MINL = 1; MAXL = 27; O.R = 'R'
  IF PRT.DESC<1,LN> # '' THEN
    O.R = 'O'; DEFAULT = PRT.DESC<1,LN>
  END
  CALL EDIT.SUB
  IF VALUE = 'END' THEN GOTO 2010
  PRT.DESC<1,LN> = VALUE
  LINES = COUNT(PRT.CATG,VM) + (PRT.CATG # '')
  GOSUB 3000
2099*
  RETURN
*
*--- GET LINE NUMBER FOR CATEGORY
*
2800*
  GOSUB 2900
  ECD.NUM = 5; SCV.REC(ECD.NUM)<1> = ''
  ECD.MINV = START.LINE; ECD.MAXV = LAST.LINE
  ECD.ACTION = 4; CALL SCRN.EDIT
  IF ECD.RET.VALUE = '' OR ECD.RET.VALUE = 'END' THEN
    LN.NO = 0
  END ELSE
    LN.NO = ECD.RET.VALUE
  END
  RETURN
*
*--- SCROLL CATEGORY
*
2900*
  START.LINE = 1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE
  LAST.LINE = START.LINE + PAGE.SIZE - 1
  IF LAST.LINE > LINES THEN LAST.LINE = LINES
  IF START.LINE = OLD.START.LINE THEN GOTO 2999
  OLD.START.LINE = START.LINE
  CNT = 1
  FOR N = START.LINE TO LAST.LINE
    SLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
    P_X  = 0 ; P_Y = SLN ; P_VALUE = N "R#3" ; P_OPT = ""
    P_X  := AM:6 ; P_Y := AM:SLN ; P_VALUE := AM:PRT.CATG<1,N> "L#3"
    P_X  := AM:10 ; P_Y := AM:SLN ; P_VALUE := AM:PRT.DESC<1,N> "L#27"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    CNT = CNT + 1
  NEXT N
  FOR N = CNT TO PAGE.SIZE
    SLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
    P_X  = 0 ; P_Y = SLN ; P_VALUE = "   " ; P_OPT = ""
    P_X  := AM:4 ; P_Y := AM:SLN ; P_VALUE := AM:" "
*DT P_X  := AM:4 ; P_Y := AM:SLN ; P_VALUE := AM:" "
    P_X  := AM:6 ; P_Y := AM:SLN ; P_VALUE := AM:"   "
    P_X  := AM:10 ; P_Y := AM:SLN ; P_VALUE := AM:SPACE(27)
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  NEXT N
2999*
  RETURN
2910*
  START.LINE = 1 + INT((LN-1)/PAGE.SIZE) * PAGE.SIZE
  LAST.LINE = START.LINE + PAGE.SIZE - 1
  IF LAST.LINE > LINES THEN LAST.LINE = LINES
  IF START.LINE = OLD.START.LINE THEN GOTO 2999
  OLD.START.LINE = START.LINE
  CNT = 1
  FOR N = START.LINE TO LAST.LINE
    SLN = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
    P_X  = 0 ; P_Y = SLN ; P_VALUE = N "R#3" ; P_OPT = ""
    P_X  := AM:6 ; P_Y := AM:SLN ; P_VALUE := AM:PRT.CATG<1,N> "L#3"
    P_X  := AM:10 ; P_Y := AM:SLN ; P_VALUE := AM:PRT.DESC<1,N> "L#27"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    CNT = CNT + 1
  NEXT N
  RETURN
*
*--- OPTIONS FOR SUB CATEGORIES
*
3000*
  LINES1 = COUNT(PRT.SUB<1,LN>,SVM) + (PRT.SUB<1,LN> # '')
  LN1 = 1; OLD.START.LINE1 = 0
  P_X  = 4 ; P_Y = SLN ; P_VALUE = "*" ; P_OPT = ""
*DT  P_X  = 4 ; P_Y = SLN ; P_VALUE = "*" ; P_OPT = ""
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  BEGIN CASE
    CASE LINES1
      GOSUB 4900
* START.LINE = 0
* GOSUB 2910
    CASE ACTION = 'A'
      LINES1 = 0
      REQUEST = 'A'
      LOOP
        LN1 = LINES1 + 1
        OLD.LINES1 = LINES1
        GOSUB 4000
      WHILE LINES1 > OLD.LINES1 DO REPEAT
  END CASE
  LOOP
    ANCORE = 1
    ECD.NUM = 4; SCV.REC(ECD.NUM)<1> = ''
    ECD.ACTION = 4; CALL SCRN.EDIT
    REQUEST = ECD.RET.VALUE
    BEGIN CASE
      CASE REQUEST = 'E' OR REQUEST = 'END'
        ANCORE = 0
      CASE REQUEST = 'A'
        LOOP
          LN1 = LINES1 + 1
          OLD.LINES1 = LINES1
          GOSUB 4000
        WHILE LINES1 > OLD.LINES1 DO REPEAT
      CASE REQUEST = 'C'
        GOSUB 4800
        IF LN.NO THEN
          LN1 = LN.NO
          GOSUB 4000
        END
      CASE REQUEST = 'D'
        GOSUB 4800
        IF LN.NO THEN
          IF PRT.SUB<1,LN,LN.NO> = '000' THEN
            ERRMSG = 'CANNOT DELETE THIS SUB CATEGORY'
            GOSUB 91000
          END ELSE
            BLK = 0
            FOR DL = 1 TO CCNT UNTIL BLK
              MATREAD CAS.REC FROM CATG.AND.SUB, ALL.CONO<DL> :PRT.CATG<1,LN> : PRT.SUB<1,LN,LN.NO> ELSE MAT CAS.REC = ""
              IF CAS.ACCT # "" THEN BLK = DL
            NEXT DL
            IF BLK THEN
              ERRMSG = 'THIS SUB CATEGORY IS USED IN COMPANY - ': ALL.CONO<BLK>
              GOSUB 91000
            END ELSE
              LN1 = LN.NO
              PRT.SUB = DELETE(PRT.SUB,1,LN,LN1)
              PRT.CURR = DELETE(PRT.CURR,1,LN,LN1)
              PRT.FIX = DELETE(PRT.FIX,1,LN,LN1)
              PRT.PROD = DELETE(PRT.PROD,1,LN,LN1)
              PRT.S.DESC = DELETE(PRT.S.DESC,1,LN,LN1)
              LINES1 = COUNT(PRT.SUB<1,LN>,SVM) + (PRT.SUB<1,LN> # '')
              IF LN1 > LINES1 THEN LN1 = LN1 - 1
              IF LN1 < 1 THEN LN1 = 1
              OLD.START.LINE1 = 0
            END
          END
        END
        GOSUB 4900
* START.LINE = 0
* GOSUB 2910
      CASE REQUEST = 'S'
        LN1 = 1 + INT((LN1 - 1)/PAGE.SIZE) * PAGE.SIZE + PAGE.SIZE
        IF LN1 > LINES1 THEN LN1 = 1
        GOSUB 4900
      * T25978 v
      CASE REQUEST = 'SR'
        LN1 = 1 + INT((LN1 - 1)/PAGE.SIZE) * PAGE.SIZE - PAGE.SIZE
        IF LN1 < 1 THEN LN1 = 1
        GOSUB 4900
      CASE REQUEST = 'ST'
        LN1 = 1
        GOSUB 4900
      CASE REQUEST = 'SB'
        LN1 = LINES1
        GOSUB 4900
      * T25978 ^
* START.LINE = 0
* GOSUB 2910
    END CASE
  WHILE ANCORE DO REPEAT
  FOR LN1 = 1 TO LINES1
    TEMP.DESC = PRT.S.DESC<1,LN,LN1>
    TEMP.SUB = PRT.SUB<1,LN,LN1>
    FOR I = 1 TO LINES
      LOCATE TEMP.SUB IN PRT.SUB<1,I>,1 SETTING SFND ELSE SFND = 0
      IF SFND THEN
        PRT.S.DESC<1,I,SFND> = TEMP.DESC
      END
    NEXT I
  NEXT LN1
*DT  P_X  = 4 ; P_Y = SLN ; P_VALUE = " " ; P_OPT = ""
  P_X  = 4 ; P_Y = SLN ; P_VALUE = " " ; P_OPT = ""
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  LN1 = 1; LINES1 = 0; OLD.START.LINE1 = 0; GOSUB 4900
  RETURN
*
*--- ENTER SUB CATEGORIES
*
4000*
  GOSUB 4900
  SLN1 = BEGIN.PAGE + LINE.SPACE * MOD(LN1 - 1,PAGE.SIZE)
  P_X  = 38 ; P_Y = SLN1 ; P_VALUE = LN1 "R#3" ; P_OPT = ""
  P_X  := AM:42 ; P_Y := AM:SLN1 ; P_VALUE := AM:"   "
  P_X  := AM:46 ; P_Y := AM:SLN1 ; P_VALUE := AM:" "
  P_X  := AM:48 ; P_Y := AM:SLN1 ; P_VALUE := AM:" "
  P_X  := AM:50 ; P_Y := AM:SLN1 ; P_VALUE := AM:" "
  P_X  := AM:52 ; P_Y := AM:SLN1 ; P_VALUE := AM:SPACE(27)
  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
* START.LINE = 0
* GOSUB 2910
4010*
  IF LN1 = 1 THEN
    VALUE = '000'
    P_X  = 42 ; P_Y = SLN1 ; P_VALUE = VALUE "L#3" ; P_OPT = ""
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    GOTO 4015
  END
  X = 42; Y = SLN1; TYP = 3; MINL = 3; MAXL = MINL; O.R = 'O'
  DEFAULT = PRT.SUB<1,LN,LN1>
  CALL EDIT.SUB
  IF VALUE = '' OR VALUE = 'END' THEN
    IF REQUEST = 'A' THEN
      PRT.SUB = DELETE(PRT.SUB,1,LN,LN1)
      PRT.CURR = DELETE(PRT.CURR,1,LN,LN1)
      PRT.FIX = DELETE(PRT.FIX,1,LN,LN1)
      PRT.PROD = DELETE(PRT.PROD,1,LN,LN1)
      PRT.S.DESC = DELETE(PRT.S.DESC,1,LN,LN1)
      P_X  = 38 ; P_Y = SLN1 ; P_VALUE = "   " ; P_OPT = ""
      P_X  := AM:42 ; P_Y := AM:SLN1 ; P_VALUE := AM:"   "
      P_X  := AM:46 ; P_Y := AM:SLN1 ; P_VALUE := AM:" "
      P_X  := AM:48 ; P_Y := AM:SLN1 ; P_VALUE := AM:" "
      P_X  := AM:50 ; P_Y := AM:SLN1 ; P_VALUE := AM:" "
      P_X  := AM:52 ; P_Y := AM:SLN1 ; P_VALUE := AM:SPACE(27)
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      GOTO 4099
    END ELSE
      P_X  = 42 ; P_Y = SLN1 ; P_VALUE = PRT.SUB<1,LN,LN1> "L#3" ; P_OPT = ""
      P_X  := AM:46 ; P_Y := AM:SLN1 ; P_VALUE := AM:PRT.CURR<1,LN,LN1> "L#1"
      P_X  := AM:48 ; P_Y := AM:SLN1 ; P_VALUE := AM:PRT.FIX<1,LN,LN1> "L#1"
      P_X  := AM:50 ; P_Y := AM:SLN1 ; P_VALUE := AM:PRT.PROD<1,LN,LN1> "L#1"
      P_X  := AM:52 ; P_Y := AM:SLN1 ; P_VALUE := AM:PRT.S.DESC<1,LN,LN1> "L#27"
      CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      GOTO 4099
    END
  END
  LOCATE VALUE IN PRT.SUB<1,LN>,1 SETTING FND ELSE FND = LN1
  IF FND <> LN1 THEN
    ERRMSG = 'SUB CATEGORY ALREADY EXIST ON LINE # ' : FND
    GOSUB 91000; GOTO 4010
  END
4015*
  PRT.SUB<1,LN,LN1> = VALUE
  MATREAD ASC.REC FROM ACCT.SUB.CATG, VALUE ELSE
    MAT ASC.REC = ''
    IF VALUE = '000' THEN ASC.DESC = 'GENERAL'
  END
  IF VALUE = "000" THEN GOTO 4016
  IF PRT.S.DESC<1,LN,LN1> # "" THEN GOTO 4016
  DFND = 0
  FOR I = 1 TO LINES UNTIL DFND
    IF I # LN THEN
      LOCATE VALUE IN PRT.SUB<1,I>,1 SETTING SFND ELSE SFND = 0
      IF SFND AND PRT.S.DESC<1,I,SFND> # ASC.DESC THEN
        DFND = 1
        ASC.DESC = PRT.S.DESC<1,I,SFND>
      END
    END
  NEXT I
4016*
  MATREAD CAS.REC FROM CATG.AND.SUB, CONO:PRT.CATG<1,LN>:VALUE ELSE
    MAT CAS.REC = ''
    CAS.CURR = PRT.CURR<1,LN,1>
    CAS.FIX = PRT.FIX<1,LN,1>
    CAS.PROD = PRT.PROD<1,LN,1>
  END
  IF PRT.CURR<1,LN,LN1> = '' THEN
    PRT.CURR<1,LN,LN1> = CAS.CURR
  END
  IF PRT.FIX<1,LN,LN1> = '' THEN
    PRT.FIX<1,LN,LN1> = CAS.FIX
  END
  IF PRT.PROD<1,LN,LN1> = '' THEN
    PRT.PROD<1,LN,LN1> = CAS.PROD
  END
  IF PRT.S.DESC<1,LN,LN1> = '' THEN
    PRT.S.DESC<1,LN,LN1> = ASC.DESC
  END
*--- CURR
4020*
  X = 46; Y = SLN1; TYP = 1; MINL = 1; MAXL = MINL; O.R = 'O'
  VALDAT = 'C' : VM : 'L'
  DEFAULT = PRT.CURR<1,LN,LN1>
  CALL EDIT.SUB
  IF VALUE = 'END' THEN GOTO 4010
  PRT.CURR<1,LN,LN1> = VALUE
*--- FIX
4030*
  X = 48; Y = SLN1; TYP = 1; MINL = 1; MAXL = MINL; O.R = 'O'
  VALDAT = 'V' : VM : 'S' : VM : 'F'
  DEFAULT = PRT.FIX<1,LN,LN1>
  CALL EDIT.SUB
  IF VALUE = 'END' THEN GOTO 4010
  PRT.FIX<1,LN,LN1> = VALUE
*--- PROD
4040*
  X = 50; Y = SLN1; TYP = 1; MINL = 1; MAXL = MINL; O.R = 'O'
  VALDAT = 'L' : VM : 'M' : VM : 'F' : VM : 'A' : VM : 'S' : VM : 'O'
  DEFAULT = PRT.PROD<1,LN,LN1>
  CALL EDIT.SUB
  IF VALUE = 'END' THEN GOTO 4010
  PRT.PROD<1,LN,LN1> = VALUE
4050*
  IF LN1 = 1 THEN
    VALUE = ASC.DESC
    P_X  = 52 ; P_Y = SLN1 ; P_VALUE = VALUE "L#27" ; P_OPT = ""
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    GOTO 4055
  END
  X = 52; Y = SLN1; TYP = 1; MINL = 3; MAXL = 27; O.R = 'R'
  IF PRT.S.DESC<1,LN,LN1> # '' THEN
    O.R = 'O'; DEFAULT = PRT.S.DESC<1,LN,LN1>
  END
  CALL EDIT.SUB
  IF VALUE = 'END' THEN GOTO 4010
4055*
  PRT.S.DESC<1,LN,LN1> = VALUE
  LINES1 = COUNT(PRT.SUB<1,LN>,SVM) + (PRT.SUB<1,LN> # '')
4099*
  RETURN
*
*--- ENTER LINE NUMBER FOR SUB
*
4800*
  GOSUB 4900
  ECD.NUM = 5; SCV.REC(ECD.NUM)<1> = ''
  ECD.MINV = START.LINE1; ECD.MAXV = LAST.LINE1
  ECD.ACTION = 4; CALL SCRN.EDIT
  IF ECD.RET.VALUE = '' OR ECD.RET.VALUE = 'END' THEN
    LN.NO = 0
  END ELSE
    LN.NO = ECD.RET.VALUE
  END
  RETURN
*
*--- SCROLL SUB CATEGORIES
*
4900*
  START.LINE1 = 1 + INT((LN1-1)/PAGE.SIZE) * PAGE.SIZE
  LAST.LINE1 = START.LINE1 + PAGE.SIZE - 1
  IF LAST.LINE1 > LINES1 THEN LAST.LINE1 = LINES1
  IF START.LINE1 = OLD.START.LINE1 THEN GOTO 4999
  OLD.START.LINE1 = START.LINE1
  CNT = 1
  FOR N = START.LINE1 TO LAST.LINE1
    SLN1 = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
    P_X  = 38 ; P_Y = SLN1 ; P_VALUE = N "R#3" ; P_OPT = ""
    P_X  := AM:42 ; P_Y := AM:SLN1 ; P_VALUE := AM:PRT.SUB<1,LN,N> "L#3"
    P_X  := AM:46 ; P_Y := AM:SLN1 ; P_VALUE := AM:PRT.CURR<1,LN,N> "L#1"
    P_X  := AM:48 ; P_Y := AM:SLN1 ; P_VALUE := AM:PRT.FIX<1,LN,N> "L#1"
    P_X  := AM:50 ; P_Y := AM:SLN1 ; P_VALUE := AM:PRT.PROD<1,LN,N> "L#1"
    P_X  := AM:52 ; P_Y := AM:SLN1 ; P_VALUE := AM:PRT.S.DESC<1,LN,N> "L#27"
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
    CNT = CNT + 1
  NEXT N
  FOR N = CNT TO PAGE.SIZE
    SLN1 = BEGIN.PAGE + LINE.SPACE * MOD(N-1,PAGE.SIZE)
    P_X  = 38 ; P_Y = SLN1 ; P_VALUE = "   " ; P_OPT = ""
    P_X  := AM:42 ; P_Y := AM:SLN1 ; P_VALUE := AM:"   "
    P_X  := AM:46 ; P_Y := AM:SLN1 ; P_VALUE := AM:" "
    P_X  := AM:48 ; P_Y := AM:SLN1 ; P_VALUE := AM:" "
    P_X  := AM:50 ; P_Y := AM:SLN1 ; P_VALUE := AM:" "
    P_X  := AM:52 ; P_Y := AM:SLN1 ; P_VALUE := AM:SPACE(27)
    CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
  NEXT N
4999*
* START.LINE = 0
* GOSUB 2910
  RETURN
*
*--- UPDATE ALL FILES
*
5000*
*--- ADD PROCESS
  LINES = COUNT(PRT.CATG,VM) + (PRT.CATG # "")
  FOR LN = 1 TO LINES
    LOCATE PRT.CATG<1,LN> IN AT.CATG<1>,1 SETTING CFND ELSE
      AT.CATG<1,CFND> = PRT.CATG<1,LN>
    END
    MATREADU AC.REC FROM ACCT.CATG, AT.CATG<1,CFND> ELSE
      MAT AC.REC = ""
    END
    AC.TYPE = TYPE.ID
    AC.DESC = PRT.DESC<1,LN>
    LINES1 = COUNT(PRT.SUB<1,LN>,SVM) + (PRT.SUB<1,LN> # "")
    FOR LN1 = 1 TO LINES1
      LOCATE PRT.SUB<1,LN,LN1> IN AC.SUB<1>,1 SETTING SFND ELSE
        AC.SUB<1,SFND> = PRT.SUB<1,LN,LN1>
      END
      MATREADU ASC.REC FROM ACCT.SUB.CATG, AC.SUB<1,SFND> ELSE
        MAT ASC.REC = ""
      END
      ASC.DESC = PRT.S.DESC<1,LN,LN1>
      LOCATE TYPE.ID IN ASC.TYPES<1>,1 SETTING AFND ELSE
        ASC.TYPES<1,AFND> = TYPE.ID
      END
      FOR DL = 1 TO CCNT
        CAS.ID = ALL.CONO<DL> : AT.CATG<1,CFND> : AC.SUB<1,SFND>
        MATREADU CAS.REC FROM CATG.AND.SUB, CAS.ID ELSE
          MAT CAS.REC = ""
        END
        BEGIN CASE
          CASE PRT.CURR<1,LN,LN1> # CAS.CURR
            MODIFIED = 1
            CAS.CURR = PRT.CURR<1,LN,LN1>
            CAS.FIX = PRT.FIX<1,LN,LN1>
            CAS.PROD = PRT.PROD<1,LN,LN1>
          CASE PRT.FIX<1,LN,LN1> # CAS.FIX
            MODIFIED = 1
            CAS.FIX = PRT.FIX<1,LN,LN1>
            CAS.PROD = PRT.PROD<1,LN,LN1>
          CASE PRT.PROD<1,LN,LN1> # CAS.PROD
            MODIFIED = 1
            CAS.PROD = PRT.PROD<1,LN,LN1>
          CASE 1
            MODIFIED = 0
        END CASE
        IF MODIFIED = 0 THEN GOTO 5080
        ACNT = COUNT(CAS.ACCT,VM) + (CAS.ACCT # '')
        FOR K = ACNT TO 1 STEP - 1
          COA.ID = ALL.CONO<DL> : CAS.ACCT<1,K>
          MATREADU COA.REC FROM COA, COA.ID ELSE
            CAS.ACCT = DELETE(CAS.ACCT,1,K,0)
            RELEASE COA, COA.ID
            GOTO 5070
          END
          COA.TYPE = AC.TYPE
          COA.CURR = CAS.CURR
          COA.FIX = CAS.FIX
          COA.PROD = CAS.PROD
          MATWRITE COA.REC ON COA, COA.ID
5070*
        NEXT K
5080*
        MATWRITE CAS.REC ON CATG.AND.SUB, CAS.ID
      NEXT DL
      MATWRITE ASC.REC ON ACCT.SUB.CATG, AC.SUB<1,SFND>
    NEXT LN1
    MATWRITE AC.REC ON ACCT.CATG, AT.CATG<1,CFND>
  NEXT LN
*--- DELETE PROCESS
  LINES = COUNT(AT.CATG,VM) + (AT.CATG # "")
  FOR LN = LINES TO 1 STEP - 1
    LOCATE AT.CATG<1,LN> IN PRT.CATG<1>,1 SETTING CFND ELSE CFND = 0
    MATREADU AC.REC FROM ACCT.CATG, AT.CATG<1,LN> ELSE
      MAT AC.REC = ""
      CFND = 0
    END
    LINES1 = COUNT(AC.SUB,VM) + (AC.SUB # "")
    FOR LN1 = LINES1 TO 1 STEP - 1
      IF CFND THEN
        LOCATE AC.SUB<1,LN1> IN PRT.SUB<1,CFND>,1 SETTING SFND ELSE SFND = 0
      END ELSE
        SFND = 0
      END
      IF SFND THEN
        DFND = 1
      END ELSE
        DFND = 0
        CATG.CNT = COUNT(PRT.CATG,VM) + (PRT.CATG # "")
        FOR DL = 1 TO CATG.CNT UNTIL DFND
          LOCATE AC.SUB<1,LN1> IN PRT.SUB<1,DL>,1 SETTING DFND ELSE DFND = 0
        NEXT DL
      END
      MATREADU ASC.REC FROM ACCT.SUB.CATG, AC.SUB<1,LN1> ELSE
        MAT ASC.REC = ""
        SFND = 0
        DFND = 0
      END
      FOR DL = 1 TO CCNT WHILE SFND = 0
        CAS.ID = ALL.CONO<DL> : AT.CATG<1,LN> : AC.SUB<1,LN1>
        MATREADU CAS.REC FROM CATG.AND.SUB, CAS.ID ELSE
          MAT CAS.REC = ""
        END
        ACNT = COUNT(CAS.ACCT,VM) + (CAS.ACCT # "")
        FOR K = ACNT TO 1 STEP - 1
          COA.ID = ALL.CONO<DL> : CAS.ACCT<1,K>
          KFND = 1
          MATREADU COA.REC FROM COA, COA.ID ELSE
            MAT COA.REC = ""
            KFND = 0
          END
          IF KFND THEN
            COA.CATG = ""
            COA.SUB.CATG = ""
            COA.CURR = ""
            COA.FIX = ""
            COA.PROD = ""
            MATWRITE COA.REC ON COA, COA.ID
          END ELSE
            RELEASE COA, COA.ID
          END
          CAS.ACCT = DELETE(CAS.ACCT,1,K,0)
        NEXT K
        DELETE CATG.AND.SUB, CAS.ID
      NEXT DL
      IF DFND THEN
        MATWRITE ASC.REC ON ACCT.SUB.CATG, AC.SUB<1,LN1>
      END ELSE
        LOCATE TYPE.ID IN ASC.TYPES<1>,1 SETTING AFND ELSE AFND = 0
        IF AFND THEN
          ASC.TYPES = DELETE(ASC.TYPES,1,AFND,0)
        END
        IF ASC.TYPES = "" THEN
          DELETE ACCT.SUB.CATG, AC.SUB<1,LN1>
        END ELSE
          MATWRITE ASC.REC ON ACCT.SUB.CATG, AC.SUB<1,LN1>
        END
      END
      IF SFND = 0 THEN
        AC.SUB = DELETE(AC.SUB,1,LN1,0)
      END
    NEXT LN1
    IF CFND THEN
      MATWRITE AC.REC ON ACCT.CATG, AT.CATG<1,LN>
    END ELSE
      DELETE ACCT.CATG, AT.CATG<1,LN>
      AT.CATG = DELETE(AT.CATG,1,LN,0)
    END
  NEXT LN
  MATWRITE AT.REC ON ACCT.TYPE, TYPE.ID
  RETURN
*
*--- CALLS FOR SYSCOM
*
91000*
  ERR.TYPE = 1; CALL SYSCOM(MAT SYSCOM.REC)
  RETURN
92000*
  ERR.TYPE = 2; CALL SYSCOM(MAT SYSCOM.REC)
  RETURN
93000*
  ERR.TYPE = 3; CALL SYSCOM(MAT SYSCOM.REC)
99999*
  RELEASE
*       PRINT @(-1)
  ECD.ACTION = 99; CALL SCRN.EDIT
END
