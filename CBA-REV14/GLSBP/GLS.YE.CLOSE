*COPY>CPYLIB>COM1
*********************************************************************
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - GLSBP
* PROGRAM     - GLS.YE.CLOSE
* BY          - WALID YAMOUT , C.B.A
* DATE        - 08/13/85
* DESCRIPTION -
* TASK
*     18573 5/95 LLH 1-52 ACCOUNTING PERIODS
*     20040 01/23/96 LLH CHANGE GLH PURGE FROM 1 YEAR TO 3 PER DOCUMENATION
*
*
*T20979 llh 09/12/1996 * REMOVE X JOB SETUP FOR NEXT YEAR AND PUT INTO
*                        JCS.EOM.CLOSE
*T21177 diane 11/06/1996 * REV11 UPG
*T21177 diane 01/27/1997 * REV11 UPG ADD CLOSE
*T26008 cm 02/05/2002 * Automatically update the budget for the new
*                       period if there is existing budget information.
*T27935 cmykleb 03/31/2004 * CO.GLS.HIST field is now multivalued.
*T29032 cmyklebu 12/29/2006 * Move pgm from rev12 to rev14.
*********************************************************************
*
*** INSERT FILES EQUATES   
*COPY>PMC.CPYLIB>COMPANY   
*COPY>PMC.CPYLIB>CUSTOMER
*COPY>PMC.CPYLIB>FISCAL
*COPY>PMC.CPYLIB>GLTABLE
*COPY>PMC.CPYLIB>COA
*COPY>GLS.CPYLIB>GLM
*COPY>GLS.CPYLIB>COA.BAL
*COPY>JCS.CPYLIB>JOB
*COPY>CPYLIB>EDIT.COM.DRIVER   
*COPY>CPYLIB>FILE.VARS   
*COPY>CPYLIB>CHAR   
*COPY>CPYLIB>SYSCOM
   MAT SYSCOM.REC =  ""; SYS.TYPE = 2
   DIM MCB.REC(300)
*
**** OPEN FILES   
   OPEN '','COMPANY' TO COMPANY ELSE
      ERRMSG = 'CANNOT LOCATE COMPANY FILE'; GOTO 93000
   END
   OPEN '','GLS.SCREENS' TO M.SCREENS ELSE
      ERRMSG = 'CANNOT LOCATE GLS.SCREENS FILE'; GOTO 93000
   END
   OPEN '','PREFIX' TO PREFIX ELSE
      ERRMSG = 'CANNOT LOCATE PREFIX FILE'; GOTO 93000
   END
   OPEN '','CONTROL' TO CONTROL ELSE
      ERRMSG = 'CANNOT LOCATE CONTROL FILE'; GOTO 93000
   END
   OPEN '','CUSTOMER' TO CUSTOMER ELSE
      ERRMSG = 'CANNOT LOCATE CUSTOMER'; GOTO 93000
   END
   OPEN '','COA' TO COA ELSE
      ERRMSG = 'CANNOT LOCATE COA FILE'; GOTO 93000
   END
   OPEN '','CO.COA.BAL' TO CO.COA.BAL ELSE
      ERRMSG = 'CANNOT LOCATE CO.COA.BAL FILE'; GOTO 93000
   END
   OPEN '','DV.COA.BAL' TO DV.COA.BAL ELSE
      ERRMSG = 'CANNOT LOCATE DV.COA.BAL FILE'; GOTO 93000
   END
   OPEN '','DP.COA.BAL' TO DP.COA.BAL ELSE
      ERRMSG = 'CANNOT LOCATE DP.COA.BAL FILE'; GOTO 93000
   END
   OPEN '','CC.COA.BAL' TO CC.COA.BAL ELSE
      ERRMSG = 'CANNOT LOCATE CC.COA.BAL FILE'; GOTO 93000
   END
   OPEN '','JOB' TO JOB ELSE 
      ERRMSG = 'CANNOT LOCATE JOB FILE'; GOTO 93000
   END
*** GET COMPANY NAME   
   MAT COMP.REC = ''
   CONO = ""
   CALL GET.CONO(CONO,MAT COMP.REC)
   IF CONO = 'END' THEN GOTO 99999
*T27935 v
*  IF CO.GLS.HIST = "Y" THEN
   IF CO.GLS.HIST<1,1> = "Y" THEN
*T27935 ^
      OPEN '','GLH' TO GLH ELSE
         ERRMSG = 'CANNOT LOCATE GLH FILE'; GOTO 93000
      END
      OPEN '','GLHX' TO GLHX ELSE
         ERRMSG = 'CANNOT LOCATE GLHX FILE'; GOTO 93000
      END
   END
*
*--- MAIN PROCESS
*
   READ PERIOD.REC FROM CONTROL, CONO : "ACCT.PERIODS" ELSE
      PERIOD.REC = ""
      PERIOD.REC<1> = 12
   END
   NUM.PERIODS = PERIOD.REC<1>
*T20979 v
*     READ PRODUCTION.REC FROM CONTROL, CONO : "PRODUCTION.WEEKS" ELSE
*        PRODUCTION.REC = ""
*     END
*    NUM.PRODUCTION = DCOUNT(PRODUCTION.REC<1>,VM)
*T20979 ^
*
*** PRINT SCREEN   
   TODAY = DATE()
   MAT EDIT.COM.DRIVER = ''   
   ECD.SCRN.CNT = 1   
   ECD.SCRN.NAME<1> = "GLS.YE.CLOSE"
   ECD.ACTION=1;CALL SCRN.EDIT   
   ECD.SCRN.NO = 1
   MAT SCV.REC = ''
   ECD.ACTION = 2; CALL SCRN.EDIT
   MATREADU FISCAL.REC FROM CONTROL, CONO : "FISCALMON" ELSE
      ERRMSG = "YOU NEED TO CLOSE PERIOD ":NUM.PERIODS:" BEFORE CLOSING THE YEAR"
      GOSUB 91000
      ECD.ACTION = 99 ; CALL SCRN.EDIT
      GOTO 99999
   END
   IF FR.CURR.PER[5,2] <> 01 THEN
      ERRMSG = 'STARTING PERIOD FOR A NEW YEAR SHOULD BE 01'
      GOSUB 91000
      ECD.ACTION = 99 ; CALL SCRN.EDIT
      GOTO 99999
   END
   READ SALESDATES FROM CONTROL , CONO : "SALESDATES" ELSE
      ERRMSG = "CANNOT LOCATE CONTROL, SALESDATES"
      GOSUB 91000
      ECD.ACTION = 99 ; CALL SCRN.EDIT
      GOTO 99999
   END
   READU OPENDATES FROM CONTROL , CONO : "OPENDATES" ELSE
      ERRMSG = "CANNOT LOCATE CONTROL, OPENDATES"
      GOSUB 91000
      ECD.ACTION = 99 ; CALL SCRN.EDIT
      GOTO 99999
   END
   MATREAD GLTABLE.REC FROM CONTROL, CONO : "GLTABLE" ELSE
      GOSUB 91000
      ERRMSG = "CANNOT LOCATE CONTROL, GLTABLE"
      ECD.ACTION = 99 ; CALL SCRN.EDIT
      GOTO 99999
   END
   MATREAD COA.REC FROM COA,  CONO : GLTB.RET.EARN ELSE
      ERRMSG = "CANNOT LOCATE RETAINED EARNINGS ACCOUNT, ":GLTB.RET.EARN
      GOSUB 91000
      ECD.ACTION = 99 ; CALL SCRN.EDIT
      GOTO 99999
   END
   IF COA.TYPE # "O" THEN
      ERRMSG = "RETAINED EARNINGS ACCOUNT TYPE IS INVALID"
      GOSUB 91000
      ECD.ACTION = 99 ; CALL SCRN.EDIT
      GOTO 99999
   END
   R.E.LEVEL = COA.LEVEL
   BEGIN CASE
      CASE R.E.LEVEL > 2
         R.E.LEN = 10
         R.E.SUF = ""
      CASE R.E.LEVEL > 1
         R.E.LEN = 7
         R.E.SUF = "000"
      CASE R.E.LEVEL > 0
         R.E.LEN = 5
         R.E.SUF = "00000"
      CASE 1
         R.E.LEN = 3
         R.E.SUF = "0000000"
   END CASE
   R.E.PREFIX = ""
   R.E.AMT = ""
   FOR PER = 1 TO NUM.PERIODS
      OPENDATES<PER> = OCONV(OPENDATES<PER>,"D/")
      NEXT.YEAR = OPENDATES<PER>[7,4] + 1
      OPENDATES<PER> = OPENDATES<PER>[1,6] : NEXT.YEAR
      OPENDATES<PER> = ICONV(OPENDATES<PER>,"D/")
   NEXT PER
*T20979 v
*    FOR P = 1 TO NUM.PRODUCTION
*       PRODUCTION.REC<1,P> = OCONV(PRODUCTION.REC<1,P>,"D/")
*       NEXT.YEAR = PRODUCTION.REC<1,P>[7,4] + 1
*       IF NEXT.YEAR > 99 THEN
*          NEXT.YEAR = NEXT.YEAR[2,2]
*       END
*       PRODUCTION.REC<1,P> = PRODUCTION.REC<1,P>[1,6] : NEXT.YEAR
*       PRODUCTION.REC<1,P> = ICONV(PRODUCTION.REC<1,P>,"D/")
*    NEXT P
*T20979 ^
   SCV.REC(1)<1> = FR.CURR.PER[5,2]
   SCV.REC(2)<1> = SALESDATES<2,2>
   SCV.REC(3)<1> = OPENDATES<2> - 1
   SCV.REC(5)<1> = NUM.PERIODS
   SCV.REC(6)<1> = SALESDATES<NUM.PERIODS+1,2>
   TAPE.PER.ID = CONO : FR.CURR.PER[1,4] - 1 : "GLS.TAPE"
   READ TAPE.PERIOD FROM CONTROL, TAPE.PER.ID ELSE TAPE.PERIOD = ''
   IF TAPE.PERIOD<NUM.PERIODS> = '' THEN
      SCV.REC(4)<1> = "ENTERED"
      SCV.REC(7)<1> = TODAY
      NO.CLOSE = 1
   END ELSE
      SCV.REC(4)<1> = "CLOSED"
      SCV.REC(7)<1> = TAPE.PERIOD<NUM.PERIODS>
      NO.CLOSE = 0
   END
   ECD.SUB.SUM = 1; ECD.ACTION = 3; CALL SCRN.EDIT
   IN.ACCT.LEN = LEN(CO.ACCT.PIC)
*** ENTER OPTIONS   
   MORE = 1
   LOOP
      ECD.NUM = 8; SCV.REC(ECD.NUM)<ECD.SCRN.NO> = ""
      ECD.ACTION=4;CALL SCRN.EDIT
      OPTION = ECD.RET.VALUE
      BEGIN CASE
         CASE OPTION = 'END' OR OPTION = 'E'
            MORE = 0
         CASE OPTION = 'C' AND NO.CLOSE
            ERRMSG = 'CANNOT CLOSE YEAR BEFORE FILE BACKUP PROCESS'
            GOSUB 91000
         CASE OPTION = 'C'
            MORE = 0
            P_X  = 3 ; P_Y = 23 ; P_VALUE = 'NOW CLEARING CO.COA.BAL FILE' ; P_OPT = "CL"
            CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
            SELECT CO.COA.BAL
            DATA = 1
            LOOP
               READNEXT CO.ID ELSE DATA = 0
            WHILE DATA DO
               IF CONO <> CO.ID[1,3] THEN GOTO 199
               MATREADU CB.REC FROM CO.COA.BAL, CO.ID ELSE
                  RELEASE CO.COA.BAL, CO.ID
                  GOTO 199
               END
               DELETE CO.COA.BAL, CO.ID
199         REPEAT
            P_X  = 3 ; P_Y = 23 ; P_VALUE = 'NOW CLEARING DV.COA.BAL FILE' ; P_OPT = "CL"
            CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
            SELECT DV.COA.BAL
            DATA = 1
            LOOP
               READNEXT DV.ID ELSE DATA = 0
            WHILE DATA DO
               IF CONO <> DV.ID[1,3] THEN GOTO 299
               MATREADU CB.REC FROM DV.COA.BAL, DV.ID ELSE
                  RELEASE DV.COA.BAL, DV.ID
                  GOTO 299
               END
               DELETE DV.COA.BAL, DV.ID
299         REPEAT
            P_X  = 3 ; P_Y = 23 ; P_VALUE = 'NOW CLEARING DP.COA.BAL FILE' ; P_OPT = "CL"
            CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
            SELECT DP.COA.BAL
            DATA = 1
            LOOP
               READNEXT DP.ID ELSE DATA = 0
            WHILE DATA DO
               IF CONO <> DP.ID[1,3] THEN GOTO 399
               MATREADU CB.REC FROM DP.COA.BAL, DP.ID ELSE
                  RELEASE DP.COA.BAL, DP.ID
                  GOTO 399
               END
               DELETE DP.COA.BAL, DP.ID
399         REPEAT
            P_X  = 3 ; P_Y = 23 ; P_VALUE = 'NOW PROCESSING ALL COA.BAL FILES' ; P_OPT = "CL"
            CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
            SELECT CC.COA.BAL
            DATA = 1
            LOOP
               READNEXT CC.ID ELSE DATA = 0
            WHILE DATA DO
               IF CC.ID[1,3] <> CONO THEN GOTO 599
               DP.ID = CC.ID[1,7] : CC.ID[11,IN.ACCT.LEN]
               DV.ID = CC.ID[1,5] : CC.ID[11,IN.ACCT.LEN]
               CO.ID = CC.ID[1,3] : CC.ID[11,IN.ACCT.LEN]
               MATREAD COA.REC FROM COA, CO.ID ELSE GOTO 599
               MATREADU CB.REC FROM CC.COA.BAL, CC.ID ELSE
                  RELEASE CC.COA.BAL, CC.ID
                  GOTO 599
               END
               CB.REC(1) = ""
               CB.REC(2) = ""
               DEL.FLAG = 1
               FOR PER = 3 TO 55
                  IF CB.REC(PER) + 0 <> 0 THEN DEL.FLAG = 0
                  CB.REC(PER + 53) = CB.REC(PER)
                  CB.REC(PER) = ''
               NEXT PER
               IF DEL.FLAG THEN
                  DELETE CC.COA.BAL, CC.ID
                  GOTO 599
               END
               IF COA.TYPE = "E" OR COA.TYPE = "I" THEN
                  R.E.ID = CC.ID[1,R.E.LEN] : R.E.SUF
                  LOCATE R.E.ID IN R.E.PREFIX,1 SETTING FND ELSE
                     R.E.PREFIX<FND> = R.E.ID
                     R.E.AMT<FND> = 0
                  END
                  R.E.AMT<FND> = R.E.AMT<FND> + CB.REC(108)
               END ELSE
                  CB.REC(3) = CB.REC(108)
               END
               FOR PER = 109 TO CB.REC.SIZE
                  CB.REC(PER) = ''
               NEXT PER
               MATREADU MCB.REC FROM DP.COA.BAL, DP.ID ELSE MAT MCB.REC = ""
               MCB.REC(3) = MCB.REC(3) + CB.REC(3)
               FOR PER = 56 TO 108
                  MCB.REC(PER) = MCB.REC(PER) + CB.REC(PER)
               NEXT PER
               MATWRITE MCB.REC ON DP.COA.BAL, DP.ID
               MATREADU MCB.REC FROM DV.COA.BAL, DV.ID ELSE MAT MCB.REC = ""
               MCB.REC(3) = MCB.REC(3) + CB.REC(3)
               FOR PER = 56 TO 108
                  MCB.REC(PER) = MCB.REC(PER) + CB.REC(PER)
               NEXT PER
               MATWRITE MCB.REC ON DV.COA.BAL, DV.ID
               MATREADU MCB.REC FROM CO.COA.BAL, CO.ID ELSE MAT MCB.REC = ""
               MCB.REC(3) = MCB.REC(3) + CB.REC(3)
               FOR PER = 56 TO 108
                  MCB.REC(PER) = MCB.REC(PER) + CB.REC(PER)
               NEXT PER
               MATWRITE MCB.REC ON CO.COA.BAL, CO.ID
               MATWRITE CB.REC ON CC.COA.BAL, CC.ID
599         REPEAT
            RCNT = COUNT(R.E.PREFIX,AM) + (R.E.PREFIX # "")
            CO.R.E.AMT = 0
            FOR R = 1 TO RCNT
               PREFIX = R.E.PREFIX<R>
               R.E.ID = PREFIX : GLTB.RET.EARN
               MATREADU CB.REC FROM CC.COA.BAL, R.E.ID ELSE
                  MAT CB.REC = ""
               END
               CB.REC(3) = CB.REC(3) + R.E.AMT<R>
               MATWRITE CB.REC ON CC.COA.BAL, R.E.ID
               R.E.ID = PREFIX[1,7] : GLTB.RET.EARN
               MATREADU CB.REC FROM DP.COA.BAL, R.E.ID ELSE
                  MAT CB.REC = ""
               END
               CB.REC(3) = CB.REC(3) + R.E.AMT<R>
               MATWRITE CB.REC ON DP.COA.BAL, R.E.ID
               R.E.ID = PREFIX[1,5] : GLTB.RET.EARN
               MATREADU CB.REC FROM DV.COA.BAL, R.E.ID ELSE
                  MAT CB.REC = ""
               END
               CB.REC(3) = CB.REC(3) + R.E.AMT<R>
               MATWRITE CB.REC ON DV.COA.BAL, R.E.ID
               CO.R.E.AMT = CO.R.E.AMT + R.E.AMT<R>
            NEXT R
            R.E.ID = CONO : GLTB.RET.EARN
            MATREADU CB.REC FROM CO.COA.BAL, R.E.ID ELSE
               MAT CB.REC = ""
            END
            CB.REC(3) = CB.REC(3) + CO.R.E.AMT
            MATWRITE CB.REC ON CO.COA.BAL, R.E.ID
*T27935 v
*           IF CO.GLS.HIST # "Y" THEN GOTO 900
            IF CO.GLS.HIST<1,1> # "Y" THEN GOTO 900
*T27935 ^
            P_X  = 3 ; P_Y = 23 ; P_VALUE = 'NOW CLEARING GLH FILE' ; P_OPT = "CL"
            CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
            DEL.MON = (FR.CURR.PER[1,4] - 3) : "01"
            SELECT GLH
            DATA = 1
            LOOP
               READNEXT GLH.ID ELSE DATA = 0
            WHILE DATA DO
               IF CONO <> GLH.ID[1,3] THEN GOTO 799
               MATREADU GLM.REC FROM GLH, GLH.ID ELSE
                  RELEASE GLH, GLH.ID
                  GOTO 799
               END
               IF GLM.MON < DEL.MON THEN
                  DELETE GLH, GLH.ID
               END ELSE
                  RELEASE GLH, GLH.ID
               END
799         REPEAT
            P_X  = 3 ; P_Y = 23 ; P_VALUE = 'NOW CLEARING GLHX FILE' ; P_OPT = "CL"
            CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
            SELECT GLHX
            DATA = 1
            LOOP
               READNEXT GLHX.ID ELSE DATA = 0
            WHILE DATA DO
               IF CONO <> GLHX.ID[1,3] THEN GOTO 899
               READU GLX.REC FROM GLHX, GLHX.ID ELSE
                  RELEASE GLHX, GLHX.ID
                  GOTO 899
               END
               GLHX.MON = GLHX.ID[LEN(GLHX.ID)-5,6]
               IF GLHX.MON < DEL.MON THEN
                  DELETE GLHX, GLHX.ID
               END ELSE
                  RELEASE GLHX, GLHX.ID
               END
899         REPEAT
*
900 *
*
            WRITE OPENDATES ON CONTROL, CONO : "OPENDATES"
            TAPE.PERIOD = ""
            WRITE TAPE.PERIOD ON CONTROL, CONO : FR.CURR.PER[1,4] : "GLS.TAPE"
            FR.CLOSE.DATE = TODAY
            MATWRITE FISCAL.REC ON CONTROL, CONO : "FISCAL"
            WRITEV 'OK' ON CONTROL, CONO:'GLS.BUD.CHK',1 ; * T26008
            DELETE CONTROL, CONO : "FISCALMON"
      END CASE
   WHILE MORE DO REPEAT
   ECD.ACTION = 99 ; CALL SCRN.EDIT
   GOTO 99999
*
*--- ERROR ROUTINE
*
91000 ERR.TYPE=1;CALL SYSCOM(MAT SYSCOM.REC);RETURN
93000*
99999*
   RELEASE
END
