************************************************************************
*
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - GLSBP
* PROGRAM     - GLS.BACKUP
* BY          - MONTY J. BRADFORD , Vercom Software, Inc.
* DATE        - 09/07/90
* DESCRIPTION - SAVES THE CURRENT MONTH G/L FILES TO GLS-BACKUP.
*
*     18573 5/95 LLH 1-52 ACCOUNTING PERIODS
*C24677 gat 1/9/96 FIX GLSBACKUP TO SIZE CORRECTLY
*T21177 diane 03/06/1997 * REV11 UPG Rewrite to use SCRN.EDIT
*T21177 diane 03/17/1997 * REV11 UPG Change to create files via unix
*T21911 diane 05/16/1997 * Set flag for menu processor
*T22737 lanny 04/10/1998 * After 1st unix dir copy subsequent backups do
*                          not add new data to backup files.
*T22737 diane 07/09/1998 * FIX so first backup will cp file.
************************************************************************
*
*---- COPY STATEMENTS
*
*COPY>CPYLIB>COM1
*COPY>PMC.CPYLIB>COMPANY
*COPY>PMC.CPYLIB>MENUS.CONTROL
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>CHAR
*
*---- INITIALIZE SYSCOM
*
   SYS.TYPE = 1
   CALL SYSCOM(MAT SYSCOM.REC)
*
*---- OPEN ALL FILES
*
   OPEN "","COMPANY" TO COMPANY ELSE
      ERRMSG = "CANNOT OPEN COMPANY FILE"
      GOTO 93000
   END
   OPEN "","CONTROL" TO CONTROL ELSE
      ERRMSG = "CANNOT OPEN CONTROL FILE"
      GOTO 93000
   END
   OPEN "","GLS.SCREENS" TO M.SCREENS ELSE
      ERRMSG = "CANNOT OPEN GLS.SCREENS FILE"
      GOTO 93000
   END
   OPEN "","VOC" TO VOC ELSE
      ERRMSG = "CANNOT OPEN VOC FILE"
      GOTO 93000
   END
   OPEN "","SECURITY" TO SECURITY ELSE
      ERRMSG = "CANNOT OPEN SECURITY FILE"
      GOTO 93000
   END
   OPEN "","COA" TO COA ELSE
      ERRMSG = "CANNOT OPEN COA FILE"
      GOTO 93000
   END
   OPEN "","CC.COA.BAL" TO CC.COA.BAL ELSE
      ERRMSG = "CANNOT OPEN CC.COA.BAL FILE"
      GOTO 93000
   END
   OPEN "","GLM" TO GLM ELSE
      ERRMSG = "CANNOT OPEN GLM FILE"
      GOTO 93000
   END
   OPEN "","CO.COA.BAL" TO CO.COA.BAL ELSE
      ERRMSG = "CANNOT OPEN CO.COA.BAL FILE"
      GOTO 93000
   END
   OPEN "","DP.COA.BAL" TO DP.COA.BAL ELSE
      ERRMSG = "CANNOT OPEN DP.COA.BAL FILE"
      GOTO 93000
   END
   OPEN "","DV.COA.BAL" TO DV.COA.BAL ELSE
      ERRMSG = "CANNOT OPEN DV.COA.BAL FILE"
      GOTO 93000
   END
*
*---- INITIALIZATION
   CONO = ""
   MAT COMP.REC = ""
   CALL GET.CONO (CONO, MAT COMP.REC)
   IF CONO = "END" THEN GOTO 99999
   PORT.NO = 'TTY'
   CALL SYSVARS.SUB(PORT.NO)
*
*---- INITIALIZE SCRN.EDIT
   MAT SCV.REC = ""
   MAT EDIT.COM.DRIVER = ""
   ECD.SCRN.CNT = 1
   ECD.SCRN.NAME = "GLS.BACKUP"
   ECD.ACTION=1; CALL SCRN.EDIT
   ECD.SCRN.NO = 1
   ESN = ECD.SCRN.NO
   ECD.ACTION=2; CALL SCRN.EDIT
   PROMPT ''
   READV PERIOD FROM CONTROL,CONO:'FISCAL',1 ELSE ERRMSG='PERIOD NOT AVAILABLE'; GOSUB 91000 ; GOTO 99990
*
*---- LOAD SCREEN DATA
100 *
   SCV.REC(1)<ESN> = CONO
   SCV.REC(2)<ESN> = CO.NAME
   SCV.REC(3)<ESN> = PERIOD
   ECD.ACTION=3; CALL SCRN.EDIT
*
*---- GET OPERATOR REPLY
500 *
   ECD.NUM = 10
   ECD.ACTION=4; CALL SCRN.EDIT
   OPT = ECD.RET.VALUE
510 *
   BEGIN CASE
      CASE OPT = "E" OR OPT = "END"
         GOTO 99990
      CASE OPT = "C"
         GOSUB 1000
         READU PROCESS.CONTROL FROM CONTROL,CONO:'GLS.BACKUP.RESTORE' THEN
            PROCESS.CONTROL = ''
            WRITE PROCESS.CONTROL ON CONTROL, CONO:'GLS.BACKUP.RESTORE'
         END ELSE
            RELEASE CONTROL, CONO:'GLS.BACKUP.RESTORE'
         END
         GOTO 99990
   END CASE
   GOTO 500
*
*---- CHECK CONTROL RECORD
1000 *
   READU TAPE.CONTROL FROM CONTROL,CONO:PERIOD[1,4]:'GLS.TAPE' ELSE
      RELEASE CONTROL, CONO:PERIOD[1,4]:"GLS.TAPE"
      ERRMSG='GLS.TAPE CONTROL RECORD NOT AVAILABLE'
      GOSUB 91000 ; GOTO 99990
   END
   READU PROCESS.CONTROL FROM CONTROL,CONO:'GLS.BACKUP.RESTORE' THEN
      IF PROCESS.CONTROL = 'R' THEN
         ERRMSG = 'GENERAL LEDGER RESTORE IN PROCESS'
         GOSUB 91000 ; GOTO 99990
      END
   END
   PROCESS.CONTROL = 'B'
   WRITE PROCESS.CONTROL ON CONTROL, CONO:'GLS.BACKUP.RESTORE'
*
*---- GET MODULOS FOR BACKUP FILES
*
   ID = "COA"
   GOSUB 4000
   COA.MOD = MODX
   ID = "CO.COA.BAL"
   GOSUB 4000
   CO.COA.MOD = MODX
   ID = "DV.COA.BAL"
   GOSUB 4000
   DV.COA.MOD = MODX
   ID = "DP.COA.BAL"
   GOSUB 4000
   DP.COA.MOD = MODX
   ID = "CC.COA.BAL"
   GOSUB 4000
   CC.COA.MOD = MODX
   ID = "GLM"
   GOSUB 4000
   GLM.MOD = MODX
*
*---- LOG TO GLS-BACKUP AND CREATE BACKUP FILES
*
   READ LOGIN.REC FROM VOC,'LOGIN' ELSE NULL
*
*---- Get menus control record
*
   MATREAD MENU.REC FROM CONTROL, "MENUS.CONTROL" ELSE
      ERRMSG = "** Cannot Locate CONTROL, MENUS.CONTROL **"
      GOSUB 91000; GOTO 99990
   END
   PMC.PATH = PRIMAC.PATH
   STMT =  "SETFILE ":PMC.PATH:"-GLS-BACKUP/VOC GLS-BACKUP-VOC":PORT.NO:" OVERWRITING"
   UDTEXECUTE STMT CAPTURING RESPONSE
   OPEN '',"GLS-BACKUP-VOC":PORT.NO TO VOC.GLS.BACKUP ELSE ERRMSG='GLS-BACKUP-VOC':PORT.NO:' CANNOT BE OPENED'; GOSUB 91000 ; GOTO 99990
*
*---- CREATE 'COPY' VOC ENTRIES AND POINT COPY FILE DICTIONARYS TO USER-GLS
*
   READ COA.D.ITEM FROM VOC.GLS.BACKUP,'COA':PERIOD ELSE NULL
   COA.D.ITEM="F"
   COA.D.ITEM<2>=PMC.PATH:"-GLS-BACKUP/":'COA':PERIOD
   COA.D.ITEM<3>=PMC.PATH:"-GLS-BACKUP/":'D_COA':PERIOD
   READ CO.COA.D.ITEM FROM VOC.GLS.BACKUP,'CO.COA':PERIOD ELSE NULL
   CO.COA.D.ITEM="F"
   CO.COA.D.ITEM<2>=PMC.PATH:"-GLS-BACKUP/":'CO.COA':PERIOD
   CO.COA.D.ITEM<3>=PMC.PATH:"-GLS-BACKUP/":'D_CO.COA':PERIOD
   READ DV.COA.D.ITEM FROM VOC.GLS.BACKUP,'DV.COA':PERIOD ELSE NULL
   DV.COA.D.ITEM="F"
   DV.COA.D.ITEM<2>=PMC.PATH:"-GLS-BACKUP/":'DV.COA':PERIOD
   DV.COA.D.ITEM<3>=PMC.PATH:"-GLS-BACKUP/":'D_DV.COA':PERIOD
   READ DP.COA.D.ITEM FROM VOC.GLS.BACKUP,'DP.COA':PERIOD ELSE NULL
   DP.COA.D.ITEM="F"
   DP.COA.D.ITEM<2>=PMC.PATH:"-GLS-BACKUP/":'DP.COA':PERIOD
   DP.COA.D.ITEM<3>=PMC.PATH:"-GLS-BACKUP/":'D_DP.COA':PERIOD
   READ CC.COA.D.ITEM FROM VOC.GLS.BACKUP,'CC.COA':PERIOD ELSE NULL
   CC.COA.D.ITEM="F"
   CC.COA.D.ITEM<2>=PMC.PATH:"-GLS-BACKUP/":'CC.COA':PERIOD
   CC.COA.D.ITEM<3>=PMC.PATH:"-GLS-BACKUP/":'D_CC.COA':PERIOD
   READ GLM.D.ITEM FROM VOC.GLS.BACKUP,'GLM':PERIOD ELSE NULL
   GLM.D.ITEM="F"
   GLM.D.ITEM<2>=PMC.PATH:"-GLS-BACKUP/":'GLM':PERIOD
   GLM.D.ITEM<3>=PMC.PATH:"-GLS-BACKUP/":'D_GLM':PERIOD
*
*---- LOG TO USER-GLS AND COPY TO THE BACKUP FILES
*
   WRITE COA.D.ITEM ON VOC,'COA':PERIOD: PORT.NO
   WRITE CO.COA.D.ITEM ON VOC,'CO.COA':PERIOD: PORT.NO
   WRITE DV.COA.D.ITEM ON VOC,'DV.COA':PERIOD: PORT.NO
   WRITE DP.COA.D.ITEM ON VOC,'DP.COA':PERIOD: PORT.NO
   WRITE CC.COA.D.ITEM ON VOC,'CC.COA':PERIOD: PORT.NO
   WRITE GLM.D.ITEM ON VOC,'GLM':PERIOD: PORT.NO
   WRITE COA.D.ITEM ON VOC,'COA':PERIOD
   WRITE CO.COA.D.ITEM ON VOC,'CO.COA':PERIOD
   WRITE DV.COA.D.ITEM ON VOC,'DV.COA':PERIOD
   WRITE DP.COA.D.ITEM ON VOC,'DP.COA':PERIOD
   WRITE CC.COA.D.ITEM ON VOC,'CC.COA':PERIOD
   WRITE GLM.D.ITEM ON VOC,'GLM':PERIOD
   READ VREC FROM VOC, 'GLS.BACKUP.':PERIOD:'.WORK':PORT.NO THEN
      STMT = 'CLEAR.FILE GLS.BACKUP.':PERIOD:'.WORK':PORT.NO
      UDTEXECUTE STMT CAPTURING RESPONSE
   END ELSE
      STMT =  'CREATE.FILE GLS.BACKUP.':PERIOD:'.WORK':PORT.NO:' 200 DYNAMIC'
      UDTEXECUTE STMT CAPTURING RESPONSE
   END
   OPEN 'GLS.BACKUP.':PERIOD:'.WORK':PORT.NO TO CFILE ELSE
      ERRMSG="CANNOT OPEN GLS.BACKUP.":PERIOD:'.WORK':PORT.NO
      GOSUB 91000 ; GOTO 99990
   END
   OPEN 'DICT','GLS.BACKUP.':PERIOD:'.WORK':PORT.NO TO DICT.CFILE ELSE
      ERRMSG="CANNOT OPEN GLS.BACKUP.":PERIOD:'.WORK':PORT.NO
      GOSUB 91000 ; GOTO 99990
   END
   P_X = 3 ; P_Y = 23 ; P_VALUE = 'COPYING FILE COA TO BACKUP FILE COA':PERIOD ; P_OPT = "CL"
   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   OPEN 'COA' TO MFILE ELSE NULL
   FILE.NAME='COA'
   TO.FILE.NAME='COA'
   GOSUB 3000
   OPEN 'DICT','COA' TO MFILE ELSE NULL
   GOSUB 3100
   P_X = 3 ; P_Y = 23 ; P_VALUE = 'COPYING FILE CO.COA.BAL TO BACKUP FILE CO.COA':PERIOD ; P_OPT = "CL"
   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   OPEN 'CO.COA.BAL' TO MFILE ELSE NULL
   FILE.NAME='CO.COA.BAL'
   TO.FILE.NAME='CO.COA'
   GOSUB 3000
   OPEN 'DICT','CO.COA.BAL' TO MFILE ELSE NULL
   GOSUB 3100
   P_X = 3 ; P_Y = 23 ; P_VALUE = 'COPYING FILE DV.COA.BAL TO BACKUP FILE DV.COA':PERIOD ; P_OPT = "CL"
   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   OPEN 'DV.COA.BAL' TO MFILE ELSE NULL
   FILE.NAME='DV.COA.BAL'
   TO.FILE.NAME='DV.COA'
   GOSUB 3000
   OPEN 'DICT','DV.COA.BAL' TO MFILE ELSE NULL
   GOSUB 3100
   P_X = 3 ; P_Y = 23 ; P_VALUE = 'COPYING FILE DP.COA.BAL TO BACKUP FILE DP.COA':PERIOD ; P_OPT = "CL"
   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   OPEN 'DP.COA.BAL' TO MFILE ELSE NULL
   FILE.NAME='DP.COA.BAL'
   TO.FILE.NAME='DP.COA'
   GOSUB 3000
   OPEN 'DICT','DP.COA.BAL' TO MFILE ELSE NULL
   GOSUB 3100
   P_X = 3 ; P_Y = 23 ; P_VALUE = 'COPYING FILE CC.COA.BAL TO BACKUP FILE CC.COA':PERIOD ; P_OPT = "CL"
   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   OPEN 'CC.COA.BAL' TO MFILE ELSE NULL
   FILE.NAME='CC.COA.BAL'
   TO.FILE.NAME='CC.COA'
   GOSUB 3000
   OPEN 'DICT','CC.COA.BAL' TO MFILE ELSE NULL
   GOSUB 3100
   P_X = 3 ; P_Y = 23 ; P_VALUE = 'COPYING FILE GLM TO BACKUP FILE GLM':PERIOD
   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   OPEN 'GLM' TO MFILE ELSE NULL
   FILE.NAME='GLM'
   TO.FILE.NAME='GLM'
   GOSUB 3000
   OPEN 'DICT','GLM' TO MFILE ELSE NULL
   GOSUB 3100
   DELETE VOC,'COA':PERIOD:PORT.NO
   DELETE VOC,'CO.COA':PERIOD:PORT.NO
   DELETE VOC,'DV.COA':PERIOD:PORT.NO
   DELETE VOC,'DP.COA':PERIOD:PORT.NO
   DELETE VOC,'CC.COA':PERIOD:PORT.NO
   DELETE VOC,'GLM':PERIOD:PORT.NO
   DELETE VOC, "GLS-BACKUP-VOC":PORT.NO
   STMT =  'DELETE.FILE GLS.BACKUP.':PERIOD:'.WORK':PORT.NO
   DATA "Y"
   UDTEXECUTE STMT CAPTURING JUNK
   TAPE.CONTROL<PERIOD[5,2]> = DATE()
   WRITE TAPE.CONTROL ON CONTROL, CONO:PERIOD[1,4]:"GLS.TAPE"
   READU EOM.FLG FROM CONTROL, CONO:"EOM.FLG" ELSE EOM.FLG = ""
   EOM.FLG = "Y"
   WRITE EOM.FLG ON CONTROL, CONO:"EOM.FLG"
   RETURN
3000 * COPY FILE LOGIC *
   STMNT = "CLEAR.FILE GLS.BACKUP.":PERIOD:".WORK":PORT.NO
   UDTEXECUTE STMNT CAPTURING RESPONSE
*T22737 v
   STMT = 'COUNT ':TO.FILE.NAME:PERIOD
   UDTEXECUTE STMT CAPTURING JUNK
*T22737 FIX   IF JUNK[1,3] = 'Not' THEN
   IF JUNK[1,3] = 'Not' OR JUNK[1,4] = "stat" THEN
      STMNT = "SELECT ":FILE.NAME:" WITH @ID LIKE ":CONO:"..."
      UDTEXECUTE STMNT CAPTURING RESPONSE
3010  READNEXT ID ELSE GOTO 3020
      READU REC FROM MFILE, ID ELSE REC=''
      WRITE REC ON CFILE, ID
      RELEASE  MFILE, ID
      GOTO 3010
3020   *
      STMT = "!cp -r ":PMC.PATH:"/GLS.BACKUP.":PERIOD:".WORK":PORT.NO
      STMT := " ":PMC.PATH:"-GLS-BACKUP/":TO.FILE.NAME:PERIOD
      UDTEXECUTE STMT CAPTURING RESPONSE
   END ELSE
      STMT = "SELECT ":FILE.NAME:" WITH @ID LIKE ":CONO:"..."
      UDTEXECUTE STMT CAPTURING JUNK
      DATA 'Y'
      STMT = 'COPY FROM ':FILE.NAME:' TO ':TO.FILE.NAME:PERIOD:' OVERWRITING'
      UDTEXECUTE STMT CAPTURING JUNK
   END
   RETURN
3100 * COPY DICT LOGIC *
   STMNT = "CLEAR.FILE DICT GLS.BACKUP.":PERIOD:".WORK":PORT.NO
   UDTEXECUTE STMNT CAPTURING RESPONSE
   STMNT = "SELECT DICT ":FILE.NAME
   UDTEXECUTE STMNT CAPTURING RESPONSE
3110 READNEXT ID ELSE GOTO 3120
   READU REC FROM MFILE, ID ELSE REC=''
   WRITE REC ON DICT.CFILE, ID
   RELEASE MFILE, ID
   GOTO 3110
3120 *
   STMT = "!cp -r ":PMC.PATH:"/D_GLS.BACKUP.":PERIOD:".WORK":PORT.NO
   STMT := " ":PMC.PATH:"-GLS-BACKUP/D_":TO.FILE.NAME:PERIOD
   UDTEXECUTE STMT CAPTURING RESPONSE
   RETURN
4000 *
   VERB = "FILE-STAT ":ID
   UDTEXECUTE VERB CAPTURING JUNK
   FROMSIZE = INT(TRIM(FIELD(JUNK<2>,"=",2)))
   TOSIZE   = INT(TRIM(FIELD(JUNK<25>,"=",2)))
   IF TOSIZE = "0" OR TOSIZE = "" THEN
      MODX = FROMSIZE
   END ELSE
      MODX = TOSIZE
   END
   RETURN
*
*---- ERROR ROUTINE
*
91000 ERR.TYPE=1; CALL SYSCOM(MAT SYSCOM.REC); RETURN
92000 ERR.TYPE=2; CALL SYSCOM(MAT SYSCOM.REC); RETURN
93000 ERR.TYPE=3; CALL SYSCOM(MAT SYSCOM.REC)
   GOTO 99999
*
99990 *
   ECD.ACTION = 99 ; CALL SCRN.EDIT
99999*
END
