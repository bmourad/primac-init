FOR R=1 TO RCNT
   ERRMSG="" ; INAH.SEQ.ARR=''
   RECP.NO=RECP.ARR<1,R>
   INVR.ID=CONO:RECP.NO
   IF ADJ.COST<1,R> # '' THEN 
      MATREADU INVR.REC FROM INV_RECEIPTS,INVR.ID THEN
         ;* receipts could have been transfered to multiple warehouses
         ;* that is why ICS.IWH.SUB is called multiple times
         ;* for every prod/whse combination
         ;* receipt has to be adjusted in all warehouses
         WHSE.CNT=DCOUNT(INV.WHSE.CODE,VM)                  
         FOR W=1 TO WHSE.CNT                                
            WHSE = INV.WHSE.CODE<1,W>
            IRW.ID=CONO:RECP.NO:"!":WHSE
            MATREADU IRW.REC FROM INV_RECP_WHSE,IRW.ID THEN
               IWH.ID=CONO:PROD:"!":WHSE
               MATREADU IWH.REC FROM INV.WHSE,IWH.ID THEN
                  LOCATE RECP.NO IN IWH.RECP.NO<1> SETTING RIDX THEN
                     MAT INAH.REC=''
                     INAH.PROD=PROD
                     INAH.WHSE=WHSE
                     MAT HOLD.IRW.REC=MAT IRW.REC
                     MAT HOLD.INVR.REC=MAT INVR.REC
                     ACTION=1;*build INV.WHSE fifo buckets
                     TMP.CNT='' ; LAST='' ; TMP.ARR=''
                     PERIOD='' ; *include future posted receipts too. 
*T27990       CALL ICS.IWH.SUB (CONO,PERIOD,TMP.ARR,TMP.CNT,LAST,ACTION,OPEN.FLAG)
                     CALL ICS.IWH.SUB (CONO,PERIOD,TMP.ARR,TMP.CNT,LAST,ACTION,OPEN.FLAG,ERRMSG)
                     MAT IRW.REC= MAT HOLD.IRW.REC
                     MAT INVR.REC=MAT HOLD.INVR.REC
                     JLOC=0
                     ORIG=IWH.ORG.FI<1,RIDX>
                     AVAIL= IWH.QTY.FI<1,RIDX>
                     USED=ORIG - IWH.QTY.FI<1,RIDX>
                     RESV=IWH.QTY.FI<1,RIDX>-IWH.RSV.FI<1,RIDX>
                     OLD.DCOST=0;NEW.DCOST=0
                     ISTAT.ID=CONO:PROD:"!":WHSE
                     MATREADU INV.STAT.REC FROM INV.STATS,ISTAT.ID ELSE MAT INV.STAT.REC=''
                     EOL=0
                     LOOP
                        MATREADU ICA.REC FROM INV.COST.ADJ,CONO:ICA.SEQ THEN
                           RELEASE INV.COST.ADJ,CONO:ICA.SEQ
                           ICA.SEQ+=1
                        END ELSE
                           MAT ICA.REC='' ; EOL=1
                        END
                     UNTIL (EOL) DO REPEAT
                     IF RESV#0 OR USED#0 THEN 
                        JOB.CNT=DCOUNT(ISTAT.JOB,VM)
                        IF JOB.CNT>0 THEN 
                           UPD=0
                           FOR J=1 TO JOB.CNT UNTIL ERRMSG # ""
                              JOB.NO=ISTAT.JOB<1,J>
                              IJS.ID=CONO:PROD:"!":WHSE:"!":JOB.NO
                              MATREADU INV.JS.REC FROM INV.JOB.STATS,IJS.ID ELSE
                                 MAT INV.JS.REC=""
                              END
                              MATREADU JOB.REC FROM JOB, CONO:JOB.NO THEN
                                 P=1
                                 LOOP
                                    LOCATE PROD IN JOB.RESV.MATL<1>,P SETTING PFND ELSE PFND=0
                                    BEGIN CASE
                                       CASE PFND=0
                                       CASE JOB.RESV.WHSE<1,PFND> # WHSE
                                          P=PFND+1
                                       CASE 1
                                          P=0
                                    END CASE
                                 WHILE P AND PFND DO REPEAT
                                 IF PFND=0 THEN
                                    ERRMSG='CANNOT LOCATE PRODUCT IN JOB # ':JOB.NO
                                    GOSUB 91000
                                 END ELSE
                                    GOSUB CHECK.QTYS
                                    IF ERRMSG='' THEN
                                       JLOC=JLOC+1
                                       ILOC=0
                                       ICA.JOB<1,JLOC>=JOB.NO
                                       ICA.RSV.QTY<1,JLOC>=0
                                       ICA.ORSV.COST<1,JLOC>=0
                                       ICA.NRSV.COST<1,JLOC>=0
                                       ICA.USD.QTY<1,JLOC>=0
                                       ICA.TRAN<1,JLOC>=""
                                       ICA.TRAN.QTY<1,JLOC>=""
                                       ICA.OLD.COST<1,JLOC>=""
                                       ICA.NEW.COST<1,JLOC>=""
                                       UPD=1
                                       IF USD.QTY <> 0 THEN GOSUB 11000 ELSE GOSUB 12000
                                    END
                                 END
                              END ELSE
                                 ERRMSG='CANNOT LOCATE JOB # ':JOB.NO
                                 GOSUB 91000
                              END
                              IF ERRMSG # "" AND UPD=0 THEN
                                 RELEASE INV.JOB.STATS , CONO:PROD:'!':WHSE:'!':JOB.NO
                                 RELEASE JOB, CONO:JOB.NO
                                 RELEASE INV_AUDIT_HIST,INAH.ID
                              END ELSE
                                 MATWRITE JOB.REC ON JOB, CONO:JOB.NO
                                 MATWRITE INV.JS.REC ON INV.JOB.STATS,IJS.ID
                              END
                           NEXT J
                        END
                     END
                     IF ERRMSG#'' AND UPD=0 THEN
                        NULL
                     END ELSE
                        ICA.PROD=PROD
                        ICA.WHSE=WHSE
                        ICA.PO=INVR.PO
                        ICA.VEND=INVR.VEND
                        ICA.QTY=AVAIL
                        ICA.REC.DATE=INVR.ENT.DATE
                        ICA.ADJ.DATE=TODAY
                        ICA.REC.COST=INVR.UNIT.COST
                        ICA.ADJ.COST=ADJ.COST<1,R>
                        ICA.RECP.NO=RECP.ARR<1,R>
                        ICA.PERIOD=ADJ.PERIOD<1,R>
*                OLD.COST=CALC.EXT.COST(ORIG,INVR.UNIT.COST,INV.COST.WT,.5)
*                NEW.COST=CALC.EXT.COST(ORIG,ADJ.COST<1,R>,INV.COST.WT,.5)
                        OLD.COST=CALC.EXT.COST(AVAIL,INVR.UNIT.COST,INV.COST.WT,.5)
                        NEW.COST=CALC.EXT.COST(AVAIL,ADJ.COST<1,R>,INV.COST.WT,.5)
                        DIFF.COST=NEW.COST - OLD.COST
                        IWH.INPRCS.AMT=IWH.INPRCS.AMT - OLD.DCOST+NEW.DCOST
                        ;*
                        ;*
                        MAT INAH.REC=''
                        INAH.SEQ=GET.INAH.SEQ(CONO,CONTROL,INV_AUDIT_HIST)
                        INAH.ID=CONO:INAH.SEQ
                        INAH.SEQ.ARR<1,-1>=INAH.SEQ
                        INAH.PROD=PROD
                        INAH.WHSE=WHSE
                        INAH.TYPE='A'
                        INAH.PROD=PROD
                        INAH.WHSE=WHSE
                        INAH.DATE=TODAY
                        INAH.PERIOD=ADJ.PERIOD<1,R>
                        INAH.RECP.NO=RECP.ARR<1,R>
                        INAH.QTY=0
                        INAH.UNIT.COST=ADJ.COST<1,R>
                        INAH.EXT.COST=(NEW.COST-OLD.COST)+(TOT.NEW.COST-TOT.OLD.COST)
                        INAH.ACCT=CATG.INV
                        IF WHS.DIV='' THEN WHS.DIV=GEN.DIV
                        INAH.DV.DP.CC=WHS.DIV:GEN.DEPT:GEN.CCTR
                        INAH.SRC='IC'
                        INAH.SYS.DATE=TODAY;INAH.SYS.TIME=TIME()
                        INAH.OPER.ID=@LOGNAME
                        INAH.TRAN=ICA.SEQ
                        ;*
                        IF INVR.PO.ACCR='Y' THEN
                           GOSUB UPD.ACCRUE
                        END ELSE
                           INAH.ADJ.ACCT=CATG.ADJ
                        END
                        INAH.TRAN=ICA.SEQ 
                        MATWRITE INAH.REC ON INV_AUDIT_HIST,INAH.ID
                        WRITE '' ON INV_AUDIT_TAG,INAH.ID
                        ;*
                        ;* update receipt with INAH.SEQ
                        ;*
                        INVR.AUDIT.NO<1>=INVR.AUDIT.NO<1>:VM:INAH.SEQ.ARR
                        ;*
                        ;*update serials with INAH.SEQ
                        ;*
                        SCNT=DCOUNT(IRW.SERIAL.NO,VM)
                        FOR S=1 TO SCNT
                           ISTK.ID=CONO:IRW.SERIAL.NO<1,S>
                           IF RECORDLOCKED(INV_SERIAL_TEMP,ISTK.ID)=0 THEN
                              DELETE INV_SERIAL_TEMP,ISTK.ID
                           END
                           MATREADU ISTK.REC FROM INV_SERIAL_TEMP,ISTK.ID ELSE
                              MATREADU ISTK.REC FROM INV_SERIAL,ISTK.ID THEN
                                 ISTK.AUDIT.NO<1>=ISTK.AUDIT.NO:VM:INAH.SEQ.ARR
                                 ISTK.UNIT.COST=ADJ.COST<1,R>
                                 MATWRITE ISTK.REC ON INV_SERIAL,ISTK.ID
                              END
                           END
                        NEXT S
                        ;*                                              
                        ;* Update INV_RECP_WHSE with unit cost          
                        ;* unit cost has to be updated in all warehouses
                        ;* in which this receipt exists (transfers)     
                        IRW.UNIT.COST = ADJ.COST<1,R>
                        MATWRITE IRW.REC ON INV_RECP_WHSE,IRW.ID
                        ;*
                        ;* Update VEND.STATS
                        ;*
                        IF CO.APS.R.INTRF >= 2 THEN
                           GOSUB UPD.VEND.STATS
                        END
                        MATWRITE ICA.REC ON INV.COST.ADJ, CONO : ICA.SEQ
                        WRITE ICA.SEQ ON CONTROL, CONO : 'INV.COST.ADJ'
                        RELEASE INV.STATS, CONO:PROD:'!':WHSE
                        ICA.SEQ=ICA.SEQ+1
                        IWH.COST.FI<1,RIDX>=ADJ.COST<1,R>
                        IF INAH.PERIOD=CUR.PERIOD THEN
                           CALL INV.AVG.COST.MAINT(MAT IWH.REC,INV.COST.WT,CUR.PERIOD)
                        END
                        GOSUB CLEAR.FI.BUCKETS
                        MATWRITEU IWH.REC ON INV.WHSE,IWH.ID
                     END
                  END
               END
            END
         NEXT W                                             
         INVR.UNIT.COST=ADJ.COST<1,R>
         MATWRITE INVR.REC ON INV_RECEIPTS,INVR.ID
      END ELSE
         ERRMSG='Receipt # ':RECP.NO:' is not on file.'
         GOSUB 91000
      END
   END
NEXT R
RETURN
*
*************
CHECK.QTYS: 
*************
*
DCNT=DCOUNT(JOB.MT.DEPT,VM)
RSV.QTY=0
USD.QTY=0
FI.CNT=DCOUNT(IJS.RECP.NO,VM)
FOR K=1 TO FI.CNT UNTIL ERRMSG # ""
   IF IJS.RECP.NO<1,K>=RECP.NO THEN
      RSV.QTY=RSV.QTY+IJS.FI.QTY<1,K>
      QTY=IJS.FI.ORG<1,K> - IJS.FI.QTY<1,K>
      TCNT=DCOUNT(IJS.JMT.QTY<1,K>,SVM)
      MATCH.QTY=0
      FOR T=1 TO TCNT UNTIL ERRMSG # ""
         SEQ.NO=IJS.JMT.SEQ<1,K,T>
         DPNO=FIELD(SEQ.NO,"!",1)
         CCNO=FIELD(SEQ.NO,"!",2)
         SEQ.NO=FIELD(SEQ.NO,"!",3)
         JMT.ID=CONO:JOB.NO:"!":DPNO:"!":CCNO:"!"
         JMT.ID=JMT.ID:PROD:"!":WHSE:"!":SEQ.NO
         READ DUMMY FROM JOB.MATL, JMT.ID THEN
            PTR=1
            LOOP
               LOCATE DPNO IN JOB.MT.DEPT<1>,PTR SETTING DFND ELSE DFND=0
               BEGIN CASE
                  CASE DFND=0
                     PTR=0
                  CASE CCNO # JOB.MT.CCTR<1,DFND>
                     PTR=DFND+1
                  CASE PROD # JOB.MT.PROD<1,DFND>
                     PTR=DFND+1
                  CASE WHSE # JOB.MT.WHSE<1,DFND>
                     PTR=DFND+1
                  CASE JOB.MT.SEQ<1,DFND> < SEQ.NO
                     PTR=0; DFND=0
                  CASE 1
                     PTR=0
               END CASE
            WHILE PTR DO REPEAT
            IF DFND=0 THEN
               ERRMSG='CANNOT LOCATE JOB.MATL ':SEQ.NO:' IN JOB ':JOB.NO
            END ELSE
               MATCH.QTY+=IJS.JMT.QTY<1,K,T>
            END
         END ELSE
            ERRMSG='CANNOT LOCATE JOB.MATL # ':SEQ.NO
         END
      NEXT T
      IF ERRMSG='' THEN
         IF MATCH.QTY <> QTY THEN
            ERRMSG='MISMATCH FOR USED QTY '
            TMP=CALC.STK.QTY(QTY,MAT INV.CNV.REC,'','')
            TMP=OCONV(TMP,ICR.CNV)
            ERRMSG:=TMP
            ERRMSG:= ' AND '
            TMP=CALC.STK.QTY(MATCH.QTY,MAT INV.CNV.REC,'','')
            TMP=OCONV(TMP,ICR.CNV)
            ERRMSG:=TMP
         END ELSE
            USD.QTY=USD.QTY+QTY
         END
      END
   END
NEXT K
IF ERRMSG='' THEN
   BEGIN CASE
      CASE RSV.QTY > RESV
         ERRMSG='RESERVE QTY MISMATCH, '
         TMP=CALC.STK.QTY(RSV.QTY,MAT INV.CNV.REC,'','')
         TMP=OCONV(TMP,ICR.CNV)
         ERRMSG:=TMP
         ERRMSG:= ' AND '
         TMP=CALC.STK.QTY(RESV,MAT INV.CNV.REC,'','')
         TMP=OCONV(TMP,ICR.CNV)
         ERRMSG:=TMP
      CASE USD.QTY > USED
         ERRMSG='USED QTY MISMATCH, '
         TMP=CALC.STK.QTY(USD.QTY,MAT INV.CNV.REC,'','')
         TMP=OCONV(TMP,ICR.CNV)
         ERRMSG:=TMP
         ERRMSG:= ' AND '
         TMP=CALC.STK.QTY(USED,MAT INV.CNV.REC,'','')
         TMP=OCONV(TMP,ICR.CNV)
         ERRMSG:=TMP
   END CASE
END
RETURN
*
*******************
UPD.ACCRUE: 
********************
*
* Upate Accrued Liability History
*
INAH.ACCR.ACCT=CATG.ACCRU.LIAB
READU ALH.CT FROM CONTROL,CONO:"ALHCOUNTER" ELSE ALH.CT=0
ALH.CT=ALH.CT+1
IF ALH.CT > 999999 THEN ALH.CT=1
WRITE ALH.CT ON CONTROL,CONO:"ALHCOUNTER"
MAT ALH.REC=""
ALH.ID=CONO:STR("0",6-LEN(ALH.CT)):ALH.CT
ALH.DATE=INAH.DATE
ALH.REF='R*':INVR.PO:"*":INVR.PROD
ALH.SRC=INAH.SRC
ALH.MON=INAH.PERIOD
ALH.AMT=0-INAH.EXT.COST
*lross 10-24-02 ALH.ACCT=INAH.ACCT
ALH.ACCT=INAH.ACCR.ACCT
ALH.DV.DP.CC=INAH.DV.DP.CC
MATWRITE ALH.REC ON ACCRUED.LIAB.HIST,ALH.ID
RETURN
*
********************
UPD.VEND.STATS: 
********************
*
OLD.UN.COST=IWH.COST.FI<1,R>
NEW.UN.COST=ADJ.COST<1,R>
*COPY>ICSBP>RECP.COST.ADJ.STATS
IF ERRMSG THEN GOSUB 91000
RETURN
*
*******
11000: 
*******
*
USD.QTY=0
TOT.OLD.COST=0 ; TOT.NEW.COST=0
FOR K=1 TO FI.CNT
   IF IJS.RECP.NO<1,K>=RECP.NO THEN
      NO.IJS=K
*T27470 v Move to below next 'IF'; premature setting of IJS.FI.AMT
*   IF CATG.COST.TYPE='FI' OR CATG.COST.TYPE='AC' AND IJS.FI.AMT<1,K>=INVR.UNIT.COST THEN
*     IJS.FI.AMT<1,K>=ADJ.COST<1,R>
*   END
      IF IJS.FI.QTY<1,K>+0#0 THEN
         ;*
         ;* Update reserved quantity and amount
         ;*
         IF CATG.COST.TYPE='FI'AND IJS.FI.AMT<1,K>=INVR.UNIT.COST THEN
            TMP=CALC.EXT.COST(IJS.FI.QTY<1,K>,IJS.FI.AMT<1,K>,INV.COST.WT,.5)
            ICA.ORSV.COST<1,JLOC>+=TMP
            TMP=CALC.EXT.COST(IJS.FI.QTY<1,K>,ADJ.COST<1,R>,INV.COST.WT,.5)
            ICA.NRSV.COST<1,JLOC>+=TMP
            IJS.FI.AMT<1,K>=ADJ.COST<1,R>
         END ELSE 
            TMP=CALC.EXT.COST(IJS.FI.QTY<1,K>,IJS.FI.AMT<1,K>,INV.COST.WT,.5)
            ICA.ORSV.COST<1,JLOC>+=TMP
*T27470 v Left off MV pointer and no need to recalculate.
*       TMP=CALC.EXT.COST(IJS.FI.QTY<1,K>,IJS.FI.AMT<1,K>,INV.COST.WT,.5)
*       ICA.NRSV.COST+=TMP
*      I added the line below otherwise ICA.NRSV.COST would = ICA.ORSV.COST
            TMP=CALC.EXT.COST(IJS.FI.QTY<1,K>,ADJ.COST<1,R>,INV.COST.WT,.5)
            ICA.NRSV.COST<1,JLOC>+=TMP
         END
      END
      IF CATG.COST.TYPE='FI' OR CATG.COST.TYPE='AC' AND IJS.FI.AMT<1,K>=INVR.UNIT.COST THEN
         IJS.FI.AMT<1,K>=ADJ.COST<1,R>
      END
*T27470 ^
      ;*
      ;* Update used qty amd amt.
      ;*
      IF NO.IJS>0 THEN
         TCNT=DCOUNT(IJS.JMT.QTY<1,K>,SVM)
         TRAN.QTY=0
         FOR T=TCNT TO 1 STEP - 1
            SEQ.NO=IJS.JMT.SEQ<1,K,T>
            DPNO=FIELD(SEQ.NO,"!",1)
            CCNO=FIELD(SEQ.NO,"!",2)
            SEQ.NO=FIELD(SEQ.NO,"!",3)
            JMT.ID=CONO:JOB.NO:"!":DPNO:"!":CCNO:"!":PROD
            JMT.ID=JMT.ID:"!":WHSE:"!":SEQ.NO
            MATREADU JMT.REC FROM JOB.MATL,JMT.ID THEN
               PTR=1
               LOOP
                  LOCATE DPNO IN JOB.MT.DEPT<1>,PTR SETTING DFND ELSE DFND=0
                  BEGIN CASE
                     CASE DFND=0
                        PTR=0
                     CASE CCNO # JOB.MT.CCTR<1,DFND>
                        PTR=DFND+1
                     CASE PROD # JOB.MT.PROD<1,DFND>
                        PTR=DFND+1
                     CASE WHSE # JOB.MT.WHSE<1,DFND>
                        PTR=DFND+1
                     CASE JOB.MT.SEQ<1,DFND> < SEQ.NO
                        PTR=0; DFND=0
                     CASE 1
                        PTR=0
                  END CASE
               WHILE PTR DO REPEAT
               IF DFND>0 AND DCOUNT(JMT.MON,VM)<=1 AND JMT.MON>= FR.CURR.PER<1,DIV.POS> AND JMT.RC.QTY <=0 THEN
                  LOCATE RECP.NO IN JMT.PTR<1,1>,1 SETTING FLOC THEN
                     IF IJS.JMT.QTY<1,K,T> <> JMT.PTR<1,2,FLOC> OR JMT.PTR<1,3,FLOC> <> INVR.UNIT.COST  THEN
                        NULL
                     END ELSE
                        PCNT=DCOUNT(JMT.PTR<1,1>,SVM)
                        PQTY=JMT.PTR<1,2,1>
                        FOR P=2 TO PCNT
                           PQTY=PQTY+JMT.PTR<1,2,P>
                        NEXT P
                        IF PQTY=JMT.QTY THEN
                           TEMP.QTY=JMT.PTR<1,2,FLOC>
                           TRAN.QTY=TRAN.QTY+TEMP.QTY
                           ILOC=ILOC+1
                           ICA.TRAN<1,JLOC,ILOC>=JMT.SEQ
                           ICA.TRAN.QTY<1,JLOC,ILOC>=TEMP.QTY
                           ICA.OLD.COST<1,JLOC,ILOC>=CALC.EXT.COST(TEMP.QTY,INVR.UNIT.COST,INV.COST.WT,.5)
                           TOT.OLD.COST+=ICA.OLD.COST<1,JLOC,ILOC>
                           OLD.DCOST=OLD.DCOST+ICA.OLD.COST<1,JLOC,ILOC>
                           ;*
                           ;* Update JOB.MATL and JOB for used qty. and amt.
                           ;*
                           IF JMT.COST=0 THEN
                              MARKUP=0
                           END ELSE
                              MARKUP=((JMT.SALE*100) - (JMT.COST*100))/JMT.COST
                           END
                           O.STD.PRICE=JMT.DCOST<1,1>+JMT.DCOST<1,2>
                           IF O.STD.PRICE=0 OR JMT.DCOST<1,3>+0=0 THEN
                              OH.PCT=0
                           END ELSE
                              OH.PCT=JMT.DCOST<1,3>/O.STD.PRICE
                           END
                           O.JMT.WIP=JMT.WIP; O.JMT.DCOST=JMT.DCOST
                           O.JMT.COST=JMT.COST; O.JMT.SALE=JMT.SALE
                           JMT.PTR<1,3,FLOC>=ADJ.COST<1,R>
                           JMT.PTR<1,4,FLOC>=IJS.FI.AMT<1,NO.IJS>
                           ICA.NEW.COST<1,JLOC,ILOC>=CALC.EXT.COST(TEMP.QTY,JMT.PTR<1,3,FLOC>,INV.COST.WT,.5)
                           TOT.NEW.COST+=ICA.NEW.COST<1,JLOC,ILOC>
                           NEW.DCOST=NEW.DCOST+ICA.NEW.COST<1,JLOC,ILOC>
                           JMT.DCOST=0; STD.PRICE=0
                           FOR P=1 TO PCNT
                              TMP=CALC.EXT.COST(JMT.PTR<1,2,P>,JMT.PTR<1,3,P>,INV.COST.WT,.5)
                              JMT.DCOST+=TMP
                              TMP=CALC.EXT.COST(JMT.PTR<1,2,P>,JMT.PTR<1,4,P>,INV.COST.WT,.5)
                              STD.PRICE+=TMP
                           NEXT P
                           IF WLR.MT.COST < 2 THEN
                              JMT.COST=STD.PRICE
                           END ELSE
                              JMT.COST=INT(STD.PRICE*(1+OH.PCT)+.5)
                           END
                           BEGIN CASE
                              CASE STD.PRICE <> JMT.DCOST
                                 DPTR=2; WPTR=3
                                 JMT.DCOST<1,2>=STD.PRICE - JMT.DCOST
                                 IF JMT.COST <> STD.PRICE THEN
                                    DPTR=3
                                    JMT.DCOST<1,3>=JMT.COST - STD.PRICE
                                 END
                              CASE JMT.COST <> STD.PRICE
                                 DPTR=3; WPTR=2
                                 JMT.DCOST<1,2>=0
                                 JMT.DCOST<1,3>=JMT.COST - STD.PRICE
                              CASE 1
                                 DPTR=1; WPTR=1
                           END CASE
                           O.DPTR=DCOUNT(O.JMT.DCOST,VM)
                           IF DPTR < O.DPTR THEN DPTR=O.DPTR
                           FOR D=1 TO O.DPTR
                              JOB.MT.DCOST<1,DFND,D>=JOB.MT.DCOST<1,DFND,D> - O.JMT.DCOST<1,D>+JMT.DCOST<1,D>
                           NEXT D
                           JOB.TOT.DCOST=JOB.TOT.DCOST - O.STD.PRICE+STD.PRICE
                           JOB.MT.COST<1,DFND>=JOB.MT.COST<1,DFND> - O.JMT.COST+JMT.COST
                           WIP.UPD=0
                           BEGIN CASE
                              CASE WLR.SPL="N" AND JMT.TYPE="S"
                              CASE WLR.NON.CHG="N" AND JMT.TYPE="N"
                              CASE WLR.MT.WIP > 1
                                 JMT.WIP=JMT.DCOST<1,1>; WIP.UPD=JMT.WIP
                                 BEGIN CASE
                                    CASE WPTR > 2
                                       JMT.WIP<1,1,2>=JMT.DCOST<1,3>
                                       JMT.WIP<1,1,3>=JMT.DCOST<1,2>
                                       WIP.UPD=WIP.UPD+JMT.DCOST<1,2>+JMT.DCOST<1,3>
                                    CASE WPTR > 1
                                       JMT.WIP<1,1,2>=JMT.DCOST<1,3>
                                       WIP.UPD=WIP.UPD+JMT.DCOST<1,3>
                                 END CASE
                              CASE WLR.MT.WIP > 0
                                 JMT.WIP=JMT.DCOST<1,1>; WIP.UPD=JMT.WIP
                                 IF WPTR > 2 THEN
                                    JMT.WIP<1,1,2>=0
                                    JMT.WIP<1,1,3>=JMT.DCOST<1,2>
                                    WIP.UPD=WIP.UPD+JMT.DCOST<1,2>
                                 END
                           END CASE
                           IF WIP.UPD=0 THEN JMT.WIP=""
                           CCW.ID=CONO:JMT.DIV:DPNO:"!":CCNO:JMT.MON<1,1>
                           MATREADU CCW.REC FROM COST.CNTR.WIP, CCW.ID ELSE MAT CCW.REC=""
                           O.WPTR=COUNT(O.JMT.WIP<1,1>,SVM)+(O.JMT.WIP<1,1> # "")
                           IF WPTR < O.WPTR THEN WPTR=O.WPTR
                           FOR W=1 TO WPTR
                              JOB.WIP<1,2,W>=JOB.WIP<1,2,W> - O.JMT.WIP<1,1,W>+JMT.WIP<1,1,W>
                              JOB.MT.WIP<1,2,W>=JOB.MT.WIP<1,2,W> - O.JMT.WIP<1,1,W>+JMT.WIP<1,1,W>
                              CCW.MT.I<1,W>=CCW.MT.I<1,W> - O.JMT.WIP<1,1,W>+JMT.WIP<1,1,W>
                           NEXT W
                           MATWRITE CCW.REC ON COST.CNTR.WIP, CCW.ID
                           JOB.TOT.COST=JOB.TOT.COST - O.JMT.COST+JMT.COST
                           IF JMT.TYPE='N' OR JMT.TYPE='S' THEN
                              JMT.SALE=0
                           END ELSE
                              JMT.SALE=INT(JMT.COST+((JMT.COST*MARKUP)/100)+.5)
                           END
                           JOB.MT.SALE<1,DFND>=JOB.MT.SALE<1,DFND> - O.JMT.SALE+JMT.SALE
                           JOB.TOT.SALE=JOB.TOT.SALE - O.JMT.SALE+JMT.SALE
                           PRDS.ID=CONO:"*":JMT.DIV:"*":DPNO:"*":CCNO:"*":JMT.MON<1,1>:"*1*A"
                           MATREADU PRDS.REC FROM PROD.STATS, PRDS.ID ELSE MAT PRDS.REC=""
                           BEGIN CASE
                              CASE JMT.TYPE='N'
                                 TPTR=2
                                 PRDS.MAT.NC.DCOST=PRDS.MAT.NC.DCOST - O.STD.PRICE+STD.PRICE
                                 PRDS.MAT.NC.COST=PRDS.MAT.NC.COST - O.JMT.COST+JMT.COST
                              CASE JMT.TYPE='C'
                                 TPTR=3
                                 PRDS.MAT.DCOST=PRDS.MAT.DCOST - O.STD.PRICE+STD.PRICE
                                 PRDS.MAT.COST=PRDS.MAT.COST - O.JMT.COST+JMT.COST
                              CASE JMT.TYPE='S'
                                 TPTR=4
                                 PRDS.MAT.SP.DCOST=PRDS.MAT.SP.DCOST - O.STD.PRICE+STD.PRICE
                                 PRDS.MAT.SP.COST=PRDS.MAT.SP.COST - O.JMT.COST+JMT.COST
                                 IF JMT.SPOIL.CODE # "" THEN
                                    SSR.ID=CONO:JMT.DIV:DPNO:"!":CCNO:JMT.MON<1,1>:JMT.SPOIL.CODE
                                    MATREADU SSR.REC FROM SPOIL.STATS, SSR.ID ELSE MAT SSR.REC=""
                                    FOR D=1 TO DPTR
                                       SSR.MT<1,D>=SSR.MT<1,D> - O.JMT.DCOST<1,D>+JMT.DCOST<1,D>
                                    NEXT I
                                 END
                              CASE 1
                                 TPTR=1
                                 PRDS.MAT.DCOST=PRDS.MAT.DCOST - O.STD.PRICE+STD.PRICE
                                 PRDS.MAT.COST=PRDS.MAT.COST - O.JMT.COST+JMT.COST
                           END CASE
                           JOB.MT.TCOST<1,DFND,TPTR>=JOB.MT.TCOST<1,DFND,TPTR> - O.JMT.COST+JMT.COST
                           MATWRITE PRDS.REC ON PROD.STATS, PRDS.ID
                           SPTR=DCOUNT(IJS.JMT.QTY<1,NO.IJS>,SVM)+1
                           IJS.JMT.QTY<1,NO.IJS,SPTR>=TEMP.QTY
                           IJS.JMT.SEQ<1,NO.IJS,SPTR>=DPNO:"!":CCNO:"!":SEQ.NO
                           IJS.JMT.SEQ=DELETE(IJS.JMT.SEQ,1,K,T)
                           IJS.JMT.QTY=DELETE(IJS.JMT.QTY,1,K,T)
                           MATWRITE JMT.REC ON JOB.MATL, JMT.ID
                           ;*correct the price and ext cost
                           ;* on INAH records for this usage
                           INAH.ID=CONO:JMT.AUDIT.NO<1,FLOC>
                           MATREADU INAH.REC FROM INV_AUDIT_HIST,INAH.ID THEN
                              LOCATE RECP.NO IN INAH.DEPL.RECP<1> SETTING DIDX THEN
                                 INAH.EXT.COST=0
                                 INAH.DEPL.COST<1,DIDX>= ADJ.COST<1,R>
                                 DRCNT=DCOUNT(INAH.DEPL.RECP,VM)
                                 FOR DR=1 TO DRCNT
                                    INAH.EXT.COST+=CALC.EXT.COST(INAH.DEPL.QTY<1,DR>,INAH.DEPL.COST<1,DR>,INV.COST.WT,.5)
                                 NEXT DR
                                 INAH.EXT.COST=INT(INAH.EXT.COST-.5)
                                 INAH.UNIT.COST=(ABS(INAH.EXT.COST)*1000*INV.COST.WT)/ABS(INAH.QTY)
                                 MATWRITE INAH.REC ON INV_AUDIT_HIST,INAH.ID
                              END
                           END
                        END
                     END
                  END
               END
            END
         NEXT T
         USD.QTY=USD.QTY+TRAN.QTY
         TMP=CALC.EXT.COST(TRAN.QTY,IJS.FI.AMT<1,K>,INV.COST.WT,.5)
         JOB.USED.AMT<1,PFND>-=TMP
         TMP=CALC.EXT.COST(TRAN.QTY,IJS.FI.AMT<1,NO.IJS>,INV.COST.WT,.5)
         JOB.USED.AMT<1,PFND>+=TMP
         IJS.FI.ORG<1,NO.IJS>=IJS.FI.ORG<1,NO.IJS>+TRAN.QTY
         IJS.FI.ORG<1,K>=IJS.FI.ORG<1,K> - TRAN.QTY
      END
   END
NEXT K
;*
;* Delete zero buckets
;*
FI.CNT=DCOUNT(IJS.RECP.NO,VM)
FOR K=FI.CNT TO 1 STEP - 1
   IF IJS.JMT.SEQ<1,K>="" AND IJS.FI.QTY<1,K>+0=0 THEN
      IJS.RECP.NO=DELETE(IJS.RECP.NO,1,K,0)
      IJS.FI.ORG=DELETE(IJS.FI.ORG,1,K,0)
      IJS.FI.QTY=DELETE(IJS.FI.QTY,1,K,0)
      IJS.FI.AMT=DELETE(IJS.FI.AMT,1,K,0)
      IJS.JMT.SEQ=DELETE(IJS.JMT.SEQ,1,K,0)
      IJS.JMT.QTY=DELETE(IJS.JMT.QTY,1,K,0)
   END
NEXT K
ICA.RSV.QTY<1,JLOC>=RSV.QTY
JOB.RESV.AMT<1,PFND>=JOB.RESV.AMT<1,PFND> - ICA.ORSV.COST<1,JLOC>+ICA.NRSV.COST<1,JLOC>
ICA.USD.QTY<1,JLOC>=ICA.USD.QTY<1,JLOC>+USD.QTY
RETURN
*
************
12000: 
************
*
*--- UPDATE RESERVED QUANTITIES ONLY
*
FOR K=1 TO FI.CNT
   IF IJS.RECP.NO<1,K>=RECP.NO THEN
      IF CATG.COST.TYPE='FI' OR CATG.COST.TYPE='AC' AND IJS.FI.AMT<1,K>=INVR.UNIT.COST THEN
         TMP=CALC.EXT.COST(IJS.FI.QTY<1,K>,IJS.FI.AMT<1,K>,INV.COST.WT,.5)
         ICA.ORSV.COST<1,JLOC>+=TMP
         TMP=CALC.EXT.COST(IJS.FI.QTY<1,K>,ADJ.COST<1,R>,INV.COST.WT,.5)
         ICA.NRSV.COST<1,JLOC>+=TMP
         IJS.FI.AMT<1,K>=ADJ.COST<1,R>
      END ELSE
         TMP=CALC.EXT.COST(IJS.FI.QTY<1,K>,IJS.FI.AMT<1,K>,INV.COST.WT,.5)
*T27470 v Left off MV pointer and no need to recalculate.
*     ICA.ORSV.COST+=TMP
         ICA.ORSV.COST<1,JLOC>+=TMP
*     TMP=CALC.EXT.COST(IJS.FI.QTY<1,K>,IJS.FI.AMT<1,K>,INV.COST.WT,.5)
*     I added the line below otherwise ICA.NRSV.COST would = ICA.ORSV.COST
         TMP=CALC.EXT.COST(IJS.FI.QTY<1,K>,ADJ.COST<1,R>,INV.COST.WT,.5)
         ICA.NRSV.COST<1,JLOC>+=TMP
      END
   END
NEXT K
ICA.RSV.QTY<1,JLOC>=RSV.QTY
JOB.RESV.AMT<1,PFND>=JOB.RESV.AMT<1,PFND> - ICA.ORSV.COST<1,JLOC>+ICA.NRSV.COST<1,JLOC>
RETURN
*
*********
ENT.PROD: 
*********
*
EOI=0
LOOP
   ECD.NUM=1; ECD.VALDAT.CODE=2
   ECD.VALDAT.FILE=INVENTORY; ECD.PREFIX.ID=CONO
   ECD.ACTION=4;CALL SCRN.EDIT
   BEGIN CASE
      CASE ECD.RET.VALUE='END'
         GOTO 99999
      CASE ECD.RET.VALUE # '' AND ECD.VALDAT.ITEM # ''
         PROD=ECD.RET.VALUE
         FOR I=1 TO INV.REC.SIZE
            INV.REC(I)=ECD.VALDAT.ITEM<I>
         NEXT I
         IF INV.M.LINE='FNGD' THEN 
            ERRMSG='Cannot adjust receipt cost for FNGD item.'
            GOSUB 91000
         END ELSE
            EOI=1
            ECD.NUM=2;SCV.REC(ECD.NUM)<1>=INV.FULL.DESC
            ECD.ACTION=5;CALL SCRN.EDIT
         END
      CASE 1
         ECD.NUM=2;SCV.REC(ECD.NUM)<1>='';CALL SCRN.EDIT
         IF ECD.RET.VALUE # '' OR ECD.RET.VALUE # 'END' THEN 
            SCV.REC(ECD.NUM)<1>=''
            MAT GEN.XREF.REC=''
            GXR.CO=CONO
            GXR.TOP.LINE='INVENTORY XREF SEARCH'
            GXR.HEADING<1,1>='PRODUCT NUMBER'
            GXR.HEADING<1,2>='FULL DESCRIPTION'
            GXR.ATT<1,1>=0
            GXR.ATT<1,2>=2
            GXR.LEN<1,1>=15
            GXR.LEN<1,2>=45
            GXR.LOC=1
            GXR.FILE=INVENTORY
            GXR.XREF=INVENTORY.XREF
            GXR.ID='';GXR.SRCH.ID=ECD.RET.VALUE
            CALL GEN.XREF(MAT GEN.XREF.REC,PREFIX)
            ECD.ACTION=2; CALL SCRN.EDIT
            ECD.ACTION=3; CALL SCRN.EDIT
            IF GXR.ID # '' THEN 
               MATREAD INV.REC FROM INVENTORY, CONO:GXR.ID THEN
                  IF INV.M.LINE='FNGD' THEN                           
                     ERRMSG='Cannot adjust receipt cost for FNGD item.'
                     GOSUB 91000                                       
                  END ELSE                                            
                     PROD=GXR.ID ; EOI=1
                     ECD.NUM=1;SCV.REC(ECD.NUM)<1>=PROD
                     ECD.ACTION=5;CALL SCRN.EDIT
                     ECD.NUM=2;SCV.REC(ECD.NUM)<1>=INV.FULL.DESC
                     ECD.ACTION=5;CALL SCRN.EDIT
                  END
               END ELSE
                  ERRMSG='CANNOT LOCATE PRODUCT - ':GXR.ID
                  GOSUB 91000
               END
            END
         END
   END CASE
UNTIL (EOI) REPEAT
RETURN
*
**********
ENT.WHSE: 
**********
*
WHSE.CNT=DCOUNT(INV.WHSE.CODE,VM)
ECD.HMSG='WAREHOUSE - ' : INV.WHSE.CODE<1,1>    
IF WHSE.CNT > 1 THEN
   FOR I=2 TO WHSE.CNT                             
      IF LEN(ECD.HMSG) > 75 THEN                      
         ECD.HMSG='WAREHOUSE - ':INV.WHSE.CODE<1,I>  
      END ELSE                                        
         ECD.HMSG=ECD.HMSG:' , ':INV.WHSE.CODE<1,I>  
      END                                             
   NEXT I                                            
END
EOI=0
LOOP
   ERR=0
   ECD.NUM=3
   IF WHSE.CNT=1 THEN
      IWH.ID=CONO:PROD:'!':INV.WHSE.CODE<1,1>
      * T26126 v
      MATREADU IWH.REC FROM INV.WHSE,IWH.ID LOCKED
         ERRMSG = 'Record is locked by user - ':GETUSERNAME(STATUS())
         GOSUB 91000;ERR=1 
      END THEN
      * T26126 ^
         DIV.POS=DIVISION.POSITION(CONO,CONTROL,WHS.DIV)
         BEGIN CASE                                     
            CASE DIV.POS<1,1>=''                         
               DIV.POS=DIV.POS<1,2>                       
            CASE DIV.POS<1,1>='-2'                       
               ERRMSG=DIV.POS<1,2>                        
               GOSUB 93000                                
         END CASE                                       
         WHSE=INV.WHSE.CODE<1,1> ; EOI=1
         SCV.REC(ECD.NUM)<1>=WHSE;ECD.ACTION=5;CALL SCRN.EDIT
      END ELSE
         ERRMSG='Cannot locate warehouse ':INV.WHSE.CODE
         ERRMSG :=' for product ':PROD
         ERR=1
         GOSUB 91000
      END
   END ELSE
      ECD.ACTION=4;CALL SCRN.EDIT
      IF ECD.RET.VALUE='END' THEN
         EOI=1 ; ERR=1
      END ELSE
         WHSE=ECD.RET.VALUE
         IWH.ID=CONO:PROD:"!":WHSE
        * T26126 v
         MATREADU IWH.REC FROM INV.WHSE,IWH.ID LOCKED
            ERRMSG = 'Record is locked by user - ':GETUSERNAME(STATUS())
            GOSUB 91000;ERR=1 
         END THEN
        * T26126 ^
            IF IWH.RECP.NO='' THEN                      
               ERRMSG ='Product ':PROD:' and warehouse ' 
               ERRMSG:=WHSE:' have no receipts'          
               GOSUB 91000 ; ERR=1
            END ELSE
               EOI=1
            END
         END ELSE
            ERRMSG=PROD:'!':WHSE:" IS NOT ON FILE TRY AGAIN !"
            GOSUB 91000 ; ERR=1
         END
      END
   END
   IF NOT(ERR) THEN
      WID=CONO:WHSE
      MATREAD WHSE.REC FROM WAREHOUSE,WID ELSE MAT WHSE.REC=''
      DIV.CODE=WHS.DIV; USER.ID=UPCASE(@LOGNAME); ERRMSG=''
      CALL CK.DIV.SEC.SUB(CONO,DIV.CODE,USER.ID,ERRMSG)
      IF ERRMSG # '' THEN
         GOSUB 91000
         GOTO ENT.WHSE ; * T26685
         IF WHSE.CNT=1 THEN
            EOI=1 ; ERR=1
         END ELSE
            SCV.REC(ECD.NUM)<1>=''
         END
      END ELSE
         EOI=1
      END
   END
UNTIL (EOI) DO REPEAT
RETURN
*
***************
ENT.ADJ.PERIOD: 
***************
*
CUR.PERIOD=CURRENT.PERIOD(CONO,CONTROL,DIV.POS,"IC")
BEGIN CASE                    
   CASE CUR.PERIOD<1,1>=''     
      CUR.PERIOD=CUR.PERIOD<1,2>
   CASE CUR.PERIOD<1,1>='-2'   
      ERRMSG=CUR.PERIOD<1,2>    
      GOSUB 93000               
END CASE                      
EOI=0
LOOP
   ERR=0
   ECD.NUM=22;ECD.SUB.NUM=LN
   IF ADJ.PERIOD<1,LN>#'' THEN
      ECD.DEFAULT=ADJ.PERIOD<1,LN>
   END ELSE
      IF CUR.PERIOD<IWH.RECP.PERIOD<1,LN> THEN
         ECD.DEFAULT=IWH.RECP.PERIOD<1,LN>
      END ELSE
         IF IWH.RECP.PERIOD<1,LN><CUR.PERIOD THEN
            ECD.DEFAULT=CUR.PERIOD
         END ELSE
            ECD.DEFAULT=IWH.RECP.PERIOD<1,LN>
         END
      END
   END
   ECD.MINV=ECD.DEFAULT ; ECD.MAXV=999999
   ECD.ACTION=4;CALL SCRN.EDIT
   BEGIN CASE
      CASE ECD.RET.VALUE='END' OR ECD.RET.VALUE='E'
         EOI=1; ERR=1
         SCV.REC(22)<ESN,LN>=ADJ.PERIOD<1,LN>
         ECD.NUM=22;ECD.SUB.NUM=LN
         ECD.ACTION=5;CALL SCRN.EDIT
      CASE ECD.RET.VALUE=''
         EOI=1;ERR=1
         ADJ.PERIOD<1,LN>=''
         SCV.REC(22)<ESN,LN>=ADJ.PERIOD<1,LN>  
         ECD.NUM=22;ECD.SUB.NUM=LN             
         ECD.ACTION=5;CALL SCRN.EDIT           
         ADJ.COST<1,LN>=''
         SCV.REC(18)<ESN,LN>=ADJ.COST<1,LN>   
         ECD.NUM=18;ECD.SUB.NUM=LN            
         ECD.ACTION=5;CALL SCRN.EDIT          
      CASE 1
         ERR.FLG = "";ERRMSG = "" 
         CALL CHECK.PERIOD.DATE(CONO,'',ECD.RET.VALUE,WHS.DIV,ERR.FLG,ERRMSG,COMPANY,CONTROL) 
         BEGIN CASE 
            CASE ERRMSG = "" 
               EOI=1
               ADJ.PERIOD<1,LN>=ECD.RET.VALUE
            CASE ERR.FLG = 0 
               EOI=1
               ADJ.PERIOD<1,LN>=ECD.RET.VALUE
               GOSUB 91000
            CASE ERR.FLG = 1 
               GOSUB 91000
            CASE ERR.FLG = 2 
               GOSUB 93000
         END CASE 
   END CASE
UNTIL (EOI) DO REPEAT
RETURN
*
*************
ENT.ADJ.COST: 
*************
*
ERR=0
ECD.DEFAULT=ADJ.COST<1,LN>
SCV.REC(18)<ESN,LN>=ECD.DEFAULT
ECD.NUM=18;ECD.SUB.NUM=LN
ECD.ACTION=4;CALL SCRN.EDIT
BEGIN CASE
   CASE ECD.RET.VALUE='END' OR ECD.RET.VALUE='E'
      ERR=1
      IF ADJ.COST<1,LN> ='' THEN
         ADJ.PERIOD<1,LN>=''
      END
      SCV.REC(22)<ESN,LN>=ADJ.PERIOD<1,LN>
      ECD.NUM=22;ECD.SUB.NUM=LN
      ECD.ACTION=5 ; CALL SCRN.EDIT
      SCV.REC(18)<ESN,LN>=ADJ.COST<1,LN>
      ECD.NUM=18;ECD.SUB.NUM=LN
      ECD.ACTION=5;CALL SCRN.EDIT
   CASE ECD.RET.VALUE=''
      ADJ.PERIOD<1,LN>=''                 
      SCV.REC(22)<ESN,LN>=ADJ.PERIOD<1,LN>
      ECD.NUM=22;ECD.SUB.NUM=LN           
      ECD.ACTION=5;CALL SCRN.EDIT         
      ADJ.COST<1,LN>=''                   
      SCV.REC(18)<ESN,LN>=ADJ.COST<1,LN>  
      ECD.NUM=18;ECD.SUB.NUM=LN           
      ECD.ACTION=5;CALL SCRN.EDIT         
   CASE 1
      ADJ.COST<1,LN>=ECD.RET.VALUE
END CASE
RETURN
*
****************
BUILD.SCREEN: 
****************
*
RCNT=DCOUNT(IWH.RECP.NO,VM)
FOR R=1 TO RCNT
   S.ORIG=IWH.ORG.FI<1,R>
   S.USED=S.ORIG-IWH.QTY.FI<1,R>
   S.RESV=IWH.QTY.FI<1,R>-IWH.RSV.FI<1,R>
   SCV.REC(11)<ESN,R>=R
   SCV.REC(12)<ESN,R>=OCONV(IWH.RECV.FI<1,R>,"D2/") 
   SCV.REC(13)<ESN,R>=IWH.PO.NO.FI<1,R>
   TMP=CALC.STK.QTY(S.ORIG,MAT INV.CNV.REC,'','')
   TMP=OCONV(TMP,ICR.CNV)
   SCV.REC(14)<ESN,R>=TMP
   TMP=CALC.STK.QTY(S.RESV,MAT INV.CNV.REC,'','')
   TMP=OCONV(TMP,ICR.CNV)                        
   SCV.REC(15)<ESN,R>=TMP
   TMP=CALC.STK.QTY(S.USED,MAT INV.CNV.REC,'','')
   TMP=OCONV(TMP,ICR.CNV)                        
   SCV.REC(16)<ESN,R>=TMP
   SCV.REC(17)<ESN,R>=OCONV(IWH.COST.FI<1,R>,"MD4")
   SCV.REC(18)<ESN,R>=OCONV(ADJ.COST<1,R>,"MD4")
   SCV.REC(19)<ESN,R>=IWH.VDR.FI<1,R>
   SCV.REC(20)<ESN,R>=IWH.RECP.NO<1,R>
   SCV.REC(21)<ESN,R>=IWH.RECP.PERIOD<1,R>
   SCV.REC(22)<ESN,R>=ADJ.PERIOD<1,R>
NEXT R
RETURN
*
****************
DISP.LINES: 
****************
*
START = 1 + INT((START-1)/PAGE.SIZE) * PAGE.SIZE      ;* T25978
ECD.NUM=11;ECD.SUB.NUM=START;ECD.ACTION=7;CALL SCRN.EDIT
ECD.NUM=12;ECD.SUB.NUM=START;ECD.ACTION=7;CALL SCRN.EDIT
ECD.NUM=13;ECD.SUB.NUM=START;ECD.ACTION=7;CALL SCRN.EDIT
ECD.NUM=21;ECD.SUB.NUM=START;ECD.ACTION=7;CALL SCRN.EDIT
ECD.NUM=14;ECD.SUB.NUM=START;ECD.ACTION=7;CALL SCRN.EDIT
ECD.NUM=15;ECD.SUB.NUM=START;ECD.ACTION=7;CALL SCRN.EDIT
ECD.NUM=16;ECD.SUB.NUM=START;ECD.ACTION=7;CALL SCRN.EDIT
ECD.NUM=17;ECD.SUB.NUM=START;ECD.ACTION=7;CALL SCRN.EDIT
ECD.NUM=18;ECD.SUB.NUM=START;ECD.ACTION=7;CALL SCRN.EDIT
ECD.NUM=20;ECD.SUB.NUM=START;ECD.ACTION=7;CALL SCRN.EDIT
ECD.NUM=19;ECD.SUB.NUM=START;ECD.ACTION=7;CALL SCRN.EDIT
ECD.NUM=22;ECD.SUB.NUM=START;ECD.ACTION=7;CALL SCRN.EDIT
RETURN
*
*****************
CLEAR.FI.BUCKETS: 
*****************
;*                           
;*remove FIFO from INV.WHSE  
;*                           
IWH.VDR.FI = ""              
IWH.PO.NO.FI = ""            
IWH.PO.LN.FI = ""            
IWH.ORG.FI = ""              
IWH.RSV.FI = ""              
IWH.QTY.FI = ""              
IWH.COST.FI = ""             
IWH.ACT.COST = ""            
IWH.SALE.FI = ""             
RETURN
