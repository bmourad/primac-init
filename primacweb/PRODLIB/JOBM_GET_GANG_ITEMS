SUBROUTINE JOBM_GET_GANG_ITEMS
********************************************************************************
*   Program name :- JOBM_GET_GANG_ITEMS
*   Created:- 12/16/2003
*------------------------------------------------------------------------------*
*

* In Properties:
* --------------
*  
*
* Out Properties:
* ---------------
*  
********************************************************************************
$INCLUDE WWINSERT RBO.H
$INCLUDE JCS.CPYLIB GANG.JOB
$INCLUDE ICS.CPYLIB INVENTORY
$INCLUDE JCS.CPYLIB JOB
$INCLUDE CPYLIB CHAR

* Insert method code here
ERRMSG = ''
OPEN '','INVENTORY' TO INVENTORY ELSE
	ERRMSG = 'INVENTORY FILE IS MISSING'
	GOTO 99999
END

OPEN "","GANG.JOB" TO GANG.JOB ELSE
	ERRMSG = "UNABLE TO OPEN GANG.JOB"
	GOTO 99999
END
OPEN '','CATEGORY' TO CATEGORY ELSE
	ERRMSG='CATEGORY FILE IS MISSING'
	GOTO 99999
END
OPEN "","JOB" TO JOB ELSE
	ERRMSG = "CANNOT OPEN JOB FILE"
       GOTO 99999
END

DEFFUN JOBM_STATUS_SUB(STATUS)

VAL = RBO.getProperty('','ID',ID)
CONO = ID[1,3]

JOB_NO = ID[4,99]

MATREAD JOB.REC FROM JOB,ID ELSE MAT JOB.REC = ""
MATREAD GJOB.REC FROM GANG.JOB,ID ELSE MAT GJOB.REC = ''

*******************BEGIN FOR GANGED JOB ALLOCAITON*********************************
*---- ACCUMULATE AND DISPLAY TOTALS

LINES = DCOUNT(GJOB.JOB,VM)
TOT.AREA = INT(GJOB.IW / 10 * GJOB.IL / 10 + 0.5)
CALC.AREA = 0
FOR CREF = 1 TO LINES
	CALC.AREA = CALC.AREA + INT(GJOB.WIDTH<1,CREF> / 1000 * GJOB.LENGTH<1,CREF> / 1000 * GJOB.SPOTS<1,CREF> + 0.5)
	GJOB.WIDTH<1,CREF> = OCONV(GJOB.WIDTH<1,CREF>,"MD4")
	GJOB.LENGTH<1,CREF> = OCONV(GJOB.LENGTH<1,CREF>,"MD4")
NEXT CREF

CALC.AREA = INT(CALC.AREA/100+0.5)
TOTAL = SUM(GJOB.SPOTS)
IF TOT.AREA = 0 THEN
	TOT.AREA = ""
END ELSE
	TOT.AREA = INT((1-(CALC.AREA/TOT.AREA))*10000+0.5)
END

INV_PAP_WIDTH = ""
INV_PAP_LEN = ""
STAT.DESC = ""
CNT = DCOUNT(GJOB.PROD,VM)
PROD_DESCS = ""
FOR I = 1 TO CNT
	MATREAD INV.REC FROM INVENTORY,CONO:GJOB.PROD<1,I> ELSE
		MAT INV.REC = ''
	END
	PROD_DESCS<1,I> = INV.DESC
	INV_PAP_WIDTH<1,I> = OCONV(INV.PAP.WIDTH+0,"MD4")
	INV_PAP_LEN<1,I> = OCONV(INV.PAP.LEN+0,"MD4")
       MATREAD JOB.REC FROM JOB,CONO:GJOB.JOB<1,I> ELSE
		MAT JOB.REC = ''
	END
       *CALL JOB.STATUS.SUB(JOB.STATUS<1,1>,JOB.TRACK.DATE,STATUS)
	STAT.DESC<1,I> = JOBM_STATUS_SUB(JOB.STATUS<1,1>)
NEXT I

STATUS=RBO.setProperty('','JOB_OP_NUM',GJOB.JOB)
STATUS=RBO.setProperty('','JOB_OP_VEND',GJOB.PROD)
STATUS=RBO.setProperty('','CSRCodes',PROD_DESCS)
STATUS=RBO.setProperty('','JOB_OP_CATG',GJOB.WIDTH)
STATUS=RBO.setProperty('','JOB_OP_EXP_DATE',GJOB.LENGTH)
STATUS=RBO.setProperty('','JOB_OP_LAST_RECV',GJOB.SPOTS)
STATUS=RBO.setProperty('','JOB_OP_OPEN_QTY',GJOB.PCT)
STATUS=RBO.setProperty('','DEFAULT_WHSE_PROD',STAT.DESC)
STATUS=RBO.setProperty('','EST_PAR',INV_PAP_WIDTH)
STATUS=RBO.setProperty('','EST_MATL',INV_PAP_LEN)
STATUS=RBO.setProperty('','FLG',OCONV(GJOB.IW,"MD2"))
STATUS=RBO.setProperty('','CREDIT_AUTH',OCONV(GJOB.IL,"MD2"))

STATUS=RBO.setProperty('','VALD_CUST',GJOB.ALLOC)
STATUS=RBO.setProperty('','SUB_FLAG',GJOB.DESC)
STATUS=RBO.setProperty('','ORIG_CUST',GJOB.ID)


*******************END FOR GANGED JOB ALLOCAITON*********************************


99999
IF ERRMSG # "" THEN
	STATUS = RBO.setProperty('','ServerStatus','1')
	STATUS = RBO.setProperty('','ServerMessage',ERRMSG)
END
* End of method code
RETURN



* End of method code
RETURN

