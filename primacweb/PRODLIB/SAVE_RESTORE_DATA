SUBROUTINE SAVE_RESTORE_DATA
********************************************************************************
*   Program name :- SAVE_RESTORE_DATA
*   Created:- 9/17/2003
*------------------------------------------------------------------------------*
*

* In Properties:
* --------------
*  
*
* Out Properties:
* ---------------
*  
********************************************************************************
$INCLUDE WWINSERT RBO.H
$INCLUDE PMC.CPYLIB MENUS.CONTROL
$INCLUDE PMC.CPYLIB COMPANY
$INCLUDE PMC.CPYLIB COA
$INCLUDE GLS.CPYLIB COA.BAL
$INCLUDE GLS.CPYLIB GLM
$INCLUDE PMC.CPYLIB FISCAL

DIM FFILE.NAME(30)

OPEN '','CONTROL' TO CONTROL ELSE
	ERRMSG = 'CONTROL FILE IS MISSING'; GOTO 99999
END

OPEN '','VOC' TO VOC ELSE
	ERRMSG = 'VOC FILE IS MISSING'; GOTO 99999
END
OPEN '','COMPANY' TO COMPANY ELSE
	ERRMSG = 'COMPANY FILE IS MISSING'; GOTO 99999
END

* Insert method code here

VAL = RBO.getProperty('','PMCProperty',PMCProperty)
VAL = RBO.getProperty('','BEG_YR',BEG.YR)
VAL = RBO.getProperty('','BEG_PER',BEG.PER)
VAL = RBO.getProperty('','BEG_MON',BEG.MON)
VAL = RBO.getProperty('','CURR_YR',CURR.YR)
VAL = RBO.getProperty('','CURR_PER',CURR.PER)
VAL = RBO.getProperty('','CURR_MON',CURR.MON)
VAL = RBO.getProperty('','OTAPE_PERIOD',OTAPE.PERIOD)
VAL = RBO.getProperty('','TAPE_PERIOD',TAPE.PERIOD)
VAL = RBO.getProperty('','SAVE_PER',SAVE.PER) ;* MULTIVALUED
VAL = RBO.getProperty('','SAVE_PTR',SAVE.PTR)
VAL = RBO.getProperty('','NUM_PERIODS',NUM.PERIODS)
VAL = RBO.getProperty('','SAVE_DATE',SAVE.DATE)
VAL = RBO.getProperty('','DEL_CONTROL',DEL.CONTROL)
VAL = RBO.getProperty('','PROCESS_CONTROL',PROCESS.CONTROL)
VAL = RBO.getProperty('','NO_SAVE_PTR',NO.SAVE.PTR)

SAVE.PER = RAISE(SAVE.PER)
CNT = DCOUNT(SAVE.DATE,@VM)
FOR I = 1 TO CNT
	SAVE.DATE<1,I> = ICONV(SAVE.DATE<1,I>,'D2/')
NEXT I
SAVE.DATE = RAISE(SAVE.DATE)

LST.PER = BEG.PER - 1
IF LST.PER < 1 THEN
	LST.PER = (BEG.YR - 1) : NUM.PERIODS
END ELSE
	LST.PER = STR("0",2-LEN(LST.PER)):LST.PER
      	LST.PER = BEG.YR : LST.PER
END


CONO = PMCProperty<1,4>

READ BUD.PER FROM CONTROL, CONO:"GLS.BUD.PER" ELSE BUD.PER = ""
MATREAD MENU.REC FROM CONTROL, "MENUS.CONTROL" ELSE
	ERRMSG = "** Cannot Locate CONTROL, MENUS.CONTROL **"
      	GOTO 99999
END
MATREAD COMP.REC FROM COMPANY, CONO ELSE
	ERRMSG = "** Cannot Locate COMPANY**"
      	GOTO 99999
END

MATREAD FISCAL.REC FROM CONTROL, CONO : "FISCAL" ELSE
	ERRMSG = "CONTROL FISCAL IS MISSING"; GOTO 99999
END

*--- OPEN FILES
*
OPEN '','GLS.SCREENS' TO M.SCREENS ELSE
	ERRMSG = 'GLS.SCREENS FILE IS MISSING'; GOTO 99999
END
OPEN '','PREFIX' TO PREFIX ELSE
	ERRMSG = 'PREFIX FILE IS MISSING'; GOTO 99999
END
OPEN '','COA' TO COA ELSE
	ERRMSG = 'COA FILE IS MISSING'; GOTO 99999
END
OPEN '','CO.COA.BAL' TO CO.COA.BAL ELSE
	ERRMSG = 'CO.COA.BAL FILE IS MISSING'; GOTO 99999 
END
OPEN '','DV.COA.BAL' TO DV.COA.BAL ELSE
	ERRMSG = 'DV.COA.BAL FILE IS MISSING'; GOTO 99999    
END
OPEN '','DP.COA.BAL' TO DP.COA.BAL ELSE
	ERRMSG = 'DP.COA.BAL FILE IS MISSING'; GOTO 99999
END
OPEN '','CC.COA.BAL' TO CC.COA.BAL ELSE
	ERRMSG = 'CC.COA.BAL FILE IS MISSING'; GOTO 99999
END
OPEN '','GLA' TO GLA ELSE
	ERRMSG = 'GLA FILE IS MISSING'; GOTO 99999
END
OPEN '','GLM' TO GLM ELSE
	ERRMSG = 'GLM FILE IS MISSING'; GOTO 99999
END
OPEN '','GLX' TO GLX ELSE
	ERRMSG = 'GLX FILE IS MISSING'; GOTO 99999
END
IF CO.GLS.HIST<1,1> = "Y" THEN
	OPEN '','GLH' TO GLH ELSE
       	ERRMSG = 'GLH FILE IS MISSING'; GOTO 99999
      	END
      	OPEN '','GLHX' TO GLHX ELSE
       	ERRMSG = 'GLHX FILE IS MISSING'; GOTO 99999
      	END
END

ACCT.LEN = LEN(CO.ACCT.PIC) + 10


PMC.PATH = PRIMAC.PATH

PROCESS.CONTROL = 'R'
WRITE PROCESS.CONTROL ON CONTROL, CONO:'GLS.BACKUP.RESTORE'
WRITE BEG.YR:BEG.PER ON CONTROL, CONO : "GLS.TAPE.LOAD"
WRITE BUD.PER ON CONTROL, CONO : "GLS.BUD.PER"

*IF NO.SAVE.PTR # '0' THEN
*	ERRMSG = 'CANNOT DO UPDATES UNTIL ALL PERIODS CAN BE RESTORED'
*     GOTO 99999
*END 

ERRMSG = ""
GOSUB 1000

IF ERRMSG = "" THEN
	GOSUB 2000
      	DELETE CONTROL, CONO : "GLS.TAPE.LOAD"
      	IF BEG.YR < CURR.YR THEN
       	WRITE OTAPE.PERIOD ON CONTROL, CONO:BEG.YR:"GLS.TAPE"
      	END
       WRITE TAPE.PERIOD ON CONTROL, CONO:CURR.YR:"GLS.TAPE"
       IF BUD.PER<2> # "Y" THEN
       	PROC.LINE<10> = BUD.PER<1>
              DELETE CONTROL, CONO : "GLS.BUD.PER"
	END ELSE
       	CURR.PER = CURR.PER 'R%2'
              BUD.PER<1> = CURR.YR:CURR.PER
              WRITE BUD.PER ON CONTROL, CONO : "GLS.BUD.PER"
      	END
END ELSE
	PROC.LINE = 'END'
END

GOTO 99999
**************************END OF RESTORE PROCESS************************


1000 
	MAT FFILE.NAME = ''
   	VOC.ITEM=''
   	VOC.ITEM<1>='F'
   	VAR.FILE = 'COA' : SAVE.PER<1>
   	VOC.ITEM<2>=PMC.PATH:'-GLS-BACKUP/':VAR.FILE
   	VOC.ITEM<3>=PMC.PATH:'-GLS-BACKUP/D_':VAR.FILE
   	WRITE VOC.ITEM ON VOC, VAR.FILE
   	OPEN '',VAR.FILE TO FFILE.NAME(1) ELSE
      		ERRMSG = VAR.FILE:" FILE IS MISSING";GOTO 1999
   	END
   	VAR.FILE = 'CO.COA' : SAVE.PER<1>
   	VOC.ITEM<2>=PMC.PATH:'-GLS-BACKUP/':VAR.FILE
   	VOC.ITEM<3>=PMC.PATH:'-GLS-BACKUP/D_':VAR.FILE
   	WRITE VOC.ITEM ON VOC, VAR.FILE
   	OPEN '',VAR.FILE TO FFILE.NAME(2) ELSE
      		ERRMSG = VAR.FILE:" FILE IS MISSING";GOTO 1999
   	END
   	VAR.FILE = 'DV.COA' : SAVE.PER<1>
   	VOC.ITEM<2>=PMC.PATH:'-GLS-BACKUP/':VAR.FILE
   	VOC.ITEM<3>=PMC.PATH:'-GLS-BACKUP/D_':VAR.FILE
   	WRITE VOC.ITEM ON VOC, VAR.FILE
   	OPEN '',VAR.FILE TO FFILE.NAME(3) ELSE
      		ERRMSG = VAR.FILE:" FILE IS MISSING";GOTO 1999
   	END
   	VAR.FILE = 'DP.COA' : SAVE.PER<1>
   	VOC.ITEM<2>=PMC.PATH:'-GLS-BACKUP/':VAR.FILE
   	VOC.ITEM<3>=PMC.PATH:'-GLS-BACKUP/D_':VAR.FILE
   	WRITE VOC.ITEM ON VOC, VAR.FILE
   	OPEN '',VAR.FILE TO FFILE.NAME(4) ELSE
      		ERRMSG = VAR.FILE:" FILE IS MISSING";GOTO 1999
   	END
   	VAR.FILE = 'CC.COA' : SAVE.PER<1>
   	VOC.ITEM<2>=PMC.PATH:'-GLS-BACKUP/':VAR.FILE
   	VOC.ITEM<3>=PMC.PATH:'-GLS-BACKUP/D_':VAR.FILE
   	WRITE VOC.ITEM ON VOC, VAR.FILE
   	OPEN '',VAR.FILE TO FFILE.NAME(5) ELSE
     		ERRMSG = VAR.FILE:" FILE IS MISSING";GOTO 1999
   	END
   	FFILE.NAME.PTR = 5
   	FOR PER = 1 TO SAVE.PTR UNTIL ERRMSG # ""
      		FFILE.NAME.PTR = FFILE.NAME.PTR + 1
      		VAR.FILE = 'GLM' : SAVE.PER<PER>
      		VOC.ITEM<2>=PMC.PATH:'-GLS-BACKUP/':VAR.FILE
      		VOC.ITEM<3>=PMC.PATH:'-GLS-BACKUP/D_':VAR.FILE
      		WRITE VOC.ITEM ON VOC, VAR.FILE
      		OPEN '',VAR.FILE TO FFILE.NAME(FFILE.NAME.PTR) ELSE
         		ERRMSG = VAR.FILE:" FILE IS MISSING"
      		END
   	NEXT PER
1999 RETURN



2000 *
	*P_X  = 3 ; P_Y = 23 ; P_VALUE = 'NOW RESTORING COA FILE FOR PERIOD - ':SAVE.PER<1> ; P_OPT = "CL"
   	*CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   	SELECT FFILE.NAME(1)
   		DATA = 1
   	LOOP
      		READNEXT COA.ID ELSE DATA = 0
   	WHILE DATA DO
      		IF COA.ID[1,3] <> CONO THEN GOTO 2100
      		MATREAD COA.REC FROM COA, COA.ID ELSE
         		MATREAD COA.REC FROM FFILE.NAME(1), COA.ID ELSE GOTO 2100
         		MATWRITE COA.REC ON COA, COA.ID
      		END
2100 	REPEAT
   	*P_X  = 3 ; P_Y = 23 ; P_VALUE = 'NOW CLEARING CO.COA.BAL FILE FOR PERIOD - ':SAVE.PER<1> ; P_OPT = "CL"
   	*CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   	SELECT CO.COA.BAL
   		DATA = 1
   	LOOP
      		READNEXT CO.ID ELSE DATA = 0
   	WHILE DATA DO
      		IF CO.ID[1,3] = CONO THEN
         		READU DUMMY FROM CO.COA.BAL, CO.ID ELSE DUMMY = ""
         		DELETE CO.COA.BAL, CO.ID
      		END
   	REPEAT
   	*P_X  = 3 ; P_Y = 23 ; P_VALUE = 'NOW RESTORING CO.COA.BAL FILE FOR PERIOD - ':SAVE.PER<1> ; P_OPT = "CL"
	*CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   	SELECT FFILE.NAME(2)
   		DATA = 1
   	LOOP
      		READNEXT CO.ID ELSE DATA = 0
   	WHILE DATA DO
      		IF CO.ID[1,3] <> CONO THEN GOTO 2200
      		MATREAD CB.REC FROM FFILE.NAME(2), CO.ID ELSE GOTO 2200
      		MATWRITE CB.REC ON CO.COA.BAL, CO.ID
2200 	REPEAT
   	*P_X  = 3 ; P_Y = 23 ; P_VALUE = 'NOW CLEARING DV.COA.BAL FILE FOR PERIOD - ':SAVE.PER<1> ; P_OPT = "CL"
   	*CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   	SELECT DV.COA.BAL
   		DATA = 1
   	LOOP
      		READNEXT DV.ID ELSE DATA = 0
   	WHILE DATA DO
      		IF DV.ID[1,3] = CONO THEN
         		READU DUMMY FROM DV.COA.BAL, DV.ID ELSE DUMMY = ""
         		DELETE DV.COA.BAL, DV.ID
      		END
   	REPEAT
   	*P_X  = 3 ; P_Y = 23 ; P_VALUE = 'NOW RESTORING DV.COA.BAL FILE FOR PERIOD - ':SAVE.PER<1> ; P_OPT = "CL"
	*CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   	SELECT FFILE.NAME(3)
   		DATA = 1
   	LOOP
      		READNEXT DV.ID ELSE DATA = 0
   	WHILE DATA DO
      		IF DV.ID[1,3] <> CONO THEN GOTO 2300
      		MATREAD CB.REC FROM FFILE.NAME(3), DV.ID ELSE GOTO 2300
      		MATWRITE CB.REC ON DV.COA.BAL, DV.ID
2300 	REPEAT
   	*P_X  = 3 ; P_Y = 23 ; P_VALUE = 'NOW CLEARING DP.COA.BAL FILE FOR PERIOD - ':SAVE.PER<1> ; P_OPT = "CL"
   	*CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   	SELECT DP.COA.BAL
   		DATA = 1
   	LOOP
      		READNEXT DP.ID ELSE DATA = 0
   	WHILE DATA DO
      		IF DP.ID[1,3] = CONO THEN
         		READU DUMMY FROM DP.COA.BAL, DP.ID ELSE DUMMY = ""
         		DELETE DP.COA.BAL, DP.ID
      		END
   	REPEAT
   	*P_X  = 3 ; P_Y = 23 ; P_VALUE = 'NOW RESTORING DP.COA.BAL FILE FOR PERIOD - ':SAVE.PER<1> ; P_OPT = "CL"
   	*CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   	SELECT FFILE.NAME(4)
   		DATA = 1
   	LOOP
      		READNEXT DP.ID ELSE DATA = 0
   	WHILE DATA DO
      		IF DP.ID[1,3] <> CONO THEN GOTO 2400
      		MATREAD CB.REC FROM FFILE.NAME(4), DP.ID ELSE GOTO 2400
      		MATWRITE CB.REC ON DP.COA.BAL, DP.ID
2400 	REPEAT
   	*P_X  = 3 ; P_Y = 23 ; P_VALUE = 'NOW CLEARING CC.COA.BAL FILE FOR PERIOD - ':SAVE.PER<1> ; P_OPT = "CL"
   	*CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   	SELECT CC.COA.BAL
   		DATA = 1
   	LOOP
      		READNEXT CC.ID ELSE DATA = 0
   	WHILE DATA DO
      		IF CC.ID[1,3] = CONO THEN
     			READU DUMMY FROM CC.COA.BAL, CC.ID ELSE DUMMY = ""
         		DELETE CC.COA.BAL, CC.ID
      		END
   	REPEAT
   	*P_X  = 3 ; P_Y = 23 ; P_VALUE = 'NOW RESTORING CC.COA.BAL FILE FOR PERIOD - ':SAVE.PER<1> ; P_OPT = "CL"
   	*CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   	SELECT FFILE.NAME(5)
   		DATA = 1
   	LOOP
      		READNEXT CC.ID ELSE DATA = 0
   	WHILE DATA DO
      		IF CC.ID[1,3] <> CONO THEN GOTO 2500
      		MATREAD CB.REC FROM FFILE.NAME(5), CC.ID ELSE GOTO 2500
      		MATWRITE CB.REC ON CC.COA.BAL, CC.ID
2500 	REPEAT
   	READU COUNTER FROM CONTROL, CONO : "GLACOUNTER" ELSE COUNTER = 1
   	FOR PER = 1 TO SAVE.PTR
      		*P_X  = 3 ; P_Y = 23 ; P_VALUE = 'NOW RESTORING GLA FILE FOR PERIOD - ':SAVE.PER<PER> ; P_OPT = "CL"
      		*CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      		SELECT FFILE.NAME(PER + 5)
      			DATA = 1
      		LOOP
         		READNEXT GLA.ID ELSE DATA = 0
      		WHILE DATA DO
         		IF GLA.ID[1,3] <> CONO THEN GOTO 2600
         		MATREAD GLM.REC FROM FFILE.NAME(PER + 5), GLA.ID ELSE GOTO 2600
         		IF GLM.MON <> SAVE.PER<PER> THEN GOTO 2600
         		NEW.ID = GLA.ID; FND = 1
         		LOOP
            			READ DUMMY FROM GLA, NEW.ID ELSE FND = 0
         		WHILE FND DO
            			COUNTER = COUNTER + 1
            			IF COUNTER > 999998 THEN COUNTER = 1
            			COUNTER = STR("0",6-LEN(COUNTER)) : COUNTER
            			NEW.ID = GLA.ID[1,ACCT.LEN] : COUNTER
         		REPEAT
         			MATWRITE GLM.REC ON GLA, NEW.ID
2600  		REPEAT
   	NEXT PER
   	*P_X  = 3 ; P_Y = 23 ; P_VALUE = 'NOW RESTORING CURRENT PERIOD (GLM)' ; P_OPT = "CL"
   	*CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   	SELECT GLM
   		DATA = 1
   	LOOP
      		READNEXT GLA.ID ELSE DATA = 0
   	WHILE DATA DO
      		IF GLA.ID[1,3] <> CONO THEN GOTO 2655
      		MATREADU GLM.REC FROM GLM, GLA.ID ELSE
         		RELEASE GLM, GLA.ID
         		GOTO 2655
      		END
      		NEW.ID = GLA.ID; FND = 1
      		LOOP
         		READ DUMMY FROM GLA, NEW.ID ELSE FND = 0
      		WHILE FND DO
         		COUNTER = COUNTER + 1
         		IF COUNTER > 999998 THEN COUNTER = 1
         		COUNTER = STR("0",6-LEN(COUNTER)) : COUNTER
         		NEW.ID = GLA.ID[1,ACCT.LEN] : COUNTER
      		REPEAT
      		MATWRITE GLM.REC ON GLA, NEW.ID
2650  		DELETE GLM, GLA.ID
2655 	REPEAT
   	WRITE COUNTER ON CONTROL, CONO : "GLACOUNTER"
   	*P_X  = 3 ; P_Y = 23 ; P_VALUE = 'NOW CLEARING GLX FILE' ; P_OPT = ""
   	*CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   	SELECT GLX
   		DATA = 1
   	LOOP
      		READNEXT GLX.ID ELSE DATA = 0
   	WHILE DATA DO
      		IF GLX.ID[1,3] <> CONO THEN GOTO 2670
      		READU DUMMY FROM GLX, GLX.ID ELSE
         		RELEASE GLX, GLX.ID; GOTO 2670
      		END
      		DELETE GLX, GLX.ID
2670 	REPEAT
   	IF CO.GLS.HIST<1,1> # "Y" THEN GOTO 3000
   	*P_X  = 3 ; P_Y = 23 ; P_VALUE = 'NOW CLEARING GLH FILE UP TO PERIOD - ':LST.PER ; P_OPT = "CL"
   	*CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   	DATA = 1
   	SELECT GLH
   	LOOP
      		READNEXT GLH.ID ELSE DATA = 0
   	WHILE DATA DO
      		IF GLH.ID[1,3] <> CONO THEN GOTO 2700
      		MATREADU GLM.REC FROM GLH, GLH.ID ELSE
         		RELEASE GLH, GLH.ID; GOTO 2700
      		END
      		IF GLM.MON > LST.PER THEN
         		DELETE GLH, GLH.ID
      		END ELSE
         		RELEASE GLH, GLH.ID
      		END
2700 	REPEAT
   	*P_X  = 3 ; P_Y = 23 ; P_VALUE = 'NOW CLEARING GLHX FILE UP TO PERIOD - ':LST.PER ; P_OPT = "CL"
   	*CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
   	DATA = 1
   	SELECT GLHX
   	LOOP
      		READNEXT GLHX.ID ELSE DATA = 0
   	WHILE DATA DO
      		IF GLHX.ID[1,3] <> CONO THEN GOTO 2800
      		READU DUMMY FROM GLHX, GLHX.ID ELSE
         		RELEASE GLHX, GLHX.ID; GOTO 2800
      		END
      		GLHX.PER = GLHX.ID[LEN(GLHX.ID)-5,6]
      		IF GLHX.PER > LST.PER THEN
         		DELETE GLHX, GLHX.ID
      		END ELSE
         		RELEASE GLHX, GLHX.ID
      		END
2800 	REPEAT
3000 	MATREADU FISCAL.REC FROM CONTROL, CONO : "FISCAL" ELSE
      		MAT FISCAL.REC = ""
   	END
   	FR.CURR.PER = SAVE.PER<1>
   	FR.CURR.DATE = SAVE.DATE<1>
   	MATWRITE FISCAL.REC ON CONTROL, CONO : "FISCAL"
   	IF CURR.YR # BEG.YR THEN
      		READU OPENDATES FROM CONTROL, CONO : "OPENDATES" ELSE
         		OPENDATES = ""
         		RELEASE CONTROL, CONO : "OPENDATES"
      		END
      		IF OPENDATES # "" THEN
         		FOR PER = 1 TO NUM.PERIODS
            			OPENDATES<PER> = OCONV(OPENDATES<PER>,"D/")
            			OPENDATES<PER> = OPENDATES<PER>[1,6]:OPENDATES<PER>[7,4]-1
            			OPENDATES<PER> = ICONV(OPENDATES<PER>,"D/")
         		NEXT PER
         		WRITE OPENDATES ON CONTROL, CONO : "OPENDATES"
      		END
   	END
RETURN



99999
IF DEL.CONTROL THEN
	READU PROCESS.CONTROL FROM CONTROL,CONO:'GLS.BACKUP.RESTORE' THEN
       	PROCESS.CONTROL = ''
         	WRITE PROCESS.CONTROL ON CONTROL, CONO:'GLS.BACKUP.RESTORE'
      	END ELSE
       	RELEASE CONTROL, CONO:'GLS.BACKUP.RESTORE'
      	END
END

IF ERRMSG # "" THEN
	VAL = RBO.setProperty('','ServerStatus','E')
	VAL = RBO.setProperty('','ServerMessage',ERRMSG)
END ELSE
	VAL = RBO.setProperty('','ServerStatus','')
END
* End of method code
RETURN

