SUBROUTINE ORDM_BUILD_ORD_JOB
********************************************************************************
*   Program name :- ORDM_BUILD_ORD_JOB
*   Created:- 3/3/2006
*   Programmer :- Suhail Hussain S
********************************************************************************
$INCLUDE WWINSERT RBO.H

$INCLUDE CPYLIB COMMON1
$INCLUDE JCS.CPYLIB COM.JCS.LINK
$INCLUDE ICS.CPYLIB COM.INV.MAIN
$INCLUDE ICS.CPYLIB COM.INV.SERIAL
$INCLUDE JCS.CPYLIB COM.INV.STATS
$INCLUDE PMC.CPYLIB COM.CUST
$INCLUDE OPS.CPYLIB COM.ORDER
$INCLUDE OPS.CPYLIB COM.OPS.LINK

$DEFINE INVENTORY
$DEFINE ORDER
$DEFINE ORDERDETAILINQ
$DEFINE COMPOPS
$DEFINE CUSTOMER
$DEFINE CATEGORY
$DEFINE INVWHSE
$DEFINE FNGDSTATS
$DEFINE FNGDORDERSTATS
$DEFINE JOB
$DEFINE FILEVARS

$INCLUDE PMC.CPYLIB COMP.OPS
$INCLUDE PMC.CPYLIB CUSTOMER
$INCLUDE OPS.CPYLIB ORDER
$INCLUDE OPS.CPYLIB ORDER.DETAIL
$INCLUDE OPS.CPYLIB ORDER.DETAIL.INQ
$INCLUDE OPS.CPYLIB ORDER.RELEASE
$INCLUDE ICS.CPYLIB INVENTORY
$INCLUDE ICS.CPYLIB CATEGORY
$INCLUDE ICS.CPYLIB INV.WHSE
$INCLUDE ICS.CPYLIB INV.FNGD
$INCLUDE ICS.CPYLIB INV.CNV
$INCLUDE ICS.CPYLIB FNGD.BOM
$INCLUDE ICS.CPYLIB FNGD.STATS
$INCLUDE ICS.CPYLIB FNGD.ORDER.STATS
$INCLUDE ICS.CPYLIB FNGD.JOB.STATS
$INCLUDE ICS.CPYLIB PRICE.TABLE
$INCLUDE ICS.CPYLIB WAREHOUSE
$INCLUDE JES.CPYLIB ESTIMATE
$INCLUDE JCS.CPYLIB JOB
$INCLUDE PMC.CPYLIB SHIP.TO
$INCLUDE CPYLIB FILE.VARS
$INCLUDE CPYLIB CHAR

   OPEN "","CUSTOMER" TO CUSTOMER ELSE ERRMSG = "CANNOT OPEN CUSTOMER FILE";GOTO 91000
   OPEN "","ORDER" TO ORDER ELSE ERRMSG = "CANNOT OPEN ORDER FILE";GOTO 91000
   OPEN "","ORDER.DETAIL" TO ORDER.DETAIL ELSE ERRMSG = "CANNOT OPEN ORDER.DETAIL FILE";GOTO 91000
   OPEN "","ORDER.RELEASE" TO ORDER.RELEASE ELSE ERRMSG = "CANNOT OPEN ORDER.RELEASE FILE";GOTO 91000
   OPEN "","INVENTORY" TO INVENTORY ELSE ERRMSG = "CANNOT OPEN INVENTORY FILE";GOTO 91000
   OPEN "","CATEGORY" TO CATEGORY ELSE ERRMSG = "CANNOT OPEN CATEGORY FILE";GOTO 91000
   OPEN "","INV.WHSE" TO INV.WHSE ELSE ERRMSG = "CANNOT OPEN INV.WHSE FILE";GOTO 91000
   OPEN "","INV.FNGD" TO INV.FNGD ELSE ERRMSG = "CANNOT OPEN INV.FNGD FILE";GOTO 91000
   OPEN "","FNGD.BOM" TO FNGD.BOM ELSE ERRMSG = "CANNOT OPEN FNGD.BOM FILE";GOTO 91000
   OPEN "","FNGD.STATS" TO FNGD.STATS ELSE ERRMSG = "CANNOT OPEN FNGD.STATS FILE";GOTO 91000
   OPEN "","FNGD.ORDER.STATS" TO FNGD.ORDER.STATS ELSE ERRMSG = "CANNOT OPEN  FILE";GOTO 91000
   OPEN "","FNGD.JOB.STATS" TO FNGD.JOB.STATS ELSE ERRMSG = "CANNOT OPEN FNGD.JOB.STATS FILE";GOTO 91000
   OPEN "","PRICE.TABLE" TO PRICE.TABLE ELSE ERRMSG = "CANNOT OPEN PRICE.TABLE FILE";GOTO 91000
   OPEN "","WAREHOUSE" TO WAREHOUSE ELSE ERRMSG = "CANNOT OPEN WAREHOUSE FILE";GOTO 91000
   OPEN "","ESTIMATE" TO ESTIMATE ELSE ERRMSG = "CANNOT OPEN ESTIMATE FILE";GOTO 91000
   OPEN "","JOB" TO JOB ELSE ERRMSG = "CANNOT OPEN JOB FILE";GOTO 91000
   OPEN "","CONTROL" TO CONTROL ELSE ERRMSG = "CANNOT OPEN CONTROL FILE";GOTO 91000
   OPEN "","SHIP.TO" TO SHIP.TO ELSE ERRMSG = "CANNOT OPEN SHIP.TO FILE";GOTO 91000

   STATUS = RBO.getProperty("","INARR",INARR)
   STATUS = RBO.getProperty("","PMCProperty",PMCProperty)
   STATUS = RBO.getProperty("","GRIDARR",OSD_FULL_ARR)
   STATUS = RBO.getProperty("","DISPARR",ORD_JOB)
   
   IF ORD_JOB = -1 THEN ORD_JOB = ""
   IF OSD_FULL_ARR = -1 THEN OSD_FULL_ARR = ""
   IF INARR = -1 THEN INARR = ""

   STATUS = RBO.setProperty("","GRIDARR","")
   STATUS = RBO.setProperty("","DISAPRR","")

   CONO           = PMCProperty<1,4>
   ORD.SHIP.TO    = INARR<1,1>
   ORDNO          = INARR<1,2>
   RET_VAL         = ""
   MAT ORD.DET.SUM = ""
   MAT ORD.DET.INQ = ""
   SHIP_CNT = 0

   *IF ORD.SHIP.TO = "" THEN RETURN

   SWAP "#" WITH VM IN ORD.SHIP.TO

   SHIP_CNT = DCOUNT(ORD.SHIP.TO,VM)
   IF SHIP_CNT > 1 THEN
      FOR X = 1 TO SHIP_CNT
         TEMPORD_REC = FIELD(OSD_FULL_ARR,"¥",X,1)
         MATPARSE ORD.DET.REC FROM TEMPORD_REC,"ð"
         FOR P = 1 TO ORD.DET.REC.SIZE
           ORD.DET.SUM(P,X) = ORD.DET.REC(P)
         NEXT P
      NEXT X
      FOR S = 1 TO SHIP_CNT
         FOR P = 1 TO ORD.DET.REC.SIZE
           ORD.DET.REC(P) = ORD.DET.SUM(P,S)
         NEXT P
         STATUS = "L"; SHPNO = ORD.SHIP.TO<1,S>
         CALL ORDER_LINE_UPD(CONO,ORDNO,SHPNO,STATUS)
      NEXT X
   END ELSE
      MATPARSE ORD.DET.REC FROM OSD_FULL_ARR,"ð"
      FOR P = 1 TO ORD.DET.REC.SIZE
        ORD.DET.SUM(P,1) = ORD.DET.REC(P)
      NEXT P
      STATUS = "L"; SHPNO = ORD.SHIP.TO<1,1>
      CALL ORDER_LINE_UPD(CONO,ORDNO,SHPNO,STATUS)
   END
6000*
   OJQ.A.QTY = ""
   LINKJOB = ""
   ORD.JOB = ""
   ORD.JOB = ORD_JOB
   LINKJOB = ORD.JOB
   QCNT = DCOUNT(ODQ.JOB,VM)
   FOR Q = 1 TO QCNT
      JCNT = DCOUNT(ODQ.JOB<1,Q>,SVM)
      FOR OJ = 1 TO JCNT
         IF ODQ.JOB.QTY<1,Q,OJ> > 0 THEN
            LOCATE ODQ.JOB<1,Q,OJ> IN ORD.JOB<1>,1 SETTING L ELSE
               ORD.JOB<1,L> = ODQ.JOB<1,Q,OJ>
            END
            LOCATE ODQ.JOB<1,Q,OJ> IN LINKJOB<1>,1 SETTING L ELSE
               LINKJOB<1,L> = ODQ.JOB<1,Q,OJ>
            END
            OJQ.A.QTY<1,L> = OJQ.A.QTY<1,L> + ODQ.JOB.QTY<1,Q,OJ>
         END
      NEXT OJ
   NEXT Q
   LINES = DCOUNT(LINKJOB,VM)

   START.LINE = 1
   LAST.LINE = LINES
   
   ICR.CNV = "MD0"; ICR.CNV1 = "MD0,"
   ICR.DV1 = 1; ICR.MT1 = 1; ICR.DV2 = 1000
   ICR.TYPE = 3; ICR.SCAL = 0

   FOR N = START.LINE TO LAST.LINE
      RET_VAL<1,N,1> = LINKJOB<1,N>
      PQTY = INT(((OJQ.A.QTY<1,N> / ICR.DV1 ) * ICR.MT1 ) / ICR.DV2 + .5)
      RET_VAL<1,N,2> = OCONV(PQTY,ICR.CNV1)
   NEXT N
   STATUS = RBO.setProperty("","RETARR",RET_VAL)
   STATUS = RBO.setProperty("","DISPARR",ORD.JOB)
RETURN

91000*
   STATUS = RBO.setProperty("","ServerStatus",1)
   STATUS = RBO.setProperty("","ServerMessage",ERRMSG)
RETURN

