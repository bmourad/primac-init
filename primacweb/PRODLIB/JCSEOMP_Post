*********************************************************************
* REVISION    - [12.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - JCSBP
* PROGRAM     - JCS.EOM.POST
* BY          - ZIAD YAMOUT, C.B.A
* DATE        - 02/28/87
* DESCRIPTION -
*             Create the JCS.EOM.TRANS data.
*MODIFIED	- (05/17/05) BY ZAHOOR AHMED
*		   FOR printflag 

*ENDDOC
*********************************************************************
*
***** INSERT FILE EQUATE
*
$INCLUDE WWINSERT RBO.H
$INCLUDE PMC.CPYLIB COMPANY
$INCLUDE PMC.CPYLIB GLTABLE
$INCLUDE PMC.CPYLIB SALESDATES
$INCLUDE PMC.CPYLIB FISCAL
$INCLUDE PMC.CPYLIB EOM.TRANS
$INCLUDE PMC.CPYLIB COA
$INCLUDE JCS.CPYLIB EOM.ACCT
$INCLUDE JCS.CPYLIB JOB
$INCLUDE PMC.CPYLIB CUSTOMER
$INCLUDE PMC.CPYLIB INVOICE.SALES.STATS
$INCLUDE PMC.CPYLIB WIP.SALES.STATS
$INCLUDE ICS.CPYLIB INV.JOB.STATS
$INCLUDE ICS.CPYLIB INV.STATS
$INCLUDE ICS.CPYLIB INV.WHSE
$INCLUDE ICS.CPYLIB INV.WHSE.LOC
$INCLUDE JCS.CPYLIB COST.CNTR.WIP
$INCLUDE PMC.CPYLIB COST.CNTR
$INCLUDE JCS.CPYLIB INVOICE
$INCLUDE PMC.CPYLIB POST.REJECTS
$INCLUDE PMC.CPYLIB DIVISION ;* T23278
$INCLUDE CPYLIB CHAR
*
**** INTITIALIZATION
*
***** SETUP ERRMSG ROUTINE
*
ERRMSG=''
MAT FISCAL.REC = ''
MAT EOM.ACCT.REC = ''
Printfalg = ''
EMAIL_ADDR = ''
*
*Printfalg is view/mail/print/file
*
STATUS = RBO.getProperty('','ID',ID)
STATUS = RBO.getProperty('','PMCProperty',PMCProperty)
STATUS = RBO.getProperty('','PRINT_FLAG',PRINT.FLAG)
STATUS = RBO.getProperty('','EmailAddress',EMAIL_ADDR)
	
CONO = ID[1,3]
MODULE=ID[4,3]
BEGIN CASE
   CASE MODULE[1,2] = 'AP'
   CASE MODULE[1,2] = 'AR'
   CASE 1
      MODULE = MODULE[1,2]
END CASE
FISCPFX=MODULE

STATUS = RBO.getProperty('','DivCode',DIV.CODE)
STATUS = RBO.getProperty('','DivPos',POS)
STATUS = RBO.getProperty('','FR_CURR_PER',FR.CURR.PER)
STATUS = RBO.getProperty('','FR_CURR_DATE',FR.CURR.DATE)
STATUS = RBO.getProperty('','FR_NEXT_PER',FR.NEXT.PER)
STATUS = RBO.getProperty('','FR_NEXT_DATE',FR.NEXT.DATE)
STATUS = RBO.getProperty('','FR_D_M_FLG',FR.D.M.FLG)
STATUS = RBO.getProperty('','FR_CLOSE_DATE',FR.CLOSE.DATE)
FOR P = 1 TO DCOUNT(FR.CURR.PER,VM)
   IF INDEX(FR.CURR.DATE<1,P>,'/',1) > 0 THEN FR.CURR.DATE<1,P> = ICONV(FR.CURR.DATE<1,P>,'D2/')
   IF INDEX(FR.NEXT.DATE<1,P>,'/',1) > 0 THEN FR.NEXT.DATE<1,P> = ICONV(FR.NEXT.DATE<1,P>,'D2/')
   IF INDEX(FR.CLOSE.DATE<1,P>,'/',1) > 0 THEN FR.CLOSE.DATE<1,P> = ICONV(FR.CLOSE.DATE<1,P>,'D2/')
NEXT P
*
STATUS = RBO.getProperty('','FngdFlag',FNGD.FLAG)
PERIOD = FR.CURR.PER<1,POS>
BEGIN CASE
   CASE MODULE = 'IC'
      IF FNGD.FLAG = 'F' THEN
         MODULE := 'F'
      END ELSE MODULE := 'S'
   CASE MODULE[1,2] = 'AP'
   CASE MODULE[1,2] = 'AR'
   CASE 1
      MODULE := 'S'
END CASE
*
*Get the printflag view/Email/File/Print
*
BEGIN CASE
   CASE PRINT.FLAG = 'PrintData'
	Printfalg = 'View'
   CASE PRINT.FLAG = 'EmailData'
	Printfalg = 'Email'
   CASE PRINT.FLAG = 'File'
	Printfalg = 'Print'
   CASE 1
	Printfalg = 'Print'
END CASE
*
TRANFILE=MODULE:".EOM.TRANS":CONO:DIV.CODE
REJECTFILE=MODULE:".POST.REJECTS":CONO:DIV.CODE
WIPFILE='WIP.SALES.STATS':CONO:DIV.CODE
OPEN TRANFILE TO EOM.TRANS ELSE
   STMT='CREATE.FILE ':TRANFILE:' 1,1 101,1'
   UDTEXECUTE STMT CAPTURING JUNK
   STMT='COPY FROM DICT ':MODULE:'.EOM.TRANS TO DICT ':TRANFILE:' ALL'
   UDTEXECUTE STMT CAPTURING JUNK
END
OPEN REJECTFILE TO POST.REJECTS ELSE
   STMT='CREATE.FILE ':REJECTFILE:' 1,1 7,1'
   UDTEXECUTE STMT CAPTURING JUNK
   STMT='COPY FROM DICT ':MODULE:'.POST.REJECTS TO DICT ':REJECTFILE:' ALL'
   UDTEXECUTE STMT CAPTURING JUNK
END
OPEN WIPFILE TO WIP.SALES.STATS ELSE
   STMT='CREATE.FILE ':WIPFILE:' 1,1 7,1'
   UDTEXECUTE STMT CAPTURING JUNK
   STMT='COPY FROM DICT WIP.SALES.STATS TO DICT ':WIPFILE:' ALL'
   UDTEXECUTE STMT CAPTURING JUNK
END
***** OPEN FILES
*
OPEN '','CUSTOMER' TO CUSTOMER ELSE ERRMSG='CUSTOMER FILE MISSING';GOTO 93000
OPEN '','COMPANY' TO COMPANY ELSE ERRMSG='COMPANY FILE MISSING';GOTO 93000
OPEN '','CONTROL' TO CONTROL ELSE ERRMSG='CONTROL FILE MISSING';GOTO 93000
OPEN '','INVOICE' TO INVOICE ELSE ERRMSG='INVOICE FILE IS MISSING';GOTO 93000
OPEN '','SALES.CODE' TO SALES.CODE ELSE ERRMSG='SALES.CODE FILE MISSING';GOTO 93000
OPEN '','TAX' TO TAX ELSE ERRMSG='TAX FILE MISSING';GOTO 93000
OPEN '','SHIP.VIA' TO SHIP.VIA ELSE ERRMSG='SHIP.VIA FILE MISSING';GOTO 93000
OPEN '','JOB' TO JOB ELSE ERRMSG='JOB FILE MISSING';GOTO 93000
OPEN '','INVENTORY' TO INVENTORY ELSE ERRMSG='INVENTORY FILE MISSING';GOTO 93000
OPEN '','CATEGORY' TO CATEGORY ELSE ERRMSG='CATEGORY FILE MISSING';GOTO 93000
OPEN '','CATEGORY.OSP' TO CATEGORY.OSP ELSE ERRMSG='CATEGORY.OSP FILE MISSING';GOTO 93000
OPEN '','COST.CNTR.WIP' TO COST.CNTR.WIP ELSE ERRMSG='COST.CNTR.WIP FILE MISSING';GOTO 93000
OPEN '','COST.CNTR' TO COST.CNTR ELSE ERRMSG='COST.CNTR FILE MISSING';GOTO 93000
OPEN '','COA' TO COA ELSE ERRMSG='COA FILE IS MISSING';GOTO 93000
OPEN '','INV.WHSE.LOC' TO INV.WHSE.LOC ELSE ERRMSG='INV.WHSE.LOC FILE MISSING';GOTO 93000
OPEN '','INV.WHSE' TO INV.WHSE ELSE ERRMSG='INV.WHSE FILE MISSING';GOTO 93000
OPEN '','INV.STATS' TO INV.STATS ELSE ERRMSG='INV.STATS FILE MISSING';GOTO 93000
OPEN '','INV.JOB.STATS' TO INV.JOB.STATS ELSE ERRMSG='INV.JOB.STATS FILE MISSING';GOTO 93000
OPEN '','JOB.TIME' TO JOB.TIME ELSE ERRMSG='JOB.TIME FILE IS MISSING';GOTO 93000
OPEN '','JOB.TIME.TAG' TO JOB.TIME.TAG ELSE ERRMSG='JOB.TIME.TAG FILE IS MISSING';GOTO 93000
OPEN '','JOB.MATL' TO JOB.MATL ELSE ERRMSG='JOB.MATL FILE IS MISSING';GOTO 93000
OPEN '','JOB.OSP' TO JOB.OSP ELSE ERRMSG='JOB.OSP FILE IS MISSING';GOTO 93000
OPEN '','JOB.SHIP' TO JOB.SHIP ELSE ERRMSG='JOB.SHIP FILE IS MISSING';GOTO 93000
OPEN '','JOB.MISC' TO JOB.MISC ELSE ERRMSG='JOB.MISC FILE IS MISSING';GOTO 93000
OPEN '','OUTSIDE.PO' TO OUTSIDE.PO ELSE ERRMSG='OUTSIDE.PO FILE IS MISSING';GOTO 93000
OPEN '',TRANFILE TO EOM.TRANS ELSE ERRMSG=TRANFILE:' FILE MISSING';GOTO 93000
OPEN '',REJECTFILE TO POST.REJECTS ELSE ERRMSG=REJECTFILE:' FILE IS MISSING';GOTO 93000
OPEN '',WIPFILE TO WIP.SALES.STATS ELSE ERRMSG=WIPFILE:' FILE IS MISSING';GOTO 93000
*
WRITE FISCPFX : " ~~ " ON CONTROL,"FISC"

MATREAD COMP.REC FROM COMPANY, CONO ELSE
   ERRMSG = "COMPANY RECORD IS MISSING"
   GOTO 93000
END
IF CO.ARS = "Y" THEN
   OPEN '','OPEN.RECV' TO OPEN.RECV ELSE ERRMSG='OPEN.RECV FILE MISSING';GOTO 93000
END
IF CO.OPS = 'Y' THEN
   OPEN '','INV_RECEIPTS' TO INV_RECEIPTS ELSE        
      ERRMSG="INV_RECEIPTS FILE IS MISSING";GOTO 93000 
   END                                                
   OPEN '','FNGD.WIP.HIST' TO FNGD.WIP.HIST ELSE ERRMSG='FNGD.WIP.HIST FILE IS MISSING';GOTO 93000
   OPEN '','FNGD_WIP_HIST_TAG' TO FNGD_WIP_HIST_TAG ELSE ERRMSG='FNGD_WIP_HIST_TAG FILE IS MISSING';GOTO 93000
   OPEN '','JOB.FNGD.STATS' TO JOB.FNGD.STATS ELSE ERRMSG='JOB.FNGD.STATS FILE MISSING';GOTO 93000
END
MATREAD GLTABLE.REC FROM CONTROL, CONO:'GLTABLE' ELSE
   RELEASE CONTROL, CONO:MODULE:"FISCAL"
   ERRMSG = 'CANNOT LOCATE CONTROL, GLTABLE'
   GOTO 93000
END
IN.ACCT.LEN=LEN(CO.ACCT.PIC)
GEN.DIV='00'; GEN.DEPT='00'; GEN.CCTR='000'
READ PERIOD.REC FROM CONTROL, CONO:"ACCT.PERIODS" ELSE
   PERIOD.REC = ""
   PERIOD.REC<1> = 12
END
NUM.PERIODS = PERIOD.REC<1>
MATREAD SALESDATES.REC FROM CONTROL, CONO:"SALESDATES" ELSE
   ERRMSG='Cannot read the SALESDATES Control record.'
   GOTO 93000
END
CLEARFILE EOM.TRANS
CLEARFILE POST.REJECTS
CLEARFILE WIP.SALES.STATS
PRR.SEQ = 10000
FISCAL.YR = FR.CURR.PER<1,POS>[1,4]
FISCAL.PER = FR.CURR.PER<1,POS>[5,2]
LFISCAL.YR = FISCAL.YR
LFISCAL.PER = FISCAL.PER -1
IF LFISCAL.PER = 0 THEN
   LFISCAL.PER = NUM.PERIODS
   LFISCAL.YR -= 1
END
LFISCAL.PER = LFISCAL.PER'R%2'
READ PRODUCTION.REC FROM CONTROL,CONO:FISCAL.YR:'PRODUCTION.WEEKS' THEN NULL ELSE
   ERRMSG=FISCAL.YR:'PRODUCTION.WEEKS CONTROL RECORD IS MISSING'
   GOTO 93000
END
STATUS = RBO.getProperty('','DetailRptFlag',DET.RPT.FLG)
BEGIN CASE
   CASE DET.RPT.FLG = "Y"
      NO.DETAIL = 0
   CASE DET.RPT.FLG = "N"
      NO.DETAIL = 1
END CASE
CLEARFILE EOM.TRANS
CLEARFILE POST.REJECTS
PRR.SEQ = 10000
MATREAD COA.REC FROM COA, CONO : GLTB.SALES ELSE COA.LEVEL = 0
SA.SAL.ACCT = GLTB.SALES
SA.SAL.LEVEL = COA.LEVEL
MATREAD COA.REC FROM COA, CONO : GLTB.RET.ALLOW ELSE COA.LEVEL = 0
SA.RET.ACCT = GLTB.RET.ALLOW
SA.RET.LEVEL = COA.LEVEL
MATREAD COA.REC FROM COA, CONO : GLTB.AR ELSE COA.LEVEL = 0
SA.INV.ACCT = GLTB.AR
SA.INV.LEVEL = COA.LEVEL
MATREAD COA.REC FROM COA, CONO : GLTB.PRE.BILL ELSE COA.LEVEL = 0
SA.PBL.ACCT = GLTB.PRE.BILL
SA.PBL.LEVEL = COA.LEVEL
MATREAD COA.REC FROM COA, CONO : GLTB.MSC.SALE ELSE COA.LEVEL = 0
SA.MSC.ACCT = GLTB.MSC.SALE
SA.MSC.LEVEL = COA.LEVEL
MATREAD COA.REC FROM COA, CONO : GLTB.SALES.TAX ELSE COA.LEVEL = 0
SA.TAX.ACCT = GLTB.SALES.TAX
SA.TAX.LEVEL = COA.LEVEL
MATREAD COA.REC FROM COA, CONO : GLTB.FRT ELSE COA.LEVEL = 0
SA.FRT.ACCT = GLTB.FRT
SA.FRT.LEVEL = COA.LEVEL
MATREAD COA.REC FROM COA, CONO : GLTB.TRADE.DISC ELSE COA.LEVEL = 0
SA.DSC.ACCT = GLTB.TRADE.DISC
SA.DSC.LEVEL = COA.LEVEL
MATREAD COA.REC FROM COA, CONO : GLTB.WIP.CLR ELSE COA.LEVEL = 0
WIP.CLR.ACCT = GLTB.WIP.CLR
WIP.CLR.LEVEL = COA.LEVEL
MATREAD COA.REC FROM COA, CONO : GLTB.FNGD.VAR ELSE COA.LEVEL = 0
FNGD.VAR.ACCT = GLTB.FNGD.VAR
FNGD.VAR.LEVEL = COA.LEVEL
LB.WIP.ACCT<1> = GLTB.LB.DIR.WIP
LB.WIP.ACCT<2> = GLTB.LB.FOH.WIP
LB.WIP.ACCT<3> = GLTB.LB.VOH.WIP
LB.WIP.ACCT<4> = GLTB.LB.S.A.WIP
FOR W = 1 TO 4
   MATREAD COA.REC FROM COA, CONO : LB.WIP.ACCT<W> ELSE COA.LEVEL = 0
   LB.WIP.LEVEL<W> = COA.LEVEL
NEXT W
LB.COG.ACCT<1> = GLTB.LB.DIR.COG
LB.COG.ACCT<2> = GLTB.LB.FOH.COG
LB.COG.ACCT<3> = GLTB.LB.VOH.COG
LB.COG.ACCT<4> = GLTB.LB.S.A.COG
FOR W = 1 TO 4
   MATREAD COA.REC FROM COA, CONO : LB.COG.ACCT<W> ELSE COA.LEVEL = 0
   LB.COG.LEVEL<W> = COA.LEVEL
NEXT W
LB.APL.ACCT<1> = GLTB.LB.DIR.APL
LB.APL.ACCT<2> = GLTB.LB.FOH.APL
LB.APL.ACCT<3> = GLTB.LB.VOH.APL
LB.APL.ACCT<4> = GLTB.LB.S.A.APL
FOR W = 1 TO 4
   MATREAD COA.REC FROM COA, CONO : LB.APL.ACCT<W> ELSE COA.LEVEL = 0
   LB.APL.LEVEL<W> = COA.LEVEL
NEXT W
MT.WIP.ACCT<1> = GLTB.MT.DIR.WIP
MT.WIP.ACCT<2> = GLTB.MT.FOH.WIP
MT.WIP.ACCT<3> = GLTB.MT.VOH.WIP
FOR W = 1 TO 3
   MATREAD COA.REC FROM COA, CONO : MT.WIP.ACCT<W> ELSE COA.LEVEL = 0
   MT.WIP.LEVEL<W> = COA.LEVEL
NEXT W
MT.COG.ACCT<1> = GLTB.MT.DIR.COG
MT.COG.ACCT<2> = GLTB.MT.FOH.COG
MT.COG.ACCT<3> = GLTB.MT.VOH.COG
FOR W = 1 TO 3
   MATREAD COA.REC FROM COA, CONO : MT.COG.ACCT<W> ELSE COA.LEVEL = 0
   MT.COG.LEVEL<W> = COA.LEVEL
NEXT W
MT.INV.ACCT<1> = GLTB.INV
MT.INV.ACCT<2> = GLTB.MT.FOH.APL
MT.INV.ACCT<3> = GLTB.MT.VOH.APL
FOR W = 1 TO 3
   MATREAD COA.REC FROM COA, CONO : MT.INV.ACCT<W> ELSE COA.LEVEL = 0
   MT.INV.LEVEL<W> = COA.LEVEL
NEXT W
OS.WIP.ACCT<1> = GLTB.OS.DIR.WIP
OS.WIP.ACCT<2> = GLTB.OS.FOH.WIP
FOR W = 1 TO 2
   MATREAD COA.REC FROM COA, CONO : OS.WIP.ACCT<W> ELSE COA.LEVEL = 0
   OS.WIP.LEVEL<W> = COA.LEVEL
NEXT W
OS.COG.ACCT<1> = GLTB.OS.DIR.COG
OS.COG.ACCT<2> = GLTB.OS.FOH.COG
FOR W = 1 TO 2
   MATREAD COA.REC FROM COA, CONO : OS.COG.ACCT<W> ELSE COA.LEVEL = 0
   OS.COG.LEVEL<W> = COA.LEVEL
NEXT W
OS.APL.ACCT<1> = GLTB.OS.DIR.APL
OS.APL.ACCT<2> = GLTB.OS.FOH.APL
FOR W = 1 TO 2
   MATREAD COA.REC FROM COA, CONO : OS.APL.ACCT<W> ELSE COA.LEVEL = 0
   OS.APL.LEVEL<W> = COA.LEVEL
NEXT W
SP.WIP.ACCT<1> = GLTB.SP.DIR.WIP
SP.WIP.ACCT<2> = GLTB.SP.FOH.WIP
FOR W = 1 TO 2
   MATREAD COA.REC FROM COA, CONO : SP.WIP.ACCT<W> ELSE COA.LEVEL = 0
   SP.WIP.LEVEL<W> = COA.LEVEL
NEXT W
SP.COG.ACCT<1> = GLTB.SP.DIR.COG
SP.COG.ACCT<2> = GLTB.SP.FOH.COG
FOR W = 1 TO 2
   MATREAD COA.REC FROM COA, CONO : SP.COG.ACCT<W> ELSE COA.LEVEL = 0
   SP.COG.LEVEL<W> = COA.LEVEL
NEXT W
SP.APL.ACCT<1> = GLTB.SP.DIR.APL
SP.APL.ACCT<2> = GLTB.SP.FOH.APL
FOR W = 1 TO 2
   MATREAD COA.REC FROM COA, CONO : SP.APL.ACCT<W> ELSE COA.LEVEL = 0
   SP.APL.LEVEL<W> = COA.LEVEL
NEXT W
MS.WIP.ACCT<1> = GLTB.MS.DIR.WIP
MS.WIP.ACCT<2> = GLTB.MS.FOH.WIP
FOR W = 1 TO 2
   MATREAD COA.REC FROM COA, CONO : MS.WIP.ACCT<W> ELSE COA.LEVEL = 0
   MS.WIP.LEVEL<W> = COA.LEVEL
NEXT W
MS.COG.ACCT<1> = GLTB.MS.DIR.COG
MS.COG.ACCT<2> = GLTB.MS.FOH.COG
FOR W = 1 TO 2
   MATREAD COA.REC FROM COA, CONO : MS.COG.ACCT<W> ELSE COA.LEVEL = 0
   MS.COG.LEVEL<W> = COA.LEVEL
NEXT W
MS.APL.ACCT<1> = GLTB.MS.DIR.APL
MS.APL.ACCT<2> = GLTB.MS.FOH.APL
FOR W = 1 TO 2
   MATREAD COA.REC FROM COA, CONO : MS.APL.ACCT<W> ELSE COA.LEVEL = 0
   MS.APL.LEVEL<W> = COA.LEVEL
NEXT W
CAL.PER = OCONV(SALESDATES.REC(PERIOD[5,2]+1)<1,1>,"D2/")[1,2]
CAL.YEAR = OCONV(SALESDATES.REC(PERIOD[5,2]+1)<1,1>,"D2/")[7,2]
IF DATE() < SALESDATES.REC(PERIOD[5,2]+1)<1,1> THEN
   CAL.DAY=DATE()
END ELSE
   CAL.DAY=SALESDATES.REC(PERIOD[5,2]+1)<1,1>
END
LOCATE CAL.DAY IN PRODUCTION.REC<1>,1 BY 'AR' SETTING PW ELSE NULL
IF PW > 53 THEN PW = 53
IF CAL.DAY < PRODUCTION.REC<1,PW> THEN
   IF PRODUCTION.REC<2,PW> > FISCAL.PER AND PRODUCTION.REC<2,PW-1> = FISCAL.PER THEN PW = PW - 1
END
LOCATE PRODUCTION.REC<2,PW> IN PRODUCTION.REC<2>,1 BY 'AR' SETTING STRT THEN
   SEQ = PW - STRT + 1
END ELSE
   SEQ = 1
END
READ DIV.NUMS FROM CONTROL, CONO:"DIVISIONS" ELSE DIV.NUMS = ""

STMT='SELECT JOB WITH CONO = "':CONO:'"'
IF DIV.CODE # 'ALL' THEN
   STMT := ' AND WITH DIV.OWNER = "':DIV.CODE:'"'
END
UDTEXECUTE STMT CAPTURING JUNK
DATA = 1
LOOP
   READNEXT JOB.ID ELSE DATA = 0
WHILE DATA DO
   IF CONO # JOB.ID[1,3] THEN GOTO 999
   JOBNO = JOB.ID[4,99]
   MATREADU JOB.REC FROM JOB, JOB.ID ELSE
      MAT PRR.REC = ''
      PRR.JOB = JOBNO
      PRR.FILE = 'JOB'
      PRR.ERR = 'CANNOT LOCATE'
      PRR.SEQ = PRR.SEQ + 1
      MATWRITE PRR.REC ON POST.REJECTS, PRR.SEQ
      GOTO 999
   END
*
*---- CHECK AND POST N/C JOBS
*
   IF (JOBNO[1,5]='X':FISCAL.YR[3,2]:FISCAL.PER OR JOBNO[1,5]='X':LFISCAL.YR[3,2]:LFISCAL.PER) AND JOB.TYPE='N' THEN
      IF DIV.NUMS # "" THEN
         LOCATE JOBNO[6,2] IN DIV.NUMS<1>,1 SETTING FND ELSE FND = 0
         IF FND > 0 THEN
            IF (JOBNO[4,2] = FISCAL.PER AND JOBNO[8,1]<SEQ) OR (JOBNO[4,2]=LFISCAL.PER AND JOBNO[8,1]>0 AND JOBNO[8,1]<6) THEN
               WIP.TYPE = "ALL"
               WIP.PERCENT = "10000"
               WIP.DATE = "ALL"
               WIP.PERIOD = "ALL"
               REJMSG=''
               CALL ReverseJobWip(CONO,JOBNO,WIP.TYPE,WIP.PERCENT,WIP.DATE,WIP.PERIOD,PERIOD,MAT JOB.REC,ERRMSG,REJMSG)
               IF ERRMSG # '' THEN GOTO 93000
               IF REJMSG # '' THEN GOSUB 91000
               RESV.ACTION = "D"
               RESV.LOC = 0
               CALL JobResvSub(CONO,RESV.ACTION,RESV.LOC,JOBNO,MAT JOB.REC,ERRMSG,REJMSG)
               IF ERRMSG # '' THEN GOTO 93000
               IF REJMSG # '' THEN GOSUB 91000
               MCNT = COUNT(JOB.RESV.MATL,VM) + (JOB.RESV.MATL # "")
               FOR M = MCNT TO 1 STEP - 1
                  IF JOB.RESV.QTY<1,M> + JOB.ALOC.QTY<1,M> + JOB.USED.QTY<1,M> = 0 THEN
                     JSTAT.ID = JOB.RESV.MATL<1,M>:"!":JOB.RESV.WHSE<1,M>:"!":JOBNO
                     MATREAD INV.JS.REC FROM INV.JOB.STATS, CONO:JSTAT.ID ELSE
                        JOB.RESV.MATL = DELETE(JOB.RESV.MATL,1,M,0)
                        JOB.RESV.WHSE = DELETE(JOB.RESV.WHSE,1,M,0)
                        JOB.RESV.DATE = DELETE(JOB.RESV.DATE,1,M,0)
                        JOB.ALOC.QTY = DELETE(JOB.ALOC.QTY,1,M,0)
                        JOB.RESV.QTY = DELETE(JOB.RESV.QTY,1,M,0)
                        JOB.USED.QTY = DELETE(JOB.USED.QTY,1,M,0)
                        JOB.ALOC.AMT = DELETE(JOB.ALOC.AMT,1,M,0)
                        JOB.RESV.AMT = DELETE(JOB.RESV.AMT,1,M,0)
                        JOB.USED.AMT = DELETE(JOB.USED.AMT,1,M,0)
                     END
                  END
               NEXT M
               JOB.TRACK.DATE<1,10> = DATE()
               INS '4' BEFORE JOB.STATUS<1,1>
               INS DATE() BEFORE JOB.STAT.DATE<1,1>
               CFND = 1
               MATREADU CUST.REC FROM CUSTOMER,CONO:JOB.CUST ELSE CFND = 0
               IF CFND THEN
                  LOCATE JOBNO IN CUST.JOB<1>,1 SETTING JFND ELSE JFND = 0
                  IF JFND THEN
                     CUST.JOB.BAL<1,FND> = 0
                  END
               END
               MATWRITE CUST.REC ON CUSTOMER,CONO:JOB.CUST
            END
         END
      END
   END
   IF JOB.INV.NO # '' THEN
      CALL JCS_EOM_POST_SA(MAT EOM.ACCT.REC,MAT GLTABLE.REC,MAT JOB.REC,TRANFILE,REJECTFILE,WIPFILE,ERRMSG,MAT COMP.REC)
      IF ERRMSG # '' THEN GOTO 93000
   END
   BEGIN CASE
      CASE JOB.LB.WIP<1,5> < PERIOD
      CASE JOB.LB.WIP<1,4> > PERIOD
      CASE 1
         CALL JCS_EOM_POST_LB(MAT EOM.ACCT.REC,MAT JOB.REC,TRANFILE,REJECTFILE,WIPFILE,ERRMSG)
         IF ERRMSG # '' THEN GOTO 93000
   END CASE
   BEGIN CASE
      CASE JOB.MT.WIP<1,5> < PERIOD
      CASE JOB.MT.WIP<1,4> > PERIOD
      CASE 1
         CALL JCS_EOM_POST_MT(MAT EOM.ACCT.REC,MAT GLTABLE.REC,MAT JOB.REC,TRANFILE,REJECTFILE,WIPFILE,ERRMSG)
         IF ERRMSG # '' THEN GOTO 93000
   END CASE
   BEGIN CASE
      CASE JOB.OS.WIP<1,5> < PERIOD
      CASE JOB.OS.WIP<1,4> > PERIOD
      CASE 1
         CALL JCS_EOM_POST_OS(MAT EOM.ACCT.REC,MAT GLTABLE.REC,MAT JOB.REC,TRANFILE,REJECTFILE,WIPFILE,ERRMSG)
         IF ERRMSG # '' THEN GOTO 93000
   END CASE
   BEGIN CASE
      CASE JOB.SP.WIP<1,5> < PERIOD
      CASE JOB.SP.WIP<1,4> > PERIOD
      CASE 1
         CALL JCS_EOM_POST_SP(MAT EOM.ACCT.REC,MAT JOB.REC,TRANFILE,REJECTFILE,WIPFILE,ERRMSG)
         IF ERRMSG # '' THEN GOTO 93000
   END CASE
   BEGIN CASE
      CASE JOB.MS.WIP<1,5> < PERIOD
      CASE JOB.MS.WIP<1,4> > PERIOD
      CASE 1
         CALL JCS_EOM_POST_MS(MAT EOM.ACCT.REC,MAT JOB.REC,TRANFILE,REJECTFILE,WIPFILE,ERRMSG)
         IF ERRMSG # '' THEN GOTO 93000
   END CASE
999 *
   MATWRITE JOB.REC ON JOB, JOB.ID
REPEAT
IF CO.OPS = 'Y' THEN
   CALL JCS_EOM_POST_FG(MAT EOM.ACCT.REC,MAT GLTABLE.REC,FNGD.WIP.HIST,FNGD_WIP_HIST_TAG,INV_RECEIPTS,TRANFILE,REJECTFILE,WIPFILE,ERRMSG)
   IF ERRMSG # '' THEN GOTO 93000
END
READ JUNK FROM POST.REJECTS,'10001' THEN
   UserID = PMCProperty<1,3>
*   IN_PARAM = UserID:"!JCSEOMP!111!JC300!":CONO:"!Print"
   IN_PARAM = UserID:"!JCSEOMP!111!JC300!":CONO:"!":Printfalg
   IN_PARAM<2> = ''
   IN_PARAM<3> = 'EOD.REJECT.LISTING'
   IN_PARAM<4> = 'P'
   IN_PARAM<5> = 'PMCPROCS'
   IN_PARAM<6> = REJECTFILE
   IN_PARAM<7> = 'REJECTS'
   IN_PARAM<8> = EMAIL_ADDR ;*Email Address as Entered by the user
   OUT_PARAM=''
   UDTEXECUTE 'SSELECT ':REJECTFILE CAPTURING JUNK
   CALL GenerateReport_Sub(ERRMSG,IN_PARAM,OUT_PARAM)
   IF ERRMSG # "" THEN GOTO 93000
   REJECT.RPT.PRT='WARNING !!! MAKE SURE TO PICKUP POSTING REJECTS REPORT FROM PRINTER'
   STATUS=RBO.setProperty('','RejectRptPrinted',REJECT.RPT.PRT)
   STATUS=RBO.setProperty('','ReportImage',OUT_PARAM<2>)
END
STATUS = RBO.setProperty('','FR_CURR_DATE',FR.CURR.DATE)
STATUS = RBO.setProperty('','FR_NEXT_DATE',FR.NEXT.DATE)
STATUS = RBO.setProperty('','FR_CLOSE_DATE',FR.CLOSE.DATE)
FR.PRINT<1,POS> = ""
MATWRITE FISCAL.REC ON CONTROL, CONO:FISCPFX:'FISCAL'
GOTO 99999

91000 *
FOR I = 1 TO DCOUNT(REJMSG,AM)
   PRR.JOB=FIELD(REJMSG<I>,"!",1)
   PRR.FILE = FIELD(REJMSG<I>,"!",2)
   PRR.ERR = FIELD(REJMSG<I>,"!",3)
   PRR.SEQ = PRR.SEQ + 1
   MATWRITE PRR.REC ON POST.REJECTS, PRR.SEQ
NEXT I
REJMSG=''
RETURN
93000 *
STATUS=RBO.setProperty('','ServerStatus',1)
STATUS=RBO.setProperty('','ServerMessage',ERRMSG)
CMD='DELETE.FILE ': TRANFILE :' FORCE'
UDTEXECUTE CMD CAPTURING JUNK
CMD='DELETE.FILE ': REJECTFILE :' FORCE'
UDTEXECUTE CMD CAPTURING JUNK
CMD='DELETE.FILE ': WIPFILE :' FORCE'
UDTEXECUTE CMD CAPTURING JUNK
*** END OF JOB ***
99999 END
