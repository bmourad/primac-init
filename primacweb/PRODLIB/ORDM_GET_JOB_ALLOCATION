SUBROUTINE ORDM_GET_JOB_ALLOCATION
********************************************************************************
*   Program name :- ORDM_GET_JOB_ALLOCATION
*   Created:- 10/15/2003
*------------------------------------------------------------------------------*
*

* 
* In Properties:
* --------------
*  
*
* Out Properties:
* ---------------
*  
********************************************************************************
$INCLUDE WWINSERT RBO.H

$INCLUDE OPS.CPYLIB ORDER
$INCLUDE OPS.CPYLIB ORDER.DETAIL
$INCLUDE ICS.CPYLIB INVENTORY
$INCLUDE ICS.CPYLIB INV.CNV
$INCLUDE ICS.CPYLIB INV.WHSE

$INCLUDE ICS.CPYLIB FNGD.STATS
$INCLUDE ICS.CPYLIB FNGD.ORDER.STATS
$INCLUDE ICS.CPYLIB FNGD.JOB.STATS
$INCLUDE CPYLIB CHAR
$INCLUDE PMC.CPYLIB CUSTOMER
* Insert method code here

  OPEN "","ORDER" TO ORDER ELSE
    ERRMSG = "Cannot locate the ORDER file";GOTO 93000
  END

  OPEN "","ORDER.DETAIL" TO ORDER.DETAIL ELSE
    ERRMSG = "Cannot locate the ORDER.DETAIL file";GOTO 93000
  END

  OPEN "","INVENTORY" TO INVENTORY ELSE
    ERRMSG = "Cannot locate the INVENTORY file";GOTO 93000
  END

  OPEN "","CUSTOMER" TO CUSTOMER ELSE
    ERRMSG = "Cannot locate the CUSTOMER file";GOTO 93000
  END

  OPEN "","FNGD.STATS" TO FNGD.STATS ELSE
    ERRMSG = "Cannot locate the FNGD.STATS file";GOTO 93000
  END

  OPEN "","FNGD.JOB.STATS" TO FNGD.JOB.STATS ELSE
    ERRMSG = "Cannot locate the FNGD.JOB.STATS file";GOTO 93000
  END

  OPEN "","FNGD.ORDER.STATS" TO FNGD.ORDER.STATS ELSE
    ERRMSG = "Cannot locate the FNGD.ORDER.STATS file";GOTO 93000
  END

  STATUS = RBO.getProperty('', 'PMCProperty', PMCProperty)
  CONO = PMCProperty<1,4>

  DEFFUN CALC_STK_QTY(COST.QTY,MAT INV.CNV.REC,ROND,LN)
  DEFFUN CALC_COST_QTY(STK.QTY,MAT INV.CNV.REC,ROND,LN)

  STATUS = RBO.getProperty('', 'ID', ORDER.ID)

  STATUS = RBO.getProperty('', 'JA_JOB', OSD.JOB) ;*JOB ALLOCATED
  STATUS = RBO.getProperty('', 'OSD_PROD', OSD_PROD)
  STATUS = RBO.getProperty('', 'OSD_WHSE', WHSE.NO)
  STATUS = RBO.getProperty('', 'JA_ALLOCATE_QTY', OSD.JOB.QTY);*ALLOCATED QTY --> ALLOC.QTY
  STATUS = RBO.getProperty('', 'FGS_A_QTY', FGS_A_QTY)
  STATUS = RBO.getProperty('', 'A_TYPE', A_TYPE)

  * THIS PROVERTY HOLDS THE ALLOCATE QTY FOR THE JOB FROM XML TO UPDATE THE ALLOCATE CONTENT
  * IN THE GRID APPARENTLY THAN UPDATING THE THE TABLE.
  * THIS TECHNIQUE IS ADOPTED TO GET COMMON AREA CONCEPT IN THE BROWSER
  * BY UPDATING THE XML ATTRIBUTE OF ALLOC_QTY OF JOB_ALLOC TAG FOR EACH PROD TAG

  PDNO = OSD_PROD
  WHNO = WHSE.NO
  ORDNO = ORDER.ID

  MATREAD INV.REC FROM INVENTORY,CONO : PDNO ELSE
	INV.DESC = ""
	INV.UNIT = ""
  END
       $INCLUDE ICSBP INV.UM.CNV
       FLAG = "0"
  MATREAD FGS.REC FROM FNGD.STATS,CONO : OSD_PROD : "!" : WHSE.NO THEN
	IF FGS_A_QTY # "" THEN
	  FGS.A.QTY = FGS_A_QTY
	  FLAG = "1"
	END
	IF FGS_A_QTY = "" THEN
	  *FGS.A.QTY = FGS.A.QTY	
	  FLAG = "2"
	END
     INDX = 1
     RCNT = DCOUNT(OSD.JOB<1,INDX>,SVM)
     FOR R = 1 TO RCNT
       LOCATE OSD.JOB<1,INDX,R> IN FGS.JOB<1>,1 SETTING JPTR THEN
          AQTY<1,JPTR> = OSD.JOB.QTY<1,INDX,R>
       END
          *OSD.JOB.QTY<1,INDX,R> = 0
     NEXT R	


 LINES = DCOUNT(FGS.JOB,VM)
 FOR I = 1 TO LINES
  AQTY<1,I> = CALC_COST_QTY(AQTY<1,I>,MAT INV.CNV.REC,ROND,'')
  AQTY<1,I> = ICONV(AQTY<1,I>,ICR.CNV)

  IF FLAG = "1" THEN
    FGS.A.QTY<1,I> = CALC_COST_QTY(FGS.A.QTY<1,I>,MAT INV.CNV.REC,.5,'')
    FGS.A.QTY<1,I> = ICONV(FGS.A.QTY<1,I>,ICR.CNV)
  END 

 NEXT

 S.A.QTY = ""; S.CUST = ""; S.DATE = ""
 LN = 0; IWH.ID = CONO:PDNO:"!":WHNO

 ALOC.QTY = AQTY
 
 FOR I = 1 TO LINES
   MATREAD FJS.REC FROM FNGD.JOB.STATS, IWH.ID:"!":FGS.JOB<1,I> ELSE MAT FJS.REC = ""
   S.CUST<I> = FJS.CUST
   S.DATE<I> = FJS.DATE
   LOCATE ORDNO IN FJS.ORD<1>,1 SETTING OLOC THEN
     IF FJS.ORD.QTY<1,OLOC> > ALOC.QTY<1,I> THEN
       S.A.QTY<I> = FJS.A.QTY - FJS.ORD.QTY<1,OLOC>
     END ELSE
       S.A.QTY<I> = FJS.A.QTY - ALOC.QTY<1,I>
     END
   END ELSE
     S.A.QTY<I> = FJS.A.QTY
   END
   IF S.A.QTY<I> < 0 THEN S.A.QTY<I> = 0
   S.A.QTY<I> = FJS.M.QTY - FJS.F.QTY - S.A.QTY<I>
   IF S.A.QTY<I> < 0 THEN S.A.QTY<I> = 0
   IF LN = 0 THEN
     IF FJS.M.QTY - FJS.A.QTY > 0 THEN
       LN = I
     END
   END

   JA_JOB<1,I> = FGS.JOB<1,I>
   JA_JOB_DATE<1,I> = OCONV(S.DATE<I>,"D2/")
   JA_MANUFACT_QTY<1,I> = OCONV(INT(((FGS.M.QTY<1,I>/ICR.DV1) * ICR.MT1) / ICR.DV2 +.5),ICR.CNV1)
   JA_ALLOCATE_QTY<1,I> = OCONV(INT(((FGS.A.QTY<1,I>/ICR.DV1) * ICR.MT1) / ICR.DV2 +.5),ICR.CNV1)

   JA_AVAILABLE<1,I> = OCONV(INT((((S.A.QTY<I>)/ICR.DV1) * ICR.MT1) / ICR.DV2 +.5),ICR.CNV1)
   JA_A_QTY<1,I> = OCONV(INT(((ALOC.QTY<1,I>/ICR.DV1) * ICR.MT1) / ICR.DV2 +.5),ICR.CNV)
   JA_CUST<1,I> = S.CUST<I>

   MATREAD CUST.REC FROM CUSTOMER, CONO:S.CUST<I> ELSE
     MAT CUST.REC = ""; CUST.NAME = STR("?",30)
   END

   JA_CUST_NAME<1,I> = CUST.NAME
 NEXT I
  END 

IF A_TYPE # "B" THEN

STATUS = RBO.setProperty('', 'JA_JOB', JA_JOB)
STATUS = RBO.setProperty('', 'JA_JOB_DATE', JA_JOB_DATE)
STATUS = RBO.setProperty('', 'JA_MANUFACT_QTY', JA_MANUFACT_QTY)

STATUS = RBO.setProperty('', 'JA_ALLOCATE_QTY', JA_ALLOCATE_QTY)
STATUS = RBO.setProperty('', 'JA_AVAILABLE', JA_AVAILABLE)
STATUS = RBO.setProperty('', 'JA_A_QTY', JA_A_QTY)

STATUS = RBO.setProperty('', 'JA_CUST', JA_CUST)
STATUS = RBO.setProperty('', 'JA_CUST_NAME', JA_CUST_NAME)

TOT.STR = OCONV(INT(((SUM(FGS.M.QTY)/ICR.DV1) * ICR.MT1) / ICR.DV2 +.5),ICR.CNV1)

TOT.STR := VM : OCONV(INT(((SUM(FGS.A.QTY)/ICR.DV1) * ICR.MT1) / ICR.DV2 +.5),ICR.CNV1) 
TOT.STR := VM : OCONV(INT(((SUM(S.A.QTY)/ICR.DV1) * ICR.MT1) / ICR.DV2 +.5),ICR.CNV1) 
TOT.STR := VM : OCONV(INT(((SUM(ALOC.QTY)/ICR.DV1) * ICR.MT1) / ICR.DV2 +.5),ICR.CNV1) 

STATUS = RBO.setProperty('', 'ServerStatus', TOT.STR)

RETURN 
END 

*
*THE CODE IS USED FOR BUILDING THE ALLOCATION WITHOUT MANUALLY I.E AUTOMATICALLY 'B'
*
*---- Adjust job allocations
  STATUS = RBO.getProperty('', 'NEW_ALOC_QTY',ALOC.TOT)
  ALOC.TOT = CALC_COST_QTY(ALOC.TOT,MAT INV.CNV.REC,ROND,'')
  ALOC.TOT = ICONV(ALOC.TOT,ICR.CNV)
  X = ALOC.TOT
  OLD.QTY = ALOC.QTY

  LINES = DCOUNT(FGS.JOB,VM)

  ALOC.DIF = ALOC.TOT - SUM(ALOC.QTY)

 BEGIN CASE
   CASE ALOC.DIF > 0
     LIMIT = LINES
*
*---- Adjust current allocated jobs
*
     FOR A = 1 TO LIMIT
       AVL = S.A.QTY<A> - ALOC.QTY<1,A>
       BEGIN CASE
         CASE ALOC.QTY<1,A> < 1
         CASE AVL < 1
         CASE AVL < ALOC.DIF
           ALOC.QTY<1,A> = ALOC.QTY<1,A> + AVL
           ALOC.DIF = ALOC.DIF - AVL
         CASE 1
           ALOC.QTY<1,A> = ALOC.QTY<1,A> + ALOC.DIF
           ALOC.DIF = 0; LIMIT = 0
       END CASE
     NEXT A
*
*---- Allocate new jobs
*
     FOR A = 1 TO LIMIT
       AVL = S.A.QTY<A> - ALOC.QTY<1,A>
       BEGIN CASE
         CASE AVL < 1
         CASE AVL < ALOC.DIF
           ALOC.QTY<1,A> = ALOC.QTY<1,A> + AVL
           ALOC.DIF = ALOC.DIF - AVL
         CASE 1
           ALOC.QTY<1,A> = ALOC.QTY<1,A> + ALOC.DIF
           ALOC.DIF = 0; LIMIT = 0
       END CASE
     NEXT A
   CASE ALOC.DIF < 0
     ALOC.DIF = 0 - ALOC.DIF
     LIMIT = LINES
	II = "INSIDE < ALOC.DIF _ " : ALOC.DIF : " _ LIMIT : " : LIMIT :  " _ ALLOC.QTY : " : ALOC.QTY
     FOR A = 1 TO LIMIT
       BEGIN CASE
         CASE ALOC.QTY<1,A> < 1
         CASE ALOC.QTY<1,A> < ALOC.DIF
           ALOC.DIF = ALOC.DIF - ALOC.QTY<1,A>
           ALOC.QTY<1,A> = 0
         CASE 1
           ALOC.QTY<1,A> = ALOC.QTY<1,A> - ALOC.DIF
           ALOC.DIF = 0; LIMIT = 0
       END CASE
     NEXT A
 END CASE

 ALOC.TOT = SUM(ALOC.QTY) ;*REVISED NEW ALLOCATED QTY
 STATUS = RBO.setProperty('', 'ALOC_QTY', ALOC.TOT)

 ALOC.TOT  = OCONV(INT(((ALOC.TOT/ICR.DV1) * ICR.MT1) / ICR.DV2 +.5),ICR.CNV)

  J = 1
  JOB.LIST = ""
  JOB.ALLOC.QTY = ""
  LIMIT = LINES
  OSD_JOB_QTY = ""
  FOR A = 1 TO LIMIT
   FGS.A.QTY<1,A> = FGS.A.QTY<1,A> - OLD.QTY<1,A> + ALOC.QTY<1,A>

    FGS.A.QTY<1,A> = OCONV(INT(((FGS.A.QTY<1,A>/ICR.DV1) * ICR.MT1) / ICR.DV2 +.5),ICR.CNV)
	
      IF ALOC.QTY<1,A> # 0 THEN
	  JOB.LIST<1,J> = FGS.JOB<1,A>
	  JOB.ALLOC.QTY<1,J> = ALOC.QTY<1,A>
         OSD_JOB_QTY<1,J> = ALOC.QTY<1,A> ;* ADDED BY SUHAIL
         JOB.ALLOC.QTY<1,J> = OCONV(INT(((ALOC.QTY<1,A>/ICR.DV1) * ICR.MT1) / ICR.DV2 +.5),ICR.CNV)
	  J = J + 1
	END
  NEXT A

  STATUS = RBO.setProperty('', 'NEW_ALOC_QTY', ALOC.TOT);*REVISED NEW ALLOCATED QTY
  STATUS = RBO.setProperty('', 'NEW_JOB_ALLOC', JOB.LIST)
  STATUS = RBO.setProperty('', 'NEW_JOB_QTY_ALLOC', JOB.ALLOC.QTY)
  STATUS = RBO.setProperty("","OSD_JOB_QTY",OSD_JOB_QTY) ;* ADDED BY SUHAIL
  STATUS = RBO.setProperty('', 'NEW_ALLOCATED', FGS.A.QTY);*NEW TOTAL JOB ALLOCATED QTY

 RETURN


* End of method code
RETURN
93000*
   STATUS = RBO.setProperty('', 'ServerStatus', '1')
   STATUS = RBO.setProperty('', 'ServerMessage', ERRMSG)

