SUBROUTINE JOBM_SEL_WHSE_FNGD
********************************************************************************
*   Program name :- JOBM_SEL_WHSE_FNGD
*   Created:- 12/09/2002
*------------------------------------------------------------------------------*
*  
* In Properties:
* --------------
*  ID,JOB_RESV_MATL, JOB_RESV_WHSE, JOB_DIV, JOB_CUST, CO_POS
IN_PARAM=''
*
* Out Properties:
* ---------------
*  
OUT_PARAM=''
********************************************************************************
$INCLUDE WWINSERT RBO.H
$INCLUDE ICS.CPYLIB INVENTORY
$INCLUDE CPYLIB CHAR
$INCLUDE ICS.CPYLIB INV.WHSE
$INCLUDE ICS.CPYLIB WAREHOUSE
$INCLUDE PMC.CPYLIB CUSTOMER
$INCLUDE ICS.CPYLIB FNGD.STATS
$INCLUDE ICS.CPYLIB CATEGORY
$INCLUDE OPS.CPYLIB JOB.FNGD.STATS
$INCLUDE PMC.CPYLIB COMP.OPS
$INCLUDE ICS.CPYLIB INV_RECP_WHSE
ERRMSG=''
OPEN '','CONTROL' TO CONTROL ELSE
	ERRMSG = 'INVENTORY FILE IS MISSING'
    	GOTO 93000
END

OPEN '','INVENTORY' TO INVENTORY ELSE
	ERRMSG = 'INVENTORY FILE IS MISSING'
    	GOTO 93000
END

OPEN '','CATEGORY' TO CATEGORY ELSE
	ERRMSG = 'CATEGORY FILE IS MISSING'
    	GOTO 93000
END

OPEN "","INV.WHSE" TO INV.WHSE ELSE
	ERRMSG = "INV.WHSE IS MISSING"
	GOTO 93000
END
OPEN "","WAREHOUSE" TO WAREHOUSE ELSE
	ERRMSG = "WAREHOUSE IS MISSING"
	GOTO 93000
END
OPEN "","CUSTOMER" TO CUSTOMER ELSE
	ERRMSG = "UNABLE TO OPEN FILE!"
	GOTO 99999
END
OPEN "","FNGD.STATS" TO FNGD.STATS ELSE
       ERRMSG = "FNGD.STATS"
	GOTO 99999
END

OPEN "","JOB.FNGD.STATS" TO JOB.FNGD.STATS ELSE
	ERRMSG = "UNABLE TO OPEN FILE!"
	GOTO 99999
END

;* initialize

STATUS=RBO.getProperty('','ID',ID);*JOB NUM
STATUS=RBO.getProperty('','JOB_RESV_MATL',JOB.RESV.MATL);*PROD-ID
STATUS=RBO.getProperty('','JOB_RESV_WHSE',JOB.RESV.WHSE);*WHSE CODE
STATUS=RBO.getProperty('','JOB_DIV',JOB.DIV);*JOB DIV-ID
STATUS=RBO.getProperty('','JOB_CUST',JOB.CUST);*JOB DIV-ID
STATUS=RBO.getProperty('','JFS_A_QTY',JFS_A_QTY);*FOR FNGD

IF JOB.RESV.MATL = "0" THEN JOB.RESV.MATL = ""
IF JOB.CUST = "0" THEN JOB.CUST = ""

CONO=ID[1,3]
JOB_NO=ID[4,99]

* get database values
MATREAD INV.REC FROM INVENTORY,CONO:JOB.RESV.MATL ELSE
	MAT INV.REC = ''
END

MATREAD JFS.REC FROM JOB.FNGD.STATS, ID ELSE MAT JFS.REC = ""
MATREAD CATG.REC FROM CATEGORY,CONO:INV.LINE ELSE MAT CATG.REC = ''

$INCLUDE ICS.CPYLIB INV.CNV

MATREAD OPCO.REC FROM CONTROL, CONO:"OPS" ELSE MAT OPCO.REC = ""

IWH.ID = CONO : JOB.RESV.MATL : '!' : JOB.RESV.WHSE
MATREAD IWH.REC FROM INV.WHSE, IWH.ID ELSE
      ERRMSG = "Cannot locate warehouse (":JOB.RESV.WHSE:") for item # ":JOB.RESV.MATL
      GOTO 93000
END

MATREAD WHSE.REC FROM WAREHOUSE, CONO:JOB.RESV.WHSE ELSE MAT WHSE.REC = ""

IF WHS.DIV # JOB.DIV AND WHS.DIV # "00" THEN
	ERRMSG = "INVENTORY WAREHOUSE DIVISION DOES NOT MATCH JOB DIVISION"
	GOTO 93000
END

WHNO = JOB.RESV.WHSE; JFS.WHSE = JOB.RESV.WHSE

MATREAD FGS.REC FROM FNGD.STATS, IWH.ID ELSE
	MAT FGS.REC = ""
END

TOT.ALOC = SUM(FGS.B.QTY) + JFS_A_QTY

*TOT.ALOC = SUM(FGS.B.QTY) + JFS.A.QTY<1,LN>

MATREAD CUST.REC FROM CUSTOMER,CONO:JOB.CUST ELSE MAT CUST.REC = ''

BEGIN CASE
	CASE CATG.FNGD.TYPE = "ES"
      		DEFAULT = IWH.EST.SALE
    	CASE CATG.FNGD.TYPE = "SP"
      		BEGIN CASE
        		CASE NOT(NUM(CUST.PRICE.CODE))
          			DEFAULT = IWH.SELL<1,1>
        		CASE CUST.PRICE.CODE > 0 AND CUST.PRICE.CODE < 5
          			DEFAULT = IWH.SELL<1,CUST.PRICE.CODE>
        		CASE 1
          			DEFAULT = IWH.SELL<1,1>
      		END CASE
    	CASE CATG.FNGD.TYPE = "SD"
      		DEFAULT = IWH.STD.COST
    	CASE CATG.FNGD.TYPE = "AV"
      		DEFAULT = IWH.AVG.COST
    	CASE CATG.FNGD.TYPE = "LP"
      		DIV.POS='';FISCAL.FLAG='JC';TRAN.PERIOD=''
      		ERR.FLG='';ERRMSG=''
      		CALL GET.LAST.COST(IWH.ID,MAT IWH.REC,WAREHOUSE,CONTROL,ERR.FLG,ERRMSG,DIV.POS,FISCAL.FLAG,TRAN.PERIOD,LAST.PRICE)
      		IF ERR.FLG='' THEN
       		DEFAULT=LAST.PRICE
      		END ELSE
       		DEFAULT=''
      		END
	CASE 1
      		DEFAULT = 0
END CASE

IP.REQ = ""
BEGIN CASE
	CASE OPCO.PRC.MNT = "J" OR OPCO.PRC.MNT = "B"
		DEFAULT = OCONV(DEFAULT,"MD4")
		IP.REQ = "I"
	CASE JFS.U.PRICE = ""
      		IP.REQ = ""
	CASE 1
		IP.REQ = "OLD"
END CASE

*CNT = DCOUNT(FGS.B.QTY,VM)
*FOR I = 1 TO CNT
*	FGS.B.QTY<1,I> = OCONV(INT(((FGS.B.QTY<1,I>/ICR.DV1) * ICR.MT1) / ICR.DV2 +.5),ICR.CNV1)
*NEXT

STATUS = RBO.setProperty('','CCTR_CODES',FGS.ORDER)
STATUS = RBO.setProperty('','JFS_U_PRICE',OCONV(DEFAULT,"MD4"))
STATUS = RBO.setProperty('','JFS_BAL',TOT.ALOC)
STATUS = RBO.setProperty('','CO_JT',IP.REQ)
STATUS = RBO.setProperty('','FGS_B_QTY',SUM(FGS.B.QTY))

GOTO 99999

93000 
STATUS = RBO.setProperty('','ServerStatus','1')
STATUS = RBO.setProperty('','ServerMessage',ERRMSG)

99999
RETURN

