SUBROUTINE GET_GLX_DIV
********************************************************************************
*   Program name :- GET_GLX_DIV
*   Created:- 12/9/2002
*------------------------------------------------------------------------------*
*
* In Properties:
* --------------
* ID,PERIOD,ACCT
*
* Out Properties:
* ---------------
* DivCodes,DivDescs
********************************************************************************
$INCLUDE WWINSERT RBO.H

* Insert method code here
$INCLUDE PMC.CPYLIB COMPANY
$INCLUDE PMC.CPYLIB DIVISION
$INCLUDE PMC.CPYLIB DEPARTMENT
$INCLUDE PMC.CPYLIB COST.CNTR
$INCLUDE GLS.CPYLIB GLX
$INCLUDE GLS.CPYLIB GLM
$INCLUDE PMC.CPYLIB COA
$INCLUDE GLS.CPYLIB COA.BAL
$INCLUDE GLS.CPYLIB ACCT.TYPE
$INCLUDE GLS.CPYLIB ACCT.CATG
$INCLUDE GLS.CPYLIB ACCT.SUB.CATG
$INCLUDE GLS.CPYLIB CATG.AND.SUB

$INCLUDE CPYLIB CHAR

* Open files
ERRMSG = ''
CALL RBO_OPEN_FILE('GLX',GLX,ERRMSG)
CALL RBO_OPEN_FILE('GLM',GLM.FILE,ERRMSG)
CALL RBO_OPEN_FILE('GLA',GLA.FILE,ERRMSG)
CALL RBO_OPEN_FILE('DIVISION',DIVISION,ERRMSG)
CALL RBO_OPEN_FILE('DEPARTMENT',DEPARTMENT,ERRMSG)
CALL RBO_OPEN_FILE('COST.CNTR',COST.CNTR,ERRMSG)
CALL RBO_OPEN_FILE('CO.COA.BAL',CO.COA.BAL,ERRMSG)
CALL RBO_OPEN_FILE('CC.COA.BAL',CC.COA.BAL,ERRMSG)
CALL RBO_OPEN_FILE('DP.COA.BAL',DP.COA.BAL,ERRMSG)
CALL RBO_OPEN_FILE('DV.COA.BAL',DV.COA.BAL,ERRMSG)
CALL RBO_OPEN_FILE('CONTROL',CONTROL,ERRMSG)
CALL RBO_OPEN_FILE('COMPANY',COMPANY,ERRMSG)
CALL RBO_OPEN_FILE('COA',COA,ERRMSG)

IF ERRMSG THEN
  CALL RBO_ERROR_SUB(ERRMSG)
  RETURN
END

* Get properties
STATUS = RBO.getProperty('','ID',ID)
STATUS = RBO.getProperty('','PERIOD',PERIOD)
STATUS = RBO.getProperty('','ACCT',ACCT)

* Initialize variables
ALL.DIV = ''
GEN.DIV = '00'
ALL.DEPT = ''
GEN.DEPT = '00'
ALL.CCTR = ''
GEN.CCTR = '000'
LINE.CODE = ''
XCODE=''
XDESC=''
* Get CONO
CONO = ID[1,3]
MATREAD COMP.REC FROM COMPANY, CONO ELSE
  ERRMSG = 'Invalid Company ID (':CONO:').'
  CALL RBO_ERROR_SUB(ERRMSG); RETURN
END

MATREAD COA.REC FROM COA, CONO:ACCT ELSE
  COA.DETAIL = ''
END


* Get period
READ FISCAL.REC FROM CONTROL, CONO : 'FISCAL' ELSE FISCAL.REC = ''
READ PERIOD.REC FROM CONTROL, CONO : 'ACCT.PERIODS' ELSE 
  PERIOD.REC = ''
  PERIOD.REC<1> = 12
END
NUM.PERIODS = PERIOD.REC<1>
SEL.PERIOD = FISCAL.REC<1>
IF PERIOD THEN SEL.PERIOD = PERIOD

IF SEL.PERIOD # FISCAL.REC<1> THEN
  GLM = GLA.FILE
END ELSE
  GLM = GLM.FILE
END
YR.OFFSET = (SEL.PERIOD[1,4] - FISCAL.REC<1>[1,4]) * NUM.PERIODS
PER.OFFSET = SEL.PERIOD[5,2] + YR.OFFSET
OPN = CB.OPN + PER.OFFSET

IF PERIOD[5,2] = NUM.PERIODS THEN
  OPNVAL = 55
END ELSE
  OPNVAL = OPN+1
END

IN.ACCT.LEN = LEN(CO.ACCT.PIC)
BASE.LEN = FIELD(CO.ACCT.STRUC,"-",1)
IF NOT(NUM(BASE.LEN)) OR BASE.LEN > IN.ACCT.LEN THEN
  ERRMSG = 'Error in the account structure.'
  CALL RBO_ERROR_SUB(ERRMSG); RETURN
END

* Select Division
XCODE<1> = 'S'
XDESC<1> = 'Summary'
GOSUB SELECT.DIV


* Set properties

STATUS = RBO.setProperty('','DivCodes',"S" : VM : CONVERT(AM,VM,XCODE))
STATUS = RBO.setProperty('','DivDescs',"S-Summary" : VM : CONVERT(AM,VM,XDESC))
STATUS = RBO.setProperty('','COA_DETAIL',COA.DETAIL)

* End of method code
RETURN

SELECT.DIV:
  ;* Select divisions

  IF SEL.PERIOD = FISCAL.REC<1> THEN
    READ ALL.DIV FROM GLX,CONO:ACCT ELSE ALL.DIV = ''
  END ELSE
    SELID = CONO : ACCT
    GOSUB GET.ALL.DIV
  END
* IF (ALL.DIV = '' OR ALL.DIV="00") THEN
  IF  ALL.DIV = "" THEN
    ERRMSG = 'No activities for account - ' : ACCT CO.ACCT.MASK
    STATUS=RBO.setProperty('','ServerMessage',ERRMSG)
  END

  ;* Insert division descriptions
  XCODE = ALL.DIV
  XDESC = ''
  XLINES = DCOUNT(ALL.DIV,AM)
  FOR XLN = 1 TO XLINES
    IF XCODE<XLN> = GEN.DIV THEN
      MAT DIV.REC = ''
      DIV.DESC = 'General Division'
    END ELSE
      MATREAD DIV.REC FROM DIVISION, CONO : XCODE<XLN> ELSE
        MAT DIV.REC = ''
        DIV.DESC = 'Unknown'
      END
    END
    XDESC<XLN> = XCODE<XLN> :"-": DIV.DESC
  NEXT XLN
RETURN


GET.ALL.DIV:


  STMT = 'SSELECT GLA WITH CONO_ACCT = ' : QUOTE(SELID)
  STMT:= ' AND WITH PERIOD = ' : QUOTE(SEL.PERIOD)
  UDTEXECUTE STMT CAPTURING CAP RETURNING RET

  ALL.DIV = ''; LCD.CT = 1;EOF=0
*STATUS=RBO.setProperty('','TESTVAL',"ABCD:":STMT)
  LOOP
    READNEXT GLAID ELSE EXIT
    UNTIL EOF DO
       LOCATE GLAID[4,2] IN ALL.DIV,1 SETTING DFND ELSE
         ALL.DIV<LCD.CT> = GLAID[4,2]
         LCD.CT = LCD.CT + 1
       END
  REPEAT
RETURN

