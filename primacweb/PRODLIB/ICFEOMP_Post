*********************************************************************
* REVISION    - [12.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - ICSBP
* PROGRAM     - ICF.EOM.POST
* BY          - ZIAD YAMOUT, C.B.A
* DATE        - 02/28/87
* DESCRIPTION -
*             Create the ICF.EOM.TRANS data.
*MODIFIED   - (05/17/05) BY ZAHOOR AHMED
*         FOR printflag

*ENDDOC
*********************************************************************
*
***** INSERT FILE EQUATE
*
$INCLUDE WWINSERT RBO.H
$INCLUDE PMC.CPYLIB COMPANY
$INCLUDE PMC.CPYLIB GLTABLE
$INCLUDE PMC.CPYLIB SALESDATES
$INCLUDE PMC.CPYLIB FISCAL
$INCLUDE PMC.CPYLIB EOM.TRANS
$INCLUDE PMC.CPYLIB COA
$INCLUDE ICS.CPYLIB INV_AUDIT_HIST
$INCLUDE ICS.CPYLIB INV_RECEIPTS
$INCLUDE ICS.CPYLIB CATEGORY
$INCLUDE ICS.CPYLIB INVENTORY
$INCLUDE ICS.CPYLIB WAREHOUSE
$INCLUDE PMC.CPYLIB POST.REJECTS
$INCLUDE PMC.CPYLIB DIVISION ;* T23278
$INCLUDE CPYLIB CHAR
*
**** INTITIALIZATION
*
***** SETUP ERRMSG ROUTINE
*
ERRMSG=''
MAT FISCAL.REC = ''
Printfalg = ''
EMAIL_ADDR = ''
*
*Printfalg is view/mail/print/file
STATUS = RBO.getProperty('','ID',ID)
STATUS = RBO.getProperty('','PMCProperty',PMCProperty)
STATUS = RBO.getProperty('','PRINT_FLAG',PRINT.FLAG)
STATUS = RBO.getProperty('','EmailAddress',EMAIL_ADDR)
CONO = ID[1,3]
MODULE=ID[4,3]
BEGIN CASE
   CASE MODULE[1,2] = 'AP'
   CASE MODULE[1,2] = 'AR'
   CASE 1
      MODULE = MODULE[1,2]
END CASE
*
*Get the printflag view/Email/File/Print
*
BEGIN CASE
   CASE PRINT.FLAG = 'PrintData'
      Printfalg = 'View'
   CASE PRINT.FLAG = 'EmailData'
      Printfalg = 'Email'
   CASE PRINT.FLAG = 'File'
      Printfalg = 'Print'
   CASE 1
      Printfalg = 'Print'
END CASE
FISCPFX=MODULE
STATUS = RBO.getProperty('','DivCode',DIV.CODE)
STATUS = RBO.getProperty('','DivPos',POS)
STATUS = RBO.getProperty('','FR_CURR_PER',FR.CURR.PER)
STATUS = RBO.getProperty('','FR_CURR_DATE',FR.CURR.DATE)
STATUS = RBO.getProperty('','FR_NEXT_PER',FR.NEXT.PER)
STATUS = RBO.getProperty('','FR_NEXT_DATE',FR.NEXT.DATE)
STATUS = RBO.getProperty('','FR_D_M_FLG',FR.D.M.FLG)
STATUS = RBO.getProperty('','FR_CLOSE_DATE',FR.CLOSE.DATE)
FOR P = 1 TO DCOUNT(FR.CURR.PER,VM)
   IF INDEX(FR.CURR.DATE<1,P>,'/',1) > 0 THEN FR.CURR.DATE<1,P> = ICONV(FR.CURR.DATE<1,P>,'D2/')
   IF INDEX(FR.NEXT.DATE<1,P>,'/',1) > 0 THEN FR.NEXT.DATE<1,P> = ICONV(FR.NEXT.DATE<1,P>,'D2/')
   IF INDEX(FR.CLOSE.DATE<1,P>,'/',1) > 0 THEN FR.CLOSE.DATE<1,P> = ICONV(FR.CLOSE.DATE<1,P>,'D2/')
NEXT P
*
STATUS = RBO.getProperty('','FngdFlag',FNGD.FLAG)
BEGIN CASE
   CASE MODULE = 'IC'
      IF FNGD.FLAG = 'F' THEN
         MODULE := 'F'
      END ELSE MODULE := 'S'
   CASE MODULE[1,2] = 'AP'
   CASE MODULE[1,2] = 'AR'
   CASE 1
      MODULE := 'S'
END CASE
*
TRANFILE=MODULE:".EOM.TRANS":CONO:DIV.CODE
REJECTFILE=MODULE:".POST.REJECTS":CONO:DIV.CODE
OPEN TRANFILE TO EOM.TRANS ELSE
   STMT='CREATE.FILE ':TRANFILE:' 1,1 101,1'
   UDTEXECUTE STMT CAPTURING JUNK
   STMT='COPY FROM DICT ':MODULE:'.EOM.TRANS TO DICT ':TRANFILE:' ALL'
   UDTEXECUTE STMT CAPTURING JUNK
END
OPEN REJECTFILE TO POST.REJECTS ELSE
   STMT='CREATE.FILE ':REJECTFILE:' 1,1 7,1'
   UDTEXECUTE STMT CAPTURING JUNK
   STMT='COPY FROM DICT ':MODULE:'.POST.REJECTS TO DICT ':REJECTFILE:' ALL'
   UDTEXECUTE STMT CAPTURING JUNK
END
***** OPEN FILES
*
OPEN '','COMPANY' TO COMPANY ELSE ERRMSG='COMPANY FILE MISSING';GOTO 93000
OPEN '','CONTROL' TO CONTROL ELSE ERRMSG='CONTROL FILE MISSING';GOTO 93000
OPEN '','INV_AUDIT_HIST' TO INV_AUDIT_HIST ELSE ERRMSG='INV_AUDIT_HIST FILE IS MISSING';GOTO 93000
OPEN '','INV_RECEIPTS' TO INV_RECEIPTS ELSE ERRMSG='INV_RECEIPTS FILE IS MISSING';GOTO 93000
OPEN '','INVENTORY' TO INVENTORY ELSE ERRMSG='INVENTORY FILE MISSING';GOTO 93000
OPEN '','CATEGORY' TO CATEGORY ELSE ERRMSG='CATEGORY FILE MISSING';GOTO 93000
OPEN '','WAREHOUSE' TO WAREHOUSE ELSE ERRMSG='WAREHOUSE FILE MISSING';GOTO 93000
OPEN '','COA' TO COA ELSE ERRMSG='COA FILE IS MISSING';GOTO 93000
OPEN '',TRANFILE TO EOM.TRANS ELSE ERRMSG=TRANFILE:' FILE MISSING';GOTO 93000
OPEN '',REJECTFILE TO POST.REJECTS ELSE ERRMSG=REJECTFILE:' FILE IS MISSING';GOTO 93000
*
MATREAD COMP.REC FROM COMPANY, CONO ELSE
   ERRMSG = "COMPANY RECORD IS MISSING"
   GOTO 93000
END
MATREAD GLTABLE.REC FROM CONTROL, CONO:'GLTABLE' ELSE
   RELEASE CONTROL, CONO:MODULE:"FISCAL"
   ERRMSG = 'CANNOT LOCATE CONTROL, GLTABLE'
   GOTO 93000
END
IN.ACCT.LEN=LEN(CO.ACCT.PIC)
GEN.DIV='00'; GEN.DEPT='00'; GEN.CCTR='000'
PERIOD = FR.CURR.PER<1,POS>
READ FNGD.EOM FROM CONTROL, CONO:"FNGD.EOM" ELSE FNGD.EOM = ""
FNGD.EOM<1,POS> = DATE()
WRITE FNGD.EOM ON CONTROL, CONO:"FNGD.EOM"
CLEARFILE EOM.TRANS
CLEARFILE POST.REJECTS
PRR.SEQ = 10000
OLD.PROD.WHSE = "!@#$%^&*"; OLD.PROD = "!@#$%^&*"; OLD.CATG = "!@#$%^&*"
MATREAD COA.REC FROM COA, CONO : GLTB.INV ELSE COA.LEVEL = 0
PD.INV.ACCT = GLTB.INV
PD.INV.LEVEL = COA.LEVEL
MATREAD COA.REC FROM COA, CONO : GLTB.INV.ADJ ELSE COA.LEVEL = 0
PD.ADJ.ACCT = GLTB.INV.ADJ
PD.ADJ.LEVEL = COA.LEVEL
MATREAD COA.REC FROM COA, CONO : GLTB.WIP.CLR ELSE COA.LEVEL = 0
WIP.CLR.ACCT = GLTB.WIP.CLR
WIP.CLR.LEVEL = COA.LEVEL
MATREAD COA.REC FROM COA, CONO : GLTB.FNGD.VAR ELSE COA.LEVEL = 0
FNGD.VAR.ACCT = GLTB.FNGD.VAR
FNGD.VAR.LEVEL = COA.LEVEL
STMT = 'SSELECT FNGD_AUDIT_TAG BY TYPE BY P.LINE BY PROD BY WHSE WITH CONO = "':CONO:'"'
IF DIV.CODE # 'ALL' THEN STMT := ' AND WITH DIV = "':DIV.CODE:'"'
UDTEXECUTE STMT CAPTURING JUNK
DATA = 1
LOOP
   READNEXT INAH.ID ELSE DATA = 0
WHILE DATA DO
   IF CONO # INAH.ID[1,3] THEN GOTO 999
   INAH.SEQ=INAH.ID[4,99]
   MATREADU INAH.REC FROM INV_AUDIT_HIST, INAH.ID ELSE      
      RELEASE INV_AUDIT_HIST, INAH.ID                      
      MAT PRR.REC = ''                                   
      PRR.JOB=INAH.SEQ
      PRR.FILE = 'INV_AUDIT_HIST'                         
      PRR.ERR = 'CANNOT LOCATE'                          
      PRR.SEQ = PRR.SEQ + 1                              
      MATWRITE PRR.REC ON POST.REJECTS, PRR.SEQ          
      GOTO 999                                           
   END                                                   
   IF INAH.GLA.DATE # "" AND INAH.GLA.DATE # "P" THEN      
      RELEASE INV_AUDIT_HIST, INAH.ID                      
      GOTO 999                                           
   END                                                   
   IF INAH.PERIOD = '' THEN INAH.PERIOD = PERIOD           
   IF INAH.PERIOD # PERIOD THEN                           
      RELEASE INV_AUDIT_HIST, INAH.ID                      
      GOTO 999                                           
   END                                                   
   MATREAD WHSE.REC FROM WAREHOUSE, CONO:INAH.WHSE THEN   
      IF WHS.DIV # DIV.CODE AND DIV.CODE # "ALL" THEN   
         RELEASE INV_AUDIT_HIST, INAH.ID                 
         GOTO 999                                      
      END                                               
   END                                                   
   BEGIN CASE
      CASE INAH.TYPE='R'
         MATREAD INV.REC FROM INVENTORY, CONO:INAH.PROD ELSE  
            MAT PRR.REC = ""                                   
            PRR.JOB = INAH.SEQ                                   
            PRR.FILE = "INVENTORY"                             
            PRR.ID = INAH.PROD                                 
            PRR.ERR = "CANNOT LOCATE"                          
            PRR.SEQ = PRR.SEQ + 1                              
            MATWRITE PRR.REC ON POST.REJECTS, PRR.SEQ          
            GOTO 999                                           
         END                                                  
         MATREAD CATG.REC FROM CATEGORY, CONO:INV.LINE ELSE   
            MAT PRR.REC = ""                                   
            PRR.JOB=INAH.SEQ
            PRR.FILE = "CATEGORY"                              
            PRR.ID = INV.LINE                                  
            PRR.ERR = "CANNOT LOCATE"                          
            PRR.SEQ = PRR.SEQ + 1                              
            MATWRITE PRR.REC ON POST.REJECTS, PRR.SEQ          
            GOTO 999                                           
         END                                                  
         GOSUB PROCESS.RECEIPTS
      CASE INAH.TYPE='A'
         IF OLD.PROD # INAH.PROD THEN                           
            MATREAD INV.REC FROM INVENTORY, CONO:INAH.PROD ELSE 
               RELEASE INV_AUDIT_HIST, INAH.ID                   
               MAT PRR.REC = ""                                
               PRR.JOB=INAH.SEQ
               PRR.FILE = "INVENTORY"                          
               PRR.ID = INAH.PROD                               
               PRR.ERR = "CANNOT LOCATE"                       
               PRR.SEQ = PRR.SEQ + 1                           
               MATWRITE PRR.REC ON POST.REJECTS, PRR.SEQ       
               GOTO 999                                        
            END                                                
            OLD.PROD = INAH.PROD                                
         END                                                   
         IF OLD.CATG # INV.LINE THEN                           
            MATREAD CATG.REC FROM CATEGORY, CONO:INV.LINE ELSE 
               RELEASE INV_AUDIT_HIST, INAH.ID                   
               MAT PRR.REC = ""                           
               PRR.JOB=INAH.SEQ
               PRR.FILE = "CATEGORY"                      
               PRR.ID = INV.LINE                          
               PRR.ERR = "CANNOT LOCATE"                  
               PRR.SEQ = PRR.SEQ + 1                      
               MATWRITE PRR.REC ON POST.REJECTS, PRR.SEQ  
               GOTO 999                                   
            END                                           
            OLD.CATG = INV.LINE                           
         END                                              
         GOSUB PROCESS.ADJUSTMENTS
   END CASE
999 *
REPEAT
90000 *
READ JUNK FROM POST.REJECTS,'10001' THEN
   UserID = PMCProperty<1,3>
*   IN_PARAM = UserID:"!ICFEOMP!111!IC306!":CONO:"!Print"
   IN_PARAM = UserID:"!ICFEOMP!111!IC306!":CONO:"!":Printfalg 
   IN_PARAM<2> = ''
   IN_PARAM<3> = 'EOD.REJECT.LISTING'
   IN_PARAM<4> = 'P'
   IN_PARAM<5> = 'PMCPROCS'
   IN_PARAM<6> = REJECTFILE
   IN_PARAM<7> = 'REJECTS'
   IN_PARAM<8> = EMAIL_ADDR ;*Email Address as Entered by the user
   OUT_PARAM=''
   UDTEXECUTE 'SSELECT ':REJECTFILE CAPTURING JUNK
   CALL GenerateReport_Sub(ERRMSG,IN_PARAM,OUT_PARAM)
   IF ERRMSG # "" THEN GOTO 93000
   REJECT.RPT.PRT='WARNING !!! MAKE SURE TO PICKUP POSTING REJECTS REPORT FROM PRINTER'
   STATUS=RBO.setProperty('','RejectRptPrinted',REJECT.RPT.PRT)
   STATUS=RBO.setProperty('','ReportImage',OUT_PARAM<2>)
   IF ERRMSG THEN GOTO 93000   
END ELSE
   IF Printfalg # "Print" THEN ERRMSG  = "There is no data to ":Printfalg 
   GOTO 93000
END
STATUS = RBO.setProperty('','FR_CURR_DATE',FR.CURR.DATE)
STATUS = RBO.setProperty('','FR_NEXT_DATE',FR.NEXT.DATE)
STATUS = RBO.setProperty('','FR_CLOSE_DATE',FR.CLOSE.DATE)
*MATWRITE FISCAL.REC ON CONTROL, CONO:FISCPFX:'FISCAL'
GOTO 99999
*
**************************************************************************
****** S U B R O U T I N E S *********************************************
**************************************************************************
*
*********************
PROCESS.ADJUSTMENTS: 
*********************
*
*
AMT=INAH.EXT.COST
BEGIN CASE
   CASE AMT + 0 GE 0
      TRAN.COST = AMT
      DB.CR = 2
   CASE AMT + 0 < 0
      TRAN.COST = 0 - AMT
      DB.CR = 1
   CASE 1
      RELEASE INV_AUDIT_HIST,INAH.ID 
      RETURN
END CASE
PROD.WHSE = INAH.PROD : "!" : INAH.WHSE
IF OLD.PROD.WHSE # PROD.WHSE THEN
   OLD.PROD.WHSE = PROD.WHSE
   NEW.REC = 0; NEW.PTR = 0
END
BEGIN CASE
   CASE INAH.ACCT = PD.INV.ACCT
   CASE INAH.ACCT # ""
      INAH.ACCT = INAH.ACCT : STR("0",IN.ACCT.LEN-LEN(INAH.ACCT))
      INAH.ACCT = INAH.ACCT[1,IN.ACCT.LEN]
      MATREAD COA.REC FROM COA, CONO : INAH.ACCT ELSE COA.LEVEL = 0
      PD.INV.ACCT = INAH.ACCT
      PD.INV.LEVEL = COA.LEVEL
   CASE GLTB.INV = PD.INV.ACCT
   CASE 1
      MATREAD COA.REC FROM COA, CONO : GLTB.INV ELSE COA.LEVEL = 0
      PD.INV.ACCT = GLTB.INV
      PD.INV.LEVEL = COA.LEVEL
END CASE
BEGIN CASE
   CASE INAH.ADJ.ACCT = PD.ADJ.ACCT
   CASE INAH.ADJ.ACCT # ""
      INAH.ADJ.ACCT = INAH.ADJ.ACCT : STR("0",IN.ACCT.LEN-LEN(INAH.ADJ.ACCT))
      INAH.ADJ.ACCT = INAH.ADJ.ACCT[1,IN.ACCT.LEN]
      MATREAD COA.REC FROM COA, CONO : INAH.ADJ.ACCT ELSE COA.LEVEL = 0
      PD.ADJ.ACCT = INAH.ADJ.ACCT
      PD.ADJ.LEVEL = COA.LEVEL
   CASE GLTB.INV.ADJ = PD.ADJ.ACCT
   CASE 1
      MATREAD COA.REC FROM COA, CONO : GLTB.INV.ADJ ELSE COA.LEVEL = 0
      PD.ADJ.ACCT = GLTB.INV.ADJ
      PD.ADJ.LEVEL = COA.LEVEL
END CASE
BEGIN CASE
   CASE PD.ADJ.LEVEL < 1
      T.ACCT = GEN.DIV : GEN.DEPT : GEN.CCTR : PD.ADJ.ACCT
   CASE 1
      MATREAD WHSE.REC FROM WAREHOUSE, CONO:INAH.WHSE ELSE MAT WHSE.REC= ''
      IF WHS.DIV # '' THEN
         T.ACCT = WHS.DIV : GEN.DEPT : GEN.CCTR : PD.ADJ.ACCT
      END ELSE
         T.ACCT = GEN.DIV : GEN.DEPT : GEN.CCTR : PD.ADJ.ACCT
      END
END CASE
ON DB.CR GOSUB ADJ.DEBIT,ADJ.CREDIT
BEGIN CASE
   CASE PD.INV.LEVEL < 1
      T.ACCT = GEN.DIV : GEN.DEPT : GEN.CCTR : PD.INV.ACCT
   CASE 1
      MATREAD WHSE.REC FROM WAREHOUSE, CONO:INAH.WHSE ELSE MAT WHSE.REC= ''
      IF WHS.DIV # '' THEN
         T.ACCT = WHS.DIV : GEN.DEPT : GEN.CCTR : PD.INV.ACCT
      END ELSE
         T.ACCT = GEN.DIV : GEN.DEPT : GEN.CCTR : PD.INV.ACCT
      END
END CASE
ON DB.CR GOSUB ADJ.CREDIT,ADJ.DEBIT
INAH.GLA.DATE = "P"
MATWRITE INAH.REC ON INV_AUDIT_HIST,INAH.ID
RETURN
*
*
**************
ADJ.DEBIT: 
**************
*
ETR.ID = CONO : T.ACCT : OLD.PROD.WHSE : "!D*" : NEW.REC
MATREAD ETR.REC FROM EOM.TRANS, ETR.ID ELSE
   MAT ETR.REC = ""
END
ETR.AMT = ETR.AMT + TRAN.COST
LOCATE INAH.SEQ IN ETR.TRAN<1>,1 BY "AR" SETTING PTR ELSE NULL
INS INAH.SEQ BEFORE ETR.TRAN<1,PTR>
INS INAH.DATE BEFORE ETR.DATE<1,PTR>
INS TRAN.COST BEFORE ETR.TAMT<1,PTR>
IF PTR > 99 THEN NEW.PTR = 1
MATWRITE ETR.REC ON EOM.TRANS, ETR.ID
RETURN
*
*************
ADJ.CREDIT: 
*************
*
ETR.ID = CONO : T.ACCT : OLD.PROD.WHSE : "!C*" : NEW.REC
MATREAD ETR.REC FROM EOM.TRANS, ETR.ID ELSE
   MAT ETR.REC = ""
END
ETR.AMT = ETR.AMT - TRAN.COST
LOCATE INAH.SEQ IN ETR.TRAN<1>,1 BY "AR" SETTING PTR ELSE NULL
INS INAH.SEQ BEFORE ETR.TRAN<1,PTR>
INS INAH.DATE BEFORE ETR.DATE<1,PTR>
INS (0 - TRAN.COST) BEFORE ETR.TAMT<1,PTR>
IF PTR > 99 THEN NEW.PTR = 1
MATWRITE ETR.REC ON EOM.TRANS, ETR.ID
RETURN
*
*****************
PROCESS.RECEIPTS: 
*****************
*
NEW.REC=0
IF PERIOD=INAH.PERIOD THEN
   BEGIN CASE 
      CASE INAH.ACCT = INV.ACCT 
      CASE INAH.ACCT # "" 
         INAH.ACCT = INAH.ACCT : STR("0",IN.ACCT.LEN-LEN(INAH.ACCT)) 
         INAH.ACCT = INAH.ACCT[1,IN.ACCT.LEN] 
         MATREAD COA.REC FROM COA, CONO : INAH.ACCT ELSE COA.LEVEL = 0 
         INV.ACCT = INAH.ACCT
         INV.LEVEL = COA.LEVEL
      CASE GLTB.INV = INV.ACCT 
      CASE 1 
         MATREAD COA.REC FROM COA, CONO : GLTB.INV ELSE COA.LEVEL = 0 
         INV.ACCT = GLTB.INV
         INV.LEVEL = COA.LEVEL
   END CASE 
   BEGIN CASE 
      CASE INV.LEVEL < 1 
         T.ACCT = GEN.DIV : GEN.DEPT : GEN.CCTR : INV.ACCT
      CASE 1 
         MATREAD WHSE.REC FROM WAREHOUSE, CONO:INAH.WHSE ELSE MAT WHSE.REC= ''
         IF WHS.DIV # '' THEN 
            T.ACCT = WHS.DIV : GEN.DEPT : GEN.CCTR : INV.ACCT
         END ELSE 
            T.ACCT = GEN.DIV : GEN.DEPT : GEN.CCTR : INV.ACCT
         END
   END CASE 
   INVR.ID=CONO:INAH.RECP.NO
   MATREADU INVR.REC FROM INV_RECEIPTS,INVR.ID THEN
      AMT = INVR.TOT.COST
      BEGIN CASE 
         CASE AMT + 0 > 0 
            TRAN.AMT = AMT 
            GOSUB RECP.DEBIT 
         CASE AMT + 0 < 0 
            TRAN.AMT = 0 - AMT 
            GOSUB RECP.CREDIT 
      END CASE 
      BEGIN CASE 
         CASE WIP.CLR.LEVEL < 1 
            T.ACCT = GEN.DIV : GEN.DEPT : GEN.CCTR : WIP.CLR.ACCT
         CASE 1 
            MATREAD WHSE.REC FROM WAREHOUSE, CONO:INAH.WHSE ELSE MAT WHSE.REC=''
            IF WHS.DIV # '' THEN 
               T.ACCT = WHS.DIV : GEN.DEPT : GEN.CCTR : WIP.CLR.ACCT
            END ELSE 
               T.ACCT = GEN.DIV : GEN.DEPT : GEN.CCTR : WIP.CLR.ACCT
            END
      END CASE 
      BEGIN CASE 
         CASE AMT + 0 > 0 
            TRAN.AMT = AMT 
            GOSUB RECP.CREDIT 
         CASE AMT + 0 < 0 
            TRAN.AMT = 0 - AMT 
            GOSUB RECP.DEBIT 
      END CASE 
   END
END
RELEASE INV_RECEIPTS, INVR.ID
INAH.GLA.DATE = "P"
MATWRITE INAH.REC ON INV_AUDIT_HIST,INAH.ID
RETURN
*
************
RECP.DEBIT: 
************
*
ETR.ID = CONO : T.ACCT : INAH.PROD:"!":INAH.WHSE : "!D*" : NEW.REC 
MATREAD ETR.REC FROM EOM.TRANS, ETR.ID ELSE                        
   MAT ETR.REC = ""                                                 
END                                                                
ETR.AMT = ETR.AMT + TRAN.AMT                                       
LOCATE INAH.SEQ IN ETR.TRAN<1>,1 BY "AR" SETTING PTR ELSE NULL       
INS INAH.SEQ BEFORE ETR.TRAN<1,PTR>                                  
INS INAH.DATE BEFORE ETR.DATE<1,PTR>                           
INS TRAN.AMT BEFORE ETR.TAMT<1,PTR>                                
IF PTR > 99 THEN NEW.REC = NEW.REC+1                               
MATWRITE ETR.REC ON EOM.TRANS, ETR.ID                              
RETURN                                                             
*                                                                  
****************
RECP.CREDIT: 
****************
*
ETR.ID = CONO : T.ACCT : INAH.PROD:"!":INAH.WHSE : "!C*" : NEW.REC 
MATREAD ETR.REC FROM EOM.TRANS, ETR.ID ELSE                        
   MAT ETR.REC = ""                                                 
END                                                                
ETR.AMT = ETR.AMT - TRAN.AMT                                       
LOCATE INAH.SEQ IN ETR.TRAN<1>,1 BY "AR" SETTING PTR ELSE NULL       
INS INAH.SEQ BEFORE ETR.TRAN<1,PTR>         
INS INAH.DATE BEFORE ETR.DATE<1,PTR>  
INS (0 - TRAN.AMT) BEFORE ETR.TAMT<1,PTR> 
IF PTR > 99 THEN NEW.REC = NEW.REC+1      
MATWRITE ETR.REC ON EOM.TRANS, ETR.ID     
RETURN                                    

93000 *
STATUS=RBO.setProperty('','ServerStatus',1)
STATUS=RBO.setProperty('','ServerMessage',ERRMSG)
*CMD='DELETE.FILE ': TRANFILE :' FORCE'
*UDTEXECUTE CMD CAPTURING JUNK
*CMD='DELETE.FILE ': REJECTFILE :' FORCE'
*UDTEXECUTE CMD CAPTURING JUNK
*** END OF JOB ***
99999 END

