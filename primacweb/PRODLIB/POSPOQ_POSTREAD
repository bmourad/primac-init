SUBROUTINE POSPOQ_POSTREAD
********************************************************************************
*   Program name :- POSPOQ_POSTREAD
*   Created:- 9/17/2003
*------------------------------------------------------------------------------*
*

* In Properties:
* --------------
*  
*
* Out Properties:
* ---------------
*  
********************************************************************************
$INCLUDE WWINSERT RBO.H
$INCLUDE PMC.CPYLIB PO
$INCLUDE ICS.CPYLIB INVENTORY
$INCLUDE ICS.CPYLIB INV.CNV

* Insert method code here
OPEN '','PO' TO PO ELSE 
	ERRMSG = 'PO FILE IS MISSING'; GOTO 93000
END

OPEN '','INVENTORY' TO INVENTORY ELSE 
	ERRMSG = 'INVENTORY FILE IS MISSING'; GOTO 93000
END

ID = ''
LINES = ''
RETURN_VALUE = ''
DIFF.UM = ''
ERRMSG = ''
PMCProperty = ''
DivOwner  = ''
USER.ID = ''
NCNT = 1
PO.TOT.CANCEL2 = ''
P_VALUE.AMT.CANCEL = ''
P_VALUE.AMT.ONORD = ''
P_VALUE.AMT.OPEN = ''
P_VALUE.UNIT.FLG = ''
P_VALUE.TOT.ONORD = ''
P_VALUE.TOT.CANCEL = ''
P_VALUE.WHSE = ''
P_VALUE.QTY.OPEN = ''
P_VALUE.DISCOUNT = ''
PO.DISCOUNT = ''
PO.QTY.OPEN = ''
PO.WHSE = ''
PO.TOT.CANCEL = ''
PO.TOT.ONORD = ''
INV_FULL_DESC = ''
TermsDis = ''
JBUnits = ''
UnitFlg = ''
UnitFlg2 = ''
Discount = ''

STATUS = RBO.getProperty('','ID',ID)
STATUS = RBO.getProperty('','TermsDis',TermsDis)
STATUS = RBO.getProperty('','Discount',Discount)
STATUS = RBO.getProperty('','JBUnits',JBUnits)
STATUS = RBO.getProperty('','UnitFlg',UnitFlg)
STATUS = RBO.getProperty('','PMCProperty',PMCProperty)
STATUS = RBO.getProperty('','DivOwner',DivOwner)

USER.ID = PMCProperty<1,3>
CONO = ID[1,3]

STATUS = RBO.setProperty('','Cono',CONO) 
STATUS = RBO.setProperty('','USER_ID',USER.ID) 
STATUS = RBO.setProperty('','DIV_CODE',DivOwner) 

* CHECK FOR THE COST/STK CONVERSIONS HERE
MAT INV.CNV.REC = ""

*THIS IS FOR TERMS.DIS; ADD CODE FOR %DIS OVER HERE
	IF TermsDis # '' THEN
		TermsDis = OCONV(TermsDis,'MD2')
	END
*	IF Discount # '' THEN
*		Discount = OCONV(Discount,'MD2')
*	END
	IF Discount # '' THEN
	NCNT = 1
		*Discount = OCONV(Discount,'MD2')
		NCNT = DCOUNT(Discount,@VM)
		FOR LN = 1 TO NCNT
			Discount<1,LN> = OCONV(Discount<1,LN>,'MD2')
		NEXT LN
	LN = 1
	NCNT = 1
	END
*END


MATREAD PO.REC FROM PO, ID THEN
	LINES = DCOUNT(PO.PROD.NUM,@VM)
	FOR LN = 1 TO LINES
	IF JBUnits<1,LN> = UnitFlg<1,LN> THEN
		UnitFlg<1,LN> = ''
	END
		MATREAD INV.REC FROM INVENTORY, CONO:PO.PROD.NUM<1,LN> THEN
		*INV_FULL_DESC
			INV_FULL_DESC<1,LN> = INV.FULL.DESC
			BEGIN CASE
				CASE INV.PAP.TYPE = "ROLL" OR INV.PAP.TYPE = "LROLL" OR INV.PAP.TYPE = "PCOAT"
					RETURN_VALUE<1,LN> = "# Rolls"
				CASE INV.PAP.TYPE = "SHEET"
					RETURN_VALUE<1,LN> = "# Skids"
				CASE 1	
					RETURN_VALUE<1,LN> = ""
			END CASE
		GOSUB 4000
		END
	NEXT LN
END
GOSUB 10000
*HERE CONVERT PO.GROS.PRICE, PO.TOT.ONORD, PO.TOT.CANCEL, PO.QTY.OPEN
*STATUS = RBO.setProperty('','ServerMessage',ERRMSG)
STATUS = RBO.setProperty('','RollType',RETURN_VALUE)
STATUS = RBO.setProperty('','GrosPrice',PO.GROS.PRICE)
STATUS = RBO.setProperty('','QtyOpen',P_VALUE.QTY.OPEN)
STATUS = RBO.setProperty('','TotOnOrd',P_VALUE.TOT.ONORD)
STATUS = RBO.setProperty('','TotCancel',P_VALUE.TOT.CANCEL)
STATUS = RBO.setProperty('','TEMP_CANCEL',P_VALUE.AMT.CANCEL)
STATUS = RBO.setProperty('','TEMP_ONORD',P_VALUE.AMT.ONORD)
STATUS = RBO.setProperty('','TEMP_OPEN',P_VALUE.AMT.OPEN)
STATUS = RBO.setProperty('','TEMP_FULL_DESCS',INV_FULL_DESC)
STATUS = RBO.setProperty('','TermsDis',TermsDis)
STATUS = RBO.setProperty('','Discount',Discount)
STATUS = RBO.setProperty('','UnitFlg',UnitFlg)
* End of method code
RETURN

10000:
	N = 1
	FOR N = 1 TO LINES
		PO.DEL.DATE<1,N> = OCONV(PO.DEL.DATE<1,N>, "D2/")
		PO.GROS.PRICE<1,N> = OCONV(PO.GROS.PRICE<1,N> , "MD4")
		IF DIFF.UM<N> = "Y" THEN
			PO.JB.UNITS<1,N> = PO.JB.UNITS<1,N>
			IF ICR.CNV<N,1> = "MD0" THEN
				TEMP.TOT.ONORD = ICONV(((PO.TOT.ONORD<1,N>/ICR.DV1<N,1>)*ICR.MT1<N,1>)/ICR.DV2<N,1>,'MD0')

				ERRMSG<1,NCNT> = "IN 1: " : PO.TOT.CANCEL<1,N> : "~" : PO.QTY.OPEN<1,N>
				NCNT = NCNT + 1

				TEMP.TOT.CANCEL = ICONV(((PO.TOT.CANCEL<1,N>/ICR.DV1<N,1>)*ICR.MT1<N,1>)/ICR.DV2<N,1>,'MD0')
				P_VALUE.AMT.ONORD<1,N> = ''
				P_VALUE.AMT.CANCEL<1,N> = ''
				P_VALUE.AMT.OPEN<1,N> = ''
				TEMP.QTY.OPEN = ICONV(((PO.QTY.OPEN<1,N>/ICR.DV1<N,1>)*ICR.MT1<N,1>)/ICR.DV2<N,1>,'MD0')
				P_VALUE.TOT.ONORD<1,N> = TEMP.TOT.ONORD
				P_VALUE.TOT.CANCEL<1,N> = TEMP.TOT.CANCEL
				P_VALUE.QTY.OPEN<1,N> = TEMP.QTY.OPEN
			END ELSE
				P_VALUE.TOT.ONORD<1,N> = OCONV(INT(PO.TOT.ONORD<1,N>/10), "MD2")
				*P_VALUE.AMT.ONORD<1,N> = OCONV(INT(PO.TOT.ONORD<1,N>/10), "MD2")


				ERRMSG<1,NCNT> = "IN 2: " : PO.TOT.CANCEL<1,N> : "~" : PO.QTY.OPEN<1,N>
				NCNT = NCNT + 1


				P_VALUE.TOT.CANCEL<1,N> = OCONV(INT(PO.TOT.CANCEL<1,N>/10), "MD2")
				*P_VALUE.AMT.CANCEL<1,N> = OCONV(INT(PO.TOT.CANCEL<1,N>/10), "MD2")


				ERRMSG<1,NCNT> = "IN 8: " : OCONV(INT(PO.TOT.CANCEL<1,N>/10), "MD2") : "~" : PO.QTY.OPEN<1,N>
				NCNT = NCNT + 1


				P_VALUE.QTY.OPEN<1,N> = OCONV(INT(PO.QTY.OPEN<1,N>/10), "MD2")
				*P_VALUE.AMT.OPEN<1,N> = OCONV(INT(PO.QTY.OPEN<1,N>/10), "MD2")
			END
			P_VALUE.WHSE<1,N> = PO.WHSE<1,N>
			P_VALUE.DISCOUNT<1,N> = OCONV(PO.DISCOUNT<1,N> , "MD2")
			P_VALUE.UNIT.FLG<1,N> = PO.UNIT.FLG<1,N>
			IF ICR.CNV<N,2> = "MD0" THEN
				P_VALUE.AMT.ONORD<1,N> = ''
				P_VALUE.AMT.CANCEL<1,N> = ''
				P_VALUE.AMT.OPEN<1,N> = ''

				TEMP.TOT.ONORD = ICONV(((PO.TOT.ONORD<1,N>/ICR.DV1<N,2>)*ICR.MT1<N,2>)/ICR.DV2<N,2>,'MD0')
				P_VALUE.TOT.ONORD<1,N> = TEMP.TOT.ONORD

				ERRMSG<1,NCNT> = "IN 3: " : PO.TOT.CANCEL<1,N> : "~" : PO.QTY.OPEN<1,N>
				NCNT = NCNT + 1


				TEMP.TOT.CANCEL<1,N> = ICONV(((PO.TOT.CANCEL<1,N>/ICR.DV1<N,2>)*ICR.MT1<N,2>)/ICR.DV2<N,2>,'MD0')
				P_VALUE.TOT.CANCEL<1,N> = TEMP.TOT.CANCEL
				TEMP.QTY.OPEN = ICONV(((PO.QTY.OPEN<1,N>/ICR.DV1<N,2>)*ICR.MT1<N,2>)/ICR.DV2<N,2>,'MD0')
				P_VALUE.QTY.OPEN<1,N> = TEMP.QTY.OPEN
			END ELSE
				IF ICR.CNV<N,1> = "MD0" THEN
					*P_VALUE.AMT.ONORD<1,N> = ''
					*P_VALUE.AMT.CANCEL<1,N> = ''
					*P_VALUE.AMT.OPEN<1,N> = ''
	
					P_VALUE.TOT.ONORD<1,N> = OCONV(INT(PO.TOT.ONORD<1,N>/10), "MD2")

				ERRMSG<1,NCNT> = "IN 4: " : PO.TOT.CANCEL<1,N> : "~" : PO.QTY.OPEN<1,N>
				NCNT = NCNT + 1


					P_VALUE.TOT.CANCEL<1,N> = OCONV(INT(PO.TOT.CANCEL<1,N>/10), "MD2")
					P_VALUE.QTY.OPEN<1,N> = OCONV(INT(PO.QTY.OPEN<1,N>/10), "MD2")
				END ELSE
					*P_VALUE.AMT.ONORD<1,N> = ''
					*P_VALUE.AMT.CANCEL<1,N> = ''
					*P_VALUE.AMT.OPEN<1,N> = ''
	
					*P_VALUE.TOT.ONORD<1,N> = OCONV(INT((PO.TOT.ONORD<1,N>/10)/ICR.MT1<N,1>), "MD2")
					P_VALUE.AMT.ONORD<1,N> = OCONV(INT((PO.TOT.ONORD<1,N>/10)/ICR.MT1<N,1>), "MD2")


				ERRMSG<1,NCNT> = "IN 5: " : PO.TOT.CANCEL<1,N> : "~" : PO.QTY.OPEN<1,N>
				NCNT = NCNT + 1


					*P_VALUE.TOT.CANCEL<1,N> = OCONV(INT((PO.TOT.CANCEL<1,N>/10)/ICR.MT1<N,1>), "MD2")
					P_VALUE.AMT.CANCEL<1,N> = OCONV(INT((PO.TOT.CANCEL<1,N>/10)/ICR.MT1<N,1>), "MD2")

					*P_VALUE.QTY.OPEN<1,N> = OCONV(INT((PO.QTY.OPEN<1,N>/10)/ICR.MT1<N,1>), "MD2")
					P_VALUE.AMT.OPEN<1,N> = OCONV(INT((PO.QTY.OPEN<1,N>/10)/ICR.MT1<N,1>), "MD2")

				END
			END
			*P_VALUE.DESC.INV<1,N> = DESC.INV<1,N>
		END ELSE
			P_VALUE.UNIT.FLG<1,N> = PO.UNIT.FLG<1,N>
			IF ICR.CNV<N,1> = "MD0" THEN
				P_VALUE.AMT.ONORD<1,N> = ''
				P_VALUE.AMT.CANCEL<1,N> = ''
				P_VALUE.AMT.OPEN<1,N> = ''

				TEMP.TOT.ONORD = ICONV(((PO.TOT.ONORD<1,N>/ICR.DV1<N,1>)*ICR.MT1<N,1>)/ICR.DV2<N,1>,'MD0')
				P_VALUE.TOT.ONORD<1,N> = TEMP.TOT.ONORD

				ERRMSG<1,NCNT> = "IN 6: " : PO.TOT.CANCEL<1,N> : "~" : PO.QTY.OPEN<1,N>
				NCNT = NCNT + 1


				TEMP.TOT.CANCEL = ICONV(((PO.TOT.CANCEL<1,N>/ICR.DV1<N,1>)*ICR.MT1<N,1>)/ICR.DV2<N,1>,'MD0')
				P_VALUE.TOT.CANCEL<1,N> = TEMP.TOT.CANCEL
				TEMP.QTY.OPEN = ICONV(((PO.QTY.OPEN<1,N>/ICR.DV1<N,1>)*ICR.MT1<N,1>)/ICR.DV2<N,1>,'MD0')
				P_VALUE.QTY.OPEN<1,N> = TEMP.QTY.OPEN
			END ELSE
				P_VALUE.AMT.ONORD<1,N> = ''
				P_VALUE.AMT.CANCEL<1,N> = ''
				P_VALUE.AMT.OPEN<1,N> = ''

				P_VALUE.TOT.ONORD<1,N> = OCONV(INT(PO.TOT.ONORD<1,N>/10), "MD2")

				ERRMSG<1,NCNT> = "IN 7: " : PO.TOT.CANCEL<1,N> : "~" : PO.QTY.OPEN<1,N>
				NCNT = NCNT + 1


				P_VALUE.TOT.CANCEL<1,N> = OCONV(INT(PO.TOT.CANCEL<1,N>/10), "MD2")
				P_VALUE.QTY.OPEN<1,N> = OCONV(INT(PO.QTY.OPEN<1,N>/10), "MD2")
			END
			P_VALUE.WHSE<1,N> = PO.WHSE<1,N>
			P_VALUE.DISCOUNT<1,N> = OCONV(PO.DISCOUNT<1,N> , "MD2")
			*P_VALUE.DESC.INV<1,N> = DESC.INV<1,N>
		END
	NEXT N
RETURN


4000:
  BEGIN CASE
   CASE INV.UNIT<1,2> = "SHT" AND INV.UNIT<1,3> = "LBS"
     ICR.CNV<LN,1> = "MD0"; ICR.DV2<LN,1> = 1
     ICR.DV1<LN,1> = INV.M.WT; ICR.MT1<LN,1> = 1
    CASE INV.UNIT<1,2> = "PC" AND INV.UNIT<1,3> = "MSI"
      ICR.CNV<LN,1> = "MD0"; ICR.DV2<LN,1> = 1
      ICR.DV1<LN,1> = INV.PAP.WIDTH/100; ICR.MT1<LN,1> = 10
    CASE INV.UNIT<1,2> = "FT" AND INV.UNIT<1,3> = "MSI"
      ICR.CNV<LN,1> = "MD0"; ICR.DV2<LN,1> = 12
      ICR.DV1<LN,1> = INV.PAP.WIDTH/100; ICR.MT1<LN,1> = 100
    CASE 1
      ICR.CNV<LN,1> = "MD2"; ICR.DV2<LN,1> = 1
      ICR.DV1<LN,1> = 10; ICR.MT1<LN,1> = INV.SBR
  END CASE
  BEGIN CASE
    CASE PO.UNIT.FLG<1,LN> = "SHT" AND INV.UNIT<1,3> = "LBS"
      ICR.CNV<LN,2> = "MD0"; ICR.DV2<LN,2> = 1
      ICR.DV1<LN,2> = INV.M.WT; ICR.MT1<LN,2> = 1
    CASE PO.UNIT.FLG<1,LN> = "PC" AND INV.UNIT<1,3> = "MSI"
      ICR.CNV<LN,2> = "MD0"; ICR.DV2<LN,2> = 1
      ICR.DV1<LN,2> = INV.PAP.WIDTH/100; ICR.MT1<LN,2> = 10
    CASE PO.UNIT.FLG<1,LN> = "FT" AND INV.UNIT<1,3> = "MSI"
      ICR.CNV<LN,2> = "MD0"; ICR.DV2<LN,2> = 12
      ICR.DV1<LN,2> = INV.PAP.WIDTH/100; ICR.MT1<LN,2> = 100
    CASE 1
      ICR.CNV<LN,2> = "MD2"; ICR.DV2<LN,2> = 1
      ICR.DV1<LN,2> = 10; ICR.MT1<LN,2> = 1
  END CASE
  IF PO.UNIT.FLG<1,LN> # INV.UNIT<1,2> THEN DIFF.UM<LN> = "Y" ELSE DIFF.UM<LN> = "N"
RETURN


93000 
  STATUS = RBO.setProperty('','ServerStatus',1)        
  STATUS = RBO.setProperty('','ServerMessage',ERRMSG) 
RETURN
