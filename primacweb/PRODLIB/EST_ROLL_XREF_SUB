  SUBROUTINE EST_ROLL_XREF_SUB
********************************************************************************
*   Program name :- EST_XREF_SUB
*   Created:- 1/14/2003
*------------------------------------------------------------------------------
*
*
* In Properties:
* --------------
*  
*
* Out Properties:
* ---------------
*  
********************************************************************************
  $INCLUDE WWINSERT RBO.H

* Insert method code here
  $INCLUDE PMC.CPYLIB COMPANY
  $INCLUDE JES.CPYLIB ESTIMATE
  $INCLUDE PMC.CPYLIB CUSTOMER
  $INCLUDE PMC.CPYLIB SALESMAN
  $INCLUDE JES.CPYLIB ESTIMATOR
  $INCLUDE JCS.CPYLIB JOB.CATEGORY
  $INCLUDE CPYLIB CHAR

* Open files
  ERRMSG = ''
  OPEN "COMPANY" TO COMPANY ELSE ERRMSG = "COMPANY FILE IS MISSING"
  OPEN "CONTROL" TO CONTROL ELSE ERRMSG = "CONTROL FILE IS MISSING"
  OPEN "CUSTOMER" TO CUSTOMER ELSE ERRMSG = "CUSTOMER FILE IS MISSING"
  OPEN "ESTIMATE" TO ESTIMATE ELSE ERRMSG = "ESTIMATE FILE IS MISSING"
  OPEN "SALESMAN" TO SALESMAN ELSE ERRMSG = "SALESMAN FILE IS MISSING"
  OPEN "ESTIMATOR" TO ESTIMATOR ELSE ERRMSG = "ESTIMATOR FILE IS MISSING"
  OPEN "JOB.CATEGORY" TO JOB.CATEGORY ELSE ERRMSG = "JOB.CATEGORY FILE IS MISSING"
  IF ERRMSG THEN
    CALL RBO_ERROR_SUB(ERRMSG)
    RETURN
  END

* Get properties
  STATUS = RBO.getProperty('','ID',ID)
  STATUS = RBO.getProperty('','PARAM',PARAM)
  STATUS = RBO.getProperty('','Division',Division)
  STATUS = RBO.getProperty('','Date',Date)
  STATUS = RBO.getProperty('','Customer',Customer)
  STATUS = RBO.getProperty('','Salesrep',Salesrep)
  STATUS = RBO.getProperty('','Estimator',Estimator)
  STATUS = RBO.getProperty('','Category',Category)
  STATUS = RBO.getProperty('','Status',Status)
  STATUS = RBO.getProperty('','Type',Type)

* Get CONO
  CONO = ID[1,3]
  MATREAD COMP.REC FROM COMPANY, CONO ELSE
    ERRMSG = 'Invalid Company ID (':CONO:').'
    CALL RBO_ERROR_SUB(ERRMSG); RETURN
  END

* Check input parameters
  SEL.DIV  = ""
  SEL.DATE = ""
  SEL.CUST = ""
  SEL.SLSM = ""
  SEL.ESTM = ""
  SEL.CATG = ""
  SEL.STAT = ""
  SEL.TYPE = ""
  RL.EST = 0
  COM.EST = 0
  QP.EST = 0
  BOOK.EST = 0

  SWAP ',' WITH AM IN PARAM
  ACTION = PARAM<1>
  PCNT = DCOUNT(PARAM,AM)
  FOR PPTR = 2 TO PCNT
    PTYPE = TRIM(FIELD(PARAM<PPTR>,"=",1))
    BEGIN CASE
      CASE PTYPE = "ETYPE"
        SEL.ETYPE = TRIM(FIELD(PARAM<PPTR>,"=",2))
        BEGIN CASE
          CASE SEL.ETYPE = "RL"
            RL.EST = 1
          CASE SEL.ETYPE = "1"
            COM.EST = 1
          CASE SEL.ETYPE = "QP"
            QP.EST = 1
          CASE SEL.ETYPE = "BOOK"
            BOOK.EST = 1
        END CASE
      CASE PTYPE = "RL"
        RL.EST = 1
      CASE PTYPE = "DIV"
        SEL.DIV = TRIM(FIELD(PARAM<PPTR>,"=",2))
      CASE PTYPE  = "DATE"
        SEL.DATE = TRIM(FIELD(PARAM<PPTR>,"=",2))
      CASE PTYPE  = "CUST"
        SEL.CUST = TRIM(FIELD(PARAM<PPTR>,"=",2))
      CASE PTYPE  = "SLSM"
        SEL.SLSM = TRIM(FIELD(PARAM<PPTR>,"=",2))
      CASE PTYPE  = "ESTM"
        SEL.ESTM = TRIM(FIELD(PARAM<PPTR>,"=",2))
      CASE PTYPE  = "CATG"
        SEL.CATG = TRIM(FIELD(PARAM<PPTR>,"=",2))
      CASE PTYPE  = "STAT"
        SEL.STAT = TRIM(FIELD(PARAM<PPTR>,"=",2))
      CASE PTYPE  = "TYPE"
        SEL.TYPE = TRIM(FIELD(PARAM<PPTR>,"=",2))
    END CASE
  NEXT PPTR

  SELDAT = ""
  SELEST = ""
  SELCNT = 0

* Check properties for correct input
  XDATA = Division; GOSUB PARSE.INPUT.DATA
  IF EDIT.ERR OR XNAME # "" THEN
    ERRMSG = "** Invalid Division Entered **"
    CALL RBO_ERROR_SUB(ERRMSG); RETURN
  END
  IF SEL.DIV # "" AND SEL.DIV # Division THEN SELCNT = 0
  SEL.DIV = Division

  XDATA = Date; GOSUB PARSE.INPUT.DATA
  IF EDIT.ERR OR XNAME # "" THEN
    ERRMSG = "** Invalid Date Entered **"
    CALL RBO_ERROR_SUB(ERRMSG); RETURN
  END
  IF SEL.DATE # "" AND SEL.DATE # Date THEN SELCNT = 0
  SEL.DATE = Date

  XDATA = Customer; GOSUB PARSE.INPUT.DATA
  IF EDIT.ERR THEN
    ERRMSG = "** Invalid Customer Entered **"
    CALL RBO_ERROR_SUB(ERRMSG); RETURN
  END
  IF SEL.CUST # "" AND SEL.CUST # Customer THEN SELCNT = 0
  SEL.CUST = Customer

  XDATA = Salesrep; GOSUB PARSE.INPUT.DATA
  IF EDIT.ERR THEN
    ERRMSG = "** Invalid Salesrep Entered **"
    CALL RBO_ERROR_SUB(ERRMSG); RETURN
  END
  IF SEL.SLSM # "" AND SEL.SLSM # Salesrep THEN SELCNT = 0
  SEL.SLSM = Salesrep

  XDATA = Estimator; GOSUB PARSE.INPUT.DATA
  IF EDIT.ERR THEN
    ERRMSG = "** Invalid Estimator Entered **"
    CALL RBO_ERROR_SUB(ERRMSG); RETURN
  END
  IF SEL.ESTM # "" AND SEL.ESTM # Estimator THEN SELCNT = 0
  SEL.ESTM = Estimator

  XDATA = Category; GOSUB PARSE.INPUT.DATA
  IF EDIT.ERR THEN
    ERRMSG = "** Invalid Category Entered **"
    CALL RBO_ERROR_SUB(ERRMSG); RETURN
  END
  IF SEL.CATG # "" AND SEL.CATG # Category THEN SELCNT = 0
  SEL.CATG = Category

  XDATA = Status; GOSUB PARSE.INPUT.DATA
  IF EDIT.ERR THEN
    ERRMSG = "** Invalid Status Entered **"
    CALL RBO_ERROR_SUB(ERRMSG); RETURN
  END
  IF SEL.STAT # "" AND SEL.STAT # Status THEN SELCNT = 0
  SEL.STAT = Status

  XDATA = Type; GOSUB PARSE.INPUT.DATA
  IF EDIT.ERR THEN
    ERRMSG = "** Invalid Type Entered **"
    CALL RBO_ERROR_SUB(ERRMSG); RETURN
  END
  IF SEL.TYPE # "" AND SEL.TYPE # Type THEN SELCNT = 0
  SEL.TYPE = Type

* Setup selection list
  DateList = ''
  EstimateList = ''
  TypeList = ''
  CustProspectList = ''
  CatList = ''
  StatusList = ''

  GOSUB DERIVE.EST.LIST 
  IF SELCNT = 0 THEN
    ERRMSG = "No estimates found with specified criteria!"
    CALL RBO_ERROR_SUB(ERRMSG); RETURN
  END
  GOSUB CREATE.SELECTION.LISTS

* Set output properties
  STATUS = RBO.setProperty('','DateList',DateList)
  STATUS = RBO.setProperty('','EstimateList',EstimateList)
  STATUS = RBO.setProperty('','TypeList',TypeList)
  STATUS = RBO.setProperty('','CustProspectList',CustProspectList)
  STATUS = RBO.setProperty('','CatList',CatList)
  STATUS = RBO.setProperty('','StatusList',StatusList)

* End of method code
  RETURN

DERIVE.EST.LIST: 
  SEL.DIV.ID  = ""
  SEL.DATE.ID = ""
  SEL.CUST.ID = ""
  SEL.CUST.NM = ""
  SEL.SLSM.ID = ""
  SEL.SLSM.NM = ""
  SEL.ESTM.ID = ""
  SEL.ESTM.NM = ""
  SEL.CATG.ID = ""
  SEL.CATG.NM = ""
  SEL.STAT.ID = ""
  SEL.TYPE.ID = ""
*
  XDATA=SEL.DIV;  GOSUB PARSE.INPUT.DATA; SEL.DIV.ID  = XID
  XDATA=SEL.DATE; GOSUB PARSE.INPUT.DATA; SEL.DATE.ID = XID
  XDATA=SEL.CUST; GOSUB PARSE.INPUT.DATA; SEL.CUST.ID = XID; SEL.CUST.NM = XNAME
  XDATA=SEL.SLSM; GOSUB PARSE.INPUT.DATA; SEL.SLSM.ID = XID; SEL.SLSM.NM = XNAME
  XDATA=SEL.ESTM; GOSUB PARSE.INPUT.DATA; SEL.ESTM.ID = XID; SEL.ESTM.NM = XNAME
  XDATA=SEL.CATG; GOSUB PARSE.INPUT.DATA; SEL.CATG.ID = XID; SEL.CATG.NM = XNAME
  XDATA=SEL.STAT; GOSUB PARSE.INPUT.DATA; SEL.STAT.ID = XID
*
  SEL.DIV.ID.CNT  = DCOUNT(SEL.DIV.ID,VM)
  SEL.DATE.ID.CNT = DCOUNT(SEL.DATE.ID,VM)
  SEL.CUST.ID.CNT = DCOUNT(SEL.CUST.ID,VM)
  SEL.CUST.NM.CNT = DCOUNT(SEL.CUST.NM,VM)
  SEL.SLSM.ID.CNT = DCOUNT(SEL.SLSM.ID,VM)
  SEL.SLSM.NM.CNT = DCOUNT(SEL.SLSM.NM,VM)
  SEL.ESTM.ID.CNT = DCOUNT(SEL.ESTM.ID,VM)
  SEL.ESTM.NM.CNT = DCOUNT(SEL.ESTM.NM,VM)
  SEL.CATG.ID.CNT = DCOUNT(SEL.CATG.ID,VM)
  SEL.CATG.NM.CNT = DCOUNT(SEL.CATG.NM,VM)
  SEL.STAT.ID.CNT = DCOUNT(SEL.STAT.ID,VM)
*
  IF SELCNT = 0 THEN
    SELDAT = ""
    SELEST = ""
    SELECT ESTIMATE
    LOOP
      READNEXT ID ELSE EXIT
      BEGIN CASE
        CASE ID[1,3] # CONO
        CASE SEL.TYPE = "R" AND INDEX(ID,"-",1) = 0
        CASE SEL.TYPE = "S" AND INDEX(ID,"-",1) > 0
        CASE 1
	   EST.ID = ID[4,99]
          SEL.OK = 1
          MATREAD EST.REC FROM ESTIMATE, ID ELSE SEL.OK = 0
          IF RL.EST AND EST.PDEF.TYPE # "RL" THEN SEL.OK = 0
          IF COM.EST AND EST.PDEF.TYPE # "1" THEN SEL.OK = 0
          IF QP.EST AND EST.PDEF.TYPE # "QP" THEN SEL.OK = 0
          IF BOOK.EST AND EST.PDEF.TYPE # "BOOK" THEN SEL.OK = 0
          IF SEL.OK THEN GOSUB CHECK.SEL.CRITERIA
          IF SEL.OK THEN
            IF INDEX(EST.ID,"-",1) = 0 THEN
              ESTID = CONO:EST.ID:"-00"
            END ELSE
              ESTID = CONO:EST.ID
            END
            SKEY = EST.DATE.ENTERED:"*":ESTID
            LOCATE SKEY IN SELDAT,1 BY "AR" SETTING EPTR ELSE NULL
            SELDAT = INSERT(SELDAT,EPTR,0,0,SKEY)
            SELEST = INSERT(SELEST,EPTR,0,0,ESTID)
            SELCNT = SELCNT + 1
          END
      END CASE
    REPEAT
  END ELSE
    ECNT = DCOUNT(SELEST,AM)
    FOR EPTR = ECNT TO 1 STEP -1
      EST.ID = SELEST<EPTR>[4,99]
      IF FIELD(EST.ID,"-",2) = "00" THEN
        EST.ID = FIELD(EST.ID,"-",1)
      END
      BEGIN CASE
        CASE SEL.TYPE = "R" AND INDEX(EST.ID,"-",1) = 0
          SEL.OK = 0
        CASE SEL.TYPE = "S" AND INDEX(EST.ID,"-",1) > 0
          SEL.OK = 0
        CASE 1
          ID = CONO:EST.ID
          SEL.OK = 1
          MATREAD EST.REC FROM ESTIMATE, ID ELSE SEL.OK = 0
          IF RL.EST AND EST.PDEF.TYPE # "RL" THEN SEL.OK = 0
          IF COM.EST AND EST.PDEF.TYPE # "1" THEN SEL.OK = 0
          IF QP.EST AND EST.PDEF.TYPE # "QP" THEN SEL.OK = 0
          IF BOOK.EST AND EST.PDEF.TYPE # "BOOK" THEN SEL.OK = 0
          IF SEL.OK THEN GOSUB CHECK.SEL.CRITERIA
      END CASE
      IF NOT(SEL.OK) THEN
        SELDAT = DELETE(SELDAT,EPTR,0,0)
        SELEST = DELETE(SELEST,EPTR,0,0)
        SELCNT = SELCNT - 1
      END
    NEXT EPTR
  END
  RETURN

* Check all selection criteria
CHECK.SEL.CRITERIA: 
  DIV.SEL.OK  = 1
  DATE.SEL.OK = 1
  CUST.SEL.OK = 1
  SLSM.SEL.OK = 1
  ESTM.SEL.OK = 1
  CATG.SEL.OK = 1
  STAT.SEL.OK = 1

  ;* Check division ID
  IF SEL.DIV.ID.CNT > 0 THEN
    DIV.SEL.OK = 0
    FOR N = 1 TO SEL.DIV.ID.CNT UNTIL DIV.SEL.OK
      IDX = SEL.DIV.ID<1,N>
      ID1 = TRIM(FIELD(IDX,"-",1))
      ID2 = TRIM(FIELD(IDX,"-",2))
      IF ID2 = "" THEN ID2 = ID1
      IF ID1 <= ID2 THEN
        IF EST.DIV >= ID1 AND EST.DIV <= ID2 THEN DIV.SEL.OK = 1
      END ELSE
        IF EST.DIV >= ID2 AND EST.DIV <= ID1 THEN DIV.SEL.OK = 1
      END
    NEXT N
    IF NOT(DIV.SEL.OK) THEN
      SEL.OK = 0; RETURN
    END
  END

  ;* Check estimate date
  IF SEL.DATE.ID.CNT > 0 THEN
    DATE.SEL.OK = 0
    FOR N = 1 TO SEL.DATE.ID.CNT UNTIL DATE.SEL.OK
      IDX = SEL.DATE.ID<1,N>
      ID1 = ICONV(TRIM(FIELD(IDX,"-",1)),"D")
      ID2 = TRIM(FIELD(IDX,"-",2))
      IF ID2 = "" THEN ID2 = ID1 ELSE ID2 = ICONV(ID2,"D")
      IF ID1 <= ID2 THEN
        IF EST.DATE.ENTERED >= ID1 AND EST.DATE.ENTERED <= ID2 THEN DATE.SEL.OK = 1
      END ELSE
        IF EST.DATE.ENTERED >= ID2 AND EST.DATE.ENTERED <= ID1 THEN DATE.SEL.OK = 1
      END
    NEXT N
    IF NOT(DATE.SEL.OK) THEN
      SEL.OK = 0; RETURN
    END
  END

  ;* Check customer ID
  IF SEL.CUST.ID.CNT > 0 THEN
    CUST.SEL.OK = 0
    FOR N = 1 TO SEL.CUST.ID.CNT UNTIL CUST.SEL.OK
      IDX = SEL.CUST.ID<1,N>
      ID1 = TRIM(FIELD(IDX,"-",1))
      ID2 = TRIM(FIELD(IDX,"-",2))
      IF ID2 = "" THEN ID2 = ID1
      IF ID1 <= ID2 THEN
        IF EST.CUST >= ID1 AND EST.CUST <= ID2 THEN CUST.SEL.OK = 1
      END ELSE
        IF EST.CUST >= ID2 AND EST.CUST <= ID1 THEN CUST.SEL.OK = 1
      END
    NEXT N
    IF NOT(CUST.SEL.OK) AND SEL.CUST.NM.CNT = 0 THEN
      SEL.OK = 0; RETURN
    END
  END

  ;* Check salesman ID
  IF SEL.SLSM.ID.CNT > 0 THEN
    SLSM.SEL.OK = 0
    FOR N = 1 TO SEL.SLSM.ID.CNT UNTIL SLSM.SEL.OK
      IDX = SEL.SLSM.ID<1,N>
      ID1 = TRIM(FIELD(IDX,"-",1))
      ID2 = TRIM(FIELD(IDX,"-",2))
      IF ID2 = "" THEN ID2 = ID1
      IF ID1 <= ID2 THEN
        IF EST.SALESMAN >= ID1 AND EST.SALESMAN <= ID2 THEN SLSM.SEL.OK = 1
      END ELSE
        IF EST.SALESMAN >= ID2 AND EST.SALESMAN <= ID1 THEN SLSM.SEL.OK = 1
      END
    NEXT N
    IF NOT(SLSM.SEL.OK) AND SEL.SLSM.NM.CNT = 0 THEN
      SEL.OK = 0; RETURN
    END
  END

  ;* Check estimator ID
  IF SEL.ESTM.ID.CNT > 0 THEN
    ESTM.SEL.OK = 0
    FOR N = 1 TO SEL.ESTM.ID.CNT UNTIL ESTM.SEL.OK
      IDX = SEL.ESTM.ID<1,N>
      ID1 = TRIM(FIELD(IDX,"-",1))
      ID2 = TRIM(FIELD(IDX,"-",2))
      IF ID2 = "" THEN ID2 = ID1
      IF ID1 <= ID2 THEN
        IF EST.ESTIMATOR >= ID1 AND EST.ESTIMATOR <= ID2 THEN ESTM.SEL.OK = 1
      END ELSE
        IF EST.ESTIMATOR >= ID2 AND EST.ESTIMATOR <= ID1 THEN ESTM.SEL.OK = 1
      END
    NEXT N
    IF NOT(ESTM.SEL.OK) AND SEL.ESTM.NM.CNT = 0 THEN
      SEL.OK = 0; RETURN
    END
  END

  ;* Check category ID
  IF SEL.CATG.ID.CNT > 0 THEN
    CATG.SEL.OK = 0
    FOR N = 1 TO SEL.CATG.ID.CNT UNTIL CATG.SEL.OK
      IDX = SEL.CATG.ID<1,N>
      ID1 = TRIM(FIELD(IDX,"-",1))
      ID2 = TRIM(FIELD(IDX,"-",2))
      IF ID2 = "" THEN ID2 = ID1
      IF ID1 <= ID2 THEN
        IF EST.CATG >= ID1 AND EST.CATG <= ID2 THEN CATG.SEL.OK = 1
      END ELSE
        IF EST.CATG >= ID2 AND EST.CATG <= ID1 THEN CATG.SEL.OK = 1
      END
    NEXT N
    IF NOT(CATG.SEL.OK) AND SEL.CATG.NM.CNT = 0 THEN
      SEL.OK = 0; RETURN
    END
  END

  ;* Check status
  IF SEL.STAT.ID.CNT > 0 THEN
    ESTAT = EST.STATUS<1,1>[1,1]
    IF ESTAT = "" THEN ESTAT = "O"
    STAT.SEL.OK = 0
    FOR N = 1 TO SEL.STAT.ID.CNT UNTIL STAT.SEL.OK
      IDX = SEL.STAT.ID<1,N>
      ID1 = TRIM(FIELD(IDX,"-",1))[1,1]
      ID2 = TRIM(FIELD(IDX,"-",2))[1,1]
      IF ID2 = "" THEN ID2 = ID1
      IF ID1 <= ID2 THEN
        IF ESTAT >= ID1 AND ESTAT <= ID2 THEN STAT.SEL.OK = 1
      END ELSE
        IF ESTAT >= ID2 AND ESTAT <= ID1 THEN STAT.SEL.OK = 1
      END
    NEXT N
    IF NOT(STAT.SEL.OK) THEN
      SEL.OK = 0; RETURN
    END
  END

  ;* Check customer name
  IF SEL.CUST.ID.CNT > 0 AND CUST.SEL.OK THEN
    NULL
  END ELSE
    CUST.SEL.OK = 0
    IF SEL.CUST.NM.CNT > 0 THEN
      IF EST.CUST = "P" THEN
        CUST.NAME = EST.CUST.NAME
      END ELSE
        IF EST.CUST = "" THEN
          SEL.OK = 0; RETURN
        END
        MATREAD CUST.REC FROM CUSTOMER, CONO:EST.CUST ELSE
          SEL.OK = 0; RETURN
        END
      END
      FOR N = 1 TO SEL.CUST.NM.CNT UNTIL CUST.SEL.OK
        NMX = SEL.CUST.NM<1,N>
        IF INDEX(CUST.NAME,NMX,1) > 0 THEN CUST.SEL.OK = 1
      NEXT N
      IF NOT(CUST.SEL.OK) THEN
        SEL.OK = 0; RETURN
      END
    END
  END

  ;* Check salesman name
  IF SEL.SLSM.ID.CNT > 0 AND SLSM.SEL.OK THEN
    NULL
  END ELSE
    SLSM.SEL.OK = 0
    IF SEL.SLSM.NM.CNT > 0 THEN
      IF EST.SALESMAN = "" THEN
        SEL.OK = 0; RETURN
      END
      MATREAD SALESMAN.REC FROM SALESMAN, CONO:EST.SALESMAN ELSE
        SEL.OK = 0; RETURN
      END
      FOR N = 1 TO SEL.SLSM.NM.CNT UNTIL SLSM.SEL.OK
        NMX = SEL.SLSM.NM<1,N>
        IF INDEX(SALS.NAME,NMX,1) > 0 THEN SLSM.SEL.OK = 1
      NEXT N
      IF NOT(SLSM.SEL.OK) THEN
        SEL.OK = 0; RETURN
      END
    END
  END

  ;* Check estimator name
  IF SEL.ESTM.ID.CNT > 0 AND ESTM.SEL.OK THEN
    NULL
  END ELSE
    ESTM.SEL.OK = 0
    IF SEL.ESTM.NM.CNT > 0 THEN
      IF EST.ESTIMATOR = "" THEN
        SEL.OK = 0; RETURN
      END
      MATREAD ESTIMATOR.REC FROM ESTIMATOR, CONO:EST.ESTIMATOR ELSE
        SEL.OK = 0; RETURN
      END
      FOR N = 1 TO SEL.ESTM.NM.CNT UNTIL ESTM.SEL.OK
        NMX = SEL.ESTM.NM<1,N>
        IF INDEX(ESTMTR.NAME,NMX,1) > 0 THEN ESTM.SEL.OK = 1
      NEXT N
      IF NOT(ESTM.SEL.OK) THEN
        SEL.OK = 0; RETURN
      END
    END
  END

  ;* Check category name
  IF SEL.CATG.ID.CNT > 0 AND CATG.SEL.OK THEN
    NULL
  END ELSE
    CATG.SEL.OK = 0
    IF SEL.CATG.NM.CNT > 0 THEN
      IF EST.CATG = "" THEN
        SEL.OK = 0; RETURN
      END
      MATREAD JCATG.REC FROM JOB.CATEGORY, CONO:EST.CATG ELSE
        SEL.OK = 0; RETURN
      END
      FOR N = 1 TO SEL.CATG.NM.CNT UNTIL CATG.SEL.OK
        NMX = SEL.CATG.NM<1,N>
        IF INDEX(JCATG.DESC,NMX,1) > 0 THEN CATG.SEL.OK = 1
      NEXT N
      IF NOT(CATG.SEL.OK) THEN
        SEL.OK = 0; RETURN
      END
    END
  END
  RETURN

*
*---- PARSE INPUT DATA
*
PARSE.INPUT.DATA: 
  EDIT.ERR = 0
  XID = ""; XNAME = ""
  CNT = DCOUNT(XDATA,",")
  FOR N = 1 TO CNT UNTIL EDIT.ERR
    INPVAL = TRIM(FIELD(XDATA,",",N))
    BEGIN CASE
      CASE INPVAL[1,1] = '"' AND INPVAL[LEN(INPVAL),1] = '"'
        INPVAL = INPVAL[2,LEN(INPVAL)-2]
        IF INDEX(INPVAL,"-",1) > 0 THEN EDIT.ERR = 1
        XNAME<1,-1> = INPVAL
      CASE INPVAL[1,1] = "'" AND INPVAL[LEN(INPVAL),1] = "'"
        INPVAL = INPVAL[2,LEN(INPVAL)-2]
        IF INDEX(INPVAL,"-",1) > 0 THEN EDIT.ERR = 1
        XNAME<1,-1> = INPVAL
      CASE 1
        XID<1,-1> = INPVAL
    END CASE
  NEXT N
  IF INDEX(XID,'"',1) > 0 THEN EDIT.ERR = 1
  IF INDEX(XID,"'",1) > 0 THEN EDIT.ERR = 1
  RETURN

* Get selection description for each estimate
CREATE.SELECTION.LISTS: 
  FOR IDX = 1 TO DCOUNT(SELEST,AM)
    EST.ID = SELEST<IDX>[4,99]
    STD.FLG = 0
    IF EST.ID[LEN(EST.ID)-2,3] = "-00" THEN
      EST.ID = EST.ID[1,LEN(EST.ID)-3]
      STD.FLG = 1
    END
    MATREAD EST.REC FROM ESTIMATE, CONO:EST.ID ELSE
      MAT EST.REC = ""
      EST.STATUS = STR("?",6)
    END
    DateList<1,IDX> = OCONV(EST.DATE.ENTERED,"D2/")
    EstimateList<1,IDX> = EST.ID
    BEGIN CASE
      CASE EST.SUBS # ""
        TypeList<1,IDX> = "MST "
      CASE EST.MASTER # "" AND EST.MASTER # EST.ID
        TypeList<1,IDX> = "SUB "
    END CASE
    IF STD.FLG THEN
      CustProspectList<1,IDX> = EST.COMMENTS<1,1>
    END ELSE
      IF EST.CUST = "P" THEN
        CustProspectList<1,IDX> = EST.CUST.NAME
      END ELSE
        MATREAD CUST.REC FROM CUSTOMER, CONO:EST.CUST ELSE
          MAT CUST.REC = ""
        END
        CustProspectList<1,IDX> = CUST.NAME
      END
    END
    CatList<1,IDX> = EST.CATG
    StatusList<1,IDX> = EST.STATUS<1,1>
  NEXT IDX
  RETURN
