SUBROUTINE JOBM_REBOOK_UPD_JOB
********************************************************************************
*   Program name :- JOBM_REBOOK_UPD_JOB
*   Created:- 7/17/2003
*------------------------------------------------------------------------------*
**---- REBOOK ESTIMATE UPDATE JOB MATERIALS - 5000
* In Properties:
* --------------
*  Cono,JOB_NO,JOB_EST,EST_PAR,JOB_CUST,EST_MATL,ESTAT,USER_WHSE_CODE
*
* Out Properties:
* ---------------
*  DEFAULT_WHSE_PROD,JOB_PRICE_PER_THOU,JOB_EST_COST,JOB_EST_SALE,JOB_DESC,JOB_CONF_AMT
********************************************************************************
$INCLUDE WWINSERT RBO.H
$INCLUDE JCS.CPYLIB JOB
$INCLUDE JES.CPYLIB ESTIMATE
$INCLUDE PMC.CPYLIB CUSTOMER
$INCLUDE PMC.CPYLIB SHIP.VIA
$INCLUDE JCS.CPYLIB JOB.STATS
$INCLUDE OPS.CPYLIB JOB.FNGD.STATS
$INCLUDE JES.CPYLIB ESTIMATE.RES
$INCLUDE ICS.CPYLIB INV.JOB.STATS
$INCLUDE ICS.CPYLIB WAREHOUSE
$INCLUDE ICS.CPYLIB INVENTORY
$INCLUDE ICS.CPYLIB CATEGORY
$INCLUDE PMC.CPYLIB COMPANY
$INCLUDE ICS.CPYLIB INV.WHSE
$INCLUDE JES.CPYLIB ESTIMATE.JOB
$INCLUDE ICS.CPYLIB INV_RECP_WHSE
$INCLUDE CPYLIB CHAR

ERRMSG = ""
* Insert method code here
OPEN '','ESTIMATE' TO F.EST ELSE
	ERRMSG = "UNABLE TO OPEN FILE!"
	GOTO 99999
END
OPEN "","INV_RECP_WHSE" TO INV_RECP_WHSE ELSE
	ERRMSG = "CANNOT OPEN INV_RECP_WHSE FILE"
      	GOTO 99999
END
OPEN '','COMPANY' TO COMPANY ELSE
	ERRMSG = "UNABLE TO OPEN FILE!"
	GOTO 99999
END

OPEN "","JOB" TO JOB ELSE
	ERRMSG = "CANNOT OPEN JOB FILE"
       GOTO 99999
END

OPEN "","INV.WHSE" TO INV.WHSE ELSE
	ERRMSG = "INV.WHSE"
	GOTO 99999
END

OPEN '','CUSTOMER' TO F.CUST ELSE
	ERRMSG = "UNABLE TO OPEN FILE!"
	GOTO 99999
END

OPEN "","SHIP.VIA" TO SHIP.VIA ELSE
	ERRMSG = "UNABLE TO SHIP.VIA"
	GOTO 99999
END
OPEN "","JOB.FNGD.STATS" TO JOB.FNGD.STATS ELSE
	ERRMSG = "JOB.FNGD.STATS"
	GOTO 99999
END

OPEN "","ESTIMATE.RES" TO ESTIMATE.RES ELSE
      ERRMSG = "CANNOT OPEN ESTIMATE.RES FILE"
      GOTO 99999
END

OPEN "","INV.JOB.STATS" TO INV.JOB.STATS ELSE
	ERRMSG = "INV.JOB.STATS"
      	GOTO 99999
END

OPEN "","WAREHOUSE" TO WAREHOUSE ELSE
	ERRMSG = "CANNOT OPEN WAREHOUSE FILE"
      	GOTO 99999
END

OPEN "","INVENTORY" TO INVENTORY ELSE
	ERRMSG = "INVENTORY"
	GOTO 99999
END

OPEN "","CATEGORY" TO CATEGORY ELSE
	ERRMSG = "CATEGORY"
	GOTO 99999
END

OPEN "","ESTIMATE.JOB" TO ESTIMATE.JOB ELSE
      	ERRMSG = "CANNOT OPEN ESTIMATE.JOB FILE"
	GOTO 99999
END

VAL = RBO.getProperty('','Cono',CONO)
VAL = RBO.getProperty('','JOB_NO',JOBNO)
VAL = RBO.getProperty('','JOB_EST',JOB.EST)
VAL = RBO.getProperty('','EST_PAR',EST.PAR)
VAL = RBO.getProperty('','JOB_CUST',JOB.CUST)
VAL = RBO.getProperty('','EST_MATL',EST.MATL) ;* -> 1 OR 0 HERE WE HAVE TO PASS 1
VAL = RBO.getProperty('','ESTAT',ESTAT) ;* 0 - VALUE
VAL = RBO.getProperty('','USER_WHSE_CODE',USER.WHSE.CODE) ;* THIS IS WHEN USER SENDS SELECTED WHSE.CODES
VAL = RBO.getProperty('','ACTION',ACTION)
VAL = RBO.getProperty('','PRIOR_EST',PRIOR.EST)

IF USER.WHSE.CODE = 0 THEN USER.WHSE.CODE = ""
IF PRIOR.EST = 0 THEN PRIOR.EST = ""
IF JOB.EST = 0 THEN JOB.EST = ""
IF JOB.CUST = 0 THEN JOB.CUST = ""

EST.PAR = RAISE(EST.PAR)
CMATCH = 0

EQU EST.PAR.QTY    TO EST.PAR<1>
EQU EST.PAR.COMP   TO EST.PAR<2>
EQU EST.PAR.DEPT   TO EST.PAR<3>
EQU EST.PAR.UPDM   TO EST.PAR<4>
EQU EST.PAR.MATL   TO EST.PAR<5>

SAVE.COMP.CNT = 0
MATREAD COMP.REC FROM COMPANY,CONO ELSE MAT COMP.REC = ""

MATREAD EST.REC FROM F.EST,CONO:JOB.EST ELSE MAT EST.REC = ""

MATREAD JOB.REC FROM JOB,CONO:JOBNO ELSE MAT JOB.REC = ""

MATREAD JFS.REC FROM JOB.FNGD.STATS, CONO:JOBNO ELSE MAT JFS.REC = ""

MATREAD EST.RL.REC FROM ESTIMATE.RES, CONO:JOB.EST THEN
	ROLL.LABEL = 'Y'
END ELSE
       ROLL.LABEL = ''
END

IF ((ACTION = 5) OR (ACTION = 6)) THEN
	IF EST.PAR.UPDM = "Y" THEN
		DEPT = ""
	       DPTR = 0
       	*GOSUB 4000
	       MATREAD EST.REC FROM F.EST, CONO:JOB.EST ELSE NULL
	       *GOSUB 2000
       	GOSUB 5000
	       EST.PAR.MATL = 'Y'
	END ELSE
		DEPT = ""
	       DPTR = 0
       	*GOSUB 2000
	END
END


******************SET PROPERTIES HERE***************************

RETURN
****************************************************************

*---- REBOOK ESTIMATE UPDATE JOB MATERIALS
5000 *
	MATREAD EST.RL.REC FROM ESTIMATE.RES, CONO:JOB.EST THEN
      		ROLL.LABEL = 'Y'
   	END ELSE
      		ROLL.LABEL = ''
   	END
   	MATREAD ESTJ.REC FROM ESTIMATE.JOB, CONO:JOBNO THEN
      		GOT.ESTJ = 'Y'
   	END ELSE
      		GOT.ESTJ = ''
   	END
   	LOCATE EST.PAR.QTY IN EST.QTY<1>,1 SETTING QP ELSE QP = 0
   	NEW.PRODS = ""
   	NEW.QTYS = ""
   	IF GOT.ESTJ THEN
      		IF ESTJ.COMP = "ALL" THEN
         		COMP.CNT =EST.COMPONENT.CNT
      		END ELSE
         		COMP.CNT = DCOUNT(ESTJ.COMP<1,1>,SVM)
      		END
   	END ELSE
      		IF EST.PAR.COMP = "ALL" THEN
         		COMP.CNT =EST.COMPONENT.CNT
      		END ELSE
         		COMP.CNT = DCOUNT(EST.PAR.COMP,VM)
      		END
   	END
   	FOR CP = 1 TO COMP.CNT
      		IF GOT.ESTJ THEN
         		IF ESTJ.COMP = "ALL" THEN COMP = CP ELSE COMP = ESTJ.COMP<1,1,CP>
      		END ELSE
         		IF EST.PAR.COMP = "ALL" THEN COMP = CP ELSE COMP = EST.PAR.COMP<1,CP>
      		END
      		WEB.CNT = COUNT(EST.PROD.OS.PROD<1,COMP>,SM) + 1
      		FOR WB = 1 TO WEB.CNT
         		IF EST.PROD.INV.ID<1,COMP,WB> # "" THEN
            			PROD = EST.PROD.INV.ID<1,COMP,WB>
            			IF ROLL.LABEL THEN
              	 		QTY = FIELD(EST.RL.PAP.MSI<1,COMP,WB>,"!",QP)
               			WIDTH = EST.PROD.OS.WIDTH<1,COMP,WB>
               			GOSUB 70000
            			END ELSE
               			QTY = FIELD(EST.PROD.PQTY<1,COMP,WB>,"!",QP)
            			END
            			LOCATE PROD IN NEW.PRODS<1>,1 SETTING X ELSE NULL
            			NEW.PRODS<1,X> = PROD
            			NEW.QTYS<1,X> = NEW.QTYS<1,X> + QTY
         		END
      		NEXT WB
   	NEXT CP
   	IF ROLL.LABEL THEN
   	END
   	PROD.CNT = COUNT(NEW.PRODS,VM) + (NEW.PRODS # "")
   	FOR I = 1 TO PROD.CNT
      		MATREAD INV.REC FROM INVENTORY,CONO:NEW.PRODS<1,I> ELSE MAT INV.REC = ''
      		GOSUB 80000
      		IF CASE1.FLAG THEN NEW.QTYS<1,I> = NEW.QTYS<1,I> * 100
      		MATREAD CATG.REC FROM CATEGORY,CONO:INV.LINE ELSE MAT CATG.REC = ''
      		WCNT = DCOUNT(INV.WHSE.CODE,VM)
      		DVCNT=0;WPTR=0
      		GNCNT=0;GPTR=0
     	 	HMSG='Warehouse - '
     		GMSG=''
      		FOR W = 1 TO WCNT
         		MATREAD WHSE.REC FROM WAREHOUSE,CONO:INV.WHSE.CODE<1,W> THEN
            			IF WHS.DIV = JOB.DIV THEN
               			DVCNT += 1
               			IF WPTR = 0 THEN WPTR = W
               			HMSG=HMSG:INV.WHSE.CODE<1,W>:', '
               			VALDAT=VALDAT:INV.WHSE.CODE<1,W>:VM
            			END
            			IF WHS.DIV = '00' THEN
               			GMSG=GMSG:INV.WHSE.CODE<1,W>:', '
	               		VALDAT=VALDAT:INV.WHSE.CODE<1,W>:VM
       	        		GNCNT += 1
              	 		IF GPTR = 0 THEN GPTR = W
            			END
         		END
      		NEXT W
      		IF GMSG # '' THEN HMSG=HMSG:GMSG
      		IF HMSG[LEN(HMSG)-1,2]=', ' THEN HMSG=HMSG[1,LEN(HMSG)-2]
      		IF VALDAT[LEN(VALDAT),1]=VM THEN VALDAT=VALDAT[1,LEN(VALDAT)-1]
      		BEGIN CASE
         		CASE DVCNT = 1
            			WHSE = INV.WHSE.CODE<1,WPTR>
         		CASE GNCNT = 1 AND DVCNT = 0
            			WHSE = INV.WHSE.CODE<1,GPTR>
         		CASE 1
            			DISP.PROD = NEW.PRODS<1,I>
            			GOSUB 85000
            			IF ESTAT THEN GOTO 99001
      		END CASE
      		IF WHSE # "" AND CATG.REQ.BOOK = "Y" THEN
         		IWH.ID=CONO:NEW.PRODS<1,I>:"!":WHSE
         		GOSUB GET.UNIT.PR
         		JRM.CNT = COUNT(JOB.RESV.MATL,VM) + (JOB.RESV.MATL # "")
         		FND = 0
         		FOR JM = 1 TO JRM.CNT UNTIL FND
            			IF JOB.RESV.MATL<1,JM> = NEW.PRODS<1,I> AND JOB.RESV.WHSE<1,JM> = WHSE THEN
               			SAVE.INV.JS.REC<JM,2> = UNIT.PR
               			YEOW.QTY = INT(((NEW.QTYS<1,I>/ICR.MT1)*ICR.DV1)*ICR.DV2 + .5)
               			SAVE.INV.JS.REC<JM,3> = SAVE.INV.JS.REC<JM,3> + YEOW.QTY
               			FND = 1
           			END
         		NEXT JM
         		IF NOT(FND) THEN
            			JRM.CNT = JRM.CNT + 1
            			JOB.RESV.MATL<1,JRM.CNT> = NEW.PRODS<1,I>
            			JOB.RESV.WHSE<1,JRM.CNT> = WHSE
            			JOB.ALOC.QTY<1,JRM.CNT> = 0
            			JOB.RESV.QTY<1,JRM.CNT> = 0
            			JOB.USED.QTY<1,JRM.CNT> = 0
            			JOB.ALOC.AMT<1,JRM.CNT> = 0
            			JOB.RESV.AMT<1,JRM.CNT> = 0
            			JOB.USED.AMT<1,JRM.CNT> = 0
           			SAVE.INV.JS.REC<JRM.CNT,2> = UNIT.PR
           			SAVE.INV.JS.REC<JRM.CNT,3> = INT(((NEW.QTYS<1,I>/ICR.MT1)*ICR.DV1)*ICR.DV2 + .5)
        		END
      		END
  	NEXT I
RETURN

*---- CONVERT ROLL LABEL MSI TO STOCKING UNIT
*
70000 *
MATREAD INV.REC FROM INVENTORY,CONO:PROD ELSE MAT INV.REC = ''
GOSUB 80000
NQTY = QTY
***************NEED TO USE EST WIDTH FROM PROD DEF SCREEN   ***************
*
BEGIN CASE
	CASE INV.UNIT<1,2> = "MSI"
      	CASE INV.UNIT<1,2> = "FT"
       	IF WIDTH + 0 # 0 THEN
            		NQTY = (NQTY * 1000) / (12 * OCONV(WIDTH,"MD4"))
         	END ELSE
            		NQTY = 0
         	END
      	CASE INV.UNIT<1,2> = "PC"
       	IF WIDTH + 0 # 0 THEN
            		NQTY = (NQTY * 1000) / (10 * OCONV(WIDTH,"MD4"))
         	END ELSE
            		NQTY = 0
         	END
END CASE
QTY = NQTY
RETURN

80000 *
CASE1.FLAG = ""
	BEGIN CASE
      		CASE INV.UNIT<1,2> = 'SHT' AND INV.UNIT<1,3> = 'LBS'
         		ICR.DV1 = INV.M.WT
         		ICR.MT1 = 1
         		ICR.DV2 = 1
         		ICR.CNV = "MD0"
      		CASE INV.UNIT<1,2> = 'PC' AND INV.UNIT<1,3> = 'MSI'
         		ICR.DV1 = INV.PAP.WIDTH/100
         		ICR.MT1 = 10
         		ICR.DV2 = 1
        		ICR.CNV = "MD0"
      		CASE INV.UNIT<1,2> = 'FT' AND INV.UNIT<1,3> = 'MSI'
         		ICR.DV1 = INV.PAP.WIDTH/100
         		ICR.MT1 = 100
         		ICR.DV2 = 12
         		ICR.CNV = "MD0"
      		CASE 1
         		ICR.DV1 = 10
         		ICR.MT1 = 1
         		ICR.DV2 = 1
         		ICR.CNV = "MD2"
         		CASE1.FLAG = "Y"
   	END CASE
RETURN

*****************
GET.UNIT.PR: 
*****************
*
   MATREAD IWH.REC FROM INV.WHSE,IWH.ID ELSE  MAT IWH.REC=''
   BEGIN CASE
      CASE CO.JES.PARAM<1,11> = 'R'
         DIV.POS='';FISCAL.FLAG='JC';TRAN.PERIOD=''
         ERR.FLG='';ERRMSG=''
         CALL GET.LAST.COST (IWH.ID,MAT IWH.REC,WAREHOUSE,CONTROL,ERR.FLG,ERRMSG,DIV.POS,FISCAL.FLAG,TRAN.PERIOD,LAST.PRICE)
         IF ERR.FLG='' THEN
            UNIT.PR=LAST.PRICE
         END ELSE
            UNIT.PR = 0
         END
      CASE CO.JES.PARAM<1,11> = 'S'
         UNIT.PR = IWH.STD.COST
      CASE CO.JES.PARAM<1,11> = 'A'
         UNIT.PR = IWH.AVG.COST
      CASE CO.JES.PARAM<1,11> = 'L'
         UNIT.PR = IWH.LIST.COST
      CASE 1
         UNIT.PR = 0
   END CASE
   RETURN




*******************************COMMENTED***************************************
*
*---- GET WAREHOUSE
*
85000 * ;*THIS VERSION IS WRITTEN BY ME
TMP = 1
IF WPTR THEN DEFAULT_WHSE_PROD<1,TMP,1> = INV.WHSE.CODE<1> ELSE IF GPTR THEN DEFAULT_WHSE_PROD<1,TMP,1> = INV.WHSE.CODE<1>

*85000 *
   IF NOT(WPTR) AND NOT(GPTR) THEN
*      TYP=1;X=0;Y=21;MAXL=1;O.R="O";DEFAULT=""
*      PMSG='There are no warehouses for product ':DISP.PROD:' with Division ':JOB.DIV:' or 00 <RTN> '
*      CALL EDIT.SUB
      NEW.EST = '';MAT EST.REC = '';JOB.EST = '';ESTAT = 1
*      GOTO 85999
*   END
*   IF WPTR THEN DEFAULT = INV.WHSE.CODE<1,WPTR> ELSE IF GPTR THEN DEFAULT = INV.WHSE.CODE<1,GPTR>
*   TYP=1;X=0;Y=21;MAXL=4;O.R="O"
   DEFAULT_WHSE_PROD<1,TMP,2> = DISP.PROD
*   PMSG="Enter Whse Code for Product ":DISP.PROD
*   VAL = RBO.setProperty('','JOB_WHSE',PMSG:@VM:DEFAULT) ;* ADDED
   RETURN ;* ADDED

*   IF DEFAULT # "" THEN
*      PMSG=PMSG:" (Default=":DEFAULT:") - "
*   END ELSE
*      PMSG=PMSG:" - "
*   END
*   CALL EDIT.SUB
*   P_X  = 0;P_Y = 21;P_VALUE = "";P_OPT = "CL"
*   CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
*   MATREAD WHSE.REC FROM WAREHOUSE,CONO:VALUE ELSE
*      ERRMSG=VALUE:' Is an invalid Warehouse';GOSUB 90000
*      GOTO 85000
*   END
*   IF WHS.DIV # '00' AND WHS.DIV # JOB.DIV THEN
*      ERRMSG='Whse/Job division mismatch';GOSUB 90000
*      GOTO 85000
*   END
*   WHSE = VALUE
*85999* 
*   RETURN

99001 *
   ESTAT = 1 ;* RETURN VALUE
   GOTO 99999


99999
  IF (TRIM(ERRMSG) # "") THEN
       STATUS = RBO.setProperty('','ServerStatus','1')
       STATUS = RBO.setProperty('','ServerMessage',ERRMSG)
  END ELSE
       STATUS = RBO.setProperty('','ServerStatus','')
       STATUS = RBO.setProperty('','ServerMessage','')
  END 
END
