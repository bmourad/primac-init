SUBROUTINE ARCRM_CASH_UPDATE
*********************************************************************
* REVISION    - [e12.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM    - PRIMAC
* PROGRAM   - CASH.REC.UPDATE
* AUTHOR    - JIHAD YAMOUT, COMPUTER BUSINESS ASSOCIATES
* DATE      - 09/04/84,
* UPDATED - 05/12/03 - ABED ALI
* DESCRIPTION
*  This program provides for maintenance of A/R Open Receivables.
* Call this method when saving a Non-Reversal Cash Receipt.
*********************************************************************
*
$INCLUDE WWINSERT RBO.H

$INCLUDE ARS.CPYLIB OPEN.RECV
$INCLUDE ARS.CPYLIB DAILY.CASH
$INCLUDE PMC.CPYLIB CUSTOMER
$INCLUDE ARS.CPYLIB CASH.HIST
$INCLUDE PMC.CPYLIB COMPANY
$INCLUDE PMC.CPYLIB SECURITY
$INCLUDE CPYLIB CHAR
$INCLUDE JCS.CPYLIB JOB
$INCLUDE OPS.CPYLIB ORDER
DIM SAVE.OR.REC(30)
  EQU SOR.INV.NO TO SAVE.OR.REC(1)
  EQU SOR.JOB.NO TO SAVE.OR.REC(2)
  EQU SOR.INV.AMT TO SAVE.OR.REC(3)
  EQU SOR.CASH.REC TO SAVE.OR.REC(4)
  EQU SOR.MISC.AMT TO SAVE.OR.REC(5)
  EQU SOR.GL.ACCT TO SAVE.OR.REC(6)
  EQU SOR.OPEN.AMT TO SAVE.OR.REC(7)
  EQU SOR.PAY.FLG TO SAVE.OR.REC(8)
  EQU SOR.MON TO SAVE.OR.REC(9)
  EQU SOR.ONACCT TO SAVE.OR.REC(10);* NOT USED
  EQU SOR.DIV TO SAVE.OR.REC(11)
  EQU SOR.DEPT TO SAVE.OR.REC(12)
  EQU SOR.CCTR TO SAVE.OR.REC(13)
  EQU SOR.CHG.JOB TO SAVE.OR.REC(14)
  EQU SOR.PO.NO TO SAVE.OR.REC(15)
  EQU SOR.REV.FLG TO SAVE.OR.REC(16)
  EQU SOR.ORDER.FLG TO SAVE.OR.REC(17)
  EQU SOR.SHORT.PAY TO SAVE.OR.REC(18) ;* T25994
  EQU SOR.S.P.DESC TO SAVE.OR.REC(19) ;* T25994
  EQU SOR.HOLD.CASH TO SAVE.OR.REC(20)
  EQU SOR.HOLD.ACCT TO SAVE.OR.REC(21)
  EQU SOR.HOLD.MISC TO SAVE.OR.REC(22)
  EQU SOR.REVERSE.FLAG TO SAVE.OR.REC(23)
  EQU SOR.CH.NUM TO SAVE.OR.REC(24)
  EQU SOR.GLTB.CASH TO SAVE.OR.REC(25)
  EQU SOR.CH.AMT TO SAVE.OR.REC(26)
  EQU SOR.CUST.BAL TO SAVE.OR.REC(27)

  
  * Open Files
OPEN '','COMPANY' TO COMPANY ELSE
   ERRMSG='Cannot open COMPANY file!'
   GOTO 93000
END
OPEN '','CONTROL' TO CONTROL ELSE
   ERRMSG='Cannot open CONTROL file!'
   GOTO 93000
END
OPEN '','SECURITY' TO SECURITY ELSE
   ERRMSG='Cannot open SECURITY file!'
   GOTO 93000
END
OPEN '','CUSTOMER' TO CUSTOMER ELSE
   ERRMSG='Cannot open CUSTOMER file!'
   GOTO 93000
END
OPEN '','OPEN.RECV' TO OPEN.RECV ELSE
   ERRMSG='Cannot open OPEN.RECV file!'
   GOTO 93000
END
OPEN '','DAILY.CASH' TO DAILY.CASH ELSE
   ERRMSG='Cannot open DAILY.CASH file!'
   GOTO 93000
END
OPEN '','DAILY.CASH.TAG' TO DAILY.CASH.TAG ELSE
   ERRMSG='Cannot open DAILY.CASH.TAG file!'
   GOTO 93000
END
OPEN '','CASH.HIST' TO CASH.HIST ELSE
   ERRMSG='Cannot open CASH.HIST file!'
   GOTO 93000
END
OPEN '','JOB' TO JOB ELSE
   ERRMSG='Cannot open JOB file!'
   GOTO 93000
END
OPEN '','ORDER' TO ORDER ELSE
   ERRMSG='Cannot open ORDER file!'
   GOTO 93000
END
OPEN '','CHECK.XREF' TO CHECK.XREF ELSE
   ERRMSG='Cannot open CHECK.XREF file!'
   GOTO 93000
END

  MAT JOB.REC = ''
  MAT ORD.REC = ''
  MAT OR.REC= '' ; MAT DC.REC = ''; MAT CHR.REC = ''
  MAT SAVE.OR.REC = ""
  DIM SAVE.REC(55)

  STATUS = RBO.getProperty('','Cono',CONO)
  STATUS = RBO.getProperty('','SOR_INV_NO',SOR.INV.NO)
  STATUS = RBO.getProperty('','SOR_JOB_NO',SOR.JOB.NO)
  STATUS = RBO.getProperty('','SOR_CHG_JOB',SOR.CHG.JOB)
  STATUS = RBO.getProperty('','SOR_INV_AMT',SOR.INV.AMT)
  STATUS = RBO.getProperty('','SOR_CASH_REC',SOR.CASH.REC)
  STATUS = RBO.getProperty('','SOR_MISC_AMT',SOR.MISC.AMT)
  STATUS = RBO.getProperty('','SOR_GL_ACCT',SOR.GL.ACCT)
  STATUS = RBO.getProperty('','SOR_OPEN_AMT',SOR.OPEN.AMT)
  STATUS = RBO.getProperty('','SOR_PAY_FLG',SOR.PAY.FLG)
  STATUS = RBO.getProperty('','SOR_DIV',SOR.DIV)
  STATUS = RBO.getProperty('','SOR_DEPT',SOR.DEPT)
  STATUS = RBO.getProperty('','SOR_CCTR',SOR.CCTR)
  STATUS = RBO.getProperty('','SOR_PO_NO',SOR.PO.NO)
  STATUS = RBO.getProperty('','SOR_REV_FLG',SOR.REV.FLG) 
  STATUS = RBO.getProperty('','SOR_ORDER_FLG',SOR.ORDER.FLG)
  STATUS = RBO.getProperty('','SOR_S_P_DESC',SOR.SHORT.PAY)
  STATUS = RBO.getProperty('','GLTB_CASH',SOR.GLTB.CASH)
  STATUS = RBO.getProperty('','HOLD_CASH',HOLD.CASH)
  STATUS = RBO.getProperty('','HOLD_MISC',HOLD.MISC)
  STATUS = RBO.getProperty('','HOLD_ACCT',HOLD.ACCT)
  STATUS = RBO.getProperty('','CH_AMT',SOR.CH.AMT)
  STATUS = RBO.getProperty('','APPLY_AMT',APPLY.AMT)
  STATUS = RBO.getProperty('','CUST_NO',CUST_NO)
  STATUS = RBO.getProperty('','REC_DATE',REC.DATE)
  STATUS = RBO.getProperty('','CH_NUM',SOR.CH.NUM)
  STATUS = RBO.getProperty('','REF_NUM',REF.NUM)
  STATUS = RBO.getProperty('','CUST_AR_BAL',SOR.CUST.BAL)
  
  READ DIVISION.REC FROM CONTROL, CONO:"DIVISIONS" ELSE
     ERRMSG='Cannot read CONTROL record ':CONO:'DIVISIONS'
     GOTO 93000
  END
  READ ARCMON FROM CONTROL, CONO:'ARCFISCAL' ELSE
     ERRMSG='Cannot read CONTROL record ':CONO:'ARCFISCAL'
     GOTO 93000
  END
  READ SECURITY.REC FROM CONTROL, CONO:'DIV.SECURITY' ELSE
     ERRMSG='Cannot read CONTROL record ':CONO:'DIV.SECURITY'
     GOTO 93000
  END

  MATREADU CUST.REC FROM CUSTOMER, CONO:CUST_NO ELSE
     ERRMSG='Cannot read CUSTOMER record ':CONO:CUST_NO
     GOTO 93000
  END

  SOR.CUST.BAL = ICONV(SOR.CUST.BAL,"MD2")
  APPLY.AMT = ICONV(APPLY.AMT,"MD2")
  SOR.CH.AMT = ICONV(SOR.CH.AMT,"MD2")
  REC.DATE = ICONV(REC.DATE,"D4/")
  CNT = DCOUNT(SOR.OPEN.AMT,@VM)
  FOR II= 1 TO CNT
	IF SOR.OPEN.AMT<1,II> # "" THEN
		SOR.OPEN.AMT<1,II> = ICONV(SOR.OPEN.AMT<1,II>,"MD2")
	END
  NEXT II
  
  CNT = DCOUNT(SOR.MISC.AMT,@VM)
  FOR II= 1 TO CNT
	IF SOR.MISC.AMT<1,II> # "" THEN
		SOR.MISC.AMT<1,II> = ICONV(SOR.MISC.AMT<1,II>,"MD2")
	END
  NEXT II
  
  CNT = DCOUNT(SOR.CASH.REC,@VM)
  FOR II= 1 TO CNT
	IF SOR.CASH.REC<1,II> # "" THEN
		SOR.CASH.REC<1,II>	= ICONV(SOR.CASH.REC<1,II>,"MD2")
	END
  NEXT II

  CNT = DCOUNT(SOR.INV.AMT,@VM)
  FOR II= 1 TO CNT
	IF SOR.INV.AMT<1,II> # "" THEN
		SOR.INV.AMT<1,II>	= ICONV(SOR.INV.AMT<1,II>,"MD2")
	END
  NEXT II
 
*
  *IF REF.NUM = "" THEN  REF.NUM = 1
  *DC.KEY = CONO:CUST_NO:"!":REC.DATE:"!":REF.NUM
  INV.CNT = DCOUNT(SOR.INV.NO<1>,@VM)

  IF SOR.CH.NUM = '' THEN CH.NUM = '000000' ELSE CH.NUM = SOR.CH.NUM
  CH.AMT = SOR.CH.AMT
  TOT.BAL = SOR.CUST.BAL
**** MAIN PROCESSING
100 *
HOLD.DATA = ''
FOR II = 1 TO INV.CNT
   IF SOR.INV.AMT<1,II> + SOR.MISC.AMT<1,II> = 0 AND SOR.PAY.FLG<1,II> # "" THEN SOR.PAY.FLG<1,II> = ""
   IF SOR.PAY.FLG<1,II> # "" THEN
      REC.LOCK = 0
      MATREADU OR.REC FROM OPEN.RECV, CONO:SOR.INV.NO<1,II> LOCKED REC.LOCK = 1 ELSE
         RELEASE OPEN.RECV , CONO:SOR.INV.NO<1,II>
      END
      IF REC.LOCK THEN
         HOLD.DATA<1,-1> = 'OPEN RECEIVABLE RECORD ':SOR.INV.NO<1,II>:' IS LOCKED BY ANOTHER USER'
      END
      JCNT = DCOUNT(SOR.CHG.JOB<1,II>,SVM)
      FOR J = 1 TO JCNT
         REC.LOCK = 0
            MATREADU ORD.REC FROM ORDER, CONO:SOR.CHG.JOB<1,II,J> LOCKED REC.LOCK = 1 ELSE
               RELEASE ORDER, CONO:SOR.CHG.JOB<1,II,J>
            END
         IF REC.LOCK THEN
            HOLD.DATA<1,-1> = 'ORDER RECORD ':SOR.CHG.JOB<1,II,J>:' IS LOCKED BY ANOTHER USER'
         END
         REC.LOCK = 0
         MATREADU JOB.REC FROM JOB, CONO:SOR.CHG.JOB<1,II,J> LOCKED REC.LOCK = 1 ELSE
            RELEASE JOB, CONO:SOR.CHG.JOB<1,II,J>
         END
         IF REC.LOCK THEN
            HOLD.DATA<1,-1> = 'JOB RECORD ':SOR.CHG.JOB<1,II,J>:' IS LOCKED BY ANOTHER USER'
         END
      NEXT J
   END
NEXT II

IF HOLD.DATA # '' THEN
   HCNT = DCOUNT(HOLD.DATA<1>,VM)
   FOR H = 1 TO HCNT
      ERRMSG = HOLD.DATA<1,H>
      RELEASE
      GOTO 93000
   NEXT H
END

PC = 0 ; DAYS = 0 ; AMT = 0 ; ICNT = 0
FOR II = 1 TO INV.CNT
   IF SOR.INV.AMT<1,II> + SOR.MISC.AMT<1,II> = 0 AND SOR.PAY.FLG<1,II> # "" THEN SOR.PAY.FLG<1,II> = ""
   IF SOR.PAY.FLG<1,II> # "" THEN
	LOCATE SOR.INV.NO<1,II> IN CUST.INVOICE<1>,1 SETTING PP ELSE PP = 0
         IF PP = 0 THEN
	     IF INDEX(SOR.INV.NO<1,II>,"BC",1) # 0 THEN
            *IF SOR.INV.NO<1,II>[7,2] = "BC" THEN
               CINV.CNT = DCOUNT(CUST.INVOICE,VM)
               IN.NUM = 0
               FOR XCI = CINV.CNT TO 1 STEP -1 UNTIL IN.NUM
		    INV.LEN = LEN(CUST.INVOICE<1,XCI>)
                  INV.SFF = CUST.INVOICE<1,XCI>[INV.LEN-1,2]
                  BEGIN CASE
                     CASE INV.SFF = "BC"
                        IN.NUM = XCI
                     CASE INV.SFF = "AC" OR INV.SFF = "PP" OR INV.SFF = "CM"
                        IN.NUM = XCI + 1
                  END CASE
               NEXT XCI
               IF IN.NUM = 0 THEN IN.NUM = 1
               CUST.INVOICE = INSERT(CUST.INVOICE,1,IN.NUM,0,SOR.INV.NO<1,II>)
            END ELSE
               CUST.INVOICE = INSERT(CUST.INVOICE,1,1,0,SOR.INV.NO<1,II>)
            END
         END
      FND.FLG = 1
      MATREADU OR.REC FROM OPEN.RECV , CONO:SOR.INV.NO<1,II> ELSE
         FND.FLG = 0 ;MAT OR.REC = '' ; RELEASE OPEN.RECV , CONO: SOR.INV.NO<1,II>
      END
	
      IF FND.FLG = 0 THEN
         OR.CUST = CUST_NO
         OR.JOB = SOR.JOB.NO<1,II>
         OR.ORDER.FLG = SOR.ORDER.FLG<1,II>
         OR.INV.DATE = REC.DATE
         OR.AS.DATE = DATE()
         OR.TR.DATE = REC.DATE
         IF SOR.PAY.FLG<1,II> = "BC" THEN
            OR.TYPE = "D"
         END ELSE
            OR.TYPE = "C"
         END
         IF SOR.MON<1,II> # "" THEN
            OR.MON = SOR.MON<1,II>
         END
         OR.INV.AMT = SOR.INV.AMT<1,II>
         OR.DISC.DATE = REC.DATE
         OR.AMT = SOR.INV.AMT<1,II>
         OR.BAL = SOR.INV.AMT<1,II>
         OR.CHECK = CH.NUM
         OR.CHK.DATE = REC.DATE
         OR.CHK.AMT = CH.AMT
         OR.DIV = SOR.DIV<1,II>
         OR.DEPT = SOR.DEPT<1,II>
         OR.CCTR = SOR.CCTR<1,II>
      END ELSE
         TR.CNT = DCOUNT(OR.TR.DATE, VM) + 1
         OR.TR.DATE<1,TR.CNT> = REC.DATE
         IF SOR.PAY.FLG<1,II> = "BC" THEN
            OR.TYPE<1,TR.CNT> = "D"
         END ELSE
            OR.TYPE<1,TR.CNT> = "C"
         END
         OR.INV.AMT<1,TR.CNT> = SOR.CASH.REC<1,II> * (-1)
         OR.BAL = OR.BAL - (SOR.CASH.REC<1,II> + SOR.MISC.AMT<1,II>)
         IF OR.BAL = 0 AND (INDEX(SOR.INV.NO<1,II>,"BC",1) = 0) AND (INDEX(SOR.INV.NO<1,II>,"PP",1) = 0) AND (INDEX(SOR.INV.NO<1,II>,"AC",1) = 0) THEN
            DAYS = DAYS + (REC.DATE - OR.INV.DATE)
            ICNT = ICNT + 1
            AMT = AMT + OR.INV.AMT<1,1>
         END
         OR.CHECK<1,TR.CNT> = CH.NUM
         OR.CHK.DATE<1,TR.CNT> = REC.DATE
         OR.CHK.AMT<1,TR.CNT> = CH.AMT
	  K = "FALSE"	
         IF SOR.MISC.AMT<1,II> # "" THEN
		K = "TRUE"	
            OR.INV.AMT<1,TR.CNT+1> = SOR.MISC.AMT<1,II> * (-1)
            OR.TYPE<1,TR.CNT+1> = "A"
            OR.TR.DATE<1,TR.CNT+1> = REC.DATE
         END
      END
      INVOICE.AMT = OR.AMT
      INVOICE.BAL = OR.BAL
      TEMP.CASH=SOR.CASH.REC<1,II>
      TEMP.MISC=SOR.MISC.AMT<1,II>
      TEMP.ACCT=SOR.GL.ACCT<1,II>
*
      MATWRITE OR.REC ON OPEN.RECV , CONO:SOR.INV.NO<1,II>
*
      IF SOR.ORDER.FLG<1,II> = "Y" THEN
         IF SOR.JOB.NO<1,II> = "" THEN
            JOB.FND = "N"
            JCNT = 1
         END ELSE
            IF SOR.CHG.JOB<1,II> = "" THEN SOR.CHG.JOB<1,II> = SOR.JOB.NO<1,II>
            JCNT = COUNT(SOR.CHG.JOB<1,II>,SVM) + (SOR.CHG.JOB<1,II> # "")
            TOT.LEFT = 0
            IF SOR.MISC.AMT<1,II> + 0 # 0 THEN
               IF SOR.CASH.REC<1,II> + 0 # 0 THEN
                  MPCT = SOR.MISC.AMT<1,II> / (SOR.CASH.REC<1,II> + SOR.MISC.AMT<1,II>)
               END ELSE MPCT = 1
            END ELSE MPCT = 0
*
            FOR JPTR = 1 TO JCNT
               JOB.FND = "Y"
               MATREADU ORD.REC FROM ORDER, CONO:SOR.CHG.JOB<1,II,JPTR> ELSE
                  JOB.FND = "N"; RELEASE ORDER, CONO:SOR.CHG.JOB<1,II,JPTR>
               END
               IF JOB.FND = "Y" THEN
                  LOCATE SOR.INV.NO<1,II> IN ORD.INV.NO<1>,1 SETTING JFND ELSE JFND = 0
                  IF JFND = 0 THEN
                     JIC = DCOUNT(ORD.INV.NO, VM) + 1
                     ORD.INV.NO<1,JIC> = SOR.INV.NO<1,II>
                     ORD.INV.DATE<1,JIC> = REC.DATE
                     ORD.INV.CAT<1,JIC> = SOR.PAY.FLG<1,II>
                     ORD.INV.AMT<1,JIC> = SOR.INV.AMT<1,II>
                     ORD.INV.BAL<1,JIC> = SOR.INV.AMT<1,II>
*                          ORD.TOT.INV = ORD.TOT.INV + SOR.INV.AMT<1,II>
                  END ELSE
                     PBAL = ORD.INV.BAL<1,JFND>
                     JINVOICE.AMT = 0
                     ACNT = DCOUNT(ORD.INV.AMT<1,JFND>,SM)
                     FOR A = 1 TO ACNT
                        JINVOICE.AMT = JINVOICE.AMT + ORD.INV.AMT<1,JFND,A>
                     NEXT A
                     BEGIN CASE
                        CASE INVOICE.BAL = 0
                           BAL = 0
                        CASE JPTR = JCNT
                           BAL = INVOICE.BAL - TOT.LEFT
                        CASE INVOICE.AMT > 0 AND INVOICE.BAL # 0
                           BAL = INT(JINVOICE.AMT / INVOICE.AMT * INVOICE.BAL + 0.5)
                        CASE INVOICE.AMT < 0 AND INVOICE.BAL # 0 
                           BAL = INT(JINVOICE.AMT / INVOICE.AMT * INVOICE.BAL - 0.5)
                        CASE 1
                           BAL = 0
                     END CASE
                     ORD.INV.BAL<1,JFND> = BAL
                     TOT.LEFT = TOT.LEFT + BAL
                     TEMP = PBAL - BAL ; * AMT OF CASH + MISC APPL
                     IF MPCT THEN
                        TEMP.MISC<1,JPTR> = ICONV(TEMP * MPCT, 'MD0')
                        TEMP.CASH<1,JPTR> = TEMP - TEMP.MISC<1,JPTR>
                        TEMP.ACCT<1,JPTR> = SOR.GL.ACCT<1,II>
                     END ELSE
                        TEMP.CASH<1,JPTR> = TEMP
                        TEMP.MISC<1,JPTR> = 0
                        TEMP.ACCT<1,JPTR> = ''
                     END
                     IF JPTR = JCNT THEN
                        IF SUM(TEMP.CASH) # SOR.CASH.REC<1,II> + 0 THEN
                           TEMP.CASH<1,JPTR> = TEMP.CASH<1,JPTR> + SOR.CASH.REC<1,II> - SUM(TEMP.CASH)
                        END
                        IF SUM(TEMP.MISC) # SOR.MISC.AMT<1,II> + 0 THEN
                           TEMP.MISC<1,JPTR> = TEMP.MISC<1,JPTR> + SOR.MISC.AMT<1,II> - SUM(TEMP.MISC)
                        END
                     END
*
                  END
                  MATWRITE ORD.REC ON ORDER, CONO:SOR.CHG.JOB<1,II,JPTR>
               END
            NEXT JPTR
            SOR.CASH.REC<1,II> = TEMP.CASH
            SOR.MISC.AMT<1,II> = TEMP.MISC
            SOR.GL.ACCT<1,II> = TEMP.ACCT
         END
      END ELSE
         IF SOR.JOB.NO<1,II> = "" THEN
            JOB.FND = "N"
            JCNT = 1
         END ELSE
            IF SOR.CHG.JOB<1,II> = "" THEN SOR.CHG.JOB<1,II> = SOR.JOB.NO<1,II>
            JCNT = COUNT(SOR.CHG.JOB<1,II>,SVM) + (SOR.CHG.JOB<1,II> # "")
            TOT.LEFT = 0
            IF SOR.MISC.AMT<1,II> + 0 # 0 THEN
               IF SOR.CASH.REC<1,II> + 0 # 0 THEN
                  MPCT = SOR.MISC.AMT<1,II> / (SOR.CASH.REC<1,II> + SOR.MISC.AMT<1,II>)
               END ELSE MPCT = 1
            END ELSE MPCT = 0
*
            FOR JPTR = 1 TO JCNT
               JOB.FND = "Y"
               MATREADU JOB.REC FROM JOB, CONO:SOR.CHG.JOB<1,II,JPTR> ELSE
                  JOB.FND = "N"; RELEASE JOB, CONO:SOR.CHG.JOB<1,II,JPTR>
               END
               IF JOB.FND = "Y" THEN
                  LOCATE SOR.INV.NO<1,II> IN JOB.INV.NO<1>,1 SETTING JFND ELSE JFND = 0
                  IF JFND = 0 THEN
                     JIC = COUNT(JOB.INV.NO, VM) + (JOB.INV.NO # "") + 1
                     JOB.INV.NO<1,JIC> = SOR.INV.NO<1,II>
                     JOB.INV.DATE<1,JIC> = REC.DATE
                     JOB.INV.CAT<1,JIC> = SOR.PAY.FLG<1,II>
                     JOB.INV.AMT<1,JIC> = SOR.INV.AMT<1,II>
                     JOB.INV.BAL<1,JIC> = SOR.INV.AMT<1,II>
*                          JOB.TOT.INV = JOB.TOT.INV + SOR.INV.AMT<1,II>
                     JOB.TOT.BAL = JOB.TOT.BAL + SOR.INV.AMT<1,II>
                  END ELSE
                     PBAL = JOB.INV.BAL<1,JFND>
                     JINVOICE.AMT = 0
                     ACNT = COUNT(JOB.INV.AMT<1,JFND>,SM) + (JOB.INV.AMT<1,JFND> # "")
                     FOR A = 1 TO ACNT
                        JINVOICE.AMT = JINVOICE.AMT + JOB.INV.AMT<1,JFND,A>
                     NEXT A
                     BEGIN CASE
                        CASE INVOICE.BAL = 0
                           BAL = 0
                        CASE JPTR = JCNT
                           BAL = INVOICE.BAL - TOT.LEFT
                        CASE INVOICE.AMT > 0 AND INVOICE.BAL # 0
                           BAL = INT(JINVOICE.AMT / INVOICE.AMT * INVOICE.BAL + 0.5)
                        CASE INVOICE.AMT < 0 AND INVOICE.BAL # 0 
                           BAL = INT(JINVOICE.AMT / INVOICE.AMT * INVOICE.BAL - 0.5)
                        CASE 1
                           BAL = 0
                     END CASE
                     JOB.INV.BAL<1,JFND> = BAL
                     JOB.TOT.BAL = JOB.TOT.BAL - PBAL + BAL
                     TOT.LEFT = TOT.LEFT + BAL
*CSF 18282
                     TEMP = PBAL - BAL ; * AMT OF CASH + MISC APPL
                     IF MPCT THEN
                        TEMP.MISC<1,JPTR> = ICONV(TEMP * MPCT, 'MD0')
                        TEMP.CASH<1,JPTR> = TEMP - TEMP.MISC<1,JPTR>
                        TEMP.ACCT<1,JPTR> = SOR.GL.ACCT<1,II>
                     END ELSE
                        TEMP.CASH<1,JPTR> = TEMP
                        TEMP.MISC<1,JPTR> = 0
                        TEMP.ACCT<1,JPTR> = ''
                     END
                     IF JPTR = JCNT THEN
                        IF SUM(TEMP.CASH) # SOR.CASH.REC<1,II> + 0 THEN
                           TEMP.CASH<1,JPTR> = TEMP.CASH<1,JPTR> + SOR.CASH.REC<1,II> - SUM(TEMP.CASH)
                        END
                        IF SUM(TEMP.MISC) # SOR.MISC.AMT<1,II> + 0 THEN
                           TEMP.MISC<1,JPTR> = TEMP.MISC<1,JPTR> + SOR.MISC.AMT<1,II> - SUM(TEMP.MISC)
                        END
                     END
*
                  END
                  MATWRITE JOB.REC ON JOB, CONO:SOR.CHG.JOB<1,II,JPTR>
               END
            NEXT JPTR
            SOR.CASH.REC<1,II> = TEMP.CASH
            SOR.MISC.AMT<1,II> = TEMP.MISC
            SOR.GL.ACCT<1,II> = TEMP.ACCT
               MAT SAVE.REC = ""
               SAVE.REC(2) = JOB.SLSMN
               SAVE.REC(14) = SOR.INV.NO<1,II>
               SAVE.REC(25) = REC.DATE
               SAVE.REC(26) = DATE()
               SAVE.REC(27) = SUM(SOR.CASH.REC<1,II>)
               SAVE.REC(28) = SUM(SOR.MISC.AMT<1,II>)
               SAVE.REC(52) = SOR.JOB.NO<1,II>
               PROG.TYPE = "CASH.REC"
               CALL CommissionUpdSub(CONO,MAT SAVE.REC,PROG.TYPE)
         END
      END
      PC = PC + 1
      DC.INVOICE<1,PC> = SOR.INV.NO<1,II>

      IF SOR.PAY.FLG<1,II> = "PA" THEN
         FOR J = 1 TO JCNT
            IF SOR.CASH.REC<1,II,J> + 0 # 0 OR SOR.MISC.AMT<1,II,J> + 0 # 0 THEN
               DC.CASH.APPL<1,PC,-1> = SOR.CASH.REC<1,II,J>
               DC.AMT<1,PC,-1> = SOR.MISC.AMT<1,II,J>
               DC.ACCT<1,PC,-1> = SOR.GL.ACCT<1,II,J>
               DC.DIV<1,PC,-1> = SOR.DIV<1,II,J>
               DC.DEPT<1,PC,-1> = SOR.DEPT<1,II,J>
               DC.CCTR<1,PC,-1> = SOR.CCTR<1,II,J>
            END
         NEXT J
      END ELSE
         DC.CASH.APPL<1,PC> = SOR.INV.AMT<1,II> * (-1)
         DC.AMT<1,PC> = SOR.MISC.AMT<1,II>
         DC.ACCT<1,PC> = SOR.GL.ACCT<1,II>
         DC.DIV<1,PC> = SOR.DIV<1,II>
         DC.DEPT<1,PC> = SOR.DEPT<1,II>
         DC.CCTR<1,PC> = SOR.CCTR<1,II>
      END
      DC.SHORT.PAY<1,PC> = SOR.SHORT.PAY<1,II> ; *T25994
   END
NEXT II
IF SOR.PAY.FLG # "" THEN
   IF CH.AMT > 0 THEN
      CUST.LAST.PMT= REC.DATE:":":CH.AMT
   END
   CUST.AR.BAL = TOT.BAL ; CUST.DAYS.TO.PAY = CUST.DAYS.TO.PAY + DAYS
   CUST.INVOICE.CNT<1,2> = CUST.INVOICE.CNT<1,2> + ICNT
   MATWRITE CUST.REC ON CUSTOMER , CONO:CUST_NO
   DC.CASH = CH.AMT
   DC.BANK.ACCT = SOR.GLTB.CASH
   DC.CHECK = CH.NUM

   REF.NUM = 0
   MORE = 1
   DC.KEY = ''
   LOOP
   	REF.NUM = REF.NUM + 1
      	DC.KEY = CUST_NO:"!":REC.DATE:"!":REF.NUM
      	READU DC FROM DAILY.CASH , CONO:DC.KEY ELSE
       	MORE = 0
      	END
      	IF MORE = 1 THEN
      		RELEASE DAILY.CASH , CONO:DC.KEY
      	END
   WHILE MORE DO REPEAT
   MATWRITE DC.REC ON DAILY.CASH , CONO:DC.KEY


   TAG = ''
   WRITE TAG ON DAILY.CASH.TAG , CONO:DC.KEY
   CHR.SHORT.PAY = DC.SHORT.PAY ; *T25994
   CHR.CASH = DC.CASH
   CHR.INVOICE = DC.INVOICE
   CHR.CASH.APPL = DC.CASH.APPL
   CHR.GL.AMT = DC.AMT
   CHR.GL.NO = DC.ACCT
   CHR.MISC.DESC = DC.DESC
   CHR.BANK.NO = DC.BANK.ACCT
   DIV.CODE = DC.DIV<1,1>
   IF SECURITY.REC<1> = "Y" AND SECURITY.REC<2> = "Y" THEN
      LOCATE DIV.CODE IN DIVISION.REC<1>,1 SETTING POS ELSE POS = 1
   END ELSE
      POS = 1
   END
   PRD = ARCMON<1,POS>
   CHR.MON = PRD
   CHR.DIV = DC.DIV
   CHR.DEPT = DC.DEPT
   CHR.CCTR = DC.CCTR
   REF.NO = 0
   MORE = 1
   HC.KEY = ''
   LOOP
      REF.NO = REF.NO + 1
      HC.KEY = CUST_NO:"!":REC.DATE:"!":CH.NUM:"!":REF.NO
      READU HC FROM CASH.HIST , CONO:HC.KEY ELSE
         MORE = 0
      END
      IF MORE = 1 THEN
         RELEASE CASH.HIST , CONO:HC.KEY
      END
   WHILE MORE DO REPEAT
*STATUS = RBO.setProperty('', 'ServerMessage',HC.KEY)
*RETURN	

   MATWRITE CHR.REC ON CASH.HIST, CONO:HC.KEY
END ELSE
   RELEASE CUSTOMER, CONO:CUST_NO
END
IF CH.NUM # "" THEN
   WRITEV PRD ON CHECK.XREF , CONO:CUST_NO:"!":REC.DATE:"!":CH.NUM,1
END
*UPDATE REFNUM IN CONTROL FILES
GOTO 99999
*
93000 
IF ERRMSG # '' THEN
   *CALL RBO_ERROR_SUB(ERRMSG)
   STATUS = RBO.setProperty('', 'ServerStatus', 1)
   STATUS = RBO.setProperty('', 'ServerMessage', ERRMSG)
END
99999 RETURN
