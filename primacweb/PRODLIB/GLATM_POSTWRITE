  SUBROUTINE GLATM_POSTWRITE
*********************************************************************
*
* REVISION - [12.0]
*
* PROGRAM  - GLATM_POSTWRITE
*
* AUTHOR   - ALEJANDRO DELGADO
*
* DATE     - 01/02/2003
*
* DESCRIPTION
*
* The program builds the RBO string for Account Type Maintenance.
*
*********************************************************************
*
*---- FILE COPY STATEMENTS
*
  $INCLUDE WWINSERT RBO.H
  $INCLUDE GLS.CPYLIB ACCT.TYPE
  $INCLUDE GLS.CPYLIB ACCT.CATG
  $INCLUDE GLS.CPYLIB ACCT.SUB.CATG
  $INCLUDE GLS.CPYLIB CATG.AND.SUB
  $INCLUDE PMC.CPYLIB COA
  $INCLUDE CPYLIB CHAR
  $INCLUDE CPYLIB FILE.VARS
*
**** OPEN FILES
*
  IF FILEINFO(ACCT.TYPE,0) = 0 THEN
    OPEN '','ACCT.TYPE' TO ACCT.TYPE ELSE
      ERRMSG = 'Cannot open ACCT.TYPE file!'
      GOTO SET.ERROR
    END
  END 
  IF FILEINFO(ACCT.CATG,0) = 0 THEN
    OPEN '','ACCT.CATG' TO ACCT.CATG ELSE
      ERRMSG = 'Cannot open ACCT.CATG file!'
      GOTO SET.ERROR
    END
  END
  IF FILEINFO(ACCT.SUB.CATG,0) = 0 THEN
    OPEN '','ACCT.SUB.CATG' TO ACCT.SUB.CATG ELSE
      ERRMSG = 'Cannot open ACCT.SUB.CATG file!'
      GOTO SET.ERROR
    END
  END
  IF FILEINFO(CATG.AND.SUB,0) = 0 THEN
    OPEN '','CATG.AND.SUB' TO CATG.AND.SUB ELSE
      ERRMSG = 'Cannot open CATG.AND.SUB file!'
      GOTO SET.ERROR
    END
  END
  IF FILEINFO(COA,0) = 0 THEN
    OPEN '','COA' TO COA ELSE
      ERRMSG = 'Cannot open COA file!'
      GOTO SET.ERROR
    END
  END
*
*---- INITIALIZATION
*
  ERRMSG = RBO.getProperty('','ID',ID)
  ERRMSG = RBO.getProperty('','AC_DESC',PRT.DESC)
  ERRMSG = RBO.getProperty('','ORIG_CATG',ORIG.CATG)
  ERRMSG = RBO.getProperty('','SUB_CATG',SUB.CATG)
  ERRMSG = RBO.getProperty('','SUB_C',SUB.C)
  ERRMSG = RBO.getProperty('','SUB_F',SUB.F)
  ERRMSG = RBO.getProperty('','SUB_P',SUB.P)
  ERRMSG = RBO.getProperty('','SUB_DESC',SUB.DESC)
  CONO = ID[1,3]
  TYPE.ID = TRIM(ID[1,3])
  *
  CMD = 'SSELECT COMPANY'
  PERFORM CMD CAPTURING MSG
  LOOP.DONE = 0  ; ALL.CONO = ''
  LOOP
    READNEXT ID ELSE LOOP.DONE = 1
  UNTIL LOOP.DONE DO
    IF LEN(ID) # 3 AND NOT(NUM(ID)) THEN CONTINUE
    ALL.CONO<-1> = ID
  REPEAT
  IF ALL.CONO = "" THEN ALL.CONO = CONO
  CCNT = DCOUNT(ALL.CONO, AM)
  *
  MATREADU AT.REC FROM ACCT.TYPE, ID THEN
    LINES = DCOUNT(AT.CATG, VM)
    FOR LN = 1 TO LINES
      MATREADU AC.REC FROM ACCT.CATG, AT.CATG<1,CFND> ELSE
        MAT AC.REC = ""
      END
      AC.TYPE = TYPE.ID
      AC.DESC = PRT.DESC<1,LN>
      LINES1 = DCOUNT(SUB.CATG<1,LN>, SVM)
      FOR LN1 = 1 TO LINES1
        LOCATE SUB.CATG<1,LN,LN1> IN AC.SUB<1>,1 SETTING SFND ELSE
          AC.SUB<1,SFND> = SUB.CATG<1,LN,LN1>
        END
        MATREADU ASC.REC FROM ACCT.SUB.CATG, AC.SUB<1,SFND> ELSE
          MAT ASC.REC = ""
        END
        ASC.DESC = SUB.DESC<1,LN,LN1>
        LOCATE TYPE.ID IN ASC.TYPES<1>,1 SETTING AFND ELSE
          ASC.TYPES<1,AFND> = TYPE.ID
        END
        FOR DL = 1 TO CCNT
          CAS.ID = ALL.CONO<DL> : AT.CATG<1,CFND> : AC.SUB<1,SFND>
          MATREADU CAS.REC FROM CATG.AND.SUB, CAS.ID ELSE
            MAT CAS.REC = ""
          END
          BEGIN CASE
            CASE SUB.C<1,LN,LN1> # CAS.CURR
              MODIFIED = 1
              CAS.CURR = SUB.C<1,LN,LN1>
              CAS.FIX = SUB.F<1,LN,LN1>
              CAS.PROD = SUB.P<1,LN,LN1>
            CASE SUB.F<1,LN,LN1> # CAS.FIX
              MODIFIED = 1
              CAS.FIX = SUB.F<1,LN,LN1>
              CAS.PROD = SUB.P<1,LN,LN1>
            CASE SUB.P<1,LN,LN1> # CAS.PROD
              MODIFIED = 1
              CAS.PROD = SUB.P<1,LN,LN1>
            CASE 1
              MODIFIED = 0
          END CASE
          IF MODIFIED = 1 THEN
            ACNT = COUNT(CAS.ACCT,VM) + (CAS.ACCT # '')
            FOR K = ACNT TO 1 STEP - 1
              COA.ID = ALL.CONO<DL> : CAS.ACCT<1,K>
              MATREADU COA.REC FROM COA, COA.ID ELSE
                CAS.ACCT = DELETE(CAS.ACCT,1,K,0)
                RELEASE COA, COA.ID
                CONTINUE
              END
              COA.TYPE = AC.TYPE
              COA.CURR = CAS.CURR
              COA.FIX = CAS.FIX
              COA.PROD = CAS.PROD
              MATWRITE COA.REC ON COA, COA.ID
            NEXT K
          END
          MATWRITE CAS.REC ON CATG.AND.SUB, CAS.ID
        NEXT DL
        MATWRITE ASC.REC ON ACCT.SUB.CATG, AC.SUB<1,SFND>
      NEXT LN1
      MATWRITE AC.REC ON ACCT.CATG, AT.CATG<1,CFND>
    NEXT LN
*--- DELETE PROCESS
    LINES = COUNT(ORIG.CATG, VM)
    FOR LN = LINES TO 1 STEP - 1
      LOCATE ORIG.CATG<1,LN> IN AT.CATG<1>,1 SETTING CFND ELSE CFND = 0
      MATREADU AC.REC FROM ACCT.CATG, ORIG.CATG<1,LN> ELSE
        MAT AC.REC = ""
        CFND = 0
      END
      LINES1 = COUNT(AC.SUB,VM) + (AC.SUB # "")
      FOR LN1 = LINES1 TO 1 STEP - 1
        IF CFND THEN
          LOCATE AC.SUB<1,LN1> IN SUB.CATG<1,CFND>,1 SETTING SFND ELSE SFND = 0
        END ELSE
          SFND = 0
        END
        IF SFND THEN
          DFND = 1
        END ELSE
          DFND = 0
          CATG.CNT = COUNT(SUB.CATG,VM) + (SUB.CATG # "")
          FOR DL = 1 TO CATG.CNT UNTIL DFND
            LOCATE AC.SUB<1,LN1> IN SUB.CATG<1,DL>,1 SETTING DFND ELSE DFND = 0
          NEXT DL
        END
        MATREADU ASC.REC FROM ACCT.SUB.CATG, AC.SUB<1,LN1> ELSE
          MAT ASC.REC = ""
          SFND = 0
          DFND = 0
        END
        FOR DL = 1 TO CCNT WHILE SFND = 0
          CAS.ID = ALL.CONO<DL> : ORIG.CATG<1,LN> : AC.SUB<1,LN1>
          MATREADU CAS.REC FROM CATG.AND.SUB, CAS.ID ELSE
            MAT CAS.REC = ""
          END
          ACNT = COUNT(CAS.ACCT,VM) + (CAS.ACCT # "")
          FOR K = ACNT TO 1 STEP - 1
            COA.ID = ALL.CONO<DL> : CAS.ACCT<1,K>
            KFND = 1
            MATREADU COA.REC FROM COA, COA.ID ELSE
              MAT COA.REC = ""
              KFND = 0
            END
            IF KFND THEN
              COA.CATG = ""
              COA.SUB.CATG = ""
              COA.CURR = ""
              COA.FIX = ""
              COA.PROD = ""
              MATWRITE COA.REC ON COA, COA.ID
            END ELSE
              RELEASE COA, COA.ID
            END
            CAS.ACCT = DELETE(CAS.ACCT,1,K,0)
          NEXT K
          DELETE CATG.AND.SUB, CAS.ID
        NEXT DL
        IF DFND THEN
          MATWRITE ASC.REC ON ACCT.SUB.CATG, AC.SUB<1,LN1>
        END ELSE
          LOCATE TYPE.ID IN ASC.TYPES<1>,1 SETTING AFND ELSE AFND = 0
          IF AFND THEN
            ASC.TYPES = DELETE(ASC.TYPES,1,AFND,0)
          END
          IF ASC.TYPES = "" THEN
            DELETE ACCT.SUB.CATG, AC.SUB<1,LN1>
          END ELSE
            MATWRITE ASC.REC ON ACCT.SUB.CATG, AC.SUB<1,LN1>
          END
        END
        IF SFND = 0 THEN
          AC.SUB = DELETE(AC.SUB,1,LN1,0)
        END
      NEXT LN1
      IF CFND THEN
        MATWRITE AC.REC ON ACCT.CATG, ORIG.CATG<1,LN>
      END ELSE
        DELETE ACCT.CATG, ORIG.CATG<1,LN>
      END
    NEXT LN
  END
*
  RETURN
*
SET.ERROR: 
*
  STATUS = RBO.setProperty('','ServerStatus',1)
  STATUS = RBO.setProperty('','ServerMessage',ERRMSG)
  RETURN
END
