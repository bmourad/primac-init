SUBROUTINE ARCRM_REVERSE_UPD
***************************************************************************
* REVISION    - [e12.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM    - PRIMAC
* PROGRAM   - CASH.REC.REVERSE
* AUTHOR    - JIHAD YAMOUT, COMPUTER BUSINESS ASSOCIATES
* DATE      - 01/03/86
* DESCRIPTION
*  This program is used to reverse A/R entries.
***************************************************************************

$INCLUDE WWINSERT RBO.H

$INCLUDE ARS.CPYLIB OPEN.RECV
$INCLUDE ARS.CPYLIB DAILY.CASH
$INCLUDE ARS.CPYLIB CASH.HIST
$INCLUDE PMC.CPYLIB CUSTOMER
$INCLUDE PMC.CPYLIB COMPANY
$INCLUDE PMC.CPYLIB SECURITY
$INCLUDE JCS.CPYLIB JOB
$INCLUDE OPS.CPYLIB ORDER
$INCLUDE CPYLIB CHAR
DIM SAVE.OR.REC(30)
  EQU SOR.INV.NO TO SAVE.OR.REC(1)
  EQU SOR.JOB.NO TO SAVE.OR.REC(2)
  EQU SOR.INV.AMT TO SAVE.OR.REC(3)
  EQU SOR.CASH.REC TO SAVE.OR.REC(4)
  EQU SOR.MISC.AMT TO SAVE.OR.REC(5)
  EQU SOR.GL.ACCT TO SAVE.OR.REC(6)
  EQU SOR.OPEN.AMT TO SAVE.OR.REC(7)
  EQU SOR.PAY.FLG TO SAVE.OR.REC(8)
  EQU SOR.MON TO SAVE.OR.REC(9)
  EQU SOR.ONACCT TO SAVE.OR.REC(10);* NOT USED
  EQU SOR.DIV TO SAVE.OR.REC(11)
  EQU SOR.DEPT TO SAVE.OR.REC(12)
  EQU SOR.CCTR TO SAVE.OR.REC(13)
  EQU SOR.CHG.JOB TO SAVE.OR.REC(14)
  EQU SOR.PO.NO TO SAVE.OR.REC(15)
  EQU SOR.REV.FLG TO SAVE.OR.REC(16)
  EQU SOR.ORDER.FLG TO SAVE.OR.REC(17)
  EQU SOR.SHORT.PAY TO SAVE.OR.REC(18) ;* T25994
  EQU SOR.S.P.DESC TO SAVE.OR.REC(19) ;* T25994
  EQU SOR.HOLD.CASH TO SAVE.OR.REC(20)
  EQU SOR.HOLD.ACCT TO SAVE.OR.REC(21)
  EQU SOR.HOLD.MISC TO SAVE.OR.REC(22)
  EQU SOR.REVERSE.FLAG TO SAVE.OR.REC(23)
  EQU SOR.CH.NUM TO SAVE.OR.REC(24)
  EQU SOR.GLTB.CASH TO SAVE.OR.REC(25)
  EQU SOR.CH.AMT TO SAVE.OR.REC(26)
  EQU SOR.CUST.BAL TO SAVE.OR.REC(27)

DIM SAVE.REC(55)
*
OPEN '','COMPANY' TO COMPANY ELSE
  ERRMSG='Cannot open COMPANY file!'
  GOTO 93000
END
OPEN '','CONTROL' TO CONTROL ELSE
  ERRMSG='Cannot open CONTROL file!'
  GOTO 93000
END
OPEN '','SECURITY' TO SECURITY ELSE
  ERRMSG='Cannot open SECURITY file!'
  GOTO 93000
END
OPEN '','CUSTOMER' TO CUSTOMER ELSE
  ERRMSG='Cannot open CUSTOMER file!'
  GOTO 93000
END
OPEN '','OPEN.RECV' TO OPEN.RECV ELSE
  ERRMSG='Cannot open OPEN.RECV file!'
  GOTO 93000
END
OPEN '','DAILY.CASH' TO DAILY.CASH ELSE
  ERRMSG='Cannot open DAILY.CASH file!'
  GOTO 93000
END
OPEN '','DAILY.CASH.TAG' TO DAILY.CASH.TAG ELSE
  ERRMSG='Cannot open DAILY.CASH.TAG file!'
  GOTO 93000
END
OPEN '','CASH.HIST' TO CASH.HIST ELSE
  ERRMSG='Cannot open CASH.HIST file!'
  GOTO 93000
END

OPEN '','JOB' TO JOB ELSE
  ERRMSG='Cannot open JOB file!'
  GOTO 93000
END

OPEN '','ORDER' TO ORDER ELSE
  ERRMSG='Cannot open ORDER file!'
  GOTO 93000
END
*
MAT JOB.REC = ''
MAT ORD.REC = ''
MAT OR.REC= '' ; MAT DC.REC = ''; MAT CHR.REC = ''

IF STATUS THEN ERRMSG='Cannot get property ID'; GOTO 93000
  STATUS = RBO.getProperty('','Cono',CONO)
  STATUS = RBO.getProperty('','CUST_NO',CUST_NO)
  STATUS = RBO.getProperty('','REC_DATE',REC_DATE)
  STATUS = RBO.getProperty('','REF_NUM',REF.NUM)
  STATUS = RBO.getProperty('','SOR_INV_NO',SOR.INV.NO)
  STATUS = RBO.getProperty('','SOR_JOB_NO',SOR.JOB.NO)
  STATUS = RBO.getProperty('','SOR_INV_AMT',SOR.INV.AMT)
  STATUS = RBO.getProperty('','SOR_CASH_REC',SOR.CASH.REC)
  STATUS = RBO.getProperty('','SOR_MISC_AMT',SOR.MISC.AMT)
  STATUS = RBO.getProperty('','SOR_GL_ACCT',SOR.GL.ACCT)
  STATUS = RBO.getProperty('','SOR_OPEN_AMT',SOR.OPEN.AMT)
  STATUS = RBO.getProperty('','SOR_PAY_FLG',SOR.PAY.FLG)
  STATUS = RBO.getProperty('','SOR_DIV',SOR.DIV)
  STATUS = RBO.getProperty('','SOR_DEPT',SOR.DEPT)
  STATUS = RBO.getProperty('','SOR_CCTR',SOR.CCTR)
  STATUS = RBO.getProperty('','SOR_CHG_JOB',SOR.CHG.JOB)
  STATUS = RBO.getProperty('','SOR_PO_NO',SOR.PO.NO)
  STATUS = RBO.getProperty('','SOR_REV_FLG',SOR.REV.FLG) 
  STATUS = RBO.getProperty('','SOR_ORDER_FLG',SOR.ORDER.FLG)
  STATUS = RBO.getProperty('','SOR_S_P_DESC',SOR.SHORT.PAY)
  STATUS = RBO.getProperty('','GLTB_CASH',SOR.GLTB.CASH)
  STATUS = RBO.getProperty('','HOLD_CASH',SOR.HOLD.CASH)
  STATUS = RBO.getProperty('','HOLD_MISC',SOR.HOLD.MISC)
  STATUS = RBO.getProperty('','HOLD_ACCT',SOR.HOLD.ACCT)
  STATUS = RBO.getProperty('','CH_AMT',SOR.CH.AMT)
  STATUS = RBO.getProperty('','APPLY_AMT',APPLY.AMT)
  STATUS = RBO.getProperty('','CH_NUM',SOR.CH.NUM)
  STATUS = RBO.getProperty('','CUST_AR_BAL',SOR.CUST.BAL)

  IF REF.NUM = "" THEN REF.NUM = 1

READ DIVISION.REC FROM CONTROL, CONO:"DIVISIONS" ELSE
  ERRMSG='Cannot read CONTROL record ':CONO:'DIVISIONS'
  GOTO 93000
END
READ ARCMON FROM CONTROL, CONO:'ARCFISCAL' ELSE
  ERRMSG='Cannot read CONTROL record ':CONO:'ARCFISCAL'
  GOTO 93000
END
READ SECURITY.REC FROM CONTROL, CONO:'DIV.SECURITY' ELSE
  ERRMSG='Cannot read CONTROL record ':CONO:'DIV.SECURITY'
  GOTO 93000
END

CH.AMT = SOR.CH.AMT
MATREADU CUST.REC FROM CUSTOMER, CONO:CUST_NO ELSE
  ERRMSG='Cannot read CUSTOMER record ':CONO:CUST_NO
  GOTO 93000
END

  SOR.CUST.BAL = ICONV(SOR.CUST.BAL,"MD2")
  APPLY.AMT = ICONV(APPLY.AMT,"MD2")
  SOR.CH.AMT = ICONV(SOR.CH.AMT,"MD2")
  REC_DATE = ICONV(REC_DATE,"D2/")
  CNT = DCOUNT(SOR.OPEN.AMT,@VM)

  ID = CUST_NO:"!":REC_DATE:"!":REF.NUM

  *FOR II= 1 TO CNT
*	SOR.OPEN.AMT<1,II>	= ICONV(SOR.OPEN.AMT<1,II>,"MD2") + 0
  *NEXT II
  
  *CNT = DCOUNT(SOR.MISC.AMT,@VM)
  *FOR II= 1 TO CNT
	*SOR.MISC.AMT<1,II>	= ICONV(SOR.MISC.AMT<1,II>,"MD2") + 0
  *NEXT II
  
  *CNT = DCOUNT(SOR.CASH.REC,@VM)
  *FOR II= 1 TO CNT
	*SOR.CASH.REC<1,II>	= ICONV(SOR.CASH.REC<1,II>,"MD2") + 0
  *NEXT II

  *CNT = DCOUNT(SOR.INV.AMT,@VM)
  *FOR II= 1 TO CNT
	*SOR.INV.AMT<1,II>	= ICONV(SOR.INV.AMT<1,II>,"MD2") + 0
  *NEXT II

  IF SOR.CH.NUM = '' THEN SOR.CH.NUM = '000000' ELSE SOR.CH.NUM = SOR.CH.NUM
  **** MAIN PROCESSING
  INV.CNT = DCOUNT(SOR.INV.NO,VM)
  PC = 0 ; DAYS = 0 ; AMT = 0 ; ICNT = 0
  DC = ""
  FOR II = 1 TO INV.CNT
      IF SOR.PAY.FLG<1,II> # "" THEN
          FND.FLG = 1
          MATREADU OR.REC FROM OPEN.RECV , CONO:SOR.INV.NO<1,II> ELSE
              FND.FLG = 0 ;MAT OR.REC = '' ; RELEASE OPEN.RECV , CONO: SOR.INV.NO<1,II>
          END
	   IF FND.FLG = 0 THEN
              OR.CUST = CUST_NO
              OR.JOB = SOR.JOB.NO<1,II>
              OR.ORDER.FLG = SOR.ORDER.FLG<1,II>
              OR.INV.DATE = REC_DATE
              OR.AS.DATE = DATE()
              OR.TR.DATE = REC_DATE
              IF SOR.PAY.FLG<1,II> = "BC" THEN
                  OR.TYPE = "D"
              END ELSE
                  OR.TYPE = "C"
              END
              IF SOR.MON<1,II> # "" THEN
                  OR.MON = SOR.MON<1,II>
              END
              OR.INV.AMT = SOR.INV.AMT<1,II>
              OR.DISC.DATE = REC_DATE
              OR.AMT = SOR.INV.AMT<1,II>
              OR.BAL = SOR.INV.AMT<1,II>
              OR.CHECK = SOR.CH.NUM
              OR.CHK.DATE = REC_DATE
              OR.CHK.AMT = SOR.CH.AMT * (-1)
              OR.DIV = SOR.DIV<1,II>
              OR.DEPT = SOR.DEPT<1,II>
              OR.CCTR = SOR.CCTR<1,II>
          END ELSE
              TR.CNT = COUNT(OR.TR.DATE, VM) + (OR.TR.DATE # "")
		CUST.BAL = 0
              ST.FLG = 0
              JCNT = DCOUNT(OR.CHG.JOB,VM)
		FOR TR = TR.CNT TO 1 STEP -1 UNTIL ST.FLG
                  IF OR.TR.DATE<1,TR> = REC_DATE AND OR.INV.AMT<1,TR> * (-1) = SOR.CASH.REC<1,II> THEN ;*IF INVICE AMT. IS EQUAL TO CASH.REC FOR THAT INVOICE
                     ST.FLG = 1
		        IF SOR.MISC.AMT<1,II> # "" THEN
*CSF 18282
                          OR.BAL = OR.BAL + SOR.MISC.AMT<1,II>
                          CUST.AR.BAL = CUST.AR.BAL - OR.INV.AMT<1,TR+1>
                          OR.INV.AMT = DELETE(OR.INV.AMT,1,TR+1,0)
                          OR.TR.DATE = DELETE(OR.TR.DATE,1,TR+1,0)
                          OR.TYPE = DELETE(OR.TYPE,1,TR+1,0)
                      END
                      OR.TR.DATE = DELETE(OR.TR.DATE,1,TR,0)
                      OR.TYPE = DELETE(OR.TYPE,1,TR,0)
                      IF OR.BAL = 0 AND (INDEX(SOR.INV.NO<1,II>,"BC",1) = 0) AND (INDEX(SOR.INV.NO<1,II>,"PP",1) = 0) AND (INDEX(SOR.INV.NO<1,II>,"AC",1) = 0) THEN
                          DAYS = DAYS + (REC_DATE - OR.INV.DATE)
                          ICNT = ICNT + 1
                          AMT = AMT + OR.INV.AMT<1,1>
                      END
                      CUST.AR.BAL = CUST.AR.BAL - OR.INV.AMT<1,TR>
                      OR.BAL = OR.BAL + SOR.CASH.REC<1,II>
                      OR.INV.AMT = DELETE(OR.INV.AMT,1,TR,0)
                      OR.CHECK = DELETE(OR.CHECK,1,TR,0)
                      OR.CHK.DATE = DELETE(OR.CHK.DATE,1,TR,0)
                      OR.CHK.AMT = DELETE(OR.CHK.AMT,1,TR,0)
                  END
			
                  IF ((OR.TR.DATE<1,TR> = REC_DATE) AND (OR.INV.AMT<1,TR> *(-1) = SOR.MISC.AMT<1,II>)  AND (SOR.CASH.REC<1,II> = 0)) THEN
                      ST.FLG=1
                      OR.BAL = OR.BAL + SOR.MISC.AMT<1,II>
                      CUST.AR.BAL = CUST.AR.BAL - OR.INV.AMT<1,TR>
                      OR.INV.AMT = DELETE(OR.INV.AMT,1,TR,0)
                      OR.TR.DATE = DELETE(OR.TR.DATE,1,TR,0)
                      OR.TYPE = DELETE(OR.TYPE,1,TR,0)
                  END
              NEXT TR
          END
          IF OR.INV.AMT = "" THEN
              DELETE OPEN.RECV , CONO:SOR.INV.NO<1,II>
              DEL.FLG = 1
              IF CUST.DET.AR<1,1> # "N" THEN
                  LOCATE SOR.INV.NO<1,II> IN CUST.INVOICE<1>,1 SETTING PP ELSE PP = 0
                  IF PP THEN
                      CUST.INVOICE = DELETE(CUST.INVOICE,1,PP,0)
                  END
              END
          END ELSE
		MATWRITE OR.REC ON OPEN.RECV , CONO:SOR.INV.NO<1,II> ;* EXECUTED
              DEL.FLG = 0
              INVOICE.AMT = OR.AMT
              INVOICE.BAL = OR.BAL
          END
          IF SOR.ORDER.FLG<1,II> = "Y" THEN
              IF ((SOR.JOB.NO<1,II> = 0) OR (SOR.JOB.NO<1,II> = "")) THEN
                  JOB.FND = "N"
                  JCNT = 1
              END ELSE
                  IF ((SOR.CHG.JOB<1,II> = "") OR (SOR.CHG.JOB<1,II> = 0)) THEN SOR.CHG.JOB<1,II> = SOR.JOB.NO<1,II>
                  JCNT = COUNT(SOR.CHG.JOB<1,II>,SVM) + (SOR.CHG.JOB<1,II> # "")
                  TOT.LEFT = 0
                  FOR JPTR = 1 TO JCNT
                      JOB.FND = "Y"
                      MATREADU ORD.REC FROM ORDER, CONO:SOR.CHG.JOB<1,II,JPTR> ELSE
                          JOB.FND = "N"; RELEASE ORDER, CONO:SOR.CHG.JOB<1,II,JPTR>
                      END
                      IF JOB.FND = "Y" THEN
                          LOCATE SOR.INV.NO<1,II> IN ORD.INV.NO<1>,1 SETTING JFND ELSE JFND = 0
                          IF JFND THEN
                              IF DEL.FLG THEN
                                  ORD.INV.NO = DELETE(ORD.INV.NO,1,JFND,0)
                                  ORD.INV.DATE = DELETE(ORD.INV.DATE,1,JFND,0)
                                  ORD.INV.CAT = DELETE(ORD.INV.CAT,1,JFND,0)
                                  ORD.INV.AMT = DELETE(ORD.INV.AMT,1,JFND,0)
                                  ORD.INV.BAL = DELETE(ORD.INV.BAL,1,JFND,0)
*                           ORD.TOT.BAL = ORD.TOT.BAL - SOR.INV.AMT<1,II>
*                           ORD.TOT.INV = ORD.TOT.INV - SOR.INV.AMT<1,II>
                              END ELSE
                                  PBAL = ORD.INV.BAL<1,JFND>
                                  JINVOICE.AMT = 0
                                  ACNT = COUNT(ORD.INV.AMT<1,JFND>,SM) + (ORD.INV.AMT<1,JFND> # "")
                                  FOR A = 1 TO ACNT
                                      JINVOICE.AMT = JINVOICE.AMT + ORD.INV.AMT<1,JFND,A>
                                  NEXT A
                                  BEGIN CASE
                                      CASE INVOICE.BAL = 0
                                          BAL = 0
                                      CASE JPTR = JCNT
                                          BAL = INVOICE.BAL - TOT.LEFT
                                      CASE INVOICE.AMT > 0 AND INVOICE.BAL # 0
                                          BAL = INT(INVOICE.BAL / INVOICE.AMT * JINVOICE.AMT + 0.5)
                                          IF BAL > JINVOICE.AMT THEN BAL = JINVOICE.AMT
                                      CASE INVOICE.AMT < 0 AND INVOICE.BAL # 0
                                          BAL = INT(INVOICE.BAL / INVOICE.AMT * JINVOICE.AMT - 0.5)
                                          IF BAL < JINVOICE.AMT THEN BAL = JINVOICE.AMT
                                      CASE 1
                                          BAL = 0
                                  END CASE
                                  ORD.INV.BAL<1,JFND> = BAL
*                           ORD.TOT.BAL = ORD.TOT.BAL - PBAL + BAL
*                           ORD.TOT.INV = ORD.TOT.INV - PBAL + BAL
                                  TOT.LEFT = TOT.LEFT + BAL
                              END
                          END
                          MATWRITE ORD.REC ON ORDER, CONO:SOR.CHG.JOB<1,II,JPTR>
                      END
                  NEXT JPTR
              END
          END ELSE

              IF ((SOR.JOB.NO<1,II> = "") OR (SOR.JOB.NO<1,II> = 0)) THEN
                  JOB.FND = "N"
                  JCNT = 1
              END ELSE
                  IF ((SOR.CHG.JOB<1,II> = "") OR (SOR.CHG.JOB<1,II> = 0)) THEN SOR.CHG.JOB<1,II> = SOR.JOB.NO<1,II>
                  JCNT = COUNT(SOR.CHG.JOB<1,II>,SVM) + (SOR.CHG.JOB<1,II> # "")
                  TOT.LEFT = 0
                  FOR JPTR = 1 TO JCNT
                      JOB.FND = "Y"
                      MATREADU JOB.REC FROM JOB, CONO:SOR.CHG.JOB<1,II,JPTR> ELSE
                          JOB.FND = "N"; RELEASE JOB, CONO:SOR.CHG.JOB<1,II,JPTR>
                      END
                      IF JOB.FND = "Y" THEN
                          LOCATE SOR.INV.NO<1,II> IN JOB.INV.NO<1>,1 SETTING JFND ELSE JFND = 0
                          IF JFND THEN
                              IF DEL.FLG THEN
                                  JOB.INV.NO = DELETE(JOB.INV.NO,1,JFND,0)
                                  JOB.INV.DATE = DELETE(JOB.INV.DATE,1,JFND,0)
                                  JOB.INV.CAT = DELETE(JOB.INV.CAT,1,JFND,0)
                                  JOB.INV.AMT = DELETE(JOB.INV.AMT,1,JFND,0)
                                  JOB.INV.BAL = DELETE(JOB.INV.BAL,1,JFND,0)
                                  JOB.TOT.BAL = JOB.TOT.BAL - SOR.INV.AMT<1,II>
                              END ELSE
                                  PBAL = JOB.INV.BAL<1,JFND>
                                  JINVOICE.AMT = 0
                                  ACNT = COUNT(JOB.INV.AMT<1,JFND>,SM) + (JOB.INV.AMT<1,JFND> # "")
                                  FOR A = 1 TO ACNT
                                      JINVOICE.AMT = JINVOICE.AMT + JOB.INV.AMT<1,JFND,A>
                                  NEXT A
                                  BEGIN CASE
                                     CASE INVOICE.BAL = 0
                                          BAL = 0
                                      CASE JPTR = JCNT
                                          BAL = INVOICE.BAL - TOT.LEFT
                                      CASE INVOICE.AMT > 0 AND INVOICE.BAL # 0
                                          BAL = INT(INVOICE.BAL / INVOICE.AMT * JINVOICE.AMT + 0.5)
                                          IF BAL > JINVOICE.AMT THEN BAL = JINVOICE.AMT
                                      CASE INVOICE.AMT < 0 AND INVOICE.BAL # 0
                                          BAL = INT(INVOICE.BAL / INVOICE.AMT * JINVOICE.AMT - 0.5)
                                          IF BAL < JINVOICE.AMT THEN BAL = JINVOICE.AMT
                                      CASE 1
                                          BAL = 0
                                  END CASE
                                  JOB.INV.BAL<1,JFND> = BAL
                                  JOB.TOT.BAL = JOB.TOT.BAL - PBAL + BAL
                                  TOT.LEFT = TOT.LEFT + BAL
                              END
                          END
                          MATWRITE JOB.REC ON JOB, CONO:SOR.CHG.JOB<1,II,JPTR>
                      END
                  NEXT JPTR
                  IF CO.COMMISSION = "Y" THEN
                      MAT SAVE.REC = ""
                      SAVE.REC(2) = JOB.SLSMN
                      SAVE.REC(14) = SOR.INV.NO<1,II>
                      SAVE.REC(25) = REC_DATE
                      SAVE.REC(26) = DATE()
                      SAVE.REC(27) = SOR.CASH.REC<1,II>
                      SAVE.REC(28) = SOR.MISC.AMT<1,II>
                      SAVE.REC(52) = SOR.JOB.NO<1,II>
                      PROG.TYPE = "CASH.REV"
                      CALL CommissionUpdSub(CONO,MAT SAVE.REC,PROG.TYPE)
                  END
              END
          END
          PC = PC+1
          DC.INVOICE<1,PC> = SOR.INV.NO<1,II>
          IF SOR.PAY.FLG<1,II> # "" THEN ; * EXECUTED
              CCNT = DCOUNT(SOR.HOLD.CASH<1,II>,SVM)
              MCNT = DCOUNT(SOR.HOLD.MISC<1,II>,SVM)
              IF CCNT >= MCNT THEN JCNT = CCNT ELSE JCNT = MCNT
              FOR J = 1 TO JCNT
                  IF SOR.HOLD.CASH<1,II,J> + 0 # 0 OR SOR.HOLD.MISC<1,II,J> + 0 # 0 THEN ;* EXECUTED
                      IF SOR.HOLD.CASH<1,II,J> + 0 # 0 THEN ; * EXECUTED
			      DC.CASH.APPL<1,PC,J> = SOR.HOLD.CASH<1,II,J> * (-1)
                      END
                      IF SOR.HOLD.MISC<1,II,J> + 0 # 0 THEN
                          DC.AMT<1,PC,J> = SOR.HOLD.MISC<1,II,J> * (-1)
                          DC.ACCT<1,PC,J> = SOR.HOLD.ACCT<1,II,J>
                      END
                      DC.DIV<1,PC,J> = SOR.DIV<1,II,J>
                      DC.DEPT<1,PC,J> = SOR.DEPT<1,II,J>
                      DC.CCTR<1,PC,J> = SOR.CCTR<1,II,J>
                  END
              NEXT J
*
          END ELSE
              DC.DIV<1,PC> = SOR.DIV<1,II>
              DC.DEPT<1,PC> = SOR.DEPT<1,II>
              DC.CCTR<1,PC> = SOR.CCTR<1,II>
              DC.AMT<1,PC> = SOR.MISC.AMT<1,II> * (-1)
              DC.ACCT<1,PC> = SOR.GL.ACCT<1,II>
          END
      END
  NEXT II

  IF SOR.PAY.FLG # "" THEN ;* EXECUTED
      	CUST.LAST.PMT = ""
      	CUST.DAYS.TO.PAY = CUST.DAYS.TO.PAY - DAYS
      	CUST.INVOICE.CNT<1,2> = CUST.INVOICE.CNT<1,2> - ICNT
      	MATWRITE CUST.REC ON CUSTOMER , CONO:CUST_NO ;*EXECUTED
      	DC.CASH = SOR.CH.AMT * (-1)
      	DC.BANK.ACCT = SOR.GLTB.CASH
      	DC.CHECK = SOR.CH.NUM
      	DC.TYPE = "R"
     	REF.NUM = 0
     	MORE = 1
     	LOOP
       	REF.NUM = REF.NUM + 1
         	DC.KEY = CUST_NO:"!":REC_DATE:"!":REF.NUM
         	READU DC FROM DAILY.CASH , CONO:DC.KEY ELSE
             		MORE = 0
         	END
         	IF MORE = 1 THEN
             		RELEASE DAILY.CASH , CONO:DC.KEY
         	END
     	WHILE MORE DO REPEAT
     	*DC.KEY = ID
     
     	MATWRITE DC.REC ON DAILY.CASH , CONO:DC.KEY ;* EXECUTED
      	TAG = ''
      	WRITE TAG ON DAILY.CASH.TAG , CONO:DC.KEY
      	CHR.CASH = DC.CASH
      	CHR.INVOICE = DC.INVOICE
      	CHR.CASH.APPL = DC.CASH.APPL
      	CHR.GL.AMT = DC.AMT
      	CHR.GL.NO = DC.ACCT
      	CHR.MISC.DESC = DC.DESC
      	CHR.BANK.NO = DC.BANK.ACCT
      	DIV.CODE = DC.DIV<1,1>
      	IF SECURITY.REC<1> = "Y" AND SECURITY.REC<2> = "Y" THEN
       	LOCATE DIV.CODE IN DIVISION.REC<1>,1 SETTING POS ELSE POS = 1
      	END ELSE
       	POS = 1
      	END
      	PRD = ARCMON<1,POS>
      	CHR.MON = PRD
      	CHR.DIV = DC.DIV
      	CHR.DEPT = DC.DEPT
      	CHR.CCTR = DC.CCTR
      	CHR.TYPE = DC.TYPE
      	MATWRITE CHR.REC ON CASH.HIST, CONO:CUST_NO:"!":REC_DATE:"!":SOR.CH.NUM:"!":REF.NUM
  END
  GOTO 99999

93000
IF ERRMSG THEN
  *CALL RBO_ERROR_SUB(ERRMSG)
  STATUS = RBO.setProperty('', 'ServerStatus', 1)
  STATUS = RBO.setProperty('', 'ServerMessage', ERRMSG)
END
99999 RETURN
