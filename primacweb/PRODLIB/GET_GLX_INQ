SUBROUTINE GET_GLX_INQ
********************************************************************************
*   Program name :- GET_GLX_INQ
*   Created:- 12/9/2002
*------------------------------------------------------------------------------*
*
* In Properties:
* --------------
* ID,PERIOD,ACCT,DIV,DEPT,CCTR
*
* Out Properties:
* ---------------
* GLM_SRC,GLM_AMT,GLM_DESC,GLM_DATE,GLM_REF,CB_OPN,CB_DEBITS,CB_CREDITS,CB_OPNVAL
********************************************************************************
$INCLUDE WWINSERT RBO.H

* Insert method code here
$INCLUDE PMC.CPYLIB COMPANY
$INCLUDE PMC.CPYLIB DIVISION
$INCLUDE PMC.CPYLIB DEPARTMENT
$INCLUDE PMC.CPYLIB COST.CNTR
$INCLUDE GLS.CPYLIB GLX
$INCLUDE GLS.CPYLIB GLM
$INCLUDE GLS.CPYLIB COA.BAL
$INCLUDE GLS.CPYLIB ACCT.TYPE
$INCLUDE GLS.CPYLIB ACCT.CATG
$INCLUDE GLS.CPYLIB ACCT.SUB.CATG
$INCLUDE GLS.CPYLIB CATG.AND.SUB
$INCLUDE GLS.CPYLIB GLX
$INCLUDE CPYLIB CHAR

* Open files
ERRMSG = ''
CALL RBO_OPEN_FILE('GLX',GLX,ERRMSG)
CALL RBO_OPEN_FILE('GLM',GLM.FILE,ERRMSG)
CALL RBO_OPEN_FILE('GLA',GLA.FILE,ERRMSG)
CALL RBO_OPEN_FILE('DIVISION',DIVISION,ERRMSG)
CALL RBO_OPEN_FILE('DEPARTMENT',DEPARTMENT,ERRMSG)
CALL RBO_OPEN_FILE('COST.CNTR',COST.CNTR,ERRMSG)
CALL RBO_OPEN_FILE('CO.COA.BAL',CO.COA.BAL,ERRMSG)
CALL RBO_OPEN_FILE('CC.COA.BAL',CC.COA.BAL,ERRMSG)
CALL RBO_OPEN_FILE('DP.COA.BAL',DP.COA.BAL,ERRMSG)
CALL RBO_OPEN_FILE('DV.COA.BAL',DV.COA.BAL,ERRMSG)
CALL RBO_OPEN_FILE('CONTROL',CONTROL,ERRMSG)
CALL RBO_OPEN_FILE('COMPANY',COMPANY,ERRMSG)
IF ERRMSG THEN
  CALL RBO_ERROR_SUB(ERRMSG)
  RETURN
END

* Get properties
STATUS = RBO.getProperty('','ID',ID)
STATUS = RBO.getProperty('','PERIOD',PERIOD)
STATUS = RBO.getProperty('','ACCT',ACCT)
STATUS = RBO.getProperty('','DIV',DIV)
STATUS = RBO.getProperty('','DEPT',DEPT)
STATUS = RBO.getProperty('','CCTR',CCTR)

* Initialize variables
ALL.DIV   = ''
GEN.DIV   = '00'
ALL.DEPT  = ''
GEN.DEPT  = '00'
ALL.CCTR  = ''
GEN.CCTR  = '000'
LINE.CODE = ''
LINE.ID   = ''

* Get CONO
CONO = ID[1,3]
MATREAD COMP.REC FROM COMPANY, CONO ELSE
  ERRMSG = 'Invalid Company ID (':CONO:').'
  CALL RBO_ERROR_SUB(ERRMSG); RETURN
END

* Get period
READ FISCAL.REC FROM CONTROL, CONO : 'FISCAL' ELSE FISCAL.REC = ''
READ PERIOD.REC FROM CONTROL, CONO : 'ACCT.PERIODS' ELSE 
  PERIOD.REC = ''
  PERIOD.REC<1> = 12
END
NUM.PERIODS = PERIOD.REC<1>
SEL.PERIOD = FISCAL.REC<1>

IF PERIOD THEN SEL.PERIOD = PERIOD

IF SEL.PERIOD # FISCAL.REC<1> THEN
  GLM = GLA.FILE
END ELSE
  GLM = GLM.FILE
END
YR.OFFSET = (SEL.PERIOD[1,4] - FISCAL.REC<1>[1,4]) * NUM.PERIODS
PER.OFFSET = SEL.PERIOD[5,2] + YR.OFFSET
OPN = CB.OPN + PER.OFFSET

IF PERIOD[5,2] = NUM.PERIODS THEN
  OPNVAL = 55
END ELSE
  OPNVAL = OPN+1
END

IN.ACCT.LEN = LEN(CO.ACCT.PIC)
BASE.LEN = FIELD(CO.ACCT.STRUC,"-",1)
IF NOT(NUM(BASE.LEN)) OR BASE.LEN > IN.ACCT.LEN THEN
  ERRMSG = 'Error in the account structure.'
  CALL RBO_ERROR_SUB(ERRMSG); RETURN
END

* Initialize properties
GLM_SRC  = ''
GLM_AMT  = ''
GLM_DESC = ''
GLM_DATE = ''
GLM_REF  = ''
CB_OPN     = ''
CB_DEBITS  = ''
CB_CREDITS = ''
CB_OPNVAL  = ''
SELID = CONO:ACCT
* Call the required subroutines
GOSUB GET_BALANCES
GOSUB GET_GLM

* Set properties
STATUS = RBO.setProperty('','GLM_SRC',GLM_SRC)
STATUS = RBO.setProperty('','GLM_AMT',GLM_AMT)
STATUS = RBO.setProperty('','GLM_DESC',GLM_DESC)
STATUS = RBO.setProperty('','GLM_DATE',GLM_DATE)
STATUS = RBO.setProperty('','GLM_REF',GLM_REF)
STATUS = RBO.setProperty('','CB_OPN',CB_OPN)
STATUS = RBO.setProperty('','CB_DEBITS',CB_DEBITS)
STATUS = RBO.setProperty('','CB_CREDITS',CB_CREDITS)
STATUS = RBO.setProperty('','CB_OPNVAL',CB_OPNVAL)
STATUS = RBO.setProperty('','GLM_LineItems',LOWER(LINE.ID))

*commented 


* End of method code
RETURN

GET.ALL.DIV:
  	IF PERIOD = SEL.PERIOD THEN
    		READ ALL.DIV FROM GLX, CONO : ACCT ELSE ALL.DIV = ""
  	END ELSE
    		SELID = CONO:ACCT
    		STMT = 'SSELECT GLA WITH CONO_ACCT = ' : QUOTE(SELID)
    		STMT:= ' AND WITH PERIOD = ' : QUOTE(SEL.PERIOD)
    		UDTEXECUTE STMT CAPTURING CAP RETURNING RET
    		ALL.DIV = ''; LCD.CT = 1
    		LOOP
    			READNEXT GLAID ELSE EXIT
    			LOCATE GLAID[4,2] IN ALL.DIV,1 SETTING DFND ELSE
      				ALL.DIV<LCD.CT> = GLAID[4,2]
      				LCD.CT = LCD.CT + 1
    			END
  		REPEAT
	END
RETURN

GET.ALL.DEPT: 
	IF PERIOD = SEL.PERIOD THEN
      		READ ALL.DEPT FROM GLX, CONO : DIV : ACCT ELSE ALL.DEPT = ""
    	END ELSE
      		SELID = CONO:DIV:ACCT
		STMT = 'SSELECT GLA WITH CONO_DV_ACCT = ' : QUOTE(SELID)
  		STMT:= ' AND WITH PERIOD = ' : QUOTE(SEL.PERIOD)
  		UDTEXECUTE STMT CAPTURING CAP RETURNING RET
  		ALL.DEPT = ''; LCD.CT = 1
  		LOOP
    			READNEXT GLAID ELSE EXIT
    			LOCATE GLAID[6,2] IN ALL.DEPT,1 SETTING DFND ELSE
      				ALL.DEPT<LCD.CT> = GLAID[6,2]
      				LCD.CT = LCD.CT + 1
    			END
  		REPEAT
	END
RETURN

GET.ALL.CCTR:
	IF SEL.PERIOD = PERIOD THEN
      		READ ALL.CCTR FROM GLX, CONO : DIV : DEPT : ACCT ELSE ALL.CCTR = ""
    	END ELSE
      		SELID = CONO:DIV:DEPT:ACCT
		STMT = 'SSELECT GLA WITH CONO_DV_DP_ACCT = ' : QUOTE(SELID)
  		STMT:= ' AND WITH PERIOD = ' : QUOTE(SEL.PERIOD)
  		UDTEXECUTE STMT CAPTURING CAP RETURNING RET
  		ALL.CCTR = ''; LCD.CT = 1
  		LOOP
    			READNEXT GLAID ELSE EXIT
    			LOCATE GLAID[8,3] IN ALL.CCTR,1 SETTING DFND ELSE
			      ALL.CCTR<LCD.CT> = GLAID[8,3]
			      LCD.CT = LCD.CT + 1
		    	END
  		REPEAT
	END
RETURN

GET_BALANCES:
  MATREAD CB.REC FROM CO.COA.BAL, CONO : ACCT ELSE MAT CB.REC = ''
  GOSUB GET.ALL.DIV
  IF SEL.PERIOD = FISCAL.REC<1> THEN
    CB_OPN     = OCONV(CB.REC(OPN), "MD2Z,<")
    CB_DEBITS  = OCONV(CB.DEBITS, "MD2Z,")
    CB_CREDITS = OCONV(CB.CREDITS, "MD2Z,")
    CB_OPNVAL  = OCONV(CB.REC(OPNVAL), "MD2Z,<")
  END
  BEGIN CASE
    CASE DIV = 'S'
      LINE.ID = ''
      LN = 0
      DVCNT = DCOUNT(ALL.DIV,AM)
      FOR DV = 1 TO DVCNT
        DIV = ALL.DIV<DV>
        IF SEL.PERIOD = FISCAL.REC<1> THEN
          READ ALL.DEPT FROM GLX, CONO : DIV : ACCT ELSE ALL.DEPT = ''
        END ELSE
          SELID = CONO : DIV : ACCT
          GOSUB GET.ALL.DEPT
        END
        DPCNT = DCOUNT(ALL.DEPT,AM)
        FOR DP = 1 TO DPCNT
          DEPT = ALL.DEPT<DP>
          IF SEL.PERIOD = FISCAL.REC<1> THEN
            READ ALL.CCTR FROM GLX, CONO : DIV : DEPT : ACCT ELSE ALL.CCTR = ''
          END ELSE
            SELID = CONO : DIV : DEPT : ACCT
            GOSUB GET.ALL.CCTR
          END
          CCCNT = DCOUNT(ALL.CCTR,AM)
          FOR CC = 1 TO CCCNT
            CCTR = ALL.CCTR<CC>
            IF SEL.PERIOD = FISCAL.REC<1> THEN
              READ LINE.CODE FROM GLX, CONO : DIV : DEPT : CCTR : ACCT ELSE LINE.CODE = ''
            END ELSE
              SELID = CONO : DIV : DEPT : CCTR : ACCT
              GOSUB BUILD.LINE.CODE
            END
            SSCNT = DCOUNT(LINE.CODE,AM)
            FOR SS = 1 TO SSCNT
              LINE.ID.TMP = DIV : DEPT : CCTR : ACCT : LINE.CODE<SS>
              MATREAD GLM.REC FROM GLM, CONO:LINE.ID.TMP ELSE MAT GLM.REC = ''
              IF GLM.MON = SEL.PERIOD THEN
                LN = LN + 1
                LINE.ID<LN> = LINE.ID.TMP
              END
            NEXT SS
          NEXT CC
        NEXT DP
      NEXT DV
    CASE DEPT = 'S'
      MATREAD CB.REC FROM DV.COA.BAL, CONO : DIV : ACCT ELSE MAT CB.REC = ''
      IF SEL.PERIOD = FISCAL.REC<1> THEN
        CB_OPN<1,2>     = OCONV(CB.REC(OPN), "MD2Z,<")
         CB_DEBITS<1,2>  = OCONV(CB.DEBITS, "MD2Z,")
        CB_CREDITS<1,2> = OCONV(CB.CREDITS, "MD2Z,")
        CB_OPNVAL<1,2>  = OCONV(CB.REC(OPNVAL), "MD2Z,<")
       END
      LINE.ID = ''
      LN = 0
	GOSUB GET.ALL.DEPT
      DPCNT = DCOUNT(ALL.DEPT,AM)
      FOR DP = 1 TO DPCNT
        DEPT = ALL.DEPT<DP>
        IF SEL.PERIOD = FISCAL.REC<1> THEN
          READ ALL.CCTR FROM GLX, CONO : DIV : DEPT : ACCT ELSE ALL.CCTR = ''
        END ELSE
          SELID = CONO : DIV : DEPT : ACCT
          GOSUB GET.ALL.CCTR
        END
        CCCNT = DCOUNT(ALL.CCTR,AM)
        FOR CC = 1 TO CCCNT
          CCTR = ALL.CCTR<CC>
          IF SEL.PERIOD = FISCAL.REC<1> THEN
            READ LINE.CODE FROM GLX, CONO : DIV : DEPT : CCTR : ACCT ELSE LINE.CODE = ''
          END ELSE
            SELID = CONO : DIV : DEPT : CCTR : ACCT
            GOSUB BUILD.LINE.CODE
          END
          SSCNT = DCOUNT(LINE.CODE,AM)
          FOR SS = 1 TO SSCNT
            LINE.ID.TMP = DIV : DEPT : CCTR : ACCT : LINE.CODE<SS>
            MATREAD GLM.REC FROM GLM, CONO : LINE.ID.TMP ELSE MAT GLM.REC = ''
            IF GLM.MON = SEL.PERIOD THEN
              LN = LN + 1
              LINE.ID<LN> = LINE.ID.TMP
            END
          NEXT SS
        NEXT CC
      NEXT DP
    CASE CCTR = 'S'
      MATREAD CB.REC FROM DV.COA.BAL, CONO : DIV : ACCT ELSE MAT CB.REC = ''
      IF SEL.PERIOD = FISCAL.REC<1> THEN
       CB_OPN<1,2>     = OCONV(CB.REC(OPN), "MD2Z,<")
        CB_DEBITS<1,2>  = OCONV(CB.DEBITS, "MD2Z,")
        CB_CREDITS<1,2> = OCONV(CB.CREDITS, "MD2Z,")
        CB_OPNVAL<1,2>  = OCONV(CB.REC(OPNVAL), "MD2Z,<")
      END
      MATREAD CB.REC FROM DP.COA.BAL, CONO : DIV : DEPT : ACCT ELSE MAT CB.REC = ''
      IF SEL.PERIOD = FISCAL.REC<1> THEN
        CB_OPN<1,3>     = OCONV(CB.REC(OPN), "MD2Z,<")
        CB_DEBITS<1,3>  = OCONV(CB.DEBITS, "MD2Z,")
        CB_CREDITS<1,3> = OCONV(CB.CREDITS, "MD2Z,")
        CB_OPNVAL<1,3>  = OCONV(CB.REC(OPNVAL), "MD2Z,<")
      END
      LINE.ID = ''
      LN = 0
      GOSUB GET.ALL.CCTR
      CCCNT = DCOUNT(ALL.CCTR,AM)
      FOR CC = 1 TO CCCNT
        CCTR = ALL.CCTR<CC>
        IF SEL.PERIOD = FISCAL.REC<1> THEN
          READ LINE.CODE FROM GLX, CONO : DIV : DEPT : CCTR : ACCT ELSE LINE.CODE = ''
        END ELSE
          SELID = CONO : DIV : DEPT : CCTR : ACCT
          GOSUB BUILD.LINE.CODE
        END
        SSCNT = DCOUNT(LINE.CODE,AM)
        FOR SS = 1 TO SSCNT
          LINE.ID.TMP = DIV : DEPT : CCTR : ACCT : LINE.CODE<SS>
          MATREAD GLM.REC FROM GLM, CONO : LINE.ID.TMP ELSE MAT GLM.REC = ''
          IF GLM.MON = SEL.PERIOD THEN
            LN = LN + 1
            LINE.ID<LN> = LINE.ID.TMP
          END
        NEXT SS
      NEXT CC
    CASE 1
      MATREAD CB.REC FROM DV.COA.BAL, CONO : DIV : ACCT ELSE MAT CB.REC = ''
      IF SEL.PERIOD = FISCAL.REC<1> THEN
        CB_OPN<1,2> = OCONV(CB.REC(OPN), "MD2Z,<")
        CB_DEBITS<1,2> = OCONV(CB.DEBITS, "MD2Z,")
        CB_CREDITS<1,2> = OCONV(CB.CREDITS, "MD2Z,")
        CB_OPNVAL<1,2> = OCONV(CB.REC(OPNVAL), "MD2Z,<")

      END
      MATREAD CB.REC FROM DP.COA.BAL, CONO : DIV : DEPT : ACCT ELSE MAT CB.REC = ''
      IF SEL.PERIOD = FISCAL.REC<1> THEN
        CB_OPN<1,3>     = OCONV(CB.REC(OPN), "MD2Z,<")
        CB_DEBITS<1,3>  = OCONV(CB.DEBITS, "MD2Z,")
        CB_CREDITS<1,3> = OCONV(CB.CREDITS, "MD2Z,")
        CB_OPNVAL<1,3>  = OCONV(CB.REC(OPNVAL), "MD2Z,<")
      END
      MATREAD CB.REC FROM CC.COA.BAL, CONO : DIV : DEPT : CCTR : ACCT ELSE MAT CB.REC = ''
      IF SEL.PERIOD = FISCAL.REC<1> THEN
        CB_OPN<1,4>     = OCONV(CB.REC(OPN), "MD2Z,<")
        CB_DEBITS<1,4>  = OCONV(CB.DEBITS, "MD2Z,")
        CB_CREDITS<1,4> = OCONV(CB.CREDITS, "MD2Z,")
        CB_OPNVAL<1,4>  = OCONV(CB.REC(OPNVAL), "MD2Z,<")
      END
      IF SEL.PERIOD = FISCAL.REC<1> THEN
        READ LINE.CODE FROM GLX, CONO : DIV : DEPT : CCTR : ACCT ELSE LINE.CODE = ''
      END ELSE
        SELID = CONO : DIV : DEPT : CCTR : ACCT
        GOSUB BUILD.LINE.CODE
      END
      LINES = DCOUNT(LINE.CODE,AM)
      LINE.ID = ''
      LNI = 0
      FOR LN = 1 TO LINES
        LINE.ID.TMP = DIV : DEPT : CCTR : ACCT : LINE.CODE<LN>
        MATREAD GLM.REC FROM GLM, CONO : LINE.ID.TMP ELSE MAT GLM.REC = ''
        IF GLM.MON = SEL.PERIOD THEN
          LNI = LNI + 1
          LINE.ID<LNI> = LINE.ID.TMP
        END
      NEXT LN
  END CASE
RETURN



GET_GLM:
  FOR N = 1 TO DCOUNT(LINE.ID,AM)
    	MATREAD GLM.REC FROM GLM, CONO : LINE.ID<N> ELSE
      		MAT GLM.REC = ''
      		GLM.DESC = LINE.ID<N>
  	END
	GLM_DESC<1,N> = GLM.DESC
    	GLM_DATE<1,N> = OCONV(GLM.DATE, "D2/")
    	GLM_SRC<1,N>  = GLM.SRC
    	GLM_REF<1,N>  = GLM.REF
    	GLM_AMT<1,N>  = OCONV(GLM.AMT, "MD2Z,<")
  NEXT N
RETURN

BUILD.LINE.CODE: 
  STMT = 'SELECT GLA WITH @ID = ' : QUOTE(SELID:']') : ' AND WITH PERIOD = ' : QUOTE(SEL.PERIOD)
  UDTEXECUTE STMT CAPTURING CAP RETURNING RET
  LINE.CODE = ''; LCD.CT = 1
  LOOP
    READNEXT GLAID ELSE EXIT
    LINE.CODE<LCD.CT> = GLAID[11+IN.ACCT.LEN,6]
    LCD.CT = LCD.CT + 1
  REPEAT
RETURN
