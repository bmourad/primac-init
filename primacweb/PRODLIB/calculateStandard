SUBROUTINE calculateStandard
********************************************************************************
*   Program name :- calculateStandard
*   Created:- 5/30/2006
*------------------------------------------------------------------------------*
$INCLUDE WWINSERT RBO.H
$INCLUDE JES.CPYLIB ESTIMATE
$INCLUDE JES.CPYLIB ESTIMATE.TEMP
$INCLUDE JES.CPYLIB ESTIMATE.RES
$INCLUDE JES.CPYLIB ESTIMATE.MARKUP
$INCLUDE JCS.CPYLIB FOH.TABLE
$INCLUDE PMC.CPYLIB COST.CNTR
$INCLUDE JCS.CPYLIB OPERATION
$INCLUDE JES.CPYLIB EQUIPMENT
$INCLUDE JES.CPYLIB ESTIMATE.MATL
$INCLUDE JCS.CPYLIB CATEGORY.OSP
$INCLUDE PMC.CPYLIB COMPANY
$INCLUDE PMC.CPYLIB VEND
$INCLUDE PMC.CPYLIB CUSTOMER
$INCLUDE CPYLIB FILE.VARS
$INCLUDE JES.CPYLIB JES.FILE.VARS
$INCLUDE CPYLIB CHAR
*
*---- INITIALIZATION
*
OPEN "","CONTROL" TO CONTROL ELSE
     ERRMSG="PROBLEM IN CONTROL FILE"
END

OPEN "","COST.CNTR" TO COST.CNTR ELSE
     ERRMSG="PROBLEM IN COST.CNTR FILE"
END

OPEN "","OPERATION" TO OPERATION ELSE
     ERRMSG="PROBLEM IN OPERATION FILE"
END

OPEN "","EQUIPMENT" TO EQUIPMENT ELSE
     ERRMSG="PROBLEM IN EQUIPMENT FILE"
END

OPEN "","ESTIMATE.MATL" TO ESTIMATE.MATL ELSE
     ERRMSG="PROBLEM IN ESTIMATE.MATL FILE"
END

OPEN "","VEND" TO VEND ELSE
     ERRMSG="PROBLEM IN VEND FILE"
END
OPEN "","FOH.TABLE" TO FOH.TABLE ELSE
     ERRMSG="PROBLEM IN FOH.TABLE FILE"
END
OPEN "","CATEGORY.OSP" TO CATEGORY.OSP ELSE
     ERRMSG="PROBLEM IN CATEGORY.OSP FILE"
END
OPEN "","ESTIMATE.MARKUP" TO ESTIMATE.MARKUP ELSE
     ERRMSG="PROBLEM IN ESTIMATE.MARKUP FILE"
END
OPEN "","COMPANY" TO COMPANY ELSE
     ERRMSG="PROBLEM IN COMPANY FILE"
END
OPEN "","CUSTOMER" TO CUSTOMER ELSE
     ERRMSG="PROBLEM IN CUSTOMER FILE"
END   
  

EST.RL.PP=''; TEMP.IND='';TEMP.IND.1=''; TEMP.IND.2=''; TEMP.IND.3=''; TEMP.IND.4=''
EST.RL.PP.INCLUDE=''; EST.RL.DIE.REPEAT=''; EST.RL.DIE.NO.ACR=''; EST.CUST='';EST.MARKUP='';EST.DEPT=''
CHECK.MARKUPS=0; DUP.FLAG=0

STATUS=RBO.getProperty('','PMCProperty',PMCProperty)
STATUS=RBO.getProperty('','standValue',INPUTDATA)

TEMP.TYPE=FIELD(INPUTDATA,"!",1)
DPTR=FIELD(INPUTDATA,"!",2)
EQTY=FIELD(INPUTDATA,"!",3)
TEMP.QTY=FIELD(INPUTDATA,"!",4)
TEMP.FCTR=FIELD(INPUTDATA,"!",5)
TEMP.STD=FIELD(INPUTDATA,"!",6)
CCTR.VAL=FIELD(INPUTDATA,"!",7)
OPER.VAL=FIELD(INPUTDATA,"!",8)
CODE.VAL=FIELD(INPUTDATA,"!",9)
EST.RL.DIE.REPEAT<1,1,1>=FIELD(INPUTDATA,"!",10)
EST.RL.DIE.NO.ACR<1,1,1>=FIELD(INPUTDATA,"!",11)
EST.RL.PP.INCLUDE=FIELD(INPUTDATA,"!",12)
EST.CUST=FIELD(INPUTDATA,"!",13)
CONO=PMCProperty<1,4>
 
*
*---- MAIN PROCESSING
*
	  READ EST.RL.PP FROM CONTROL,CONO:'EST.RES.PRE.PRESS' ELSE EST.RL.PP = ''
	  MATREAD COMP.REC FROM COMPANY,CONO ELSE
            ERRMSG="ERROR IN COMPANY FILE READING"
            GOTO 90000
         END
	  MATREAD CUST.REC FROM CUSTOMER,CONO:EST.CUST ELSE
            ERRMSG="Invalid customer. Try again! "
            GOTO 90000 
         END
         MATREAD CCTR.REC FROM COST.CNTR,CONO:CCTR.VAL ELSE
            ERRMSG="Invalid Cost Center. Try again! "
            GOTO 90000
         END
         MATREAD EQUIPMENT.REC FROM EQUIPMENT,CONO:CCTR.VAL ELSE
            MAT EQUIPMENT.REC=""
         END
	  IF NOT(DUP.FLAG) THEN 
	      FOR M=1 TO 6
	         IF CHECK.MARKUPS = 1 AND EST.CUST#'P' THEN
	            EST.MARKUP<1,M>=CUST.EST.MARKUP<1,M>
	         END ELSE
	            EST.MARKUP<1,M>=CO.JES.PARAM<1,M>
	         END
	 	NEXT M
	  END
         BEGIN CASE
		CASE TEMP.TYPE[1,1]="L" OR TEMP.TYPE[1,1]="S" OR TEMP.TYPE[1,1]="O"	
	            LOCATE OPER.VAL IN CCTR.OPER<1>,1 SETTING OP.PTR ELSE
             	       ERRMSG="Invalid operation for specified cost center. Try again! "
	              GOTO 90000
         	     END
         	     MATREAD OPER.REC FROM OPERATION,CONO:OPER.VAL ELSE
             		ERRMSG="Cannot locate selected operation. Try again! "
             		GOTO 90000
         	     END
  	            TEMP.OPV=OPER.VAL
       	     TEMP.OPV.TYPE=CCTR.OPER.TYPE<1,OP.PTR>
	            IF CCTR.OPER.STD.IMP<1,OP.PTR>+0=0 THEN TEMP.OPV.TYPE="F"
	   *        TEMP.FCTR=1000
		     IF TEMP.STD+0=0 THEN TEMP.STD=""
         	     TEMP.RATE=CCTR.OPER.HR.RATE<1,OP.PTR>
		     TEMP.IND.1=CCTR.FOH.TYPE<1,1>:CCTR.FOH.PCT<1,1>
		     TEMP.IND.2=CCTR.FOH.TYPE<1,2>:CCTR.FOH.PCT<1,2>
	            TEMP.IND.3=CCTR.FOH.TYPE<1,3>:CCTR.FOH.PCT<1,3>
	            TEMP.IND.4=CCTR.FOH.TYPE<1,4>:CCTR.FOH.PCT<1,4>
		     TEMP.MARKUP=CCTR.OPER.MARKUP<1,OP.PTR>
        	     TEMP.DESC=OPER.DESC	
		CASE TEMP.TYPE[1,1] = "M"
		     MATREAD ESTM.REC FROM ESTIMATE.MATL,CONO:TEMP.TYPE[2,1] ELSE
        		    MAT ESTM.REC=""
		     END	
		     LOCATE OPER.VAL IN ESTM.PROD<1>,1 SETTING MT.PTR ELSE
              	    ERRMSG="Invalid material ID. Try again! "
                 	    GOTO 90000
                   END
                   TEMP.OPV=OPER.VAL
                   TEMP.FCTR=1000
                   TEMP.STD=ESTM.COST<1,MT.PTR>/100
                   BEGIN CASE
	                  CASE TEMP.TYPE="MS"
	                     TEMP.STD.TYPE="$/SQM"
	                     TEMP.UM=1000
	                     TEMP.IND.1=ESTM.FOH.PCT<1,MT.PTR>
	                     TEMP.MARKUP=ESTM.MARKUP<1,MT.PTR>
	                  CASE TEMP.TYPE="MR"
	                     TEMP.STD.TYPE="$/SQM"
	                     TEMP.UM=1000
	                     TEMP.IND.1=ESTM.FOH.PCT<1,MT.PTR>
	                     TEMP.MARKUP=ESTM.MARKUP<1,MT.PTR>
	                  CASE 1
	                     TEMP.STD.TYPE="$/":ESTM.UM<1,MT.PTR>
	                     TEMP.UM=ESTM.COST.UNIT<1,MT.PTR>
	                     TEMP.IND.1=ESTM.FOH.PCT<1,MT.PTR>
	                     TEMP.MARKUP=ESTM.MARKUP<1,MT.PTR>
                   END CASE
 
		CASE TEMP.TYPE[1,1] = "P"
			MATREAD VEND.REC FROM VEND,CONO:OPER.VAL ELSE
              	  ERRMSG="Invalid Vendor ID. Try again! "
	                GOSUB 90000
            		END
         
         		TEMP.OPV=OPER.VAL
		     *  TEMP.FCTR=1000
		      BEGIN CASE
		            CASE TEMP.TYPE="PM"
              		 TEMP.STD.TYPE="$/M"
		               TEMP.UM=1000
        		     CASE TEMP.TYPE="PC"
		               TEMP.STD.TYPE="$/C"
            			 TEMP.UM=100
		           CASE TEMP.TYPE="PT"
		               TEMP.STD.TYPE="$/TTL"
         		        TEMP.UM=1
		           CASE 1
		               TEMP.STD.TYPE="$/EA"
        		        TEMP.UM=1
		      END CASE
		      MATREAD CAOS.REC FROM CATEGORY.OSP,CONO:CODE.VAL ELSE
       		     ERRMSG="Invalid O/P category code. Try again! "
		            GOTO 90000
          	      END
		      TEMP.CODE=CODE.VAL
		      TEMP.IND.1=CAOS.FOH.PCT
		      TEMP.MARKUP=CAOS.MARKUP
 	  END CASE	      

100*
         BEGIN CASE
         CASE TEMP.TYPE[1,1] = "L"
            IF TEMP.OPV.TYPE = "F" THEN
*T26228 v
              IF TEMP.GRP.QPARAM = '866' OR TEMP.GRP.QPARAM = '870' THEN
                TEMP.HRS = TEMP.QTY*TEMP.FCTR/10
              END ELSE
                TEMP.HRS = INT(TEMP.QTY*TEMP.FCTR*TEMP.STD/10+0.5)
              END
*T26228 ^
            END ELSE
               BEGIN CASE
               CASE 1
                  TEMP.HRS = INT(TEMP.QTY/(TEMP.FCTR/1000*TEMP.STD)*100+0.5)
               END CASE
            END
            TEMP.DCOST = INT(TEMP.HRS*TEMP.RATE/100+0.5)
            BASE.COST = TEMP.RATE
         CASE TEMP.TYPE = "PT"
            IF TEMP.UM+0 = 0 THEN TEMP.UM = 1
            TEMP.DCOST = INT((TEMP.FCTR/1000)*(TEMP.STD*100)+0.5)
            BASE.COST = TEMP.DCOST
          CASE TEMP.TYPE='MR'
            IF TEMP.UM+0=0 THEN TEMP.UM=1
            TEMP.DCOST=INT((TEMP.QTY/TEMP.UM)*(TEMP.FCTR/1000)*(TEMP.STD*100)+0.5)
            BASE.COST=TEMP.DCOST
*T26447 ^
         CASE 1
	     IF TEMP.UM+0 = 0 THEN TEMP.UM = 1
            TEMP.DCOST = INT((TEMP.QTY/TEMP.UM)*(TEMP.FCTR/1000)*(TEMP.STD*100)+0.5)
            BASE.COST = TEMP.DCOST
         END CASE

         IND.COST = 0
         FOR TI = 1 TO 4
            BEGIN CASE
             CASE TI = 1
               TEMP.IND = TEMP.IND.1
             CASE TI = 2
               TEMP.IND = TEMP.IND.2
             CASE TI = 3
               TEMP.IND = TEMP.IND.3
             CASE TI = 4
               TEMP.IND = TEMP.IND.4
            END CASE
		
            BEGIN CASE
		     CASE TEMP.IND = ""
	            CASE TEMP.IND[1,1] = "$"
	               IND.AMT = TEMP.IND[2,99]
	               IND.COST = IND.COST+IND.AMT
	            CASE TEMP.IND[1,1] = "%" OR NUM(TEMP.IND)
	               IF TEMP.IND[1,1] = "%" THEN IND.PCT = TEMP.IND[2,99] ELSE IND.PCT = TEMP.IND
	               IND.COST = IND.COST+INT(BASE.COST*(IND.PCT/10000)+0.5)
	            CASE 1
	               MATREAD FTR.REC FROM FOH.TABLE, CONO:TEMP.IND ELSE
	                  MAT FTR.REC = ""
	               END
	               LOCATE BASE.COST IN FTR.QTY<1>,1 BY "AR" SETTING FP ELSE NULL
	               IF FP > COUNT(FTR.QTY,VM) + 1 THEN FP = COUNT(FTR.QTY,VM) + 1
	               IF FTR.TYPE = "$" THEN
	                  IND.COST = IND.COST+FTR.PCT<1,FP>
	               END ELSE
	                  IND.COST = IND.COST+INT(BASE.COST*(FTR.PCT<1,FP>/10000)+0.5)
	               END
            END CASE
         NEXT TI

         BEGIN CASE
	         CASE TEMP.TYPE[1,1] = "L"
	            TEMP.COST = INT(TEMP.HRS*(TEMP.RATE+IND.COST)/100+0.5)
	         CASE 1
	            TEMP.COST = TEMP.DCOST+IND.COST
         END CASE
         IF EST.RL.PP.INCLUDE#'Y' THEN
	         LOCATE EST.DEPT<1,DPTR> IN EST.RL.PP<1>,1 SETTING DPOS THEN
	            TEMP.SALE = 0
	            TEMP.TSALE = 0
		  STATUS=RBO.setProperty('','standRetValue',OCONV(TEMP.TSALE,'MD2'):"$":TEMP.DCOST:"$":TEMP.COST:"$":TEMP.SALE:"$":TEMP.HRS) 	
	            GOTO 99999
	         END
         END
         TEMP.SALE = TEMP.COST
*
*--- Calculate Markups to Apply
*
         BEGIN CASE
         CASE NUM(TEMP.MARKUP)
            TEMP.SALE = TEMP.SALE+INT(TEMP.COST*(TEMP.MARKUP/10000)+0.5)
	  CASE 1
            MATREAD MKU.REC FROM ESTIMATE.MARKUP, CONO:TEMP.MARKUP ELSE
               MAT MKU.REC = ""
            END
            LOCATE TEMP.COST IN MKU.QTY<1>,1 BY "AR" SETTING FP ELSE NULL
            IF FP > COUNT(MKU.QTY,VM) + 1 THEN FP = COUNT(MKU.QTY,VM) + 1
            TEMP.SALE = TEMP.SALE+INT(TEMP.COST*(MKU.PCT<1,FP>/10000)+0.5)
         END CASE
*
* Use RUN Lineal Metres to Find Markup%
*
      IF EST.RL.DIE.REPEAT<1,1,1>+0 > 0 THEN
         LINEAL.RUN=EQTY/1000*(EST.RL.DIE.REPEAT<1,1,1>/10000)
         LINEAL.RUN=LINEAL.RUN/EST.RL.DIE.NO.ACR<1,1,1>
         LINEAL.RUN=INT(LINEAL.RUN*100)
      END ELSE
         LINEAL.RUN = 0
      END

     BEGIN CASE
         CASE TEMP.TYPE[1,1] = "L"
            MATREAD MKU.REC FROM ESTIMATE.MARKUP,CONO:'L':TEMP.CCTR ELSE
              MAT MKU.REC = ''
            END
            FP=1
            LOCATE LINEAL.RUN IN MKU.QTY<1>,1 BY "AR" SETTING FP ELSE NULL
            IF FP > COUNT(MKU.QTY,VM) + 1 THEN FP = COUNT(MKU.QTY,VM) + 1
            LAB.MARKUP=''
            LAB.MARKUP=MKU.PCT<1,FP>+0
            IF LAB.MARKUP = 0 THEN
               LAB.MARKUP = EST.MARKUP<1,1>
            END
            TEMP.TSALE = INT(TEMP.SALE * (1+LAB.MARKUP/10000)+0.5)
         CASE TEMP.TYPE = "MS" OR TEMP.TYPE = "MR" OR TEMP.TYPE = "MI"
            MATREAD MKU.REC FROM ESTIMATE.MARKUP,CONO:'M':TEMP.CCTR ELSE
              MAT MKU.REC = ''
            END
            FP=1
            LOCATE LINEAL.RUN IN MKU.QTY<1>,1 BY "AR" SETTING FP ELSE NULL
            IF FP > COUNT(MKU.QTY,VM) + 1 THEN FP = COUNT(MKU.QTY,VM) + 1
            MAT.MARKUP=''
            MAT.MARKUP=MKU.PCT<1,FP>+0
            IF MAT.MARKUP = 0 THEN
               MAT.MARKUP = EST.MARKUP<1,2>
            END
            TEMP.TSALE = INT(TEMP.SALE * (1+MAT.MARKUP/10000) + 0.5)
         CASE TEMP.TYPE[1,1] = "M"
            TEMP.TSALE = INT(TEMP.SALE * (1+EST.MARKUP<1,3>/10000) + 0.5)
         CASE TEMP.TYPE[1,1] = "P"
            TEMP.TSALE = INT(TEMP.SALE * (1+EST.MARKUP<1,4>/10000) + 0.5)
         CASE TEMP.TYPE[1,1] = "S"
            TEMP.TSALE = INT(TEMP.SALE * (1+EST.MARKUP<1,5>/10000) + 0.5)
         CASE TEMP.TYPE[1,1] = "O"
            TEMP.TSALE = INT(TEMP.SALE * (1+EST.MARKUP<1,6>/10000) + 0.5)
         END CASE
	
     ESTDEPTINFO = TEMP.TYPE:"~":CCTR.VAL:"~":TEMP.OPV:"~":TEMP.CODE:"~":TEMP.QTY :"~":TEMP.FCTR
     ESTDEPTINFO = ESTDEPTINFO :"~": TEMP.STD :"~": TEMP.STD.TYPE :"~": OCONV(TEMP.TSALE,'MD2') :"~": TEMP.DESC
     ESTDEPTINFO = ESTDEPTINFO :"~": ""  :"~": "" :"~": "" :"~":TEMP.GRP.QPARAM 
     ESTDEPTINFO = ESTDEPTINFO :"~": "" :"~": "" :"~": "" :"~": ""
     ESTDEPTINFO = ESTDEPTINFO :"~": "" :"~": TEMP.OPV.TYPE :"~": TEMP.UM :"~": TEMP.HRS :"~": TEMP.RATE  
     ESTDEPTINFO = ESTDEPTINFO :"~": TEMP.DCOST :"~": TEMP.IND.1 :"~": TEMP.IND.2 :"~": TEMP.IND.3 :"~": TEMP.IND.4
     ESTDEPTINFO = ESTDEPTINFO :"~": TEMP.COST :"~": TEMP.MARKUP :"~": TEMP.SALE

    * STATUS=RBO.setProperty('','standRetValue',OCONV(TEMP.TSALE,'MD2'):"$":TEMP.DCOST:"$":TEMP.COST:"$":TEMP.SALE:"$":TEMP.HRS)
      STATUS=RBO.setProperty('','standRetValue',ESTDEPTINFO)	
*
*---- END OF PROGRAM
*
99999*
      RETURN
90000*
   IF ERRMSG # '' THEN
	STATUS=RBO.setProperty('','ServerStatus',1)
	STATUS=RBO.setProperty('','ServerMessage',ERRMSG)
   END
RETURN



