SUBROUTINE ICSSRE_JOB_BAL
********************************************************************************
*   Program name :- ICSSRE_JOB_BAL
*   Created:- 11/3/2003 by Zubair
*   This program get the value of Balance,and it is called only when the Allocated
*   amount is greater than 0.
*   
*------------------------------------------------------------------------------*
*
* In Properties:
* --------------
*  
*
* Out Properties:
* ---------------
*  
********************************************************************************
$INCLUDE WWINSERT RBO.H

*******************COMMENTED 
*$INCLUDE ICS.CPYLIB INVENTORY
*$INCLUDE ICS.CPYLIB INV.CNV

*OPEN '', 'INVENTORY' TO INVENTORY ELSE ERRMSG = 'INVENTORY FILE IS MISSING' ; GOTO 93000

*STATUS = RBO.getProperty('','PMCProperty',Data)
*CONO = Data<1,4>
*STATUS = RBO.getProperty('','BAL_PROD',BAL.PROD)
*STATUS = RBO.getProperty('','BAL_ALLOC',BAL.ALLOC)
*STATUS = RBO.getProperty('','BAL_RES',BAL.RES)
*MAT INV.REC = ''
** Insert method code here

*MATREAD INV.REC FROM INVENTORY, CONO : BAL.PROD ELSE
*	MAT INV.REC = ''
*END
*$INCLUDE ICSBP INV.UM.CNV

** INTERNAL CONVERSION FOR ALLOCATED QTY
*BAL_ALLOC_COST = ICONV(BAL.ALLOC,ICR.CNV)
**BAL_ALLOC_COST = BAL.ALLOC
** APPLYING FORMULA FOR CONVERTING STOCK TO COST
*BAL_ALLOC_COST = INT(((BAL_ALLOC_COST/ICR.MT1)*ICR.DV1)*ICR.DV2+.5) 

** INTERNAL CONVERSION FOR RESERVED QTY
*BAL_RES_COST = ICONV(BAL.RES,ICR.CNV) 
**BAL_RES_COST = BAL.RES
**  STOCK TO COST
*BAL_RES_COST = INT(((BAL_RES_COST/ICR.MT1)*ICR.DV1)*ICR.DV2+.5)

** COST TO STOCK = INT(((COST.QTY/ICR.DV1)*ICR.MT1)/ICR.DV2+.5)
** STOCK TO COST = INT(((STOCK.QTY/ICR.MT1)*ICR.DV1)*ICR.DV2+.5)

*DIFF_COST = BAL_ALLOC_COST - BAL_RES_COST

* COST TO STOCK
*DIFF_COST = INT(((DIFF_COST/ICR.MT1)*ICR.DV1)*ICR.DV2+.5)

* EXTERNAL CONVERSION
*DIFF_COST = OCONV(DIFF_COST,ICR.CNV)   
*DIFF_COST = OCONV(INT(((DIFF_COST / ICR.DV1<1>) * ICR.MT1<1>) / ICR.DV2<1> + .5),ICR.CNV)

*STATUS = RBO.setProperty('','ServerMessage','BALANCE - ' : DIFF_COST : " : ICR.DV1 : " : ICR.DV1 : " ICR.MT1 : " : ICR.MT1 : " :: " : ICR.DV2 : " :: " : ICR.CNV ) 
*RETURN
*STATUS = RBO.setProperty('','BAL_BLNCE',DIFF_COST)

* End of method code
*93000 *
*STATUS = RBO.setProperty('','ServerStatus',1)
*STATUS = RBO.setProperty('','ServerMessage',ERRMSG)
*RETURN
***********
********* THIS CODED ADDED BY ZUBAIR ON 16/OCT/03 TO GET THE FIELD PO.JB.ONORD TO GET JOB ALLOCATION QTY WHICH IS USED IN - GRID JOB 
*$INCLUDE ICSBP INV.UM.CNV

*STATUS = RBO.getProperty('','ID',ID)
*
*MATREAD PO.REC FROM PO, ID ELSE
*	MAT PO.REC = '' 
*END

*STATUS = RBO.setProperty('','ServerMessage',' count po -': DCOUNT(PO.JB.ONORD,@VM))

*FOR X = 1 TO DCOUNT(PO.JB.ONORD,@VM)
*	JB_ALLOC_QTY<1,X> = OCONV(INT(((PO.JB.ONORD<1,X> / ICR.DV1) * ICR.MT1) / ICR.DV2 + .5),ICR.CNV)
*NEXT
**STATUS = RBO.setProperty('','ServerMessage','JB_ALLOC_QTY -' : JB_ALLOC_QTY)


*STATUS = RBO.setProperty('','JB_ALLOC_QTY',JB_ALLOC_QTY)

****** END OF THE CODE ADDITION - ZUBAIR


$INCLUDE PMC.CPYLIB PO

OPEN '','PO' TO PO ELSE ERRMSG = 'PO FILE IS MISSING'; GOTO 93000
STATUS = RBO.getProperty('','ID',ID)
MATREAD PO.REC FROM PO, ID ELSE
	MAT PO.REC = '' 
END

***********FOR BALANCE
$INCLUDE ICSBP INV.UM.CNV

Y = DCOUNT(SSTK.JOB.QTY,@UM)
FOR X = 1 TO DCOUNT(PO.JB.OPEN,@UM)
	TEMP = PO.JB.OPEN<1,X> - SSTK.JOB.QTY<1,Y>	
	IF TEMP < 0 THEN TEMP = 0
	BALANCE<1,X> = TEMP
	BALANCE<1,X> = OCONV(INT(((BALANCE<1,X> / ICR.DV1<1>) * ICR.MT1<1>) / ICR.DV2<1> + .5),ICR.CNV)
	Y = Y + 1
NEXT

STATUS = RBO.setProperty('','',BALANCE<1,-1>)
RETURN
****** END OF CODE ADDITIN - ZUBAIR


* End of method code
93000 *
STATUS = RBO.setProperty('','ServerStatus',1)
STATUS = RBO.setProperty('','ServerMessage',ERRMSG)
RETURN


