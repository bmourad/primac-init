SUBROUTINE CalculateCaseEndLeaf
********************************************************************************
*   Program name :- CalculateCaseEndLeaf

*   Created:- 9/4/2003

*  Author :- Irfan M Saleem
* ---------------
*  
********************************************************************************
$INCLUDE WWINSERT RBO.H

$INCLUDE JES.CPYLIB ESTIMATE.BIND.SPOIL
$INCLUDE JES.CPYLIB ESTIMATE.MATL
$INCLUDE JES.CPYLIB JES.FILE.VARS
$INCLUDE CPYLIB FILE.VARS
$INCLUDE JES.CPYLIB ESTIMATE
$INCLUDE CPYLIB CHAR

*
*---- OPEN ALL FILES
*
IN_PARAM = "" ; OUT_PARAM = ""
ERRMSG = "CALL openEstimateFiles PROBLEM"
CALL openEstimateFiles(ERRMSG,IN_PARAM,OUT_PARAM,MAT FILE.VARS,MAT JES.FILE.VARS)
IF ERRMSG # "" THEN GOTO 1000

ERRMSG = RBO.getProperty('','ID',ESTIMATE.ID)
ERRMSG = RBO.getProperty('','CODE',ELEAFCODE)
ERRMSG = RBO.getProperty('','ACTION',ACTION)

CONO = ESTIMATE.ID[1,3]
EST.ID = TRIM(ESTIMATE.ID[4,99])


MATREAD EST.REC FROM ESTIMATE,ESTIMATE.ID ELSE
   MAT ESTM.REC = ""
END

MATREAD ESTM.REC FROM ESTIMATE.MATL, CONO:"C" ELSE
   MAT ESTM.REC = ""
END
QCNT = COUNT(EST.QTY,VM) + 1
CASE.RECALC = 0
QTY.LINE.COUNT = 4 

*MATREAD BST.REC FROM ESTIMATE.BIND.SPOIL, CONO:S$VALUE ELSE
   * ERRMSG = "Invalid bindery spoilage table ID. Try again! "
*END
*
*---- GET ENDLEAF ITEM
*

IF EST.CASE.ENDLF<1,1> = "" THEN
      *CALL EST.CASE.CUT.SIZE (CONO, "ENDLEAF")
*
*---- INITIALIZATION
*
   TOT.BULK = 0
   C2 = COUNT(EST.BIND.FOLD.BULK,VM) + (EST.BIND.FOLD.BULK # "")
   FOR C = 1 TO C2
      TOT.BULK = TOT.BULK + EST.BIND.FOLD.BULK<1,C>
   NEXT C
   TOT.BULK = TOT.BULK / 10000
*
   PAGE.WIDTH = EST.BIND.TP.WIDTH / 10000
   PAGE.LENGTH = EST.BIND.TP.LENGTH / 10000
   SHOW.SIZE = EST.CASE.SHOW.SIZE / 10000
*
*---- MAIN PROCESSING
*
   IF ACTION = "ENDLEAF" OR ACTION = "ALL" THEN
      EST.CASE.ENDLF.CUT.SIZE = ""
      EST.CASE.ENDLF.CUT.SIZE<1,1> = INT(((PAGE.WIDTH + 0.125) * 2) * 10000 + 0.5)
      EST.CASE.ENDLF.CUT.SIZE<1,2> = EST.BIND.US.LENGTH
   END


   RECALC = 0
   PREV.ENDLEAF = EST.CASE.ENDLF<1,1>
        *S$DATA(12)<S$SCR> = PREV.ENDLEAF

   IF ELEAFCODE  = "" OR ELEAFCODE # PREV.ENDLEAF THEN
      IF ELEAFCODE = "" THEN
         EST.CASE.ENDLF = ""
         EST.CASE.ENDLF.SRC = ""
         EST.CASE.ENDLF.SIZE = ""
         EST.CASE.ENDLF.SPEC = ""
         EST.CASE.ENDLF.PRICE = ""
         RECALC = 1
      END
      LOCATE ELEAFCODE IN ESTM.PROD<1>,1 SETTING MP ELSE
         ERRMSG = "Invalid item ID. Try again !"
         GOTO 1000
      END 
      EST.CASE.ENDLF<1,1> = ELEAFCODE
      EST.CASE.ENDLF<1,2> = ESTM.DESC<1,MP>
      CUTSIZE1 = EST.CASE.ENDLF.CUT.SIZE<1,1>
      CUTSIZE2 = EST.CASE.ENDLF.CUT.SIZE<1,2>
      RECALC = 1
      CALCCASEINS =''
      CALCCASEINS =CALCCASEINS : ESTM.WIDTH<1,MP>:"|" :ESTM.LENGTH<1,MP>:"|" : ESTM.BASIS.WT<1,MP>:"|" : ESTM.GRAIN<1,MP>:"|" : ESTM.CLR.CD<1,MP>:"|"
      CALCCASEINS =CALCCASEINS : ESTM.FINISH.CD<1,MP>:"|" :ESTM.UM<1,MP>:"|" : ESTM.COST.UNIT<1,MP> :"|":CUTSIZE1 :"|":CUTSIZE2

   END
   GOSUB 80000
   STATUS = RBO.setProperty('', 'CALCCASEIN', CALCCASEINS)
END
BRDPRC = ''
IF ACTION = "BOARD" OR ACTION = "ALL" THEN
   EST.CASE.SIDE.BD.CUT.SIZE = ""
   EST.CASE.SPINE.BD.CUT.SIZE = ""
   BRDPRC = EST.CASE.BOARD.PRICE<1,4>
   BIA = OCONV(BRDPRC,'MD4') 
   BEGIN CASE
      CASE EST.BIND.COVER.STYLE = "C" AND EST.CASE.BACK.STYLE = "R"
         BEGIN CASE
            CASE EST.BIND.EDGE.TYPE = "S"
               EST.CASE.SIDE.BD.CUT.SIZE<1,1> = INT((PAGE.WIDTH - 0.1875)* 10000 + 0.5)
               EST.CASE.SIDE.BD.CUT.SIZE<1,1> = INT((PAGE.WIDTH - BIA) * 10000 + 0.5)
               EST.CASE.SIDE.BD.CUT.SIZE<1,2> = INT((PAGE.LENGTH + 0.2500) * 10000 + 0.5)
               BOARD.WIDTH = EST.CASE.SIDE.BD.CUT.SIZE<1,1> / 10000

            CASE EST.BIND.EDGE.TYPE = "RF" OR EST.BIND.EDGE.TYPE = "RFF"
               EST.CASE.SIDE.BD.CUT.SIZE<1,1> = INT((PAGE.WIDTH - 0.1250) * 10000 + 0.5)
               EST.CASE.SIDE.BD.CUT.SIZE<1,2> = INT((PAGE.LENGTH + 0.2500) * 10000 + 0.5)
               BOARD.WIDTH = EST.CASE.SIDE.BD.CUT.SIZE<1,1> / 10000
         END CASE

      CASE EST.BIND.COVER.STYLE = "C" AND EST.CASE.BACK.STYLE = "F"
         EST.CASE.SIDE.BD.CUT.SIZE<1,1> = INT((PAGE.WIDTH - 0.0625) * 10000 + 0.5)
         EST.CASE.SIDE.BD.CUT.SIZE<1,1> = INT((PAGE.WIDTH - BIA) * 10000 + 0.5)

         EST.CASE.SIDE.BD.CUT.SIZE<1,2> = INT((PAGE.LENGTH + 0.2500) * 10000 + 0.5)
         BOARD.WIDTH = EST.CASE.SIDE.BD.CUT.SIZE<1,1> / 10000
         EST.CASE.SPINE.BD.CUT.SIZE<1,1> = INT((TOT.BULK + 0.1900) * 10000 + 0.5)
         EST.CASE.SPINE.BD.CUT.SIZE<1,2> = INT((PAGE.LENGTH + 0.1875) * 10000 + 0.5)
   END CASE

   RECALC = 0
   PREV.BOARD = EST.CASE.BOARD<1,1> 

   IF ELEAFCODE  = "" OR ELEAFCODE # PREV.ENDLEAF THEN
      IF ELEAFCODE = "" THEN
         EST.CASE.ENDLF = ""
         EST.CASE.ENDLF.SRC = ""
         EST.CASE.ENDLF.SIZE = ""
         EST.CASE.ENDLF.SPEC = ""
         EST.CASE.ENDLF.PRICE = ""
         RECALC = 1
      END

      LOCATE ELEAFCODE IN ESTM.PROD<1>,1 SETTING MP ELSE
         ERRMSG = "Invalid item ID. Try again !"
         GOTO 1000
      END 
      EST.CASE.ENDLF<1,1> = ELEAFCODE
      EST.CASE.ENDLF<1,2> = ESTM.DESC<1,MP>
      BRDCUTSIZE1 = EST.CASE.SIDE.BD.CUT.SIZE<1,1>
      BRDCUTSIZE2 = EST.CASE.SIDE.BD.CUT.SIZE<1,2>
      SPNCUTSIZE1 = EST.CASE.SPINE.BD.CUT.SIZE<1,1>
      SPNCUTSIZE2 = EST.CASE.SPINE.BD.CUT.SIZE<1,2>
      RECALC = 1
      CALCCASEINSBRD =''
      CALCCASEINSBRD =CALCCASEINSBRD : ESTM.WIDTH<1,MP>:"|" :ESTM.LENGTH<1,MP>:"|" : ESTM.CALIPER<1,MP>:"|" : ESTM.GRAIN<1,MP>:"|" 
      CALCCASEINSBRD =CALCCASEINSBRD : ESTM.UM<1,MP>:"|" : ESTM.COST.UNIT<1,MP>:"|":BRDCUTSIZE1 :"|":BRDCUTSIZE2:"|":SPNCUTSIZE1:"|":SPNCUTSIZE2

   END
   GOSUB 80000
   STATUS = RBO.setProperty('', 'CALCCASEIN', CALCCASEINSBRD)
END


*
IF ACTION = "CLOTH" OR ACTION = "ALL" THEN
   EST.CASE.SIDE.CL.CUT.SIZE = ""
   EST.CASE.SPINE.CL.CUT.SIZE = ""
   BIA = OCONV(EST.CASE.SIDE.CL.PRICE<1,4>,'MD4')
   BEGIN CASE
      CASE EST.BIND.COVER.STYLE = "C" AND EST.CASE.BACK.STYLE = "R"

         BOARD.WIDTH = INT((PAGE.WIDTH - BIA) * 10000 + 0.5) / 10000

         BEGIN CASE
            CASE EST.CASE.PIECES = 1
               EST.CASE.SIDE.CL.CUT.SIZE<1,1> = INT((TOT.BULK * 1.5 + BOARD.WIDTH * 2 + 2.0000) * 10000 + 0.5)
               EST.CASE.SIDE.CL.CUT.SIZE<1,2> = INT((PAGE.LENGTH + 1.5000) * 10000 + 0.5)
            CASE EST.CASE.PIECES = 3
               EST.CASE.SIDE.CL.CUT.SIZE<1,1> = INT((BOARD.WIDTH - SHOW.SIZE + 0.6250) * 10000 + 0.5)
               EST.CASE.SIDE.CL.CUT.SIZE<1,2> = INT((PAGE.LENGTH + 1.5000) * 10000 + 0.5)
               EST.CASE.SPINE.CL.CUT.SIZE<1,1> = INT((TOT.BULK * 1.5 + SHOW.SIZE * 2 + 1.2500) * 10000 + 0.5)
               EST.CASE.SPINE.CL.CUT.SIZE<1,2> = INT((PAGE.LENGTH + 1.5000) * 10000 + 0.5)
         END CASE
      CASE EST.BIND.COVER.STYLE = "C" AND EST.CASE.BACK.STYLE = "F"

         BOARD.WIDTH = INT((PAGE.WIDTH - 0.0625) * 10000 + 0.5) / 10000
         BOARD.WIDTH = INT((PAGE.WIDTH - BIA) * 10000 + 0.5) / 10000

         BEGIN CASE
            CASE EST.CASE.PIECES = 1
               EST.CASE.SIDE.CL.CUT.SIZE<1,1> = INT((TOT.BULK + BOARD.WIDTH * 2 + 2.1900) * 10000 + 0.5)
               EST.CASE.SIDE.CL.CUT.SIZE<1,2> = INT((PAGE.LENGTH + 1.5000) * 10000 + 0.5)
               EST.CASE.SPINE.CL.CUT.SIZE<1,1> = ""
               EST.CASE.SPINE.CL.CUT.SIZE<1,2> = ""
            CASE EST.CASE.PIECES = 3
               EST.CASE.SIDE.CL.CUT.SIZE<1,1> = INT((BOARD.WIDTH - SHOW.SIZE + 0.6250) * 10000 + 0.5)
               EST.CASE.SIDE.CL.CUT.SIZE<1,2> = INT((PAGE.LENGTH + 1.5000) * 10000 + 0.5)
               EST.CASE.SPINE.CL.CUT.SIZE<1,1> = INT((TOT.BULK + SHOW.SIZE * 2 + 1.4400) * 10000 + 0.5)
               EST.CASE.SPINE.CL.CUT.SIZE<1,2> = INT((PAGE.LENGTH + 1.5000) * 10000 + 0.5)
         END CASE
   END CASE
   clCUTSIZE1 = EST.CASE.SPINE.CL.CUT.SIZE<1,1>
   clCUTSIZE2 = EST.CASE.SPINE.CL.CUT.SIZE<1,2>

   CALCCASEINSCLTH =''
   CALCCASEINSCLTH=CALCCASEINSCLTH: ESTM.WIDTH<1,MP>:"|" :ESTM.LENGTH<1,MP>:"|" : ESTM.EMBOSS<1,MP>:"|" : ESTM.GRAIN<1,MP>:"|" 
   CALCCASEINSCLTH=CALCCASEINSCLTH:ESTM.CLR.CD<1,MP>:"|" : ESTM.FINISH.CD<1,MP>:"|" : ESTM.UM<1,MP>:"|" : ESTM.COST.UNIT<1,MP>:"|":clCUTSIZE1 :"|":clCUTSIZE2 
   STATUS = RBO.setProperty('', 'CALCCASEIN', CALCCASEINSCLTH)
END
RETURN


*
*
*---- LOAD DATA
*
80000 
BACK.STYLE = EST.CASE.BACK.STYLE
CASE.PIECES = EST.CASE.PIECES
SHOW.SIZE = EST.CASE.SHOW.SIZE
CASEMAKER.CCTR = EST.CASEMAKER.CCTR

   *S$DATA(6)<S$SCR> = EST.CASESTAMP.CCTR
   *S$DATA(7)<S$SCR> = EST.CASESTAMP.HITS
  * S$DATA(8)<S$SCR> = EST.CASEIN.CCTR
   *S$DATA(9)<S$SCR> = EST.CASE.SPOIL<1,1>
*   S$DATA(10)<S$SCR> = EST.CASE.SPOIL<1,2>
  * S$DATA(11)<S$SCR> = EST.CASE.SPOIL<1,3>
   *S$DATA(12)<S$SCR> = EST.CASE.ENDLF<1,1>
 *  S$DATA(13)<S$SCR> = EST.CASE.ENDLF<1,2>
*   S$DATA(14)<S$SCR> = EST.CASE.ENDLF.SIZE<1,1>
  * S$DATA(15)<S$SCR> = EST.CASE.ENDLF.SIZE<1,2>
*   S$DATA(16)<S$SCR> = EST.CASE.ENDLF.SRC
 *  S$DATA(17)<S$SCR> = EST.CASE.ENDLF.SPEC<1,1>
*   S$DATA(18)<S$SCR> = EST.CASE.ENDLF.SPEC<1,2>
 *  S$DATA(19)<S$SCR> = EST.CASE.ENDLF.SPEC<1,3>
   *S$DATA(20)<S$SCR> = EST.CASE.ENDLF.SPEC<1,4>
*   S$DATA(22)<S$SCR> = EST.CASE.ENDLF.PRICE<1,2>
 *  S$DATA(23)<S$SCR> = EST.CASE.ENDLF.PRICE<1,3>
 *  S$DATA(24)<S$SCR> = EST.CASE.ENDLF.CUT.SIZE<1,1>
  * S$DATA(25)<S$SCR> = EST.CASE.ENDLF.CUT.SIZE<1,2>
   *S$DATA(26)<S$SCR> = EST.CASE.ENDLF.CUT.OUT
*   S$DATA(29)<S$SCR> = EST.CASE.BOARD<1,1>
  * S$DATA(30)<S$SCR> = EST.CASE.BOARD<1,2>
   *S$DATA(31)<S$SCR> = EST.CASE.BOARD.SIZE<1,1>
   *S$DATA(32)<S$SCR> = EST.CASE.BOARD.SIZE<1,2>
*   S$DATA(33)<S$SCR> = EST.CASE.BOARD.SRC
  * S$DATA(34)<S$SCR> = EST.CASE.BOARD.SPEC<1,1>
   *S$DATA(35)<S$SCR> = EST.CASE.BOARD.SPEC<1,2>
 *  S$DATA(37)<S$SCR> = EST.CASE.BOARD.PRICE<1,2>
   *S$DATA(38)<S$SCR> = EST.CASE.BOARD.PRICE<1,3>
*   S$DATA(42)<S$SCR> = EST.CASE.BOARD.PRICE<1,4> ; * T26358
  * S$DATA(39)<S$SCR> = EST.CASE.SIDE.BD.CUT.SIZE<1,1>
   *S$DATA(40)<S$SCR> = EST.CASE.SIDE.BD.CUT.SIZE<1,2>
   *S$DATA(41)<S$SCR> = EST.CASE.SIDE.BD.CUT.OUT
  * S$DATA(44)<S$SCR> = EST.CASE.SPINE.BD.CUT.SIZE<1,1>
*   S$DATA(45)<S$SCR> = EST.CASE.SPINE.BD.CUT.SIZE<1,2>
  * S$DATA(46)<S$SCR> = EST.CASE.SPINE.BD.CUT.OUT
RETURN



STATUS = RBO.setProperty('', 'CALCCASEIN', CALCCASEINSBRD)

RETURN

1000 *
STATUS = RBO.setProperty('','ServerStatus',1)
STATUS = RBO.setProperty('','ServerMessage',ERRMSG)
RETURN
