SUBROUTINE FrontStockDetails
********************************************************************************
*   Program name :- FrontStockDetails
*   Created:- 5/5/2006
*------------------------------------------------------------------------------*
*This RBO calculates the PaperPrice value, when a new quantity is added to the front tab quantity grid
*that is grid0-- A. Gafoor

********************************************************************************
$INCLUDE WWINSERT RBO.H

$INCLUDE JES.CPYLIB ESTIMATE
$INCLUDE JES.CPYLIB ESTIMATE.MATL
$INCLUDE JES.CPYLIB ESTIMATE.BIND.SPOIL
$INCLUDE JES.CPYLIB ESTIMATE.RES.PRESS.SPOIL
$INCLUDE JES.CPYLIB ESTIMATE.RES
$INCLUDE ICS.CPYLIB INVENTORY
$INCLUDE ICS.CPYLIB INV.WHSE
$INCLUDE JES.CPYLIB JES.FILE.VARS
$INCLUDE PMC.CPYLIB COMPANY
$INCLUDE CPYLIB FILE.VARS
$INCLUDE CPYLIB CHAR
$INCLUDE CPYLIB SYSCOM

OPEN "", "CONTROL" TO CONTROL ELSE
	ERRMSG="CAN NOT OPEN CONTROL"
END

OPEN "", "EQUIPMENT" TO EQUIPMENT ELSE
	ERRMSG="CAN NOT OPEN EQUIPMENT"
END

OPEN "", "ESTIMATE.MATL" TO ESTIMATE.MATL ELSE
	ERRMSG="CAN NOT OPEN ESTIMATE.MATL"
END

OPEN "", "ESTIMATE.RES" TO ESTIMATE.RES ELSE
	ERRMSG="CAN NOT OPEN ESTIMATE.RES"
END

* Insert method code here
COMP=1
ERR_MSGS=""
TOTMSI=""
UNITPR=""
EST.PROD.OS.WIDTH=''
EST.RL.DIE.REPEAT=''
EST.RL.DIE.NO.ACR=''
EST.RL.DIE.NO.ARD=''
EST.PROD.OS.USAGE=''
EST.RL.SETS=''
EST.PROD.OS.PROD=''
EST.RL.PAP.PRICE=''
PRICE.FLAG=''
CO.JES.PARAM=''

STATUS=RBO.getProperty('','PMCProperty',PMCProperty)
STATUS=RBO.getProperty('','QTYNO',EST.QTY)
STATUS=RBO.getProperty('','dieRepeat',dieRepeat)
STATUS=RBO.getProperty('','dieAcross',dieAcross)
STATUS=RBO.getProperty('','dieAround',dieAround)
STATUS=RBO.getProperty('','setRatio2',setRatio2)
STATUS=RBO.getProperty('','REFNO',REF.NO)
**Used in called function
STATUS=RBO.getProperty('','CCTR_str',CCTR_str)
STATUS=RBO.getProperty('','prodColors',prodColors)
STATUS=RBO.getProperty('','backPrint',backPrint)
STATUS=RBO.getProperty('','adhesive',adhesive)
STATUS=RBO.getProperty('','sscreen',sscreen)
STATUS=RBO.getProperty('','gravure',gravure)
STATUS=RBO.getProperty('','foil',foil)
STATUS=RBO.getProperty('','Vares',Vares)
STATUS=RBO.getProperty('','colourChng',colourChng)
STATUS=RBO.getProperty('','platechng',platechng)
STATUS=RBO.getProperty('','sprocket',sprocket)
STATUS=RBO.getProperty('','Embe',Embe)
STATUS=RBO.getProperty('','Pgroup',Pgroup)
STATUS=RBO.getProperty('','SDGEAR',INV.ID1)
STATUS=RBO.getProperty('','papPrice',papPrice)
STATUS=RBO.getProperty('','estwth',estwth)

CONO=PMCProperty<1,4>
EST.PROD.OS.WIDTH<1,COMP>=estwth
EST.RL.DIE.REPEAT<1,COMP,1>=dieRepeat 
EST.RL.DIE.NO.ACR<1,COMP,1>=dieAcross 
EST.RL.DIE.NO.ARD<1,COMP,1>=dieAround 
EST.PROD.OS.USAGE<1,COMP>=Pgroup 
EST.RL.SETS<1,COMP,2>=setRatio2
**
EST.PROD.OS.PROD<1,1>=INV.ID1
EST.RL.PAP.PRICE=papPrice

ABD=''
*ABD= EST.QTY :"-AND-": dieRepeat :"-AND-": dieAcross :"-AND-": dieAround  :"-AND-": setRatio2 :"-AND-": REF.NO :"-AND-": CCTR_str :"-AND-": prodColors :"-AND-": backPrint :"-AND-": adhesive :"-AND-": sscreen :"-AND-": gravure :"-AND-": foil :"-AND-": Vares :"-AND-": colourChng :"-AND-": platechng :"-AND-": sprocket :"-AND-": Embe :"-AND-": Pgroup :"-AND-": INV.ID :"-AND-": papPrice
*STATUS=RBO.setProperty('','ServerStatus',ABD)
*RETURN

*---- MAIN PROCESSING
   DEL.NO=""
   IF DEL.NO # "" THEN
      PCNT=DCOUNT(EST.PROD.OS.PROD<1,1>,SVM)
      FOR MPTR=1 TO PCNT
       *  MACRO DELVAL;EST.RL.PAP.PRICE<1,1,MPTR>;"!";DEL.NO
      NEXT PCNT
   END
   SAVE.PAP.PRICE=EST.RL.PAP.PRICE
   PRICE.FLAG = CO.JES.PARAM<1,11>
    IF PRICE.FLAG = "" THEN; ***** T23918
      PRICE.FLAG='X'
   END; ***** T23918
*
*--- Calculate Roll Label Paper Details
*
  * STATUS=RBO.setProperty('','ServerStatus', DCOUNT(EST.QTY,VM):"-AND-":DCOUNT(EST.PROD.OS.USAGE,SM):"$$":EST.PROD.OS.USAGE:"-AND-":DCOUNT(EST.PROD.OS.PROD<1,COMP>,SVM))
  * RETURN

   QQTY=DCOUNT(EST.QTY,VM)
   UCNT=DCOUNT(EST.PROD.OS.USAGE,SM)
   FOR COMP=1 TO UCNT
      PCNT=DCOUNT(EST.PROD.OS.PROD<1,COMP>,SVM)
      FOR MPTR=1 TO PCNT
	  * STATUS=RBO.setProperty('','ServerStatus',CONO:"R":EST.PROD.OS.USAGE<1,COMP,MPTR>)
	 MATREAD ESTM.REC FROM ESTIMATE.MATL, CONO:"R":EST.PROD.OS.USAGE<1,COMP,MPTR> ELSE MAT ESTM.REC=""
	 LOCATE EST.PROD.OS.PROD<1,COMP,MPTR> IN ESTM.PROD<1>,1 SETTING MP ELSE MP=1
        FOR Y=1 TO QQTY
	  IF EST.RL.DIE.REPEAT<1,COMP,1> # "" AND EST.RL.DIE.NO.ACR<1,COMP,1> # "" AND EST.RL.DIE.NO.ARD<1,COMP,1> # "" THEN
		VAR1 = EST.QTY<1,Y>*(EST.RL.DIE.REPEAT<1,COMP,1>/10000)
      		IF EST.RL.DIE.NO.ARD<1,COMP,1>='' THEN
       		VAR3 = 1
	       END ELSE
        		VAR3 = EST.RL.DIE.NO.ARD<1,COMP,1>
      		END
      		VAR4 = EST.RL.SETS<1,COMP,2>
	       IF VAR4 = '' THEN VAR4 = 1
      	      	VAR2 = (EST.RL.DIE.NO.ACR<1,COMP,1>*VAR3)/VAR4
      		BASE.PC = INT((VAR1/VAR2)+.5);*IMPERIAL
      		PR.SPOIL.PC = 0
      		FIN.SPOIL.PC = 0
	       MR.PC=0
	       ACTION="M";ERRFLAG=''	;*Added
       	CALL EST_RES_CALC_SPOIL_NEW(CONO,ACTION,COMP,EST.QTY<1,Y>,BASE.LINEAL,PR.SPOIL.LINEAL,FIN.SPOIL.LINEAL,MR.LINEAL,CCTR_str,prodColors,backPrint,adhesive,sscreen,gravure,foil,Vares,ERRFLAG,dieRepeat,colourChng,platechng,sprocket,Embe,Y) 	
	       TOT.PC=BASE.PC+MR.PC+PR.SPOIL.PC+FIN.SPOIL.PC
	  END ELSE
      		TOT.PC=0
   	  END	
	     *	
         TOT.MSI=INT(((EST.PROD.OS.WIDTH<1,COMP,MPTR>/10000*TOT.PC)/1000)+.9)
	  TOTMSI<1,-1>=TOT.MSI

   	  IF ERRFLAG # "" THEN
	  	ERR_MSGS<1,-1>=ERRFLAG
         END
	
         INV.ID=EST.PROD.INV.ID<1,COMP,MPTR>
         IF PRICE.FLAG # "X" AND INV.ID # "" THEN
	     GOSUB 2000
         END ELSE
            PRICE.BRK.COUNT=DCOUNT(ESTM.END.QTY<1,MP>,SVM)
            FLG=0
            UNIT.PR = 0 ; * T26454
            FOR X=1 TO PRICE.BRK.COUNT UNTIL FLG
            	TEST.QTY=ESTM.END.QTY<1,MP,X>
            	IF TOT.MSI <= TEST.QTY THEN
            	   UNIT.PR=ESTM.QCOST<1,MP,X>
		   UNITPR<1,-1>	= OCONV(UNIT.PR,"MD4")	
                 FLG=1
            	END
            NEXT X
            IF NOT(FLG) THEN
                  UNIT.PR=ESTM.QCOST<1,MP,PRICE.BRK.COUNT>
        	    UNITPR<1,-1>	= UNIT.PR	
            END
         END

         IF UNIT.PR+0 = 0 THEN
            SAVE.PR = FIELD(SAVE.PAP.PRICE<1,COMP,MPTR>,'!',Y)
            IF SAVE.PR+0 = 0 AND Y > 1 THEN
               SAVE.PR = FIELD(SAVE.PAP.PRICE<1,COMP,MPTR>,'!',Y-1)
            END
            IF SAVE.PR # '' THEN UNIT.PR = SAVE.PR
         END
	  *   MACRO REPVAL;EST.RL.TOTAL.PC<1,COMP,MPTR>;"!";Y;INT(TOT.PC)
         *   MACRO REPVAL;EST.RL.PAP.MSI<1,COMP,MPTR>;"!";Y;TOT.MSI
         *   MACRO REPVAL;EST.RL.PAP.PRICE<1,COMP,MPTR>;"!";Y;UNIT.PR

	  XYZ=EST.RL.TOTAL.PC<1,COMP,MPTR>
	  CALL MACROREPVAL(XYZ,"!",Y,INT(TOT.PC))

	  XYZ1=EST.RL.PAP.MSI<1,COMP,MPTR>
	  CALL MACROREPVAL(XYZ1,"!",Y,TOT.MSI)
		
	  XYZ2=EST.RL.PAP.PRICE<1,COMP,MPTR>
	  CALL MACROREPVAL(XYZ2,"!",Y,UNIT.PR)
	  UNIT.PR=''		
       NEXT Y
       PLC=DCOUNT(EST.RL.PAP.MSI<1,COMP,MPTR>,"!")
       FOR X=PLC TO QQTY+1 STEP -1
	     
	  XYZ3=EST.RL.TOTAL.PC<1,COMP,MPTR>
	  CALL MACROREPVAL(XYZ3,"!",X)

	  XYZ4=EST.RL.PAP.MSI<1,COMP,MPTR>
	  CALL MACROREPVAL(XYZ4,"!",X)
		
	  XYZ5=EST.RL.PAP.PRICE<1,COMP,MPTR>
	  CALL MACROREPVAL(XYZ5,"!",X)
	
       *  MACRO DELVAL;EST.RL.TOTAL.PC<1,COMP,MPTR>;"!";X
       *   MACRO DELVAL;EST.RL.PAP.MSI<1,COMP,MPTR>;"!";X
       *   MACRO DELVAL;EST.RL.PAP.PRICE<1,COMP,MPTR>;"!";X
       NEXT X
      NEXT MPTR
   NEXT COMP
  * STATUS=RBO.setProperty('','ServerStatus',TOTMSI:"and":ERR_MSGS)   

STATUS=RBO.setProperty('','DefPrintUp',TOTMSI:"$$":UNITPR)
ERRMSG=ERR_MSGS
GOTO 90000

2000*
RETURN

90000 *
IF ERRMSG # "" THEN
   STATUS=RBO.setProperty('','ServerStatus',1)
   STATUS=RBO.setProperty('','ServerMessage',ERRMSG)
END
RETURN


