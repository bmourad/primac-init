*********************************************************************
* REVISION    - [12.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - APSBP
* PROGRAM     - APV.EOM.POST
* BY          - ZIAD YAMOUT, C.B.A
* DATE        - 02/28/87
* DESCRIPTION -
*             Create the APV.EOM.TRANS data.
*MODIFIED	- (01/30/06) BY ZAHOOR AHMED
*		   FOR printflag and EOD.ERROR flag
*ENDDOC
*********************************************************************
*
***** INSERT FILE EQUATE
*
$INCLUDE WWINSERT RBO.H
$INCLUDE PMC.CPYLIB COMPANY
$INCLUDE PMC.CPYLIB SALESDATES
$INCLUDE PMC.CPYLIB FISCAL
$INCLUDE PMC.CPYLIB EOM.TRANS
$INCLUDE PMC.CPYLIB COA
$INCLUDE APS.CPYLIB VOUCHERS
$INCLUDE PMC.CPYLIB VEND
$INCLUDE PMC.CPYLIB POST.REJECTS
$INCLUDE PMC.CPYLIB DIVISION ;* T23278
$INCLUDE CPYLIB CHAR
*
**** INTITIALIZATION
*
***** SETUP ERRMSG ROUTINE
*
ERRMSG=''
MAT FISCAL.REC = ''
*
Printfalg = ''
EMAIL_ADDR = ''
*
*Printfalg is view/mail/print/file
*
STATUS = RBO.getProperty('','ID',ID)
STATUS = RBO.getProperty('','PMCProperty',PMCProperty)
STATUS = RBO.getProperty('','PRINT_FLAG',PRINT.FLAG)
STATUS = RBO.getProperty('','EmailAddress',EMAIL_ADDR)
*
CONO = ID[1,3]
MODULE=ID[4,3]
*Get the printflag view/Email/File/Print
*
BEGIN CASE
   CASE PRINT.FLAG = 'PrintData'
	Printfalg = 'View'
   CASE PRINT.FLAG = 'EmailData'
	Printfalg = 'Email'
   CASE PRINT.FLAG = 'File'
	Printfalg = 'Print'
   CASE 1
	Printfalg = 'Print'
END CASE
*
BEGIN CASE
CASE MODULE[1,2] = 'AP'
CASE MODULE[1,2] = 'AR'
CASE 1
  MODULE = MODULE[1,2]
END CASE
FISCPFX=MODULE
STATUS = RBO.getProperty('','DivCode',DIV.CODE)
STATUS = RBO.getProperty('','DivPos',POS)
STATUS = RBO.getProperty('','FR_CURR_PER',FR.CURR.PER)
STATUS = RBO.getProperty('','FR_CURR_DATE',FR.CURR.DATE)
STATUS = RBO.getProperty('','FR_NEXT_PER',FR.NEXT.PER)
STATUS = RBO.getProperty('','FR_NEXT_DATE',FR.NEXT.DATE)
STATUS = RBO.getProperty('','FR_D_M_FLG',FR.D.M.FLG)
STATUS = RBO.getProperty('','FR_CLOSE_DATE',FR.CLOSE.DATE)
FOR P = 1 TO DCOUNT(FR.CURR.PER,VM)
   IF INDEX(FR.CURR.DATE<1,P>,'/',1) > 0 THEN FR.CURR.DATE<1,P> = ICONV(FR.CURR.DATE<1,P>,'D2/')
   IF INDEX(FR.NEXT.DATE<1,P>,'/',1) > 0 THEN FR.NEXT.DATE<1,P> = ICONV(FR.NEXT.DATE<1,P>,'D2/')
   IF INDEX(FR.CLOSE.DATE<1,P>,'/',1) > 0 THEN FR.CLOSE.DATE<1,P> = ICONV(FR.CLOSE.DATE<1,P>,'D2/')
NEXT P
*
STATUS = RBO.getProperty('','FngdFlag',FNGD.FLAG)
BEGIN CASE
CASE MODULE = 'IC'
  IF FNGD.FLAG = 'F' THEN
    MODULE := 'F'
  END ELSE MODULE := 'S'
CASE MODULE[1,2] = 'AP'
CASE MODULE[1,2] = 'AR'
CASE 1
  MODULE := 'S'
END CASE
*
TRANFILE=MODULE:".EOM.TRANS":CONO:DIV.CODE
REJECTFILE=MODULE:".POST.REJECTS":CONO:DIV.CODE
OPEN TRANFILE TO EOM.TRANS ELSE
  STMT='CREATE.FILE ':TRANFILE:' 1,1 101,1'
  UDTEXECUTE STMT CAPTURING JUNK
  STMT='COPY FROM DICT ':MODULE:'.EOM.TRANS TO DICT ':TRANFILE:' ALL'
  UDTEXECUTE STMT CAPTURING JUNK
END
OPEN REJECTFILE TO POST.REJECTS ELSE
  STMT='CREATE.FILE ':REJECTFILE:' 1,1 7,1'
  UDTEXECUTE STMT CAPTURING JUNK
  STMT='COPY FROM DICT ':MODULE:'.POST.REJECTS TO DICT ':REJECTFILE:' ALL'
  UDTEXECUTE STMT CAPTURING JUNK
END
***** OPEN FILES
*
  OPEN '','COMPANY' TO COMPANY ELSE ERRMSG='COMPANY FILE MISSING';GOTO 93000
  OPEN '','CONTROL' TO CONTROL ELSE ERRMSG='CONTROL FILE MISSING';GOTO 93000
  OPEN '','VEND' TO VEND ELSE ERRMSG='VEND FILE MISSING';GOTO 93000
  OPEN '','VOUCHERS' TO VOUCHERS ELSE ERRMSG='VOUCHERS FILE IS MISSING';GOTO 93000
  OPEN '','COA' TO COA ELSE ERRMSG='COA FILE IS MISSING';GOTO 93000
  OPEN '',TRANFILE TO EOM.TRANS ELSE ERRMSG=TRANFILE:' FILE MISSING';GOTO 93000
  OPEN '',REJECTFILE TO POST.REJECTS ELSE ERRMSG=REJECTFILE:' FILE IS MISSING';GOTO 93000
*
  MATREAD COMP.REC FROM COMPANY, CONO ELSE
      ERRMSG = "COMPANY RECORD IS MISSING"
      GOTO 93000
  END
  IN.ACCT.LEN=LEN(CO.ACCT.PIC)
  GEN.DIV='00'; GEN.DEPT='00'; GEN.CCTR='000'
  CLEARFILE EOM.TRANS
  CLEARFILE POST.REJECTS
  PRR.SEQ = 10000
  OLD.VEND = "!@#$%^&*"
  OLD.VEND.NAME = "!@#$%^&*"
  STMT = 'SSELECT VOUCHERS.TAG BY VEND_ WITH CONO = "':CONO:'"'
  IF DIV.CODE # 'ALL' THEN
     STMT := ' AND WITH DIV = "':DIV.CODE:'"'
  END
  UDTEXECUTE STMT CAPTURING JUNK
  DATA = 1
  LOOP
      READNEXT VCH.ID ELSE DATA = 0
  WHILE DATA DO
      IF CONO # VCH.ID[1,3] THEN GOTO 999
      VCH.NO = VCH.ID[4,99]
      MATREADU VCH.REC FROM VOUCHERS, VCH.ID ELSE
          MAT PRR.REC = ''
          PRR.FILE = 'VOUCHERS'
          PRR.ERR = 'CANNOT LOCATE'
          PRR.ID = VCH.NO
          PRR.SEQ = PRR.SEQ + 1
          MATWRITE PRR.REC ON POST.REJECTS, PRR.SEQ
          RELEASE VOUCHERS, VCH.ID
          GOTO 999
      END
      IF VCH.MON <> FR.CURR.PER<1,POS> THEN;* T23278
          RELEASE VOUCHERS, VCH.ID
          GOTO 999
      END
      IF VCH.GLA.DATE # "" AND VCH.GLA.DATE # "P" THEN
          RELEASE VOUCHERS, VCH.ID
          GOTO 999
      END
       IF VCH.DIV<1,1> # DIV.CODE AND DIV.CODE # "ALL" THEN
           RELEASE VOUCHERS, VCH.ID
           GOTO 999
       END
      VCNT = DCOUNT(VCH.VEND,VM)
      VCH.VEND.NAME = VCH.VEND<1,2>
      IF TRIM(VCH.DESC)[1,7] = "DELETED" THEN
          VCH.INV = "DELETED"
      END
      IF OLD.VEND # VCH.VEND THEN
          OLD.VEND = VCH.VEND
          NEW.REC = 0; NEW.PTR = 0
          IF VCH.VEND.NAME = "" THEN
              MATREAD VEND.REC FROM VEND , CONO:OLD.VEND<1,1> ELSE MAT VEND.REC = ""
              OLD.VEND.NAME = VEND.DESC
          END ELSE
              OLD.VEND.NAME = VCH.VEND.NAME
          END
      END
      CNT = COUNT(VCH.DIST.AMT,VM) + (VCH.DIST.AMT # '')
      FOR I = 1 TO CNT
          T.ACCT = VCH.ACCT<1,I>
          DIST.AMT = VCH.DIST.AMT<1,I>
          BEGIN CASE
              CASE VCH.DIV<1,I> = ""
                  CASH.DIV = GEN.DIV
                  CASH.DEPT = GEN.DEPT
                  CASH.CCTR = GEN.CCTR
              CASE VCH.DEPT<1,I> = ""
                  CASH.DIV = VCH.DIV<1,I>
                  CASH.DEPT = GEN.DEPT
                  CASH.CCTR = GEN.CCTR
              CASE VCH.CCTR<1,I> = ""
                  CASH.DIV = VCH.DIV<1,I>
                  CASH.DEPT = VCH.DEPT<1,I>[1,2] ;*T21478
                  CASH.CCTR = GEN.CCTR
              CASE 1
                  CASH.DIV = VCH.DIV<1,I>
                  CASH.DEPT = VCH.DEPT<1,I>[1,2] ;*T21478
                  CASH.CCTR = VCH.CCTR<1,I>
          END CASE
          MATREAD COA.REC FROM COA, CONO : T.ACCT ELSE COA.LEVEL = 0
          BEGIN CASE
              CASE COA.LEVEL = 0
                  T.ACCT = GEN.DIV : GEN.DEPT : GEN.CCTR : T.ACCT
              CASE COA.LEVEL = 1
                  T.ACCT = CASH.DIV : GEN.DEPT : GEN.CCTR : T.ACCT
              CASE COA.LEVEL = 2
                  T.ACCT = CASH.DIV : CASH.DEPT : GEN.CCTR : T.ACCT
              CASE 1
                  T.ACCT = CASH.DIV : CASH.DEPT : CASH.CCTR : T.ACCT
          END CASE
          GOSUB 1000
      NEXT I
      VCH.GLA.DATE = 'P'
      MATWRITE VCH.REC ON VOUCHERS, VCH.ID
999 REPEAT
  READ JUNK FROM POST.REJECTS,'10001' THEN
    UserID = PMCProperty<1,3>
 *   IN_PARAM = UserID:"!APEOPVP!111!AP307!":CONO:"!Print"
   IN_PARAM = UserID:"!APEOPVP!111!AP307!":CONO:"!":Printfalg
    IN_PARAM<2> = ''
    IN_PARAM<3> = 'EOD.REJECT.LISTING'
    IN_PARAM<4> = 'P'
    IN_PARAM<5> = 'PMCPROCS'
    IN_PARAM<6> = REJECTFILE
    IN_PARAM<7> = 'REJECTS'
   IN_PARAM<8> = EMAIL_ADDR ;*Email Address as Entered by the user
    OUT_PARAM=''
    UDTEXECUTE 'SSELECT ':REJECTFILE CAPTURING JUNK
    CALL GenerateReport_Sub(ERRMSG,IN_PARAM,OUT_PARAM)
    IF ERRMSG # "" THEN GOTO 93000
    REJECT.RPT.PRT='WARNING !!! MAKE SURE TO PICKUP POSTING REJECTS REPORT FROM PRINTER'
    STATUS=RBO.setProperty('','RejectRptPrinted',REJECT.RPT.PRT)
    STATUS=RBO.setProperty('','ReportImage',OUT_PARAM<2>)	
END ELSE
	IF Printfalg # "Print" THEN ERRMSG  = "There is no data to ":Printfalg 
	*GOTO 93000
END
  STATUS = RBO.setProperty('','FR_CURR_DATE',FR.CURR.DATE)
  STATUS = RBO.setProperty('','FR_NEXT_DATE',FR.NEXT.DATE)
  STATUS = RBO.setProperty('','FR_CLOSE_DATE',FR.CLOSE.DATE)
  FR.PRINT<1,POS> = ""
  MATWRITE FISCAL.REC ON CONTROL, CONO:FISCPFX:'FISCAL'
  GOTO 99999
1000 *
  ETR.ID = CONO : T.ACCT : OLD.VEND<1,1>
  BEGIN CASE
      CASE DIST.AMT > 0
          ETR.ID = ETR.ID : "!D*"
      CASE DIST.AMT + 0 < 0
          ETR.ID = ETR.ID : "!C*"
      CASE 1
          GOTO 1999
  END CASE
  IF VCNT > 1 THEN
      NEW.REC = 0
      FND = 0
      LOOP
          MATREAD ETR.REC FROM EOM.TRANS, ETR.ID:NEW.REC ELSE
              MAT ETR.REC = ''
              ETR.RDATE = OLD.VEND.NAME
          END
          IF ETR.RDATE # OLD.VEND.NAME THEN
              NEW.REC = NEW.REC + 1
          END ELSE
              ETR.ID = ETR.ID:NEW.REC
              FND = 1
          END
      UNTIL FND DO REPEAT
  END ELSE
      ETR.ID = ETR.ID:NEW.REC
      MATREAD ETR.REC FROM EOM.TRANS, ETR.ID ELSE
          MAT ETR.REC = ''
      END
  END
  ETR.AMT = ETR.AMT + DIST.AMT
  LOCATE VCH.NO IN ETR.TRAN<1>,1 BY "AR" SETTING PTR ELSE NULL
  INS VCH.NO BEFORE ETR.TRAN<1,PTR>
  INS VCH.INV.DATE BEFORE ETR.DATE<1,PTR>
  INS DIST.AMT BEFORE ETR.TAMT<1,PTR>
  INS VCH.INV BEFORE ETR.REF<1,PTR>
  ETR.RDATE = OLD.VEND.NAME
  IF PTR > 99 THEN NEW.PTR = 1
  MATWRITE ETR.REC ON EOM.TRANS, ETR.ID
1999 RETURN
93000 *
  STATUS=RBO.setProperty('','ServerStatus',1)
  STATUS=RBO.setProperty('','ServerMessage',ERRMSG)
  CMD='DELETE.FILE ': TRANFILE :' FORCE'
  UDTEXECUTE CMD CAPTURING JUNK
  CMD='DELETE.FILE ': REJECTFILE :' FORCE'
  UDTEXECUTE CMD CAPTURING JUNK
*** END OF JOB ***
99999 END
