   SUBROUTINE JCS_EOM_POST_FG(MAT EOM.ACCT.REC,MAT GLTABLE.REC,FNGD.WIP.HIST,FNGD_WIP_HIST_TAG,INV_RECEIPTS,TRANFILE,REJECTFILE,WIPFILE,ERRMSG)
*********************************************************************
* REVISION    - [12.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - JCSBP
* PROGRAM     - JCS.EOM.POST.FG
* DATE        - 03/28/93
* DESCRIPTION -
* TASK
*ENDDOC
*********************************************************************
*
*---- INSERT FILE EQUATE
*
$INCLUDE JCS.CPYLIB EOM.ACCT
$INCLUDE JCS.CPYLIB JOB
$INCLUDE OPS.CPYLIB FNGD.WIP.HIST
$INCLUDE OPS.CPYLIB JOB.FNGD.STATS
$INCLUDE ICS.CPYLIB INV_RECEIPTS
$INCLUDE PMC.CPYLIB COMPANY
$INCLUDE PMC.CPYLIB COMP.OPS
$INCLUDE PMC.CPYLIB GLTABLE
$INCLUDE PMC.CPYLIB COA
$INCLUDE PMC.CPYLIB EOM.TRANS
$INCLUDE PMC.CPYLIB POST.REJECTS
$INCLUDE ICS.CPYLIB CATEGORY
$INCLUDE ICS.CPYLIB INVENTORY
$INCLUDE CPYLIB CHAR
OPEN 'JOB' TO JOB ELSE ERRMSG='Cannot open JOB File'; GOTO 99999
OPEN 'JOB.FNGD.STATS' TO JOB.FNGD.STATS ELSE ERRMSG='Cannot open JOB.FNGD.STATS File'; GOTO 99999
OPEN 'COA' TO COA ELSE ERRMSG='Cannot open COA File'; GOTO 99999
OPEN 'INVENTORY' TO INVENTORY ELSE ERRMSG='Cannot open INVENTORY File'; GOTO 99999
OPEN 'CATEGORY' TO CATEGORY ELSE ERRMSG='Cannot open CATEGORY File'; GOTO 99999
OPEN '',TRANFILE TO EOM.TRANS ELSE ERRMSG=TRANFILE:' FILE MISSING';GOTO 99999
OPEN '',REJECTFILE TO POST.REJECTS ELSE ERRMSG=REJECTFILE:' FILE IS MISSING';GOTO 99999
OPEN '',WIPFILE TO WIP.SALES.STATS ELSE ERRMSG=WIPFILE:' FILE IS MISSING';GOTO 99999
*
*---- MAIN
*
   NEW.REC = 0; JNEW.REC = 0
   SELECT FNGD_WIP_HIST_TAG
   DATA = 1
   LOOP
      READNEXT FWH.ID ELSE DATA = 0
   WHILE DATA DO
      IF CONO # FWH.ID[1,3] THEN GOTO 999
      JOBNO=FWH.ID[4,99]
      MATREADU FWH.REC FROM FNGD.WIP.HIST, FWH.ID ELSE
         MAT PRR.REC = ''
         PRR.JOB = JOBNO
         PRR.FILE = 'FNGD.WIP.HIST'
         PRR.ID = JOBNO
         PRR.ERR = 'CANNOT LOCATE'
         PRR.SEQ = PRR.SEQ + 1
         MATWRITE PRR.REC ON POST.REJECTS, PRR.SEQ
         GOTO 999
      END
      MATREAD JFS.REC FROM JOB.FNGD.STATS, FWH.ID ELSE MAT JFS.REC = "" 
      MATREAD JOB.REC FROM JOB, FWH.ID ELSE
         MAT PRR.REC = ''
         PRR.JOB = JOBNO
         PRR.FILE = 'JOB'
         PRR.ID = JOBNO
         PRR.ERR = 'CANNOT LOCATE'
         PRR.SEQ = PRR.SEQ + 1
         MATWRITE PRR.REC ON POST.REJECTS, PRR.SEQ
         GOTO 999
      END
      FNGD.WIP = 0; FNGD.AMT = 0
      HOLD.CATG = ""
      HOLD.FNGD = ""
      LOCATE PERIOD IN FWH.WIP.PER<1>,1 SETTING MPTR THEN
         FNGD.WIP = FWH.WIP.AMT<1,MPTR>
      END
      PCNT = DCOUNT(JFS.PROD,VM)            
      FOR P = 1 TO PCNT
         PROD = JFS.PROD<1,P> 
         MATREAD INV.REC FROM INVENTORY, CONO:PROD ELSE
            MAT PRR.REC = ""
            PRR.JOB = JOBNO
            PRR.FILE = "INVENTORY"
            PRR.ID = PROD
            PRR.ERR = "CANNOT LOCATE"
            PRR.SEQ = PRR.SEQ + 1
            MATWRITE PRR.REC ON POST.REJECTS, PRR.SEQ
            GOTO 299
         END
         MATREAD CATG.REC FROM CATEGORY, CONO:INV.LINE ELSE
            MAT PRR.REC = ""
            PRR.JOB = JOBNO
            PRR.FILE = "CATEGORY"
            PRR.ID = INV.LINE
            PRR.ERR = "CANNOT LOCATE"
            PRR.SEQ = PRR.SEQ + 1
            MATWRITE PRR.REC ON POST.REJECTS, PRR.SEQ
            GOTO 299
         END
         LOCATE INV.LINE IN HOLD.CATG<1>,1 SETTING CFND ELSE
            HOLD.CATG<1,CFND> = INV.LINE
            HOLD.FNGD<1,CFND> = 0
         END
         SCNT = DCOUNT(JFS.RECP<1,P>,SM)
         FOR S = 1 TO SCNT
            RECP = JFS.RECP<1,P,S>   ; * T22367 Changes to JFS.PROD      
            MATREAD INVR.REC FROM INV_RECEIPTS, CONO:RECP ELSE
               MAT PRR.REC = ""
               PRR.JOB = JOBNO
               PRR.FILE = "INV_RECEIPTS"
               PRR.ID = RECP
               PRR.ERR = "CANNOT LOCATE"
               PRR.SEQ = PRR.SEQ + 1
               MATWRITE PRR.REC ON POST.REJECTS, PRR.SEQ
               GOTO 199
            END
            LOCATE "EOM" IN INVR.STATUS<1>,1 SETTING XX ELSE 
               IF PERIOD=INVR.PERIOD THEN
                  HOLD.FNGD<1,CFND> += INVR.TOT.COST
               END
            END
199 *
         NEXT S
299 *
      NEXT P
      FDONE = 0
      TEMP.WIP = FNGD.WIP
      PCT = 1
      BEGIN CASE
         CASE DCOUNT(HOLD.CATG,VM) = 1
            FNGD.AMT = HOLD.FNGD
            FDONE = 1
            GOSUB 300
         CASE DCOUNT(HOLD.CATG,VM) = 0
            MAT CATG.REC = ''
            FNGD.AMT = 0
            FDONE = 1
            GOSUB 300
         CASE 1
            FOR F = 1 TO DCOUNT(HOLD.CATG,VM)
               IF SUM(HOLD.FNGD,VM) # 0 THEN
                  PCT = HOLD.FNGD<1,F> / SUM(HOLD.FNGD)
                  TEMP.WIP = ICONV(FNGD.WIP * PCT,'MD0')
                  FNGD.AMT = HOLD.FNGD<1,F>
                  MATREAD CATG.REC FROM CATEGORY,CONO:HOLD.CATG<1,F> ELSE MAT CATG.REC = ''
               END ELSE
                  FNGD.AMT = 0
                  MATREAD CATG.REC FROM CATEGORY,CONO:HOLD.CATG<1,1> ELSE MAT CATG.REC = ''
                  F = DCOUNT(HOLD.CATG,VM)
               END
               IF F = DCOUNT(HOLD.CATG,VM) THEN FDONE = 1
               GOSUB 300
            NEXT F
      END CASE
      GOTO 999
*
*---- WIP DIFFERENTIAL
*
300 *
      BEGIN CASE
         CASE CATG.INV.VAR = FNGD.VAR.ACCT
         CASE CATG.INV.VAR # ""
            CATG.INV.VAR = CATG.INV.VAR : STR("0",IN.ACCT.LEN-LEN(CATG.INV.VAR))
            CATG.INV.VAR = CATG.INV.VAR[1,IN.ACCT.LEN]
            MATREAD COA.REC FROM COA, CONO : CATG.INV.VAR ELSE COA.LEVEL = 0
            FNGD.VAR.ACCT = CATG.INV.VAR
            FNGD.VAR.LEVEL = COA.LEVEL
         CASE GLTB.FNGD.VAR = FNGD.VAR.ACCT
         CASE 1
            MATREAD COA.REC FROM COA, CONO : GLTB.FNGD.VAR ELSE COA.LEVEL = 0
            FNGD.VAR.ACCT = GLTB.FNGD.VAR
            FNGD.VAR.LEVEL = COA.LEVEL
      END CASE
      BEGIN CASE
         CASE FNGD.VAR.LEVEL < 1
            T.ACCT = GEN.DIV : GEN.DEPT : GEN.CCTR : FNGD.VAR.ACCT
         CASE 1
            T.ACCT = JOB.DIV : GEN.DEPT : GEN.CCTR : FNGD.VAR.ACCT
      END CASE
      AMT = TEMP.WIP - FNGD.AMT
      LOCATE PERIOD IN FWH.GLA.PER<1>,1 BY "AR" SETTING PINDX THEN
         AMT = AMT - ICONV(FWH.GLA.AMT<1,PINDX> * PCT,'MD0')
         FWH.GLA.EOD<1,PINDX> += AMT
      END ELSE
         FWH.GLA.PER = INSERT(FWH.GLA.PER,1,PINDX,1,PERIOD)
         FWH.GLA.EOD = INSERT(FWH.GLA.EOD,1,PINDX,1,AMT)
         FWH.GLA.AMT = INSERT(FWH.GLA.AMT,1,PINDX,1,"0")
      END
      BEGIN CASE
         CASE AMT + 0 > 0
            TRAN.AMT = AMT
            GOSUB 3000
         CASE AMT + 0 < 0
            TRAN.AMT = 0 - AMT
            GOSUB 4000
      END CASE
      BEGIN CASE
         CASE WIP.CLR.LEVEL < 1
            T.ACCT = GEN.DIV : GEN.DEPT : GEN.CCTR : WIP.CLR.ACCT
         CASE 1
            T.ACCT = JOB.DIV : GEN.DEPT : GEN.CCTR : WIP.CLR.ACCT
      END CASE
      BEGIN CASE
         CASE AMT + 0 > 0
            TRAN.AMT = AMT
            GOSUB 4000
         CASE AMT + 0 < 0
            TRAN.AMT = 0 - AMT
            GOSUB 3000
      END CASE
      IF FDONE THEN MATWRITE FWH.REC ON FNGD.WIP.HIST, FWH.ID
      RETURN
999 *
      RELEASE FNGD.WIP.HIST, FWH.ID
   REPEAT
   GOTO 99999
*
*---- DEBIT (JOB)
*
3000 *
   ETR.ID = CONO : T.ACCT : JOBNO : "!FG-D*" : JNEW.REC
   MATREAD ETR.REC FROM EOM.TRANS, ETR.ID ELSE
      MAT ETR.REC = ""
      ETR.REF = JOB.CUST
   END
   ETR.AMT = ETR.AMT + TRAN.AMT
   LOCATE JOBNO IN ETR.TRAN<1>,1 BY "AR" SETTING PTR ELSE NULL
   INS JOBNO BEFORE ETR.TRAN<1,PTR>
   INS JOB.STAT.DATE<1,1> BEFORE ETR.DATE<1,PTR>
   INS TRAN.AMT BEFORE ETR.TAMT<1,PTR>
   IF PTR > 99 THEN JNEW.REC = JNEW.REC+1
   MATWRITE ETR.REC ON EOM.TRANS, ETR.ID
   RETURN
*
*---- CREDIT (JOB)
*
4000 *
   ETR.ID = CONO : T.ACCT : JOBNO : "!FG-C*" : JNEW.REC
   MATREAD ETR.REC FROM EOM.TRANS, ETR.ID ELSE
      MAT ETR.REC = ""
      ETR.REF = JOB.CUST
   END
   ETR.AMT = ETR.AMT - TRAN.AMT
   LOCATE JOBNO IN ETR.TRAN<1>,1 BY "AR" SETTING PTR ELSE NULL
   INS JOBNO BEFORE ETR.TRAN<1,PTR>
   INS JOB.STAT.DATE<1,1> BEFORE ETR.DATE<1,PTR>
   INS (0 - TRAN.AMT) BEFORE ETR.TAMT<1,PTR>
   IF PTR > 99 THEN JNEW.REC = JNEW.REC+1
   MATWRITE ETR.REC ON EOM.TRANS, ETR.ID
   RETURN
*
*---- END
*
99999 *
   RETURN

