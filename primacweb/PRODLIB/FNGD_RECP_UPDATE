SUBROUTINE FNGD_RECP_UPDATE(DFRID,COST.SALE.PCT)
*********************************************************************
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - EPRIMAC
* PROGRAM     - FNGD_RECP_UPDATE
* BY          - KHAJA ZIAUDDIN
* DATE        - 07/12/2003  (mm/dd/yyyy)
* DESCRIPTION   This program is called from FGRM_UPDATE . This will post the finished goods receipts
*		   
*ENDDOC
*************************************************************
$INCLUDE WWINSERT RBO.H

$INCLUDE CPYLIB COMMON1
$INCLUDE JCS.CPYLIB COM.JCS.LINK  
$INCLUDE ICS.CPYLIB COM.INV.MAIN  
$INCLUDE ICS.CPYLIB COM.INV.SERIAL
$INCLUDE JCS.CPYLIB COM.INV.STATS 
$INCLUDE PMC.CPYLIB COM.CUST      
$INCLUDE OPS.CPYLIB COM.ORDER     
$INCLUDE ICS.CPYLIB COM.INV.CNV   
$INCLUDE OPS.CPYLIB COM.OPS.LINK  

$INCLUDE PMC.CPYLIB COMPANY
$DEFINE CUSTOMER
$INCLUDE PMC.CPYLIB CUSTOMER
$INCLUDE PMC.CPYLIB CURR.CODE
$DEFINE JOB
$INCLUDE JCS.CPYLIB JOB
$DEFINE INVENTORY
$INCLUDE ICS.CPYLIB INVENTORY
$DEFINE CATEGORY
$INCLUDE ICS.CPYLIB CATEGORY
$DEFINE INVWHSE
$INCLUDE ICS.CPYLIB INV.WHSE
$DEFINE INVWHSELOC
$INCLUDE ICS.CPYLIB INV.WHSE.LOC
$DEFINE INVCNV
$INCLUDE ICS.CPYLIB INV.CNV
$DEFINE FNGDSTATS
$INCLUDE ICS.CPYLIB FNGD.STATS
$INCLUDE ICS.CPYLIB FNGD.JOB.STATS
$DEFINE ORDER
$INCLUDE OPS.CPYLIB ORDER
$INCLUDE OPS.CPYLIB ORDER.DETAIL
$INCLUDE OPS.CPYLIB ORDER.RELEASE
$DEFINE ORDERDETAILINQ
$INCLUDE OPS.CPYLIB ORDER.DETAIL.INQ
$DEFINE JOBFNGDSTATS
$INCLUDE OPS.CPYLIB JOB.FNGD.STATS
$DEFINE INVAUDITHIST
$INCLUDE ICS.CPYLIB INV_AUDIT_HIST
$DEFINE DAILYFNGDRECEIPT
$INCLUDE OPS.CPYLIB DAILY_FNGD_RECEIPT
$INCLUDE PMC.CPYLIB GLTABLE
$INCLUDE ICS.CPYLIB WAREHOUSE
$DEFINE FILEVARS
$INCLUDE CPYLIB FILE.VARS
$INCLUDE CPYLIB CHAR
*
DEFFUN DIVISION_POSITION(CONO,CONTROL.FILE,DIV.CODE)          
DEFFUN CURRENT_PERIOD(CONO,CONTROL.FILE,DIV.POS,FISCAL.FLAG)  
*
*---- Initialization
*

CONO=DFRID[1,3]
RECP.NO=DFRID[4,99]
GEN.SHPNO="000"
TODAY=DATE()
DFR.STATUS=""
GEN.CCTR = "000"   
GEN.DEPT = "00"    
GEN.DIV  = "00"    
OPEN.FLAG=1
*
IF DFR.PRT.DATE="" THEN
  DFR.STATUS="Must print the Receipt before posting"
  GOTO 99999
END
DFR.TOT.QTY=SUM(DFR.QTY)
DFR.TOT.SQTY=SUM(DFR.SQTY)
RECV.LEN=0
IF DFR.TOT.QTY=0 OR DFR.TOT.SQTY=0 THEN
  DFR.STATUS="Receipt quantity is zero?"
  GOTO 99999
END
INV.ID=CONO:DFR.PROD
MATREADU INV.REC FROM INVENTORY, INV.ID ELSE
  DFR.STATUS="Cannot locate Product # ":DFR.PROD : " : " :DFRID
  GOTO 99900
END
IF INV.M.LINE # "FNGD" AND INV.M.LINE # "SFNGD" THEN
  DFR.STATUS="(":DFR.PROD:") is not setup as a Finished Goods Product"
  GOTO 99900
END
MATREAD CATG.REC FROM CATEGORY, CONO:INV.LINE ELSE
  DFR.STATUS="Cannot locate Product Line # ":INV.LINE
  GOTO 99900
END
IF CATG.COST.TYPE#"AC" THEN
  DFR.STATUS="Actual costing must be used for this product line !!" 
  GOTO 99900 
END
$INCLUDE ICSBP INV.UM.CNV
MATREADU JFS.REC FROM JOB.FNGD.STATS, CONO:DFR.JOB ELSE
  DFR.STATUS="NO Finished Goods for Job # ":DFR.JOB
  GOTO 99800
END
PTR=1
LOOP
  LOCATE DFR.PROD IN JFS.PROD<1>,PTR SETTING JFSL THEN
    IF JFS.WHSE<1,JFSL>=DFR.WHSE THEN PTR=0
  END ELSE
    PTR=0; JFSL=0
  END
WHILE PTR DO
  PTR=JFSL+1
REPEAT
IF NOT(JFSL) THEN
  DFR.STATUS="NO (":DFR.PROD:") product for Job # ":DFR.JOB
  GOTO 99800
END
DFR.UN.PRICE=JFS.U.PRICE<1,JFSL>
IWH.ID=INV.ID:"!":DFR.WHSE
MATREADU IWH.REC FROM INV.WHSE, IWH.ID ELSE
  DFR.STATUS="Cannot locate INV.WHSE # ":DFR.PROD:", ":DFR.WHSE
  GOTO 99700
END
LOCATE DFR.LOC IN IWH.LOC<1>,1 SETTING LLOC ELSE
  IWH.LOC<1,LLOC>=DFR.LOC
END
IWLO.ID=IWH.ID:"!":DFR.LOC
MATREADU IWLO.REC FROM INV.WHSE.LOC, IWLO.ID ELSE
  MAT IWLO.REC=""
END
IF IWLO.LOC.ON.HAND+DFR.TOT.QTY < 0 THEN
  DFR.STATUS="Cannot let location quantity go negative"
  GOTO 99600
END
FJS.ID=IWH.ID:"!":DFR.JOB
MATREADU FJS.REC FROM FNGD.JOB.STATS, FJS.ID ELSE
  DFR.STATUS="Cannot locate FNGD.JOB.STATS # ":DFR.PROD:", ":DFR.WHSE:", ":DFR.JOB
  GOTO 99400
END
MATREADU FGS.REC FROM FNGD.STATS, IWH.ID ELSE
  DFR.STATUS="Cannot locate FNGD.STATS # ":DFR.PROD:", ":DFR.WHSE
  GOTO 99300
END
LOCATE DFR.JOB IN FGS.JOB<1>,1 SETTING JFGL ELSE
  DFR.STATUS="Cannot locate JOB # ":DFR.JOB:" in FNGD.STATS # ":DFR.PROD:", ":DFR.WHSE
  GOTO 99300
END
ACTION=1 ; LOC.SEQ='' ; LAST='' ; PERIOD=''
MAT ORG.IWH.REC = MAT IWH.REC
CALL OPS_IWH_SUB(CONO,PERIOD,LOC.SEQ,LAST,ACTION,OPEN.FLAG)
*
*---- Process orders if distributed
*
LOCK.FLAG=1
OCNT=DCOUNT(DFR.ORDER,@VM)
BEGIN CASE
  CASE DFR.ORDER="" OR (DFR.ORDER<1,OCNT>="*FNGD*" AND DFR.QTY<1,OCNT>=DFR.TOT.QTY)
    DFR.UN.SALE=DFR.UN.PRICE
    PLOC=0; PDLOC=0
    ORD.ID=""
    SHPNO=""
    CUSTID=DFR.CUST
    RECV.QTY=DFR.TOT.QTY
    RECV.SQTY=DFR.TOT.SQTY
    UNIT.COST=DFR.UN.PRICE
    UNIT.SALE=DFR.UN.SALE
    TOT.AMT=INT(UNIT.SALE/100*RECV.QTY/1000/(INV.COST.WT/100)+.5)
    TOT.COST = INT(UNIT.COST/100 * RECV.QTY/1000/(INV.COST.WT/100) + .5)
    OPTR=1
    DFR.TOT.AMT=TOT.AMT
    DFR.TOT.COST=TOT.COST
    GOSUB UPDATE.FIFO
    IF DFR.STATUS # "" THEN GOTO 99300
    INV.LA.PUR=RECV.DATE
    IWH.LA.PUR=RECV.DATE
    IWH.ON.HAND=IWH.ON.HAND+RECV.QTY
    GOSUB SET.INAH
    IF DFR.STATUS # '' THEN GOTO 99300
    ACTION=4 ; LAST='Y' ; LOC.SEQ=1
    PERIOD=DFR.PERIOD
    CONORECPNO=CONO:RECP.NO
    CALL OPS_IWH_SUB(CONORECPNO,PERIOD,LOC.SEQ,LAST,ACTION,OPEN.FLAG)
    IF INAH.PERIOD=CUR.PERIOD THEN
      CALL INV_AVG_COST_MAINT(MAT IWH.REC, INV.COST.WT,CUR.PERIOD)
    END
    JFS.F.QTY<1,JFSL>=JFS.F.QTY<1,JFSL>+RECV.QTY
    FJS.F.QTY=FJS.F.QTY+RECV.QTY
    FGS.M.QTY<1,JFGL>=JFS.M.QTY<1,JFSL> - JFS.F.QTY<1,JFSL>
    IF FGS.M.QTY<1,JFGL> < 0 THEN FGS.M.QTY<1,JFGL>=0
    GOSUB REDUCE.ALLOCATION;* T22643
    GOSUB WRITE.OUT.REC
  CASE 1
    DFR.TOT.AMT=0
    DFR.TOT.COST=0
    FOR OPTR=1 TO OCNT
      ORD.ID=DFR.ORDER<1,OPTR>
      SHPNO=DFR.SHIP.TO<1,OPTR>
      RECV.QTY=DFR.QTY<1,OPTR>+0
      RECV.SQTY=DFR.SQTY<1,OPTR>+0
      UNIT.COST=DFR.UN.PRICE
      UNIT.SALE=UNIT.COST
      IF RECV.QTY+0 > 0 THEN
        IF NOT(LOCK.FLAG) THEN GOSUB REREAD.RECORDS
        GOSUB BUILD.ORDER.DETAIL
        IF DFR.STATUS # "" THEN GOTO 99200
        TOT.AMT=INT(UNIT.SALE/100*RECV.QTY/1000/(INV.COST.WT/100)+.5)
        TOT.COST = INT(UNIT.COST/100*RECV.QTY/1000/(INV.COST.WT/100) + .5)
        DFR.UN.SALE<1,OPTR>=UNIT.SALE
        DFR.TOT.AMT = DFR.TOT.AMT + TOT.AMT     
        DFR.TOT.COST = DFR.TOT.COST + TOT.COST  
      END
    NEXT OPTR
*
    RECV.QTY=DFR.TOT.QTY
    RECV.SQTY=DFR.TOT.SQTY
    GOSUB UPDATE.FIFO
    IF DFR.STATUS # "" THEN
      IF PDLOC THEN GOTO 99200 ELSE GOTO 99300
    END
    INV.LA.PUR=RECV.DATE
    IWH.LA.PUR=RECV.DATE
    IWH.ON.HAND=IWH.ON.HAND+RECV.QTY
    GOSUB SET.INAH
    IF DFR.STATUS # '' THEN GOTO 99300
    ACTION=4 ; LAST='Y' ; LOC.SEQ=1
    PERIOD=DFR.PERIOD
    CONORECPNO=CONO:RECP.NO
    CALL OPS_IWH_SUB(CONORECPNO,PERIOD,LOC.SEQ,LAST,ACTION,OPEN.FLAG)
    IF INAH.PERIOD=CUR.PERIOD THEN
      CALL INV_AVG_COST_MAINT(MAT IWH.REC, INV.COST.WT,CUR.PERIOD)
    END
    JFS.F.QTY<1,JFSL>=JFS.F.QTY<1,JFSL>+RECV.QTY
    FJS.F.QTY=FJS.F.QTY+RECV.QTY
    FGS.M.QTY<1,JFGL>=JFS.M.QTY<1,JFSL> - JFS.F.QTY<1,JFSL>
    IF FGS.M.QTY<1,JFGL> < 0 THEN FGS.M.QTY<1,JFGL>=0
    FOR OPTR=1 TO OCNT                 
      ORD.ID=DFR.ORDER<1,OPTR>         
      SHPNO=DFR.SHIP.TO<1,OPTR>        
      RECV.QTY=DFR.QTY<1,OPTR>+0       
      RECV.SQTY=DFR.SQTY<1,OPTR>+0     
      UNIT.COST=DFR.UN.PRICE           
      UNIT.SALE=UNIT.COST              
      IF RECV.QTY+0 > 0 THEN           
        IF NOT(LOCK.FLAG) THEN GOSUB REREAD.RECORDS
        GOSUB BUILD.ORDER.DETAIL
        GOSUB REDUCE.ALLOCATION
        GOSUB WRITE.OUT.REC
        GOSUB RSV.FNGD
        MATREADU DFR.REC FROM DAILY_FNGD_RECEIPT, DFRID ELSE
	   ERRMSG = "DAILY_FNGD_RECEIPT file has been corrupted"
	   GOTO 93000
        END
        IF DFR.PICK.FLG<1,OPTR>="Y" THEN
          PKT.ID=CONO:ORD.ID:"!":SHPNO:"!":DFR.WHSE
          READ REC FROM PICK.TICKET.PRT, PKT.ID ELSE
            WRITE "" ON PICK.TICKET.PRT, PKT.ID
          END
        END
      END
*      END
    NEXT OPTR
END CASE
IF LOCK.FLAG THEN
  GOTO 99300
END ELSE
  MATREADU DFR.REC FROM DAILY_FNGD_RECEIPT, DFRID ELSE
    ERRMSG = "DAILY_FNGD_RECEIPT file has been corrupted"
    GOTO 93000
  END
  GOTO 99999
END
*
**************************************************************************
****** S U B RO U T I N E S **********************************************
**************************************************************************
*
************************
BUILD.ORDER.DETAIL: 
************************
*
PLOC=0; PDLOC=0; JLOC=0
IF ORD.ID="*FNGD*" THEN
  MAT ORD.REC=""
  CUSTID=DFR.CUST
  RETURN
END
MATREADU ORD.REC FROM ORDER, CONO:ORD.ID ELSE
  DFR.STATUS="Cannot locate ORDER # ":ORD.ID
  RETURN
END
IF ORD.STATUS<1,1>="CLOSED" OR ORD.STATUS<1,1>="CANCEL" THEN
  DFR.STATUS="Order ":ORD.ID:" has either been closed or cancelled"
  RETURN
END
CUSTID=ORD.CUST
STATUS="L"; SHPTO="ALL"
CALL ORDER_LINE_UPD(CONO,ORD.ID,SHPTO,STATUS)
PTR=1
LOOP
  LOCATE DFR.PROD IN ODQ.PROD<1>,PTR SETTING PLOC THEN
    IF (DFR.WHSE=ODQ.WHSE<1,PLOC>) AND ODQ.KIT<1,PLOC>="N" THEN PTR=0
  END ELSE
    PLOC=0; PTR=0
  END
WHILE PTR DO
  PTR=PLOC+1
REPEAT
IF PLOC=0 THEN
  DFR.STATUS="Cannot locate Product, Whse # ":DFR.PROD:", ":DFR.WHSE:" for ORDER # ":ORD.ID
  RETURN
END
PDLOC=0; JLOC=0
PTR=1
LOOP
  LOCATE DFR.JOB IN ODQ.JOB<1,PLOC>,PTR SETTING JLOC THEN
    IF SHPNO="" OR ODQ.JOB.SHPNO<1,PLOC,JLOC>=SHPNO THEN PTR=0
  END ELSE
    JLOC=0; PTR=0
  END
WHILE PTR DO
  PTR=JLOC+1
REPEAT
IF JLOC > 0 THEN
  SHPNO=ODQ.JOB.SHPNO<1,PLOC,JLOC>
  LOCATE SHPNO IN ORD.SHIP.TO<1>,1 SETTING S THEN
    FOR P=1 TO ORD.DET.REC.SIZE
      ORD.DET.REC(P)=ORD.DET.SUM(P,S)
    NEXT P
    PTR=1
    LOOP
      LOCATE DFR.PROD IN OSD.PROD<1>,PTR SETTING PDLOC THEN
        IF (DFR.WHSE=ODQ.WHSE<1,PDLOC>) AND ODQ.KIT<1,PDLOC>="N" THEN PTR=0
      END ELSE
        PDLOC=0; PTR=0
      END
    WHILE PTR DO
      PTR=PDLOC+1
     REPEAT
    IF PDLOC > 0 THEN UNIT.SALE=OSD.PRICE<1,PDLOC>
  END
END
RETURN
*
************
UPDATE.FIFO: 
************
*
RECV.DATE=DFR.RECP.DATE
RECV.COST=UNIT.COST
RECV.SALE=UNIT.SALE
$INCLUDE ICSBP FNGD.RECP.INCLUDE
DFR.STATUS=ERRMSG
RETURN
*
******************
REDUCE.ALLOCATION: 
******************
*
IF PDLOC THEN
  LOCATE ORD.ID IN JFS.ORDER<1,JFSL>,1 SETTING OLOC THEN
    JFS.ORD.QTY<1,JFSL,OLOC>=JFS.ORD.QTY<1,JFSL,OLOC> - RECV.QTY
    IF JFS.ORD.QTY<1,JFSL,OLOC> < 1 THEN
      JFS.ORDER=DELETE(JFS.ORDER,1,JFSL,OLOC)
      JFS.ORD.QTY=DELETE(JFS.ORD.QTY,1,JFSL,OLOC)
    END
    JFS.A.QTY<1,JFSL>=SUM(JFS.ORD.QTY<1,JFSL>)
    FGS.A.QTY<1,JFGL>=JFS.A.QTY<1,JFSL>
  END
  LOCATE ORD.ID IN FJS.ORD<1>,1 SETTING OLOC THEN
    FJS.ORD.QTY<1,OLOC>=FJS.ORD.QTY<1,OLOC> - RECV.QTY
    IF FJS.ORD.QTY<1,OLOC> < 1 THEN
      FJS.ORD=DELETE(FJS.ORD,1,OLOC,0)
      FJS.ORD.QTY=DELETE(FJS.ORD.QTY,1,OLOC,0)
    END
    FJS.A.QTY=SUM(FJS.ORD.QTY<1,JFSL>)
  END
END
LOCATE RECP.NO IN JFS.RECP<1,JFSL>,1 SETTING PPTR ELSE
  JFS.RECP<1,JFSL,PPTR>=RECP.NO
END
RETURN
*
**************
WRITE.OUT.REC: 
**************
*
MATWRITE INV.REC ON INVENTORY, INV.ID
MATWRITE JFS.REC ON JOB.FNGD.STATS, CONO:DFR.JOB
MATWRITE FJS.REC ON FNGD.JOB.STATS, FJS.ID
MATWRITE FGS.REC ON FNGD.STATS, IWH.ID
MATWRITE DFR.REC ON DAILY_FNGD_RECEIPT, DFRID
LOCK.FLAG=0
RETURN
*
**************
RSV.FNGD: 
**************
*
IF ORD.ID#"*FNGD*" THEN
  DQTY=RECV.QTY
  LOOP WHILE (JLOC AND DQTY > 0) DO
    BEGIN CASE
      CASE DQTY >= ODQ.JOB.QTY<1,PLOC,JLOC>
        RQTY=DQTY
        DQTY=0
        ODQ.JOB.QTY<1,PLOC,JLOC>=0
      CASE 1
        ODQ.JOB.QTY<1,PLOC,JLOC>=ODQ.JOB.QTY<1,PLOC,JLOC> - DQTY
        RQTY=DQTY
        DQTY=0
    END CASE
    REL.NO=""; REL.DATE=""
    RCNT=DCOUNT(ORD.REL.NO,@VM)
    FOR R=1 TO RCNT
      MATREAD ORR.REC FROM ORDER.RELEASE, CONO:ORD.REL.NO<1,R> THEN
        BEGIN CASE
          CASE ORR.STATUS # ""
          CASE ORR.SHIP.TO # SHPNO
          CASE ORR.QTY<1,PLOC>=0
          CASE 1
            LOCATE ORR.DUE.DATE IN REL.DATE,1 BY "AR" SETTING RPTR THEN
              RPTR=RPTR+1
            END
            REL.NO=INSERT(REL.NO,RPTR,0,0,ORD.REL.NO<1,R>)
            REL.DATE=INSERT(REL.DATE,RPTR,0,0,ORR.DUE.DATE)
        END CASE
      END
    NEXT R
    TO.RESV=RQTY
    RCNT=DCOUNT(REL.NO,@AM)
    FOR R=1 TO RCNT WHILE TO.RESV > 0
      MATREADU ORR.REC FROM ORDER.RELEASE, CONO:REL.NO<R> THEN
        P=1; RESVD=0
        LOOP
          LOCATE REL.NO<R> IN ODQ.REL.NO<1,PLOC>,P SETTING RPTR THEN
            RESVD=RESVD+ODQ.REL.QTY<1,PLOC,RPTR>
            P=RPTR+1
          END ELSE
            P=0
          END
        WHILE P DO REPEAT
        REL.OPEN=ORR.QTY<1,PLOC> - RESVD
        IF REL.OPEN > 0 THEN
          IF (REL.OPEN > TO.RESV)  THEN REL.OPEN=TO.RESV
          FPTR=DCOUNT(ODQ.FI.NO<1,PLOC>,@SM)+1
          ODQ.FI.NO<1,PLOC,FPTR>=RECP.NO
          ODQ.FI.SHPNO<1,PLOC,FPTR>=SHPNO
          ODQ.FI.QTY<1,PLOC,FPTR>=REL.OPEN
          ODQ.REL.NO<1,PLOC,FPTR>=REL.NO<R>
          ODQ.REL.QTY<1,PLOC,FPTR>=REL.OPEN
          TO.RESV=TO.RESV - REL.OPEN
        END
      END
    NEXT R
    IF TO.RESV=RQTY THEN
      FPTR=DCOUNT(ODQ.FI.NO<1,PLOC>,@SM)+1
      ODQ.FI.NO<1,PLOC,FPTR>=RECP.NO
      ODQ.FI.SHPNO<1,PLOC,FPTR>=SHPNO
      ODQ.FI.QTY<1,PLOC,FPTR>=RQTY
    END ELSE                                                      
      ODQ.FI.QTY<1,PLOC,FPTR> = ODQ.FI.QTY<1,PLOC,FPTR> + TO.RESV 
    END
    ODQ.R.QTY<1,PLOC>=SUM(ODQ.FI.QTY<1,PLOC>)
    ODQ.F.QTY<1,PLOC>=ODQ.F.QTY<1,PLOC>+RQTY
    IF ODQ.JOB.QTY<1,PLOC,JLOC> < 1 THEN
      ODQ.JOB=DELETE(ODQ.JOB,1,PLOC,JLOC)
      ODQ.JOB.SHPNO=DELETE(ODQ.JOB.SHPNO,1,PLOC,JLOC)
      ODQ.JOB.QTY=DELETE(ODQ.JOB.QTY,1,PLOC,JLOC)
    END
    ODQ.A.QTY<1,PLOC>=SUM(ODQ.JOB.QTY<1,PLOC>)
    PTR=JLOC+1
    LOCATE DFR.JOB IN ODQ.JOB<1,PLOC>,PTR SETTING JLOC ELSE
      JLOC=0
    END
  REPEAT
  LOCATE DFR.JOB IN ORD.JOB<1>,1 SETTING JLOC ELSE
    ORD.JOB<1,JLOC>=DFR.JOB
  END
  STATUS="U"; SHPTO=""
  CALL ORDER_LINE_UPD(CONO,ORD.ID,SHPTO,STATUS)
END
RETURN
*
******************
REREAD.RECORDS: 
******************
*
MATREADU INV.REC FROM INVENTORY, INV.ID ELSE
  ERRMSG = "INVENTORY file has been corrupted???"
  GOTO 99300
END
MATREADU JFS.REC FROM JOB.FNGD.STATS, CONO:DFR.JOB ELSE
  ERRMSG = "JOB.FNGD.STATS file has been corrupted???"
  GOTO 99300
END
MATREADU IWH.REC FROM INV.WHSE, IWH.ID ELSE
  ERRMSG = "INV.WHSE file has been corrupted???"
  GOTO 99300
END
MATREADU IWLO.REC FROM INV.WHSE.LOC, IWLO.ID ELSE
  ERRMSG = "INV.WHSE.LOC file has been corrupted???"
  GOTO 99300
END
MATREADU FJS.REC FROM FNGD.JOB.STATS, FJS.ID ELSE
  ERRMSG = "FNGD.JOB.STATS file has been corrupted???"
  GOTO 99300
END
MATREADU FGS.REC FROM FNGD.STATS, IWH.ID ELSE
  ERRMSG = "FNGD.STATS file has been corrupted???"
  GOTO 99300
END
LOCK.FLAG=1
RETURN
*
**************
SET.INAH: 
**************
*
MAT INAH.REC=''
INAH.TYPE="R"
INAH.SRC='IR'
INAH.PROD=DFR.PROD
INAH.WHSE=DFR.WHSE
INAH.DATE=DFR.RECP.DATE
INAH.PERIOD=DFR.PERIOD
INAH.RECP.NO=RECP.NO
INAH.LOC=DFR.LOC
INAH.CUR.QTY=0
INAH.NEW.QTY=DFR.TOT.QTY
INAH.CUR.STK.QTY=0
INAH.NEW.STK.QTY=DFR.TOT.SQTY
INAH.QTY=INAH.NEW.QTY
;* for FNGD only INAH.ACCT is updated for receipt. wip clearing account
;* is assigned in eom post based on category.
INAH.ACCT=CATG.INV
MATREAD GLTABLE.REC FROM CONTROL,CONO:"GLTABLE" ELSE MAT GLTABLE.REC = ''
MATREAD WHSE.REC FROM WAREHOUSE,CONO:INAH.WHSE ELSE   
  MAT WHSE.REC = ""                                  
END                                                   
IF WHS.DIV = "" THEN WHS.DIV = GEN.DIV                
DIV.POS=DIVISION_POSITION(CONO,CONTROL,WHS.DIV)           
BEGIN CASE                                                
  CASE DIV.POS<1,1>=''                                    
    DIV.POS=DIV.POS<1,2>                                  
    CUR.PERIOD=CURRENT_PERIOD(CONO,CONTROL,DIV.POS,"IC")  
    IF CUR.PERIOD<1,1>='' THEN                            
      CUR.PERIOD=CUR.PERIOD<1,2>                          
    END ELSE                                              
      IF CUR.PERIOD<1,1>='-2' OR CUR.PERIOD<1,1>='-1' THEN

        DFR.STATUS=CUR.PERIOD<1,2>                       
      END                                                 
    END                                                   
  CASE DIV.POS<1,1>='-1'                                  
    DFR.STATUS=DIV.POS<1,2>                              
  CASE DIV.POS<1,1>='-2'                                  
    DFR.STATUS=DIV.POS<1,2>                              
END CASE                                                  
INAH.DV.DP.CC = WHS.DIV:GEN.DEPT:GEN.CCTR             
INAH.TRAN=DFR.JOB
INAH.UNIT.COST=DFR.UN.PRICE
RETURN

99200*
RELEASE ORDER, CONO:ORD.ID
99300*
RELEASE FNGD.STATS, IWH.ID
99400*
RELEASE FNGD.JOB.STATS, FJS.ID
99500*
99600*
RELEASE INV.WHSE.LOC, IWLO.ID
99700*
RELEASE INV.WHSE, IWH.ID
99800*
RELEASE JOB.FNGD.STATS, CONO:DFR.JOB
99900*
RELEASE INVENTORY, INV.ID

99999 


93000
STATUS = RBO.setProperty('','ServerStatus',1)
STATUS = RBO.setProperty('','ServerMessage',ERRMSG)
RETURN
