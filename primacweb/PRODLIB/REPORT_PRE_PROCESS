SUBROUTINE REPORT_PRE_PROCESS
********************************************************************************
*   Program name :- REPORT_PRE_PROCESS
*   Created:- 4/26/2005
*------------------------------------------------------------------------------*
*
* In Properties:
* --------------
*  
*
* Out Properties:
* ---------------
*  
*T27990 lross 03/11/2004 * Mods for ICS_IWH_SUB(ERRMSG)
********************************************************************************
$INCLUDE WWINSERT RBO.H
* Insert method code here
$INCLUDE ICS.CPYLIB COM.INV.MAIN  
$INCLUDE ICS.CPYLIB COM.INV.SERIAL
$INCLUDE ICS.CPYLIB COM.INV.LINK  
$INCLUDE ICS.CPYLIB PHYSICAL.INV
$DEFINE INVENTORY
$INCLUDE ICS.CPYLIB INVENTORY
$DEFINE INVWHSELOC
$INCLUDE ICS.CPYLIB INV.WHSE.LOC
$DEFINE INVWHSE
$INCLUDE ICS.CPYLIB INV.WHSE
$INCLUDE ICS.CPYLIB INV.HIST
$INCLUDE ICS.CPYLIB WAREHOUSE
$INCLUDE ICS.CPYLIB INV.CNV
$DEFINE JOBSTATS
$INCLUDE JCS.CPYLIB JOB.STATS
$INCLUDE JCS.CPYLIB JOB
$DEFINE INVAUDITHIST
$INCLUDE ICS.CPYLIB INV_AUDIT_HIST
$DEFINE ICSID
$INCLUDE ICS.CPYLIB ICS.ID
$DEFINE CATEGORY
$INCLUDE ICS.CPYLIB CATEGORY
$INCLUDE CPYLIB FILE.VARS
$INCLUDE CPYLIB CHAR
*
$INCLUDE PMC.CPYLIB FISCAL                                                                
*
DEFFUN DIVISION_POSITION(CONO,CONTROL.FILE,DIV.CODE)        
DEFFUN CURRENT_PERIOD(CONO,CONTROL.FILE,DIV.POS,FISCAL.FLAG)
*                
*
OPEN '','INVENTORY' TO INVENTORY ELSE
  ERRMSG='INVENTORY FILE IS MISSING'; GOTO 93000
END
OPEN '','INV.WHSE' TO INV.WHSE ELSE
  ERRMSG='INV.WHSE FILE IS MISSING'; GOTO 93000
END
OPEN '','INV.HIST' TO INV.HIST ELSE
  ERRMSG='INV.HIST FILE IS MISSING'; GOTO 93000
END
OPEN '','INV.WHSE.LOC' TO INV.WHSE.LOC ELSE
  ERRMSG='INV.WHSE.LOC FILE IS MISSING'; GOTO 93000
END
OPEN '','PHYSICAL.INV' TO PHYSICAL.INV ELSE
  ERRMSG='PHYSICAL.INV FILE IS MISSING'; GOTO 93000
END
OPEN '','COMPANY' TO COMPANY ELSE
  ERRMSG='COMPANY FILE IS MISSING';GOTO 93000
END
OPEN '','CONTROL' TO CONTROL ELSE
  ERRMSG='CONTROL FILE IS MISSING';GOTO 93000
END
OPEN '','WAREHOUSE' TO WAREHOUSE ELSE
  ERRMSG='WAREHOUSE FILE IS MISSING';GOTO 93000
END
OPEN '','JOB.STATS' TO JOB.STATS ELSE
  ERRMSG='JOB.STATS FILE IS MISSING';GOTO 93000
END
OPEN '','JOB' TO JOB ELSE
  ERRMSG='JOB FILE IS MISSING';GOTO 93000
END
OPEN '','INV_AUDIT_HIST' TO INV_AUDIT_HIST ELSE
  ERRMSG='INV_AUDIT_HIST FILE IS MISSING';GOTO 93000
END
OPEN '','INV_AUDIT_TAG' TO INV_AUDIT_TAG ELSE
  ERRMSG='INV_AUDIT_TAG FILE IS MISSING';GOTO 93000
END
OPEN '','CATEGORY' TO CATEGORY ELSE
  ERRMSG='CATEGORY FILE IS MISSING';GOTO 93000
END
OPEN '','INV.WHSE.LOC.TEMP' TO INV.WHSE.LOC.TEMP ELSE
  ERRMSG='INV.WHSE.LOC.TEMP FILE IS MISSING';GOTO 93000
END
IWLO.ID = ''
OPEN.FLAG=1
PERIOD = ""
STATUS = RBO.getProperty('','ID',PPSD_ID)
STATUS = RBO.getProperty('','PPDField01',DIV_CODE)
STATUS = RBO.getProperty('','SUG_PERIOD',PERIOD)
STATUS = RBO.getProperty('','PROCESS_ID',POST_PROCESS)
  PRPT_ID = FIELD(PPSD_ID, "!", 4) ;* PMC_REPORTS ID

  FIRST_REPORT_ID = FIELD(PRPT_ID,",",1)
  SECOND_REPORT_ID =	 FIELD(PRPT_ID,",",2)
   UserID = FIELD(PPSD_ID, "!", 1) ;* User ID
   PPSID = FIELD(PPSD_ID, "!", 2) ;* PMC_PROCESS ID
   SessionID = FIELD(PPSD_ID, "!", 3) ;* IE Session ID
*   PRPT_ID = FIRST_REPORT_ID;* PMC_REPORTS ID
   CONO = FIELD(PPSD_ID, "!", 5)
   IF FIELD(PPSD_ID, "!", 6) = "Email" THEN
      Email_Flag = "M"
   END ELSE
      Email_Flag = "V"
   END

   IF PERIOD = "" THEN
     GOSUB FIRST_PART
	IF CHK_FLAG = 0 THEN 
	   GOSUB SECOND_PART
	END ELSE
	   GOSUB GET_PERIOD 
       END 
     GOTO 99999 
   END ELSE
     GOSUB AFTER_PROCESS
     GOSUB SECOND_PART	
     GOTO 99999 
   END

**************
FIRST_PART:
**************
   CMD = "SSELECT PHYSICAL.INV WITH TYPE = 'REG' AND WITH PRINT.DATE AND WITH CONO = ":CONO
   IF DIV_CODE # "ALL" THEN
     CMD := " AND WITH WHSE.DIV = ":DIV_CODE
   END
   CMD := " BY PLINE BY WHSE BY LOC"
   UDTEXECUTE CMD  CAPTURING MM

RECORD_IDS = ""
CHK_FLAG = 0

  DATA=1
 LOOP
  READNEXT STR_ID ELSE DATA=0
  WHILE DATA DO
   CHK_FLAG = 1	
  IF RECORD_IDS # "" THEN
     RECORD_IDS = STR_ID
  END ELSE
     RECORD_IDS = RECORD_IDS:"^":STR_ID
  END 
 REPEAT
RETURN

**************
SECOND_PART:
**************
*POST_PROCESS = "REG.INV.IN.REJ"
PPSD_ID = UserID:"!":PPSID:"!":SessionID:"!":SECOND_REPORT_ID:"!":CONO:"!":FIELD(PPSD_ID, "!", 6)  

STATUS = RBO.setProperty('','ID',PPSD_ID)
STATUS = RBO.setProperty('','PPDField01',DIV_CODE)
STATUS = RBO.setProperty('','PROCESS_ID',POST_PROCESS) ; *ADDED FOR SECOND PROCS

CALL GenerateReport
RETURN 

**************
AFTER_PROCESS:
**************
GEN.DIV = '00';GEN.DEPT = '00';GEN.CCTR = '000' 
MAT INV.CNV.REC=""
ICR.DV1=10
ICR.MT1=1
ICR.DV2=1
ICR.MT2=100

   CMD = "SSELECT PHYSICAL.INV WITH TYPE = 'REG' AND WITH PRINT.DATE AND WITH CONO = ":CONO
   IF DIV_CODE # "ALL" THEN
     CMD := " AND WITH WHSE.DIV = ":DIV_CODE
   END
   CMD := " BY PLINE BY WHSE BY LOC"
   UDTEXECUTE CMD CAPTURING MM
**********************
DATA=1
LOOP
  READNEXT PHS.ID ELSE DATA=0
WHILE DATA DO
  MATREADU PHS.INV.REC FROM PHYSICAL.INV,PHS.ID THEN
    PHS.NO.POST = '' ;*T27380
    WHSE=FIELD(PHS.ID,'!',3)
    MATREAD WHSE.REC FROM WAREHOUSE,CONO:WHSE ELSE 
      MAT WHSE.REC = ""                                 
    END                                                 
    IF WHS.DIV = "" THEN WHS.DIV = GEN.DIV              
    DIV.POS=DIVISION_POSITION(CONO,CONTROL,WHS.DIV)           
    BEGIN CASE                                                
      CASE DIV.POS<1,1>=''                                    
        DIV.POS=DIV.POS<1,2>                                  
        CUR.PERIOD=CURRENT_PERIOD(CONO,CONTROL,DIV.POS,"IC")  
        IF CUR.PERIOD<1,1>='' THEN                            
          CUR.PERIOD=CUR.PERIOD<1,2>                          
        END ELSE                                              
          IF CUR.PERIOD<1,1>='-2' OR CUR.PERIOD<1,1>='-1' THEN
            PHS.NO.POST=CUR.PERIOD<1,2>                       
          END                                                 
        END                                                   
      CASE DIV.POS<1,1>='-1'                                  
        PHS.NO.POST=DIV.POS<1,2>                              
      CASE DIV.POS<1,1>='-2'                                  
        PHS.NO.POST=DIV.POS<1,2>                              
    END CASE                                                  
    IF PHS.NO.POST='' THEN                                    
      DV.DP.CC = WHS.DIV:GEN.DEPT:GEN.CCTR           
      LOC=FIELD(PHS.ID,'!',4)
      CNT=DCOUNT(PHS.INV.PROD,VM)
      FOR P=CNT TO 1 STEP -1
        MAT INAH.REC=''
        INAH.PROD=PHS.INV.PROD<1,P>
        INAH.WHSE=WHSE
        INAH.LOC=LOC
        INAH.DATE=PHS.DATE.ENT<1,P>
        INAH.DV.DP.CC=DV.DP.CC
        INAH.TYPE='A'
        INAH.SRC='IA'
        INAH.CUR.QTY=PHS.CUR.QTY<1,P>
        INAH.NEW.QTY=PHS.NEW.QTY<1,P>
        INAH.QTY=INAH.NEW.QTY-INAH.CUR.QTY
        INAH.PERIOD=PERIOD
        PO.VEND.NO=PHS.OPER.ID<1,P>
        PO.CODE=PHS.ADJ.CODE<1,P>
        INAH.ADJ.CODE=PO.CODE
        INAH.JOB=PO.VEND.NO
        PRICE=PHS.UN.COST<1,P>
        PHS.NO.POST<1,P>=''
        IF PHS.JOB # '' THEN
          MATREADU JSTAT.REC FROM JOB.STATS,CONO:PHS.JOB ELSE MAT JSTAT.REC=''
          MATREADU JOB.REC FROM JOB, CONO : PHS.JOB ELSE              
            MAT JOB.REC = ""                                          
            PHS.NO.POST<1,P> = "JOB ":PHS.JOB:" RECORD IS NOT ON FILE"
            GOSUB RELEASE.SUB
            CONTINUE
          END                                                         
          FNGD.CNT=DCOUNT(JSTAT.SHP.PROD,VM)
          FNGD=0
          FOR FG=1 TO FNGD.CNT UNTIL FNGD
            BEGIN CASE
              CASE PHS.INV.PROD<1,P> # JSTAT.SHP.PROD<1,FG>
              CASE WHSE # JSTAT.SHP.WHSE<1,FG>
              CASE LOC # JSTAT.SHP.LOC<1,FG>
              CASE 1
                FNGD=FG
                TR.CNT=DCOUNT(JSTAT.SHP.TRANS<1,FG>,SVM)
                JSTAT.SHP.TRANS<1,FG,TR.CNT+1>="ADJ"
                REC.QTY=INAH.CUR.QTY-INAH.NEW.QTY
                IF (JSTAT.SHP.QTY<1,FNGD>-REC.QTY)<0 THEN
                  PHS.NO.POST<1,P>='CAN NOT ADJUST QUANTITY ON JOB STATS'
                  GOSUB RELEASE.SUB
                  CONTINUE
                END ELSE
                  JSTAT.SHP.QTY<1,FNGD>=JSTAT.SHP.QTY<1,FNGD>-REC.QTY
                  JOB.QTY<1,2>=JOB.QTY<1,2>-INT((((REC.QTY/ICR.DV1) * ICR.MT1)/ICR.DV2)/ICR.MT2)
                END
            END CASE
          NEXT FG
          IF FNGD # 0 THEN
            IF JSTAT.SHP.QTY<1,FNGD>=0 THEN
              JSTAT.SHP.PROD=DELETE(JSTAT.SHP.PROD,1,FNGD,0)
              JSTAT.SHP.WHSE=DELETE(JSTAT.SHP.WHSE,1,FNGD,0)
              JSTAT.SHP.LOC=DELETE(JSTAT.SHP.LOC,1,FNGD,0)
              JSTAT.SHP.R.S.ID=DELETE(JSTAT.SHP.R.S.ID,1,FNGD,0)
              JSTAT.SHP.QTY=DELETE(JSTAT.SHP.QTY,1,FNGD,0)
              JSTAT.SHP.MLTP=DELETE(JSTAT.SHP.MLTP,1,FNGD,0)
              JSTAT.SHP.PCS=DELETE(JSTAT.SHP.PCS,1,FNGD,0)
              JSTAT.SHP.LOC.DESC=DELETE(JSTAT.SHP.LOC.DESC,1,FNGD,0)
              JSTAT.SHP.TRANS=DELETE(JSTAT.SHP.TRANS,1,FNGD,0)
            END
          END ELSE
            PHS.NO.POST<1,P>='CAN NOT ADJUST QUANTITY ON JOB STATS'
            GOSUB RELEASE.SUB
            CONTINUE
          END
        END
        MATREAD INV.REC FROM INVENTORY,CONO:INAH.PROD THEN
          CATG.ID=CONO:INV.LINE
          MATREAD CATG.REC FROM CATEGORY,CATG.ID THEN           
            IF CATG.COST.TYPE='AC' THEN                         
              DEPL.METHOD='AC'                                  
            END ELSE                                            
              DEPL.METHOD='FI'                                  
            END                                                 
          END ELSE                                              
            PHS.NO.POST<1,P>='CATEGORY ':INV.LINE:' IS MISSING.'
            CONTINUE                                            
          END                                                   
        END ELSE
          PHS.NO.POST<1,P>='INVENTORY # ':INAH.PROD:' IS NOT ON LINE'
          GOSUB RELEASE.SUB
          CONTINUE
        END
        IF INV.COST.WT+0 = 0 THEN INV.COST.WT = 100 ;*T28096
        IWH.ID=CONO:INAH.PROD:'!':INAH.WHSE
        IH.ID=CONO:INAH.PROD
        MATREADU IWH.REC FROM INV.WHSE,IWH.ID THEN
          MAT ORG.IWH.REC = MAT IWH.REC
          ACTION=1; * build INV.WHSE fifo buckets
          TMP.CNT='' ; LAST='' ; TMP.ARR=''
*T27990   CALL ICS_IWH_SUB(CONO,PERIOD,TMP.ARR,TMP.CNT,LAST,ACTION,OPEN.FLAG)
          CALL ICS_IWH_SUB(CONO,PERIOD,TMP.ARR,TMP.CNT,LAST,ACTION,OPEN.FLAG,ERRMSG)

          INAH.ACCT=CATG.INV
          INAH.ADJ.ACCT=CATG.ADJ
        END ELSE
          RELEASE INV.WHSE,IWH.ID
          PHS.NO.POST<1,P>='INV.WHSE # ':IWH.ID:' IS NOT ON LINE'
          GOSUB RELEASE.SUB
          CONTINUE
        END
        MATREADU IH.REC FROM INV.HIST,IH.ID ELSE
          MAT IH.REC=""
        END
        LOCATE INAH.LOC IN IWH.LOC<1>,1 SETTING LFND ELSE
          IF PHS.ADJ.TYPE<1,P> # 'R' THEN
            PHS.NO.POST<1,P>='CANNOT ADJUST A NON EXISTING LOCATION'
            GOSUB RELEASE.SUB
            CONTINUE
          END
          IWH.LOC<1,LFND>=INAH.LOC
        END
        IWLO.ID=IWH.ID:"!":IWH.LOC<1,LFND>
*        IF RECORDLOCKED (INV.WHSE.LOC.TEMP,IWLO.ID)=0 THEN
*          DELETE INV.WHSE.LOC.TEMP,IWLO.ID
*        END
        READ CHECK.REC FROM INV.WHSE.LOC.TEMP,IWLO.ID THEN
	 END ELSE
          MATREADU IWLO.REC FROM INV.WHSE.LOC,IWLO.ID ELSE
            IF PHS.ADJ.TYPE<1,P> # "R" THEN
              PHS.NO.POST<1,P>='CANNOT ADJUST A NON EXISTING LOCATION'
              GOSUB RELEASE.SUB
              CONTINUE
            END
            MAT IWLO.REC=''
            IWLO.LOC.ON.HAND=0
          END
        END
        IF IWLO.LOC.ON.HAND+0 # INAH.CUR.QTY+0 THEN
          RELEASE INV.WHSE,IWH.ID
          RELEASE INV.WHSE.LOC,IWH.ID:"!":IWH.LOC<1,LFND>
          PHS.NO.POST<1,P>='ON HAND DOES NOT MATCH PHYSICAL'
          GOSUB RELEASE.SUB
          CONTINUE
        END
        DIFF.QTY=INAH.NEW.QTY-IWLO.LOC.ON.HAND
        IF DIFF.QTY>0 THEN
          TYPE='R'
        END ELSE
          TYPE=''
        END
        CALL QTY_CHANGE_SUB(CONO,PO.CODE,MAT IWH.REC,MAT INV.REC,MAT PO.REC,DEPL.METHOD,RECP.NO,PHS.DATE.ENT<1,P>,PERIOD,DIFF.QTY,PRICE,TYPE,ERRMSG,RET.ARR)
        IF ERRMSG # '' THEN
          RELEASE INV.WHSE,IWH.ID
          RELEASE INV.WHSE.LOC,IWH.ID:"!":IWH.LOC<1,LFND>
          PHS.NO.POST<1,P>=ERRMSG
          GOSUB RELEASE.SUB
          CONTINUE
        END
        TOT.PRICE=RET.ARR<1>       
        TRANS.PRICE=RET.ARR<2>     
        TRANS.UN.PRICE=RET.ARR<3>  
        TRANS.QTY=RET.ARR<4>       
        IWH.ON.HAND=IWH.ON.HAND+DIFF.QTY
        IH.CNT=DCOUNT(IH.DATE,VM)
        IDATE=PHS.DATE.ENT<1,P>
        LOCATE IDATE IN IH.DATE<1> SETTING PP ELSE NULL
        BEGIN CASE
          CASE PP=IH.CNT
            IH.AMOUNT<1,PP>=IH.AMOUNT<1,PP>+DIFF.QTY
          CASE PP > IH.CNT
            IH.AMOUNT<1,PP>=IH.AMOUNT<1,PP>+DIFF.QTY
            IH.DATE<1,PP>=IDATE
          CASE 1
            IH.AMOUNT<1,PP>=IH.AMOUNT<1,PP>+DIFF.QTY
        END CASE
        ADJ.QTY=TRANS.QTY
        ADJ.COST=TRANS.PRICE
        ADJ.UN.COST=TRANS.UN.PRICE
        IF CUR.PERIOD=INAH.PERIOD THEN
          CALL INV_AVG_COST_MAINT(MAT IWH.REC,INV.COST.WT,CUR.PERIOD)
        END
        ACTION=4
        TMP.CNT=1                  
        TMP.ARR=INAH.LOC           
        LAST="Y"
*T27990 v CALL ICS_IWH_SUB(CONO,PERIOD,TMP.ARR,TMP.CNT,LAST,ACTION,OPEN.FLAG)
        CALL ICS_IWH_SUB(CONO,PERIOD,TMP.ARR,TMP.CNT,LAST,ACTION,OPEN.FLAG,ERRMSG)
        IF ERRMSG # '' THEN
          ACTION=9
          PHS.NO.POST<1,P>=ERRMSG
          CALL ICS_IWH_SUB(CONO,PERIOD,TMP.ARR,TMP.CNT,LAST,ACTION,OPEN.FLAG,ERRMSG)
          GOSUB RELEASE.SUB
          CONTINUE
        END
*T27990 ^
        MATWRITE IH.REC ON INV.HIST,IH.ID
        IF PHS.JOB # '' THEN
          MATWRITE JSTAT.REC ON JOB.STATS,CONO:PHS.JOB
          MATWRITE JOB.REC ON JOB,CONO:PHS.JOB
        END
        FOR R=1 TO PHS.INV.REC.SIZE
          PHS.INV.REC(R)=DELETE(PHS.INV.REC(R),1,P,0)
        NEXT R
        GOSUB RELEASE.SUB

      NEXT P
    END
    IF PHS.INV.PROD='' THEN
      DELETE PHYSICAL.INV,PHS.ID
    END ELSE
      MATWRITE PHS.INV.REC ON PHYSICAL.INV,PHS.ID
    END
  END
REPEAT

RETURN
*
***************
RELEASE.SUB: 
***************
*
IF PHS.JOB # '' AND PHS.NO.POST<1,P> # '' THEN
  RELEASE JOB.STATS,CONO:PHS.JOB
  RELEASE JOB,CONO:PHS.JOB
END
*T27990 v
RELEASE INV.HIST, IH.ID
RELEASE INV.WHSE.LOC, IWLO.ID
*T27990 ^
RETURN

**************
GET_PERIOD:
**************
	CONTROL=''
	DIV.POS=DIVISION_POSITION(CONO,CONTROL,DIV.CODE)
	DIV.POS = DIV.POS<1,2>
	FISCAL.FLAG ="IC"
	
MATREAD FISCAL.REC FROM CONTROL, CONO:FISCAL.FLAG:"FISCAL" THEN 
  CURR.PERIOD = FR.CURR.PER<1,DIV.POS>
END ELSE
  ERRMSG = FISCAL.FLAG:" Control Fiscal record is missing"         
END 

IF CURR.PERIOD # "" THEN
	STATUS = RBO.setProperty('','SUG_PERIOD',CURR.PERIOD)
	STATUS = RBO.setProperty('','ServerMessage','')
END ELSE
CALL GetNextPeriod(CONO,DIV.CODE,DIV.POS,FISCAL.FLAG,NEXT.PERIOD,ERR.FLG,ERR)
	STATUS = RBO.setProperty('','SUG_PERIOD',NEXT.PERIOD)
	STATUS = RBO.setProperty('','ServerMessage','Period cannot be more then two periods greater than current period ')
END
STATUS = RBO.setProperty('','ServerStatus',2)

RETURN 

93000*
* End of method code
99999 
RETURN
END
