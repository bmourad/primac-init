SUBROUTINE FISCAL_POST_PROCESS
********************************************************************************
*   Program name :- FISCAL_POST_PROCESS
*   Created:- 2/21/2005
*------------------------------------------------------------------------------*
*

* In Properties:
* --------------
*  
*
* Out Properties:
* ---------------
*  
********************************************************************************
$INCLUDE WWINSERT RBO.H
$INCLUDE JCS.CPYLIB>JOB
$INCLUDE JCS.CPYLIB>DAILY.TIME
$INCLUDE JCS.CPYLIB>JOB.TIME
$INCLUDE JCS.CPYLIB>OJOB.TIME
$INCLUDE JCS.CPYLIB>OPERATION
$INCLUDE JCS.CPYLIB>FACTOR
$INCLUDE JCS.CPYLIB>JOB.CUTOFF.NO
$INCLUDE JCS.CPYLIB>JOB.STAT.CODE
$INCLUDE JCS.CPYLIB>WIP.LEVEL
$INCLUDE JCS.CPYLIB>PROD.STATS
$INCLUDE JCS.CPYLIB>PERF.STATS
$INCLUDE JCS.CPYLIB>COST.CNTR.WIP
$INCLUDE JCS.CPYLIB>SPOIL.STATS
$INCLUDE PMC.CPYLIB>COMPANY
$INCLUDE PMC.CPYLIB>EMPLOYEE
$INCLUDE PMC.CPYLIB>DIVISION
$INCLUDE PMC.CPYLIB>DEPARTMENT
$INCLUDE PMC.CPYLIB>COST.CNTR
$INCLUDE PRS.CPYLIB>DAILY.HOURS
$INCLUDE CPYLIB>CHAR


STATUS=RBO.getProperty('','POSTING_MON',POSTING.MON)
STATUS=RBO.getProperty('','CONO',CONO)
STATUS=RBO.getProperty('','STACK',STACK)

CMD1= "GET-LIST ":STACK
UDTEXECUTE CMD1

OPEN '','COMPANY' TO COMPANY ELSE ERRMSG = 'COMPANY FILE MISSING'; GOTO 93000
  OPEN '','CUSTOMER' TO CUSTOMER ELSE ERRMSG = 'CUSTOMER FILE MISSING'; GOTO 93000
  OPEN '','JOB' TO JOB ELSE ERRMSG = 'JOB FILE MISSING'; GOTO 93000
  OPEN '','JOB.TIME' TO JOB.TIME ELSE ERRMSG = 'JOB.TIME FILE MISSING'; GOTO 93000
  OPEN '','DAILY.TIME' TO DAILY.TIME ELSE ERRMSG = 'DAILY.TIME FILE MISSING'; GOTO 93000
  OPEN '','DAILY.HOURS' TO DAILY.HOURS ELSE ERRMSG = 'DAILY.HOURS FILE MISSING'; GOTO 93000
  OPEN '','EMPLOYEE' TO EMPLOYEE ELSE ERRMSG = 'EMPLOYEE FILE MISSING'; GOTO 93000
  OPEN '','PMC.SCREENS' TO M.SCREENS ELSE ERRMSG = 'PMC.SCREENS FILE MISSING'; GOTO 93000
  OPEN '','DIVISION' TO DIVISION ELSE ERRMSG = 'DIVISION FILE MISSING'; GOTO 93000
  OPEN '','DEPARTMENT' TO DEPARTMENT ELSE ERRMSG = 'DEPARTMENT FILE MISSING'; GOTO 93000
  OPEN '','COST.CNTR' TO COST.CNTR ELSE ERRMSG = 'COST.CNTR FILE MISSING'; GOTO 93000
  OPEN '','OPERATION' TO OPERATION ELSE ERRMSG = 'OPERATION FILE MISSING'; GOTO 93000
  OPEN '','CONTROL' TO CONTROL ELSE ERRMSG = 'CONTROL FILE MISSING'; GOTO 93000
  OPEN '','FACTOR' TO FACTOR ELSE ERRMSG = 'FACTOR FILE MISSING'; GOTO 93000
  OPEN '','JOB.STAT.CODE' TO JOB.STAT.CODE ELSE ERRMSG = 'JOB.STAT.CODE FILE MISSING'; GOTO 93000
  OPEN '','PERF.STATS' TO PERF.STATS ELSE ERRMSG = 'PERF.STATS FILE MISSING'; GOTO 93000
  OPEN '','PROD.STATS' TO PROD.STATS ELSE ERRMSG = 'PROD.STATS FILE MISSING'; GOTO 93000
  OPEN '','COST.CNTR.WIP' TO COST.CNTR.WIP ELSE ERRMSG = 'COST.CNTR.WIP FILE MISSING'; GOTO 93000
  OPEN '','OJOB.TIME' TO OJOB.TIME ELSE ERRMSG = 'OJOB.TIME FILE MISSING'; GOTO 93000
  OPEN '','SPOILAGE.CODES' TO SPOILAGE.CODES ELSE ERRMSG = 'SPOILAGE.CODES FILE MISSING'; GOTO 93000
  OPEN '','SPOIL.STATS' TO SPOIL.STATS ELSE ERRMSG = 'SPOIL.STATS FILE MISSING'; GOTO 93000


MATREAD JOB.CUTOFF.REC FROM CONTROL, CONO:"JOB.CUTOFF.NO" ELSE
      MAT JOB.CUTOFF.REC = ''
      J.CUTOFF.NUM = 0
  END
  MATREAD WIP.LEVEL.REC FROM CONTROL, CONO : "WIP.LEVEL" ELSE
      MAT WIP.LEVEL.REC = ""
      WLR.LB.COST = 2; WLR.LB.WIP = 2
  END
  MATREADU DLB.REC FROM DAILY.TIME, DLB.ID ELSE
      RELEASE DAILY.TIME, DLB.ID; GOTO 110
  END
  GOSUB 1000
  IF DLB.STATUS = "" THEN
      UPDATE.FLG = 1
      GOSUB 1000
  END
  IF DLB.SEQ = '' THEN
      DELETE DAILY.TIME, DLB.ID
  END ELSE
      MATWRITE DLB.REC ON DAILY.TIME , DLB.ID
  END
110 DATA = 1
  LOOP
      READNEXT DLB.ID ELSE DATA = 0
      UPDATE.FLG = 0
  WHILE DATA DO
      CONO = DLB.ID[1,3]
      MATREADU DLB.REC FROM DAILY.TIME, DLB.ID ELSE
          RELEASE DAILY.TIME, DLB.ID; GOTO 199
      END
      GOSUB 1000
      IF DLB.STATUS = "" THEN
          UPDATE.FLG = 1
          GOSUB 1000
      END
      IF DLB.SEQ = '' THEN
          DELETE DAILY.TIME, DLB.ID
      END ELSE
          MATWRITE DLB.REC ON DAILY.TIME , DLB.ID
      END
199 REPEAT
  GOTO 93000
**** UPDATE JOB TIME RECORD
1000 DLB.STATUS = ""
  DLB.EMP = FIELD(DLB.ID,"*",1)
  DLB.EMP = DLB.EMP[4,LEN(DLB.EMP)]
  DLB.DATE = FIELD(DLB.ID,"*",2)
  DLB.SHIFT = FIELD(DLB.ID,"*",3)
  IF DLB.SHIFT < 1 OR DLB.SHIFT > 3 THEN
      DLB.STATUS<1,1> = "BAD SHIFT ":DLB.SHIFT; GOTO 1999
  END
  MATREAD EMP.REC FROM EMPLOYEE, CONO : DLB.EMP ELSE
      DLB.STATUS<1,1> = 'EMPLOYEE # ':DLB.EMP:' IS MISSING'; GOTO 1999
  END
  SEQ.CNT = COUNT(DLB.SEQ,VM) + (DLB.SEQ # "")
  FOR SC = SEQ.CNT TO 1 STEP - 1 UNTIL DLB.STATUS # ""
      MAT JLB.REC = ""
      MAT OJLB.REC = ""
      POST.OSJ = 0
      MATREADU JOB.REC FROM JOB, CONO : DLB.JOB<1,SC> ELSE
          MAT JOB.REC = ''
          FND = 0
          IF NUM(DLB.JOB<1,SC>) THEN
              IF DLB.JOB<1,SC> < J.CUTOFF.NUM THEN FND = 1
          END ELSE
              JC.CNT = COUNT(J.CUTOFF.PREFIX,VM) + (J.CUTOFF.PREFIX # "")
              FOR L = 1 TO JC.CNT WHILE FND = 0
                  PREFX.LEN = LEN(J.CUTOFF.PREFIX<1,L>)
                  IF J.CUTOFF.PREFIX<1,L> = DLB.JOB<1,SC>[1,PREFX.LEN] THEN
                      CHK.VALUE = DLB.JOB<1,SC>[PREFX.LEN+1,LEN(DLB.JOB<1,SC>)-PREFX.LEN]
                      IF NUM(CHK.VALUE) THEN
                          IF CHK.VALUE < J.CUTOFF.PRE.NO<1,L> THEN FND = 1
                      END
                  END
              NEXT L
          END
          IF FND = 1 THEN
              POST.OSJ = 1
              JOB.DIV = DLB.DIV<1,SC>
              JOB.TYPE = DLB.TYPE<1,SC>
          END ELSE
              DLB.STATUS<1,SC> = 'JOB # ':DLB.JOB<1,SC>:' IS MISSING'; GOTO 1090
          END
      END
      BEGIN CASE
          CASE JOB.STATUS<1,1> = 9
              DLB.STATUS<1,SC> = 'JOB # ':DLB.JOB<1,SC>:' STATUS IS CANCELED'; GOTO 1090
          CASE JOB.STATUS<1,1> = 7
              DLB.STATUS<1,SC> = 'JOB # ':DLB.JOB<1,SC>:' STATUS IS READY TO PURGE'; GOTO 1090
          CASE JOB.STATUS<1,1> = 8
              DLB.STATUS<1,SC> = 'JOB # ':DLB.JOB<1,SC>:' STATUS IS PURGED'; GOTO 1090
      END CASE
*      IF (JOB.STATUS<1,1> + JOB.TRACK.DATE<1,7> + JOB.TRACK.DATE<1,8>) > 1 THEN
      IF (JOB.STATUS<1,1> > 1 AND JOB.STATUS<1,1> # 5) OR JOB.TRACK.DATE<1,7> # "" OR JOB.TRACK.DATE<1,8> # "" THEN
          IF DLB.INIT<1,SC> = "" THEN
              DLB.STATUS<1,SC> = 'JOB # ':DLB.JOB<1,SC>:' STATUS IS NOT BOOKED, NOR IN PROCESS AND AUTHORIZATION REQUIRED'
              GOTO 1090
          END ELSE
              MATREAD JSI.REC FROM JOB.STAT.CODE,CONO:DLB.INIT<1,SC> ELSE
                  DLB.STATUS<1,SC> = "AUTHORIZATION ":DLB.INIT<1,SC>:" IS NOT VALID"
                  GOTO 1090
              END
          END
      END
      IF JOB.TYPE # "R" AND JOB.TYPE # DLB.TYPE<1,SC> THEN
          DLB.STATUS<1,SC> = "JOB BELONG TO A DIFFERENT TYPE"; GOTO 1090
      END
      IF JOB.DIV # DLB.DIV<1,SC> THEN
          DLB.STATUS<1,SC> = "JOB DIVISION # LINE DIVISION"; GOTO 1090
      END
      MATREAD DIV.REC FROM DIVISION, CONO : DLB.DIV<1,SC> ELSE
          DLB.STATUS<1,SC> = 'DIV # ':DLB.DIV<1,SC>:' IS MISSING'; GOTO 1090
      END
      IF JOB.DEPT # DLB.DEPT<1,SC>[1,LEN(JOB.DEPT)] THEN
          DLB.STATUS<1,SC> = "JOB DEPARTMENT # LINE DEPARTMENT"; GOTO 1090
      END
      MATREAD DEPT.REC FROM DEPARTMENT, CONO : DLB.DEPT<1,SC> ELSE
          DLB.STATUS<1,SC> = 'DEPT # ':DLB.DEPT<1,SC>:' IS MISSING'; GOTO 1090
      END
      LOCATE DLB.DEPT<1,SC> IN DIV.DEPT<1>,1 SETTING DLOC ELSE
          DLB.STATUS<1,SC> = 'DEPT # ':DLB.DEPT<1,SC>:' IS NOT UNDER DIV # ':DLB.DIV<1,SC>
          GOTO 1090
      END
      MATREAD CCTR.REC FROM COST.CNTR, CONO : DLB.CCTR<1,SC> ELSE
          DLB.STATUS<1,SC> = 'CCTR # ':DLB.CCTR<1,SC>:' IS MISSING'; GOTO 1090
      END
      IF CCTR.DEPT # DLB.DEPT<1,SC> THEN
          DLB.STATUS<1,SC> = 'INCORRECT DEPARTMENT FOR CCTR # ':DLB.CCTR<1,SC>; GOTO 1090
      END
      IF CCTR.TYPE='F' THEN
          DLB.STATUS<1,SC> = 'CCTR # ':DLB.CCTR<1,SC>:' IS FROZEN'; GOTO 1090
      END
      LOCATE DLB.CCTR<1,SC> IN DEPT.CCTRS<1>,1 SETTING CLOC ELSE
          DLB.STATUS<1,SC> = 'CCTR # ':DLB.CCTR<1,SC>:' IS NOT UNDER DEPT # ':DLB.DEPT<1,SC>
          GOTO 1090
      END
      MATREAD OPER.REC FROM OPERATION, CONO : DLB.OPER<1,SC> ELSE
          DLB.STATUS<1,SC> = 'OPER # ':DLB.OPER<1,SC>:' IS MISSING'; GOTO 1090
      END
      LOCATE DLB.OPER<1,SC> IN CCTR.OPER<1>,1 SETTING OLOC ELSE
          DLB.STATUS<1,SC> = 'OPER # ':DLB.OPER<1,SC>:' IS NOT IN CCTR # ':DLB.CCTR<1,SC>
          GOTO 1090
      END
      MATREAD FCTR.REC FROM FACTOR, CONO : DLB.FCTR<1,SC> ELSE
          DLB.STATUS<1,SC> = 'FCTR # ':DLB.FCTR<1,SC>:' IS MISSING'; GOTO 1090
      END
      BEGIN CASE
          CASE DLB.CNCR<1,SC> = "Y"
              BEGIN CASE
                  CASE SC < 2
                      DLB.STATUS<1,SC> = "FIRST LINE CANNOT BE CONCURRENT"; GOTO 1090
                  CASE DLB.JOB<1,SC> = DLB.JOB<1,SC-1>
                      DLB.STATUS<1,SC> = "CONCURRENT JOB CANNOT BE SAME AS PRIOR JOB"; GOTO 1090
              END CASE
          CASE DLB.CNCR<1,SC> # "N"
              DLB.STATUS<1,SC> = "CONCURRENT FIELD MUST BE EITHER (Y) OR (N)"; GOTO 1090
      END CASE
      IF CO.SPOIL.FLG = "Y" AND JOB.TYPE = "R" AND DLB.TYPE<1,SC> = "S" THEN
          IF DLB.SPOIL.CODE<1,SC> = "" THEN
              DLB.STATUS<1,SC> = "SPOILAGE CODE IS MISSING"; GOTO 1090
          END
          READ SPOIL.CODE.DESC FROM SPOILAGE.CODES, CONO:DLB.SPOIL.CODE<1,SC> ELSE
              DLB.STATUS<1,SC> = "CANNOT LOCATE SPOILAGE CODE ":DLB.SPOIL.CODE<1,SC>
              GOTO 1090
          END
      END
      IF DLB.HRS.EN<1,SC> = DLB.HRS.ST<1,SC> THEN
          DLB.STATUS<1,SC> = "START TIME CAN NOT EQUAL END TIME"
          GOTO 1090
      END
      IF DLB.HRS.EN<1,SC> < DLB.HRS.ST<1,SC> THEN
          JLB.HRS = (DLB.HRS.EN<1,SC> + 2400) - DLB.HRS.ST<1,SC>
      END ELSE
          JLB.HRS = DLB.HRS.EN<1,SC> - DLB.HRS.ST<1,SC>
      END
      BEGIN CASE
          CASE CCTR.OPER.TYPE<1,OLOC> = 'V' AND DLB.IMP<1,SC> = '' AND DLB.CNCR<1,SC> # "Y"
              DLB.STATUS<1,SC> = 'CCTR-OPER IS (V), NEED # OF IMP'; GOTO 1090
          CASE CCTR.OPER.TYPE<1,OLOC> = 'U' AND DLB.IMP<1,SC> = '' AND DLB.CNCR<1,SC> # "Y"
              DLB.STATUS<1,SC> = 'CCTR-OPER IS (U), NEED # OF IMP'; GOTO 1090
          CASE CCTR.OPER.TYPE<1,OLOC> # 'V' AND CCTR.OPER.TYPE<1,OLOC> # 'U' AND DLB.IMP<1,SC> + 0 # 0 AND DLB.CNCR<1,SC> # "Y"
              DLB.STATUS<1,SC> = 'CCTR-OPER IS NOT (':CCTR.OPER.TYPE<1,OLOC>:'), NO NEED FOR # OF IMP'
              GOTO 1090
          CASE CCTR.OPER.HR.RATE<1,OLOC> + 0 = 0
              JLB.DCOST = DLB.COST<1,SC> + 0
          CASE 1
              JLB.DCOST = (CCTR.OPER.HR.RATE<1,OLOC> * FCTR.PRCNT) / 100
      END CASE
      IF JLB.DCOST <= 0 AND DLB.TYPE<1,SC> # "N" THEN
          DLB.STATUS<1,SC> = 'CANNOT POST A ZERO OR NEGATIVE COST'; GOTO 1090
      END
      GOTO 1099
1090  RELEASE JOB, CONO : DLB.JOB<1,SC>
1099  IF UPDATE.FLG = 1 AND DLB.STATUS = "" THEN GOSUB 1500
  NEXT SC
1999 RETURN
*
*---- UPDATE COST
*
1500 JLB.DCOST = INT((JLB.DCOST * JLB.HRS)/100 + .5)
  JLB.COST = JLB.DCOST; DPTR = 1
  FOR F = WLR.LB.COST TO 2 STEP -1
      P = F - 1
      IF CCTR.FOH.TYPE<1,P> = "$" THEN
          DCOST = INT(JLB.HRS * (CCTR.FOH.PCT<1,P> / 100) + .5)
      END ELSE
          DCOST = INT(JLB.DCOST<1,1> * (CCTR.FOH.PCT<1,P> / 10000) + .5)
      END
      JLB.COST = JLB.COST + DCOST
      IF JLB.COST <> JLB.DCOST<1,1> THEN
          JLB.DCOST<1,F> = DCOST
          IF DPTR = 1 THEN DPTR = F
      END
  NEXT F
  WPTR = 0; JLB.WIP = ""
  BEGIN CASE
      CASE WLR.SPL = "N" AND DLB.TYPE<1,SC> = "S"
      CASE WLR.NON.CHG = "N" AND DLB.TYPE<1,SC> = "N"
      CASE 1
          IF DPTR < WLR.LB.WIP THEN
              WPTR = DPTR
          END ELSE
              WPTR = WLR.LB.WIP
          END
          FOR W = 1 TO WPTR
              JLB.WIP<1,1,W> = JLB.DCOST<1,W>
          NEXT W
  END CASE
  IF DLB.TYPE<1,SC> = "S" OR DLB.TYPE<1,SC> = "N" THEN
      JLB.SALE = 0
  END ELSE
      JLB.SALE = INT(JLB.COST + ((JLB.COST * (CCTR.OPER.MARKUP<1,OLOC>/100))/100) + .5)
  END
*
*--- PRS INTERFACE
*
  IF CO.PRS.INTERFACE = "Y" AND DLB.CNCR<1,SC> = "N" THEN
      KEY = CONO : DLB.EMP :"!": DLB.DIV<1,SC> :"!": DLB.DEPT<1,SC> :"!": DLB.CCTR<1,SC> :"!": DLB.DATE
      MATREADU DHR.REC FROM DAILY.HOURS, KEY ELSE MAT DHR.REC = ""
      DHR.DEPT = EMP.DEPT
      BEGIN CASE
          CASE DLB.TYPE<1,SC> = "N"
              BEGIN CASE
                  CASE FCTR.EMP.PRCNT <= "100"
                      DHR.REG.NON = DHR.REG.NON + JLB.HRS
                  CASE FCTR.EMP.PRCNT > "100" AND FCTR.EMP.PRCNT < "200"
                      DHR.OT.NON = DHR.OT.NON + JLB.HRS
                  CASE 1
                      DHR.DT.NON = DHR.DT.NON + JLB.HRS
              END CASE
          CASE 1
              BEGIN CASE
                  CASE FCTR.EMP.PRCNT <= "100"
                      DHR.REG = DHR.REG + JLB.HRS
                  CASE FCTR.EMP.PRCNT > "100" AND FCTR.EMP.PRCNT < "200"
                      DHR.OT = DHR.OT + JLB.HRS
                  CASE 1
                      DHR.DT = DHR.DT + JLB.HRS
              END CASE
      END CASE
      MATWRITE DHR.REC ON DAILY.HOURS, KEY
  END
*--- UPDATE JCS
  IF POST.OSJ = 0 THEN
      OJLB.JOB = DLB.JOB<1,SC>
      JLB.SEQ = DLB.SEQ<1,SC>
      JLB.TYPE = DLB.TYPE<1,SC>
      JLB.DIV = DLB.DIV<1,SC>
      OJLB.DEPT = DLB.DEPT<1,SC>
      OJLB.CCTR = DLB.CCTR<1,SC>
      JLB.OPER = DLB.OPER<1,SC>
      JLB.FCTR = DLB.FCTR<1,SC>
      JLB.EMP = DLB.EMP
      JLB.IMP = DLB.IMP<1,SC>
      IF DLB.CNCR<1,SC> = "Y" THEN
          JLB.CNCR = JLB.HRS
      END ELSE
          JLB.CNCR = ""
      END
      JLB.DATE = DLB.DATE
      JLB.SPOIL.CODE = DLB.SPOIL.CODE<1,SC>
      JLB.MON = POSTING.MON
      BEGIN CASE
          CASE CCTR.OPER.TYPE<1,OLOC> = "U"
              BEGIN CASE
                  CASE CCTR.OPER.STD.HRS<1,OLOC> + 0 # 0
                      JLB.HRS.STD = CCTR.OPER.STD.HRS<1,OLOC>
                      JLB.IMP.STD = INT(100 / CCTR.OPER.STD.HRS<1,OLOC> * 100 + .5)
                  CASE CCTR.OPER.STD.IMP<1,OLOC> + 0 # 0
                      JLB.HRS.STD = INT(JLB.IMP / CCTR.OPER.STD.IMP<1,OLOC> + .5)
                      JLB.IMP.STD = CCTR.OPER.STD.IMP<1,OLOC>
                  CASE 1
                      JLB.HRS.STD = 0
                      JLB.IMP.STD = 0
              END CASE
          CASE CCTR.OPER.TYPE<1,OLOC> = "V"
              IF CCTR.OPER.STD.IMP<1,OLOC> + 0 # 0 THEN
                  JLB.HRS.STD = INT(JLB.IMP / CCTR.OPER.STD.IMP<1,OLOC> + .5)
                  JLB.IMP.STD = JLB.HRS * CCTR.OPER.STD.IMP<1,OLOC>
              END ELSE
                  JLB.HRS.STD = 0
                  JLB.IMP.STD = 0
              END
          CASE 1
              JLB.HRS.STD = CCTR.OPER.STD.HRS<1,OLOC> + 0
              JLB.IMP.STD = 0
      END CASE
      JLB.DESC = DLB.DESC<1,SC>
      JLB.SHIFT = DLB.SHIFT
      GOSUB 2000
  END ELSE
      OJLB.JOB = DLB.JOB<1,SC>
      OJLB.TYPE = DLB.TYPE<1,SC>
      OJLB.SPOIL.CODE = DLB.SPOIL.CODE<1,SC>
      OJLB.DIV = DLB.DIV<1,SC>
      OJLB.DEPT = DLB.DEPT<1,SC>
      OJLB.CCTR = DLB.CCTR<1,SC>
      OJLB.OPER = DLB.OPER<1,SC>
      OJLB.FCTR = DLB.FCTR<1,SC>
      OJLB.EMP = DLB.EMP
      OJLB.HRS = JLB.HRS
      OJLB.IMP = DLB.IMP<1,SC>
      IF DLB.CNCR<1,SC> = "Y" THEN
          OJLB.CNCR = JLB.HRS
      END ELSE
          OJLB.CNCR = ""
      END
      OJLB.DATE = DLB.DATE
      OJLB.MON = POSTING.MON
      OJLB.COST = JLB.COST
      OJLB.SALE = JLB.SALE
      OJLB.HRS.ST = DLB.HRS.ST<1,SC>
      OJLB.HRS.EN = DLB.HRS.EN<1,SC>
      OJLB.TIME.ST = DLB.TIME.ST<1,SC>
      OJLB.TIME.EN = DLB.TIME.END<1,SC>
      OJLB.DESC = DLB.DESC<1,SC>
      OJLB.SHIFT = DLB.SHIFT
      MATWRITE OJLB.REC ON OJOB.TIME , CONO:DLB.SEQ<1,SC>
      RELEASE JOB, CONO : OJLB.JOB
  END
  
  RETURN
**** UPDATE JOB RECORD
2000 DFND = 1; MATCHED = 0
  DCNT = COUNT(JOB.LB.DEPT,VM) + (JOB.LB.DEPT # '')
  FOR D = 1 TO DCNT WHILE MATCHED = 0
      BEGIN CASE
          CASE OJLB.DEPT = JOB.LB.DEPT<1,D>
              IF OJLB.CCTR = JOB.LB.CCTR<1,D> THEN
                  DFND = D
                  MATCHED = 1
              END ELSE
                  DFND = D + 1
              END
          CASE OJLB.DEPT > JOB.LB.DEPT<1,D>
              DFND = D + 1
      END CASE
  NEXT D
  IF MATCHED = 0 THEN
      IF DFND <= DCNT THEN
          JOB.LB.SEQ = INSERT(JOB.LB.SEQ,1,DFND,0,"")
          JOB.LB.DEPT = INSERT(JOB.LB.DEPT,1,DFND,0,"")
          JOB.LB.CCTR = INSERT(JOB.LB.CCTR,1,DFND,0,"")
          JOB.LB.OPER = INSERT(JOB.LB.OPER,1,DFND,0,"")
          JOB.LB.HRS = INSERT(JOB.LB.HRS,1,DFND,0,"")
          JOB.LB.IMP = INSERT(JOB.LB.IMP,1,DFND,0,"")
          JOB.LB.DATE = INSERT(JOB.LB.DATE,1,DFND,0,"")
          JOB.LB.TCOST = INSERT(JOB.LB.TCOST,1,DFND,0,"")
          JOB.LB.DCOST = INSERT(JOB.LB.DCOST,1,DFND,0,"")
          JOB.LB.COST = INSERT(JOB.LB.COST,1,DFND,0,"")
          JOB.LB.SALE = INSERT(JOB.LB.SALE,1,DFND,0,"")
      END
      JOB.LB.DEPT<1,DFND> = OJLB.DEPT
      JOB.LB.CCTR<1,DFND> = OJLB.CCTR
  END
  LB.ID = CONO:OJLB.JOB:"!":OJLB.DEPT:"!":OJLB.CCTR:"!"
  LOOP
      JOB.LB.SEQ<1,DFND> = JOB.LB.SEQ<1,DFND> + 1
      JLB.ID = LB.ID:JOB.LB.SEQ<1,DFND>
      READ DUMMY FROM JOB.TIME, JLB.ID ELSE DUMMY = ""
  WHILE DUMMY # "" DO REPEAT
  MATWRITE JLB.REC ON JOB.TIME, JLB.ID
  IF JLB.WIP # "" THEN
      CCW.ID = CONO:JLB.DIV:OJLB.DEPT:"!":OJLB.CCTR:JLB.MON
      MATREADU CCW.REC FROM COST.CNTR.WIP, CCW.ID ELSE MAT CCW.REC = ""
      JOB.WIP<1,1> = JOB.WIP<1,1> + 2
      JOB.LB.WIP<1,1> = JOB.LB.WIP<1,1> + 2
      FOR W = 1 TO WPTR
          JOB.WIP<1,2,W> = JOB.WIP<1,2,W> + JLB.WIP<1,1,W>
          JOB.LB.WIP<1,2,W> = JOB.LB.WIP<1,2,W> + JLB.WIP<1,1,W>
          CCW.LB.I<1,W> = CCW.LB.I<1,W> + JLB.WIP<1,1,W>
      NEXT W
      MATWRITE CCW.REC ON COST.CNTR.WIP, CCW.ID
  END
  IF JLB.MON < JOB.LB.WIP<1,4> OR JOB.LB.WIP<1,4> = "" THEN
      JOB.LB.WIP<1,4> = JLB.MON
      IF JLB.MON < JOB.WIP<1,4> OR JOB.WIP<1,4> = "" THEN
          JOB.WIP<1,4> = JLB.MON
      END
  END
  IF JLB.MON > JOB.LB.WIP<1,5> THEN
      JOB.LB.WIP<1,5> = JLB.MON
      IF JLB.MON > JOB.WIP<1,5> THEN
          JOB.WIP<1,5> = JLB.MON
      END
  END
  IF JLB.DATE >= JOB.LB.DATE<1,DFND,1> THEN
      JOB.LB.DATE<1,DFND,1> = JLB.DATE
  END
  IF DLB.SEQ<1,SC> > JOB.LB.DATE<1,DFND,2> THEN
      JOB.LB.OPER<1,DFND> = JLB.OPER
      JOB.LB.DATE<1,DFND,2> = DLB.SEQ<1,SC>
      JOB.LB.DATE<1,DFND,3> = JOB.LB.SEQ<1,DFND>
  END
  JOB.LB.HRS<1,DFND> = JOB.LB.HRS<1,DFND> + JLB.HRS
  JOB.LB.IMP<1,DFND> = JOB.LB.IMP<1,DFND> + JLB.IMP
  JOB.LB.COST<1,DFND> = JOB.LB.COST<1,DFND> + JLB.COST
  FOR F = 1 TO DPTR
      JOB.LB.DCOST<1,DFND,F> = JOB.LB.DCOST<1,DFND,F> + JLB.DCOST<1,F>
  NEXT F
  JOB.LB.SALE<1,DFND> = JOB.LB.SALE<1,DFND> + JLB.SALE
*  PRDS.ID = CONO:"*":JLB.DIV:"*":OJLB.DEPT:"*":OJLB.CCTR:"*":JLB.MON:"*":JLB.SHIFT:"*A"
*  MATREADU PRDS.REC FROM PROD.STATS, PRDS.ID ELSE MAT PRDS.REC = ""
  PSR.ID = CONO:"!":JLB.DIV:"!":OJLB.DEPT:"!":OJLB.CCTR:"!":JLB.OPER:"!":JLB.EMP:"!":JLB.MON
  MATREADU PSR.REC FROM PERF.STATS, PSR.ID ELSE MAT PSR.REC = ""
  IF JLB.CNCR + 0 <> 0 THEN
*     JLB.CNCR always equal JLB.HRS (ZAY)
      JOB.LB.TCOST<1,DFND,5> = JOB.LB.TCOST<1,DFND,5> + JLB.COST
      PSR.CNC.HRS = PSR.CNC.HRS + JLB.CNCR
      PSR.CNC.IMP = PSR.CNC.IMP + JLB.IMP
  END
* T18439
  BEGIN CASE
      CASE JLB.TYPE = "N"
          PTR = 2
      CASE JLB.TYPE = "S"
          PTR = 4
      CASE JLB.TYPE = "C"
          PTR = 3
      CASE 1
          PTR = 1
  END CASE
  IF JLB.CNCR + 0 = 0 THEN     ;* ONLY UPDATE IF CONCURRENT HRS = 0
      PRDS.ID = CONO:"*":JLB.DIV:"*":OJLB.DEPT:"*":OJLB.CCTR:"*":JLB.MON:"*":JLB.SHIFT:"*A"
      MATREADU PRDS.REC FROM PROD.STATS, PRDS.ID ELSE MAT PRDS.REC = ""
      BEGIN CASE
          CASE JLB.TYPE = "N"
*      PTR = 2
              PRDS.LAB.NC.HRS = PRDS.LAB.NC.HRS + JLB.HRS
              PRDS.LAB.NC.COST = PRDS.LAB.NC.COST + JLB.COST
              PSR.N.C.HRS = PSR.N.C.HRS + JLB.HRS
              PSR.N.C.IMP = PSR.N.C.IMP + JLB.IMP
          CASE JLB.TYPE = "C"
*      PTR = 3
              PRDS.LAB.HRS = PRDS.LAB.HRS + JLB.HRS
              PRDS.LAB.COST = PRDS.LAB.COST + JLB.COST
              PSR.CHG.HRS = PSR.CHG.HRS + JLB.HRS
              PSR.CHG.IMP = PSR.CHG.IMP + JLB.IMP
          CASE JLB.TYPE = "S"
*      PTR = 4
              PRDS.LAB.SP.HRS = PRDS.LAB.SP.HRS + JLB.HRS
              PRDS.LAB.SP.COST = PRDS.LAB.SP.COST + JLB.COST
              PSR.N.C.HRS = PSR.N.C.HRS + JLB.HRS
              PSR.N.C.IMP = PSR.N.C.IMP + JLB.IMP
              IF JLB.SPOIL.CODE # "" THEN
                  SSR.ID = CONO:JLB.DIV:OJLB.DEPT:"!":OJLB.CCTR:JLB.MON:JLB.SPOIL.CODE
                  MATREADU SSR.REC FROM SPOIL.STATS,SSR.ID ELSE MAT SSR.REC = ""
                  FOR F = 1 TO DPTR
                      SSR.LB<1,F> = SSR.LB<1,F> + JLB.DCOST<1,F>
                  NEXT F
                  MATWRITE SSR.REC ON SPOIL.STATS,SSR.ID
              END
          CASE 1
*      PTR = 1
              JLB.TYPE = "R"
              PRDS.LAB.HRS = PRDS.LAB.HRS + JLB.HRS
              PRDS.LAB.COST = PRDS.LAB.COST + JLB.COST
              PSR.CHG.HRS = PSR.CHG.HRS + JLB.HRS
              PSR.CHG.IMP = PSR.CHG.IMP + JLB.IMP
      END CASE
      BEGIN CASE
          CASE JLB.FCTR = "02"
              PRDS.LAB.OT.HRS = PRDS.LAB.OT.HRS + JLB.HRS
              PRDS.LAB.OT.COST = PRDS.LAB.OT.COST + JLB.COST
              PSR.O.T.HRS = PSR.O.T.HRS + JLB.HRS
          CASE JLB.FCTR = "03"
              PRDS.LAB.DT.HRS = PRDS.LAB.DT.HRS + JLB.HRS
              PSR.D.T.HRS = PSR.D.T.HRS + JLB.HRS
              PRDS.LAB.DT.COST = PRDS.LAB.DT.COST + JLB.COST
      END CASE
      MATWRITE PRDS.REC ON PROD.STATS, PRDS.ID
  END
  IF JLB.HRS.STD + JLB.IMP.STD <> 0 THEN
*T18439
      IF JLB.HRS + JLB.IMP # 0 THEN
          PSR.ACT.HRS = PSR.ACT.HRS + JLB.HRS
          PSR.STD.HRS = PSR.STD.HRS + JLB.HRS.STD
          PSR.ACT.IMP = PSR.ACT.IMP + JLB.IMP
          PSR.STD.IMP = PSR.STD.IMP + JLB.IMP.STD
      END
  END
*
  PSR.DEPT = OJLB.DEPT
  PSR.OPER = JLB.OPER
  MATWRITE PSR.REC ON PERF.STATS, PSR.ID
  JOB.LB.TCOST<1,DFND,PTR> = JOB.LB.TCOST<1,DFND,PTR> + JLB.COST
  IF JOB.STATUS = "" THEN
      JOB.STATUS = INSERT(JOB.STATUS,1,1,0,"1")
      JOB.STAT.DATE = INSERT(JOB.STAT.DATE,1,1,0,DATE())
*      JOB.TRACK.DATE<1,5> = DATE()
  END
  IF JOB.STATUS<1,1> # 1 THEN
      JOB.STATUS = INSERT(JOB.STATUS,1,1,0,"5")
      JOB.STAT.DATE = INSERT(JOB.STAT.DATE,1,1,0,DATE()) 
  END
  IF JOB.TRACK.DATE<1,5> = "" THEN JOB.TRACK.DATE<1,5> = DLB.DATE
  JOB.TOT.DCOST = JOB.TOT.DCOST + JLB.DCOST<1,1>
  JOB.TOT.COST = JOB.TOT.COST + JLB.COST
  JOB.TOT.SALE = JOB.TOT.SALE + JLB.SALE
  MATWRITE JOB.REC ON JOB, CONO : OJLB.JOB
  RETURN
93000
RETURN

