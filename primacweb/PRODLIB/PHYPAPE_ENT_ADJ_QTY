SUBROUTINE PHYPAPE_ENT_ADJ_QTY
********************************************************************************
*   Program name :- PHYPAPE_ENT_ADJ_QTY
*   Created:- 6/3/2005
*   Author:- Ravi Kishore Adidam
********************************************************************************
$INCLUDE WWINSERT RBO.H
$INCLUDE ICS.CPYLIB PHYSICAL.INV
$INCLUDE ICS.CPYLIB INV_SERIAL
$INCLUDE PMC.CPYLIB COMPANY
$INCLUDE ICS.CPYLIB INV.WHSE
$INCLUDE ICS.CPYLIB INV.WHSE.LOC
$INCLUDE ICS.CPYLIB WAREHOUSE
$INCLUDE ICS.CPYLIB INV.ADJ.CODES
$INCLUDE ICS.CPYLIB CATEGORY
$INCLUDE ICS.CPYLIB INVENTORY
$INCLUDE JCS.CPYLIB JOB
$INCLUDE JCS.CPYLIB JOB.STATS
$INCLUDE ICS.CPYLIB INV.CNV
$INCLUDE CPYLIB CHAR

DEFFUN CALC.DIAM(COST.QTY,STK.QTY,MAT INV.REC)
DEFFUN CALC.STK.QTY(COST.QTY,MAT INV.CNV.REC,ROND,LN)
DEFFUN CALC.COST.QTY(STK.QTY,MAT INV.CNV.REC,ROND,LN)
DEFFUN GET.SERIAL.SEQ(CONO,CONTROL.FILE,INV_SERIAL.FILE)

OPEN '','CATEGORY' TO CATEGORY ELSE 
	ERRMSG='CATEGORY FILE IS MISSING'
	GOTO 93000
END
OPEN '','COMPANY' TO COMPANY ELSE 
	ERRMSG='COMPANY FILE IS MISSING'
	GOTO 93000
END
OPEN '','PHYSICAL.INV' TO PHYSICAL.INV ELSE
	ERRMSG='PHYSICAL.INV FILE IS MISSING'
	GOTO 93000
END
OPEN '','INV.WHSE' TO INV.WHSE ELSE 
	ERRMSG='INV.WHSE FILE IS MISSING'
	GOTO 93000
END
OPEN '','INV.WHSE.LOC' TO INV.WHSE.LOC ELSE 
	ERRMSG='INV.WHSE.LOC FILE IS MISSING'
	GOTO 93000
END
OPEN '','INV.ADJ.CODES' TO INV.ADJ.CODES ELSE
	ERRMSG='INV.ADJ.CODES FILE IS MISSING'
	GOTO 93000
END
OPEN '','INV_SERIAL' TO INV_SERIAL ELSE 
	ERRMSG='INV_SERIAL FILE IS MISSING'
	GOTO 93000
END
OPEN '','INV_SERIAL_DELETED' TO INV_SERIAL_DELETED ELSE 
	ERRMSG='INV_SERIAL_DELETED FILE IS MISSING'
	GOTO 93000
END
OPEN '','WAREHOUSE' TO WAREHOUSE ELSE 
	ERRMSG='WAREHOUSE FILE IS MISSING'
	GOTO 93000
END
OPEN '','INVENTORY' TO INVENTORY ELSE 
	ERRMSG='INVENTORY FILE IS MISSING'
	GOTO 93000
END
OPEN '','JOB' TO JOB ELSE
	ERRMSG='JOB FILE IS MISSING'
	GOTO 93000
END
OPEN '','JOB.STATS' TO JOB.STATS ELSE
	ERRMSG='JOB.STATS FILE IS MISSING'
	GOTO 93000
END
OPEN '','CONTROL' TO CONTROL ELSE 
	ERRMSG='CONTROL FILE IS MISSING'
	GOTO 93000
END

STATUS=RBO.getProperty('','CONO',CONO)
STATUS=RBO.getProperty('','PROD_WHSE',WHSE.CODE)
STATUS=RBO.getProperty('','PROD_LOC',LOC.CODE)
STATUS=RBO.getProperty('','PROD_NO',PROD.NUM)
STATUS=RBO.getProperty('','SERIAL_NO',SERIAL_NO)
STATUS=RBO.getProperty('','PHS_ADJ_TYPE',PHS.ADJ.TYPE)
STATUS=RBO.getProperty('','GRID_COLUMNS',GRID_COLUMNS)
STATUS=RBO.getProperty('','PHS_DIFF_CODE',PHS_DIFF_CODE)
STATUS=RBO.getProperty('','PROD_INV_LINE',PROD.LINE)

ERRMSG = ''
MAT PHS.INV.REC=''
MAT INV.CNV.REC=''
MAT CATG.REC=''

LINES.1=0
OLD.START.LINE.1=0
LINES.2=0
OLD.START.LINE.2=0

PHS.INV.KEY=CONO:CATG.TYPE:'!':PROD.LINE:'!':WHSE.CODE:'!':LOC.CODE

MATREADU PHS.INV.REC FROM PHYSICAL.INV,PHS.INV.KEY THEN
	MAT PHS.INV.REC=''
END

    IF PHS.INV.PROD='' THEN
      LOOP
        LN1=LINES.1+1
        OLD.LINES.1=LINES.1
        *GOSUB PRODUCT.LINES.ENTRY
        LINES.2=0
        *FOR C=16 TO 19
        *  P_X  = 0 ; P_Y = C ; P_VALUE = "" ; P_OPT = "CL"
        *  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
        *NEXT C
        IF LINES.1 # OLD.LINES.1 THEN
          LOOP
            LN2=LINES.2+1
            OLD.LINES.2=LINES.2
            GOSUB SERIAL.LINES.ENTRY
          WHILE LINES.2 > OLD.LINES.2 DO REPEAT
        *  GOSUB SUB.OPTION.ENTRY
        END
      WHILE LINES.1 > OLD.LINES.1 DO REPEAT
      LN1=LINES.1
      *FOR C=16 TO 19
      *  P_X  = 0 ; P_Y = C ; P_VALUE = "" ; P_OPT = "CL"
      *  CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
      *NEXT C
    END ELSE
      LINES.1=COUNT(PHS.INV.PROD,VM)+1
      FOR D=1 TO LINES.1
        MATREAD INV.REC FROM INVENTORY,CONO:PHS.INV.PROD<1,D> ELSE
          MAT INV.REC=""
        END
        LN1=D
        DIFF.QTY<1,D>=PHS.NEW.QTY<1,D> - PHS.CUR.QTY<1,D>
        CNT=DCOUNT(PHS.R.S.ID<1,D>,SVM)
        FOR DD=1 TO CNT
         DIFF.DIAM<1,D,DD>=PHS.NEW.DIAM<1,D,DD> - PHS.CUR.DIAM<1,D,DD>
          DIFF.WGHT<1,D,DD>=PHS.NEW.WGHT<1,D,DD> - PHS.CUR.WGHT<1,D,DD>
        NEXT DD
      NEXT D
      LN1=1
    END

DIFF.DIAM=''
DIFF.SHEET=''
DIFF.WGHT=''
DIFF.QTY=''

*************
ENT.ADJ.CODE:
*************
*
EOI=0
LOOP
  SKIP=0
    BEGIN CASE
      CASE PHS.ADJ.CODE<1,LN1,LN2> # ''
        O.R='O';DEFAULT=PHS.ADJ.CODE<1,LN1,LN2>
      CASE LN2 > 1
        O.R='O';DEFAULT=PHS.ADJ.CODE<1,LN1,LN2-1>
      CASE 1
        O.R='R'
    END CASE
    IF DIFF.WGHT<1,LN1,LN2>=''  THEN
	LL=LN2
	PHS.NEW.QTY<1,LN1>=PHS.CUR.QTY<1,LN1>+DIFF.QTY<1,LN1>
	IF PHS.NEW.QTY<1,LN1> < 0 THEN ROND="-.5" ELSE ROND=".5"
	TMP=CALC.STK.QTY(PHS.NEW.QTY<1,LN1>,MAT INV.CNV.REC,ROND,LN1)
	IF DIFF.QTY<1,LN1> < 0 THEN ROND="-.5" ELSE ROND=".5"
	TMP=CALC.STK.QTY(DIFF.QTY<1,LN1>,MAT INV.CNV.REC,ROND,LN1)
	SKIP=1; EOI=1 ; EOS=1
	  IF NOT(SKIP) THEN
    MATREAD IADJ.REC FROM INV.ADJ.CODES, CONO:VALUE THEN
      PHS.ADJ.CODE<1,LN1,LN2>=VALUE
      PHS.ADJ.TYPE<1,LN1,LN2>=IADJ.TYPE
      EOI=1
    END ELSE
      ERRMSG='INVALID ADJUSTMENT REASON CODE'
      GOSUB 93000
    END
  END
END
UNTIL (EOI) DO REPEAT

*

*******************
SERIAL.LINES.ENTRY:
*******************
*
GOSUB ENT.ADJ.CODE

MATREAD ISTK.REC FROM INV_SERIAL,CONO:SERIAL_NO THEN
	VALUE = PHS_DIFF_CODE
	PHS.CUR.SHEET = ISTK.CUR.STK.QTY

	BEGIN CASE
		CASE PHS.ADJ.TYPE='P'
			IF VALUE # '' THEN
				IF PHS.CUR.SHEET+VALUE>ISTK.ORG.STK.QTY THEN
					ERRMSG='ADJUSTED QTY EXCEEDS ORIGINALLY RECEIVED QTY.'
					ERRMSG:=' USE RECEIPT ADJUSTMENTS.'
					GOSUB 93000 ; SKIP=1
				END
				TMP=CALC.COST.QTY(VALUE,MAT INV.CNV.REC,'',LN1)
				VALUE=TMP
			END
		CASE 1
			IF IWH.ON.HAND-IWH.RESV>1 THEN
				IF ISTK.RSVB.QTY>1 THEN
          				IF DIFF.SHEET<1,LN1,LN2> # '' THEN O.R="O"
				END
			END

       END CASE			
END

93000*
	STATUS = RBO.setProperty('','ServerStatus',TEST)
	STATUS = RBO.setProperty('','ServerMessage',ERRMSG)
RETURN


