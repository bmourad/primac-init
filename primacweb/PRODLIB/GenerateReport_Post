 SUBROUTINE GenerateReport_Post
**************************************************************************
*   Program name :- GenerateReport_Post
*   Created:- 04/25/2005
*------------------------------------------------------------------------*
*
* In Properties:
* --------------
*  
*
* Out Properties:
* ---------------
*  
**************************************************************************
   $INCLUDE WWINSERT RBO.H
* Insert method code here
   $INCLUDE PMC.CPYLIB PMCProcessStatus
   $INCLUDE PMC.CPYLIB PMC_PROCESS
   $INCLUDE PMC.CPYLIB PMC_REPORTS
   $INCLUDE CPYLIB PORT.CONTROL
   $INCLUDE PMC.CPYLIB SECURITY
   $INCLUDE CPYLIB CHAR
* Insert method code here
   OPEN '','VOC' TO F.VOC ELSE
      MESG = 'Cannot open VOC file!'
      STATUS = RBO.setProperty('', 'ServerStatus', 1)
      STATUS = RBO.setProperty('', 'ServerMessage', MESG)
      RETURN
   END
   OPEN '','CONTROL' TO CONTROL ELSE
      MESG = 'Cannot open CONTROL file!'
      STATUS = RBO.setProperty('', 'ServerStatus', 1)
      STATUS = RBO.setProperty('', 'ServerMessage', MESG)
      RETURN
   END
   OPEN '','Primac_Security' TO PRIMAC_SECURITY ELSE
      MESG = 'Cannot open Primac_Security file!'
      STATUS = RBO.setProperty('', 'ServerStatus', 1)
      STATUS = RBO.setProperty('', 'ServerMessage', MESG)
      RETURN
   END
   OPEN '','SECURITY' TO SECURITY ELSE
      MESG = 'Cannot open SECURITY file!'
      STATUS = RBO.setProperty('', 'ServerStatus', 1)
      STATUS = RBO.setProperty('', 'ServerMessage', MESG)
      RETURN
   END
   OPEN '','PMCProcessData' TO PMCProcessData ELSE
      MESG = 'Cannot open PMCProcessData file!'
      STATUS = RBO.setProperty('', 'ServerStatus', 1)
      STATUS = RBO.setProperty('', 'ServerMessage', MESG)
      RETURN
   END
   OPEN '','PMCProcessStatus' TO PMCProcessStatus ELSE
      MESG = 'Cannot open PMCProcessStatus file!'
      STATUS = RBO.setProperty('', 'ServerStatus', 1)
      STATUS = RBO.setProperty('', 'ServerMessage', MESG)
      RETURN
   END
   OPEN '','PMC_REPORT_VALUES' TO PMC_REPORT_VALUES ELSE
      MESG = 'Cannot open PMC_REPORT_VALUES file!'
      STATUS = RBO.setProperty('', 'ServerStatus', 1)
      STATUS = RBO.setProperty('', 'ServerMessage', MESG)
      RETURN
   END
   OPEN '','PMC_PROCESS' TO PMC_PROCESS ELSE
      MESG = 'Cannot open PMC_PROCESS file!'
      STATUS = RBO.setProperty('', 'ServerStatus', 1)
      STATUS = RBO.setProperty('', 'ServerMessage', MESG)
      RETURN
   END
   OPEN '','PMC_REPORTS' TO PMC_REPORTS ELSE
      MESG = 'Cannot open PMC_REPORTS file!'
      STATUS = RBO.setProperty('', 'ServerStatus', 1)
      STATUS = RBO.setProperty('', 'ServerMessage', MESG)
      RETURN
   END
   OPEN '','WIN.PRINTERS' TO WIN.PRINTERS ELSE
      MESG = 'Cannot open WIN.PRINTERS file!'
      STATUS = RBO.setProperty('', 'ServerStatus', 1)
      STATUS = RBO.setProperty('', 'ServerMessage', MESG)
      RETURN
   END
   OPEN '','_HOLD_' TO HOLD.FILE ELSE 
	 MESG = 'CANNOT LOCATE THE _HOLD_ FILE!'
	 STATUS = RBO.setProperty('', 'ServerStatus', 1)
        STATUS = RBO.setProperty('', 'ServerMessage', MESG)
        RETURN
   END
*
* Get ID from RBO
* demo!CUSTL!111!PC116!001!Print
   STATUS = RBO.getProperty('','ID', PPSD_ID)
*PPSD_ID  = "sajaweed!ICSTRP!523648763!IC205!001!View"
   STATUS = RBO.getProperty('','PROCESS_ID',POST_PROCESS) ; *ADDED FOR SECOND PROCS
*POST_PROCESS = "REG.INV.IN.REJ"
* Initialization
   TDString = TIMEDATE ()
   P_DATE = ICONV(TDString[10,11], "D")
   P_TIME = ICONV(FIELD(TDString, " ",1), "MT")
*
   UserID = FIELD(PPSD_ID, "!", 1) ;* User ID
   PPSID = FIELD(PPSD_ID, "!", 2) ;* PMC_PROCESS ID(ASP file name)
   SessionID = FIELD(PPSD_ID, "!", 3) ;* IE Session ID
   PRPT_ID = FIELD(PPSD_ID, "!", 4) ;* PMC_REPORTS ID
   Cono = FIELD(PPSD_ID, "!", 5)
*
 READ COMPANY.SECURITY FROM CONTROL, Cono:"DIV.SECURITY" ELSE
      MESG = 'Cannot Read Div.Security rec from CONTROL File!'
      STATUS = RBO.setProperty('', 'ServerStatus', 'E')
      STATUS = RBO.setProperty('', 'ServerMessage', MESG)
      RETURN
   END
*
   MATREAD SEC.REC FROM SECURITY, Cono:UPCASE(UserID) ELSE
      ERRMSG = "USER ":UserID:" NOT ON FILE"
      STATUS = RBO.setProperty('', 'ServerStatus', 'E')
      STATUS = RBO.setProperty('', 'ServerMessage', ERRMSG)
      RETURN
   END
   SETPTR_QUEUE = SEC.DFLT.QUEUE
IF SEC.GUI.VIEW = "RTF" THEN
	SEC_GUI_VIEW = SEC.GUI.VIEW
END ELSE
	SEC_GUI_VIEW = "PDF"
END
*CODE FOR FORM QUEUES
  READ FORM.QUEUE FROM SECURITY, Cono:UPCASE(UserID) THEN
	   FOR A = 1 TO DCOUNT(FORM.QUEUE<33>,VM)
	      IF FORM.QUEUE<33,A> = MENU AND FORM.QUEUE<34,A> = OPTION THEN
		 SETPTR_QUEUE = FORM.QUEUE<35,A>
	      END
	   NEXT A
  END
*END
REPORT_OPTION = FIELD(PPSD_ID, "!", 6)
*
   IF FIELD(PPSD_ID, "!", 6) = "Email" THEN
      Email_Flag = "M"
   END ELSE
      IF FIELD(PPSD_ID, "!", 6) = "Print" THEN
         Email_Flag = ""
      END ELSE
	   IF FIELD(PPSD_ID, "!", 6) = "Save" THEN;  *ADDED FOR SAVE OPTION
              Email_Flag = "F"
          END ELSE
	      Email_Flag = "V"
          END
      END
   END
*
  LOG_NAME = @LOGNAME
   PORT_NO = "TTY"
   CALL SYSVARS.SUB(PORT_NO)
*PORT_NO = UPCASE(UserID): "_" :@UDTNO
*LOG_NAME = UPCASE(UserID)

***************
*   OS_TYPE = "OS"
*   CALL SYSVARS.SUB(OS_TYPE)
*   OS_TYPE = UPCASE(OS_TYPE)

OS_TYPE = "WINDOWS"
RB_FLAG = "redback"
*
***** This Procedure will fetch valid report id
   IF INDEX(PRPT_ID,",",1) > 0 THEN
      SUB_REPORT = CHANGE(PRPT_ID,",",AM)
      SUB_REPORT = DELETE(SUB_REPORT,1,0,0)
      SCOUNT = DCOUNT(SUB_REPORT,AM)
      REPORT_ID = FIELD(PRPT_ID,",",1)
   END ELSE
      REPORT_ID = PRPT_ID
   END
******
   PRPT_ID = REPORT_ID
   MATREAD PRPT.REC FROM PMC_REPORTS, REPORT_ID ELSE
      MESG = 'Cannot READ PMC_REPORTS record!'
      STATUS = RBO.setProperty('', 'ServerStatus', 1)
      STATUS = RBO.setProperty('', 'ServerMessage', MESG)
      RETURN
   END
*
   PPDREC = ""
   LAST_LINE = DCOUNT(PRPT.PROMPTS<1>,@VM)
*
   EOD_SECURITY = "N"
   DIV.SEC.FLAG = 0 ;* This will decide whether to add COMPANY.SECURITY<2> Flag in PROCS Variable list
   FOR II = 1 TO LAST_LINE ;* These are the prompt values submitted from ASP
      DUMMY = ""
      TEST = 'PPDField': II "R%2"
      STATUS = RBO.getProperty('', TEST, DUMMY)
      PPDREC<II> = DUMMY
*
*********************CHECK DIVISIONAL LEVEL SECURITY****************
*
      IF PRPT.PROMPTS.GDS<1,II> = "L" THEN
         DIV.SEC.FLAG = 1
         EOD_SECURITY = "Y"
      END
*
***********************************************************************
   NEXT II
*
   IF LAST_LINE > DCOUNT(PPDREC,@AM) THEN
      MESG = 'Cannot getProperty PMCProcessData'
      STATUS = RBO.setProperty('', 'ServerStatus', 1)
      STATUS = RBO.setProperty('', 'ServerMessage', MESG)
      RETURN
   END
*ADDDED FOR EXTRA PROMPTS v
    LLL = LAST_LINE+1 
    LOOP 
	PPDFieldNew = 'PPDField': LLL "R%2"
       STATUS = RBO.getProperty('', PPDFieldNew,DUMMYPPD)
	UNTIL DUMMYPPD = ""
		PPDREC<LLL> = DUMMYPPD
       	LLL = LLL + 1
    REPEAT 
    WRITE PPDREC ON CONTROL,'01PPD'
*ADDDED FOR EXTRA PROMPTS  ^
   WRITE PPDREC ON PMCProcessData, PPSD_ID ;* write client i/p data in data file with ID as Report ID
*
   FOR X = 1 TO 1000
   NEXT X
*
   READU PPD_REC FROM PMCProcessData, PPSD_ID ELSE
      RELEASE PMCProcessData, PPSD_ID
      MESG = 'Cannot READ PMCProcessData record!'
      STATUS = RBO.setProperty('', 'ServerStatus', 1)
      STATUS = RBO.setProperty('', 'ServerMessage', MESG)
      RETURN
   END
* Read PMC_PPROCESS
   MATREAD PPS.REC FROM PMC_PROCESS, PPSID ELSE ;* ASP file name
      MESG = 'Cannot READ PMC_PROCESS record!'
      STATUS = RBO.setProperty('', 'ServerStatus', 1)
      STATUS = RBO.setProperty('', 'ServerMessage', MESG)
      RETURN
   END

* Build PMCProcessStatus Record
   MAT PPSR.REC = ""
   PPSR.PROPERTY = PPSD_ID
   PPSR.USER = UserID
   PPSR.SESSION = SessionID
   PPSR.PPID = PPSID
   PPSR.PRPT = PRPT_ID
   PPSR.LAST = LAST_LINE
   PPSR.PROMPTS = PRPT.PROMPTS
   PPSR.STATUS = "Submit"
   IF LAST_LINE > 0 THEN
      IF DIV.SEC.FLAG = 1 THEN ;* This is REV12 change
         PPSR.PVALUES = CHANGE(PPD_REC,@AM,@VM) : @VM : COMPANY.SECURITY<2> : @VM : Email_Flag
      END ELSE
         PPSR.PVALUES = CHANGE(PPD_REC,@AM,@VM) : @VM : Email_Flag
      END
   END ELSE
      PPSR.PVALUES = Email_Flag
   END
*
   PPSR.STDATE = P_DATE
   PPSR.STTIME = P_TIME
   CALL GetSYSVars (PPSR.STSVAL, TDString)
   READU XXX_REC FROM CONTROL, Cono:"PMCProcessStatus" ELSE XXX_REC = ""
   PPSR_ID = ""
*
   LOOP
*
   UNTIL PPSR_ID # "" DO
      IF XXX_REC<1> = "" OR P_DATE > XXX_REC<1> THEN
         XXX_REC<1> = P_DATE
         XXX_REC<2> = 0
      END
      XXX_REC<2> += 1
      PPSR_ID = Cono : P_DATE : "_" : XXX_REC<2>
      READU DUMMY FROM PMCProcessStatus, PPSR_ID THEN
         PPSR_ID = ""
      END LOCKED
         PPSR_ID = ""
      END
   REPEAT
*
   DUMMY = ""
*
   WRITE XXX_REC ON CONTROL, Cono:"PMCProcessStatus" ;* this contains sequence number with date report run, to generate seq. no with date for file name
   MATWRITE PPSR.REC ON PMCProcessStatus, PPSR_ID
* Setup and Process REPORT.SCRN
   DELETE PMCProcessData, PPSD_ID
   HF_NAME = CHANGE(PORT_NO,"*","_"):"_":PRPT_ID
   WRITE HF_NAME ON CONTROL,'O1HF'
   READU DUMMY FROM CONTROL, HF_NAME ELSE DUMMY = ""
   DELETE CONTROL, HF_NAME
   READU DUMMY FROM PMC_REPORT_VALUES, HF_NAME ELSE DUMMY = ""
*
   PROC_VALUES = Cono
   PROC_VALUES<2> = PRPT_ID
*
   IF DIV.SEC.FLAG = 1 THEN
      PROC_VALUES = PROC_VALUES : @AM : PPD_REC : @AM : COMPANY.SECURITY<2>;* : @AM : Email_Flag ;* REV12 CHANGE
      PROC_VALUES<85> = MENU : @AM : OPTION; * SENDING MENU AND OPTION (M_JCS_FýIVCP) TO INVOICE'S AND PO'S
      PROC_VALUES<89> = RB_FLAG : @AM : Email_Flag;*ADDED
   END ELSE
      PROC_VALUES = PROC_VALUES : @AM : PPD_REC;* : @AM : Email_Flag ;* REV12 CHANGE
      PROC_VALUES<85> = MENU : @AM : OPTION; * SENDING MENU AND OPTION (M_JCS_FýIVCP) TO INVOICE'S AND PO'S
      PROC_VALUES<89> = RB_FLAG : @AM : Email_Flag;*ADDED
   END
*
   WRITE PROC_VALUES ON PMC_REPORT_VALUES, HF_NAME
*
   MATREADU USER.REC FROM SECURITY, "R.":PORT_NO ELSE DUMMY = ""
   MAT USER.REC = ""
   USER.CONO = Cono
   USER.ID = OCONV(UserID, 'MCU')
   USER.DIR = "primacweb"
   USER.CORP = 0
   USER.M.CO = 1
   USER.C.CO = Cono
   USER.STAT = "PROC"
   USER.DATE = P_DATE
   USER.TIME = P_TIME
   USER.M.DSP = "XXX"
   USER.VERB = PPSID
   USER.V.DSP = "XXX"
   MATWRITE USER.REC ON SECURITY , "R.":PORT_NO
*
   PREV_USER4 = @USER4
   @USER4 = "redback":PPSR_ID:VM:UserID
*
*--- SET PRINTER
*
   SETPTR_CMD = ""
   BEGIN CASE
*   CASE Email_Flag = "F"
   CASE Email_Flag # ""
   CASE OS_TYPE[1,7] = "WINDOWS"
      READ WIN.PRINTERS.REC FROM WIN.PRINTERS,SETPTR_QUEUE THEN
         SETPTR_FORMATSTR = "Orientation=":WIN.PRINTERS.REC<5>:","
         SETPTR_FORMATSTR := "Font=":WIN.PRINTERS.REC<6>:","
         SETPTR_FORMATSTR := "FontSize=":WIN.PRINTERS.REC<7>:","
         SETPTR_FORMATSTR := "TopMargin=":WIN.PRINTERS.REC<8>:","
         SETPTR_FORMATSTR := "BottomMargin=":WIN.PRINTERS.REC<9>
*
*         SETPTR_CMD = 'SETPTR 0,132,,,,1,AT '
         SETPTR_CMD = 'SETPTR 0,':WIN.PRINTERS.REC<2>:',,,,1,AT '
         SETPTR_CMD := WIN.PRINTERS.REC<3>
         SETPTR_CMD := ',"':SETPTR_FORMATSTR:'",NHEAD,BRIEF'
      END
   CASE OS_TYPE = "UNIX"
      SETPTR_CMD = 'SETPTR ,,,,,,NHEAD,BRIEF,DEST '
      SETPTR_CMD := SETPTR_QUEUE:',NOMESSAGE'
   CASE 1
   END CASE
*
   PROC_LINE    = "PQN"
   PROC_LINE<2> = 'MV %1 "' : PPSR_ID : '"'
   PROC_LINE<3> = 'MV %2 "' : HF_NAME : '"'
   PROC_LINE<4> = "H exePMCProcess"
   PROC_LINE<5> = "P"
   IF SETPTR_CMD # "" THEN
      PROC_LINE<6> = "H " : SETPTR_CMD
      PROC_LINE<7> = "P"
   END ELSE
      PROC_LINE<6> = "C"
      PROC_LINE<7> = "C"
   END
  * PROC_LINE<8> = "[" : PPS.DIR : " " : PPS.PROCESS : "]"
 IF POST_PROCESS #  "" THEN
  	PROC_LINE<8> = "[" : PPS.DIR : " " : POST_PROCESS : "]"
 END ELSE
	
 END
   READU DUMMY FROM F.VOC, HF_NAME ELSE DUMMY = ""
   WRITE PROC_LINE ON F.VOC, HF_NAME

   UDTEXECUTE HF_NAME CAPTURING MESG
   @USER4 = PREV_USER4

WRITE PROC_LINE ON CONTROL,"02TEST";*ADDED
WRITE MESG:@AM:Email_Flag ON CONTROL,"03TEST";*ADDED

*
* RETURN after processing
   READU DUMMY FROM SECURITY, "R.":PORT_NO ELSE DUMMY = ""
   DELETE SECURITY, "R.":PORT_NO
*
   READU DUMMY FROM F.VOC, HF_NAME ELSE DUMMY = ""
   DELETE F.VOC, HF_NAME
*
   MATREADU PPSR.REC FROM PMCProcessStatus, PPSR_ID ELSE
      MAT PPSR.REC = ""
      PPSR.USER = UserID
      PPSR.SESSION = SessionID
      PPSR.PPID = PPSID
      PPSR.STATUS = "Lost"
      PPSR.STDATE = P_DATE
      PPSR.STTIME = P_TIME
      CALL GetSYSVars (PPSR.STSVAL, TDString)
      PPSR.PVALUES = CHANGE(PPD_REC,@AM,@VM)
   END
*
   TDString = TIMEDATE ()
   P_DATE = ICONV(TDString[10,11], "D")
   P_TIME = ICONV(FIELD(TDString, " ",1), "MT")
   PPSR.ENDATE = P_DATE
   PPSR.ENTIME = P_TIME
   MATWRITE PPSR.REC ON PMCProcessStatus, PPSR_ID
*
   READ DUMMY FROM PMCProcessData, PPSD_ID THEN ;* This file holds Data supplied by Client to a perticular report
      MESG = 'Report did not execute'
      STATUS = RBO.setProperty('', 'ServerStatus', 1)
      STATUS = RBO.setProperty('', 'ServerMessage', MESG)
      RETURN
   END ELSE
*DEMO
      HF.NAME = PORT_NO : "_" : OCONV(LOG_NAME, 'MCU')
	HF.NAME = CHANGE(HF.NAME,"*","_")      ;*ADDED
READ DUMMY FROM CONTROL, HF.NAME ELSE DUMMY = ""
	
   WRITE HF.NAME ON CONTROL,'RNAME'
      READ VIEW_REC FROM CONTROL, USER.CONO:"VIEW_CONTROL" ELSE VIEW_REC = ""
      READ PSEC_REC FROM PRIMAC_SECURITY, UserID ELSE PSEC_REC = ""
*
*ADDED FOR TESTING "There is no data Error v
	READ HOLD.REC FROM HOLD.FILE,HF.NAME ELSE HOLD.REC=''
 IF HOLD.REC # '' THEN
 ERRMESG = ""
* ADDED ^
      BEGIN CASE
      CASE DUMMY<1> = "M" AND PSEC_REC<8> # ""
         READ EMAIL_REC FROM CONTROL, USER.CONO:"EMAIL_FORMAT" ELSE EMAIL_REC = ""
         EMAIL_PARAM = ""
         EMAIL_PARAM<1> = Cono
         EMAIL_PARAM<2> = "ePRIMAC Company"
         EMAIL_PARAM<3> = HF.NAME
         IF EMAIL_REC<1> = "RTF" THEN
            EMAIL_PARAM<4> = 1
         END ELSE
            EMAIL_PARAM<4> = 2
         END
         EMAIL_PARAM<5> = PSEC_REC<8>
         EMAIL_PARAM<6> = "Report"
         EMAIL_PARAM<7> = OS_TYPE[1,7]
         EMAIL_PARAM<8> = PPSR_ID
         EMAIL_PARAM<9> = "redback"
         CALL PMC_EMAIL_SUB (EMAIL_PARAM, ERRMSG)
         DELETE CONTROL, HF.NAME
*      CASE DUMMY<1> # "V"
*      CASE VIEW_REC<1> = "PDF" OR VIEW_REC<1> = "RTF"
       CASE DUMMY<1> = "V" AND (SEC_GUI_VIEW = "RTF" OR SEC_GUI_VIEW = "PDF")
         EMAIL_PARAM = ""
         EMAIL_PARAM<1> = Cono
         EMAIL_PARAM<2> = "ePRIMAC Company"
         EMAIL_PARAM<3> = HF.NAME
*         IF VIEW_REC<1> = "RTF" THEN
         IF SEC_GUI_VIEW = "RTF" THEN
            EMAIL_PARAM<4> = 1
         END ELSE
            EMAIL_PARAM<4> = 2
         END
         EMAIL_PARAM<5> = ""
         EMAIL_PARAM<6> = "Report"
         EMAIL_PARAM<7> = OS_TYPE[1,7]
         EMAIL_PARAM<8> = PPSR_ID
         EMAIL_PARAM<9> = "redback"
         CALL PMC_VIEW_SUB (EMAIL_PARAM, ERRMSG)
         DELETE CONTROL, HF.NAME
         STMT2 = "COPY FROM _HOLD_ TO LOCAL_REPORTS "
         STMT2 := PPSR_ID :".": VIEW_REC<1> : "," : PPSR_ID :".": VIEW_REC<1>
         STMT2 := " DELETING"
         UDTEXECUTE STMT2 CAPTURING MESG
         STATUS = RBO.setProperty('', 'ReportImage', PPSR_ID:".":VIEW_REC<1>)
      END CASE
*ADDED v
  END ELSE
    	  ERRMESG  = "There is no data to ":REPORT_OPTION 
END
*ADDED ^
*DEMO
      MESG = 'Report executed'
      STATUS = RBO.setProperty('', 'ServerStatus', 1)
      STATUS = RBO.setProperty('', 'ServerMessage', MESG)
	STATUS = RBO.setProperty('', 'ERR_MSG',ERRMESG)
      RETURN
   END
* End of method code
99999*
   RETURN


