SUBROUTINE GetCylinderValidated
********************************************************************************
*   Program name :- GetCylinderValidated
*   Created:- 3/23/2006
*------------------------------------------------------------------------------*
*

* In Properties:
* --------------
*  
*
* Out Properties:
* ---------------
*  
********************************************************************************
$INCLUDE WWINSERT RBO.H
$INCLUDE JES.CPYLIB EQUIPMENT
$INCLUDE JES.CPYLIB ESTIMATE.RES
$INCLUDE JES.CPYLIB ESTIMATE.RES.DIE
$INCLUDE JES.CPYLIB ESTIMATE.RES.CYLINDER
$INCLUDE JES.CPYLIB ESTIMATE.RES.GEARSET
$INCLUDE CPYLIB CHAR

OPEN "", "CONTROL" TO CONTROL ELSE
	ERRMSG="":"$":"CAN NOT OPEN CONTROL"
END

OPEN "", "EQUIPMENT" TO EQUIPMENT ELSE
	ERRMSG="":"$":"CAN NOT OPEN EQUIPMENT"
END
OPEN "", "ESTIMATE.RES.DIE" TO ESTIMATE.RES.DIE ELSE
	ERRMSG="":"$":"CAN NOT OPEN ESTIMATE.RES.DIE"
END
OPEN "", "ESTIMATE.RES.CYLINDER" TO ESTIMATE.RES.CYLINDER ELSE
	ERRMSG="":"$":"CAN NOT OPEN ESTIMATE.RES.CYLINDER"
END
OPEN "", "ESTIMATE.RES.GEARSET" TO ESTIMATE.RES.GEARSET ELSE
	ERRMSG="":"$":"CAN NOT OPEN ESTIMATE.RES.GEARSET"
END
OPEN "", "ESTIMATE.RL.DIE" TO ESTIMATE.RL.DIE ELSE
	ERRMSG="":"$":"CAN NOT OPEN ESTIMATE.RL.DIE"
END
OPEN "", "ESTIMATE.RES" TO ESTIMATE.RES ELSE
	ERRMSG="":"$":"CAN NOT OPEN ESTIMATE.RES"
END

COMP=1; ESTAR=''; XYZ2='' 
EST.RL.DIM.AR=''; EST.RL.GAP=''

STATUS = RBO.getProperty('','PMCProperty',PMCProperty)
STATUS = RBO.getProperty('','Cylinder',INVALUE)
STATUS = RBO.getProperty('','CCTR_str',CCTR_NO)
STATUS = RBO.getProperty('','DieType_str',TEMP.DIETYPE)
STATUS = RBO.getProperty('','DieNo',TEMP.DIE)
STATUS = RBO.getProperty('','REFNO',REF.NO)
STATUS = RBO.getProperty('','SDGEAR',SDGEAR)
STATUS = RBO.getProperty('','newz',INDEX)
STATUS = RBO.getProperty('','DieRepeat',TEMP.REPEAT)
STATUS = RBO.getProperty('','ESTAR',ESTAR)
STATUS = RBO.getProperty('','ESTMGAP',XYZ2)
STATUS = RBO.getProperty('','PAR',TEMP.NO.AROUND)

EST.RL.DIM.AR<1,COMP,1>=ESTAR
EST.RL.GAP<1,COMP,1>=XYZ2
TEMP.CYLINDER=INVALUE
SAVE.DGEAR=SDGEAR
CONO=PMCProperty<1,4>

MATREAD EQUIPMENT.REC FROM EQUIPMENT,CONO:CCTR_NO ELSE
     MAT EQUIPMENT.REC = ""
END

 BEGIN CASE
      CASE TEMP.DIETYPE='F'
         DGEARSET=EQP.RL.PRESS.GSFBED
      CASE TEMP.DIETYPE='R'
         DGEARSET=EQP.RL.PRESS.GSROTARY
 END CASE

  MATREAD ESTGS.REC FROM ESTIMATE.RES.GEARSET,CONO:DGEARSET ELSE
      MAT ESTGS.REC=''
  END
  DPITCH=ESTGS.PITCH
IF INDEX = '2' THEN
	NEW.CYL='Y'
	MAT RLCYN.REC = ""
	GOTO 9100
END

* Insert method code here
         
         IF TEMP.DIE # '#' THEN ; * C35003
            BEGIN CASE
               CASE TEMP.DIETYPE='F' AND EQP.RL.PRESS.GSFBED#'' AND TEMP.DIE[1,2]# EQP.RL.PRESS.GSFBED
                  ERRMSG="":"$":'Invalid Gearset Code for this Press (':EQP.RL.PRESS.GSFBED:')'
                  GOTO 90000
            
               CASE TEMP.DIETYPE='R' AND EQP.RL.PRESS.GSROTARY#'' AND TEMP.DIE[1,2]#EQP.RL.PRESS.GSROTARY
                  ERRMSG="":"$":'Invalid Gearset Code for this Press (':EQP.RL.PRESS.GSROTARY:')'
                  GOTO 90000
            END CASE
         END ; * C35003
         NEW.CYL=''
         MATREAD RLCYN.REC FROM ESTIMATE.RES.CYLINDER,CONO:TEMP.CYLINDER ELSE
            ERRMSG='GUI':"$":"Cylinder # ":TEMP.CYLINDER:" - Not on File - OK to Accept (Y/N)? "
	     GOTO 90000
         END
RETURN

9100*         
	  IF NEW.CYL='N' AND SAVE.DGEAR # TEMP.CYLINDER THEN
            STATUS = RBO.setProperty('','TEMP.REPEAT_STR',TEMP.REPEAT) 
         END
	  IF NEW.CYL='Y' THEN
            MATREAD ESTGS.REC FROM ESTIMATE.RES.GEARSET,CONO:TEMP.CYLINDER[1,2]  ELSE
               MAT ESTGS.REC=''
            END
	  STATUS = RBO.setProperty('','TEMP.REPEAT_STR',TEMP.REPEAT)
         END
	  
         IF RLCYN.REPEAT#'' OR NEW.CYL='Y' THEN
	     STATUS = RBO.setProperty('','TEMP.NO.AROUND_STR',TEMP.NO.AROUND)
	     GOSUB 2500
         END
* End of method code
RETURN

*--- Calculate Gap Bewteen Labels in Draw (Repeat)
*
2500*
   CALC.NO.AROUND=TEMP.NO.AROUND
   IF CALC.NO.AROUND=0 THEN
      CALC.NO.AROUND=1
   END
   CALC.GAP=OCONV(EST.RL.DIM.AR<1,COMP,1>*CALC.NO.AROUND,'MD4')
   CALC.REPEAT=OCONV(TEMP.REPEAT,'MD4')
   CCALC.GAP=(CALC.REPEAT-CALC.GAP)/CALC.NO.AROUND
   CCALC.GAP=INT(CCALC.GAP*10000)

 *  STATUS = RBO.setProperty('','ServerStatus',CCALC.GAP:"-AND-":EST.RL.GAP<1,COMP,1>:"-AND-":CALC.GAP:"-AND-":TEMP.NO.AROUND)
 *  RETURN

   BEGIN CASE
      CASE CCALC.GAP < 0
         ERRMSG ="":"$":'Cannot Have Negative GAP...'
	  STATUS = RBO.setProperty('','newz',INDEX)	
         GOTO 90000
      CASE CCALC.GAP < EST.RL.GAP<1,COMP,1>
         ERRMSG='GUI':"$":'Calculated Gap ( ':OCONV(CCALC.GAP,'MD4'):' ) Less Than Minimum ':OCONV(EQP.RL.DRAW.GAP.MIN,'MD4'):' ...Ok to Use Y/N '
	  STATUS = RBO.setProperty('','newz',INDEX)
	  STATUS = RBO.setProperty('','ActualGap',OCONV(CCALC.GAP,'MD4'))
	  STATUS = RBO.setProperty('','CalcGap',OCONV(EQP.RL.DRAW.GAP.MIN,'MD4')) 	
	  GOTO 90000
      CASE CCALC.GAP # EST.RL.GAP<1,COMP,1>
         ERRMSG="":"$":'Actual Gap ( ':OCONV(CCALC.GAP,'MD4'):' )'
	  STATUS = RBO.setProperty('','newz',INDEX)	
	  STATUS = RBO.setProperty('','ActualGap',OCONV(CCALC.GAP,'MD4'))
         GOTO 90000
   END CASE
  *EST.RL.GAP.CALC<1,COMP,1>=CCALC.GAP
   STATUS = RBO.setProperty('','newz',"OUT")	
   STATUS = RBO.setProperty('','ActualGap',OCONV(CCALC.GAP,'MD4'))

 RETURN

90000*
IF ERRMSG # "" THEN 
   STATUS = RBO.setProperty('','ServerStatus',1)
   STATUS = RBO.setProperty('','ServerMessage',ERRMSG)
END
RETURN
