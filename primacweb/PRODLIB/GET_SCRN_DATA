SUBROUTINE GET_SCRN_DATA
********************************************************************************
*   Program name :- GET_SCRN_DATA
*   Created:- 9/1/2003
*   Created by : ABED ALI
*------------------------------------------------------------------------------*
*
* In Properties:
* --------------
*  ID,PMCProperty
*
* Out Properties:
* ---------------
*  
********************************************************************************
$INCLUDE WWINSERT RBO.H
$INCLUDE PMC.CPYLIB PMC_REPORTS
$INCLUDE PMC.CPYLIB REPORT.PROC.FILE
$INCLUDE PMC.CPYLIB SECURITY
$INCLUDE CPYLIB CHAR
$INCLUDE JCS.CPYLIB JOB
* Insert method code here
ERRMSG = ''

DIM XREF_REC(5)
EQU XREF_CODE  TO XREF_REC(1)
EQU XREF_DESC  TO XREF_REC(2)
EQU XREF_GROUP TO XREF_REC(3)
EQU XREF_TYPE  TO XREF_REC(4)

OPEN "","PMC_REPORTS" TO PMC_REPORTS ELSE
	ERRMSG = 'CANNOT OPEN PMC_REPORTS'
      	GOTO 99999
END

OPEN "","REPORT.PROC.FILE" TO REPORT.PROC.FILE ELSE
	ERRMSG = 'CANNOT OPEN REPORT.PROC.FILE'
      	GOTO 99999
END
OPEN "","CONTROL" TO CONTROL ELSE
	ERRMSG = 'CANNOT OPEN CONTROL'
      	GOTO 99999
END
OPEN '','SECURITY' TO SECURITY ELSE
	ERRMSG = "SECURITY FILE IS MISSING"
      	GOTO 99999
END

OPEN '','EPRIMAC_XREF' TO EPRIMAC_XREF ELSE
	ERRMSG = 'Cannot open EPRIMAC_XREF file!'
      	GOTO 99999
END
   OVERNIGHT.OK = 1
   OPEN "","OVERNIGHT.PROCS" TO OVERNIGHT.PROCS ELSE
      OVERNIGHT.OK = 0
   END

VAL = RBO.getProperty('','ID',ID) ;*REPORT ID
VAL = RBO.getProperty('','PMCProperty',PMCProperty)

CONO = PMCProperty<1,4>
USER.ID = UPCASE(PMCProperty<1,3>)
USER.VERB = ''
READ COMPANY.SECURITY FROM CONTROL, CONO:"DIV.SECURITY" ELSE
	MESG = 'Cannot Read Div.Security rec from CONTROL File!'
      	STATUS = RBO.setProperty('', 'ServerStatus', 'E')
      	STATUS = RBO.setProperty('', 'ServerMessage', MESG)
      	RETURN
END

IF INDEX(ID,",",1) > 0 THEN
	SUB_REPORT = CHANGE(ID,",",AM)
	SUB_REPORT = DELETE(SUB_REPORT,1,0,0)
	SCOUNT = DCOUNT(SUB_REPORT,AM)
	FOR SS = 1 TO SCOUNT
		MATREAD PRPT.REC FROM PMC_REPORTS, SUB_REPORT<SS> ELSE
              	MAT PRPT.REC = ""
               	SUB_REPORT = ""
               	ERRMSG = "Invalid SUB REPORT - (" :SUB_REPORT<SS>:")"
               	GOTO 99999
		END
	NEXT SS
       REPORT_ID = FIELD(ID,",",1)
END ELSE
	REPORT_ID = ID
END

MATREAD PRPT.REC FROM PMC_REPORTS,REPORT_ID ELSE
	ERRMSG = 'CANNOT FIND REPORT'
	GOTO 99999
END

CNT = DCOUNT(PRPT.PROMPTS,VM)
PROMPTS.DESC = ""
PROMPTS.FILE = ""
PROMPTS.HMSG = ""
PROMPTS.MAXL = ""
PROMPTS.DEFAULT = ""
PROMPTS.TYPE = ""
PROMPTS.VALID = ""
PROPMPTS.O.R = ""
OPREC = ''
PROMPTS.R.VAL = ""
PROPMPTS.R.OPT = ""
PROPMPTS.R.FLG = ""
CODE.LIST = ""

FOR I = 1 TO CNT ;*PROMPTS COUNT
	MATREAD RPT.PROC.REC FROM REPORT.PROC.FILE,PRPT.PROMPTS<1,I> THEN
		IF RPR.TYPE > 10 THEN
			IF RPR.TYPE = 16 AND RPR.FILE = "DATE()" THEN
         			VALUE = DATE()
      			END ELSE
         			OPEN "",RPR.FILE TO V.FILE ELSE
            				ERRMSG = RPR.FILE:" FILE IS MISSING"
            				GOTO 99999
         			END
         			READ SFV.REC FROM V.FILE, CONO:RPR.I.ID ELSE
            				ERRMSG = RPR.I.ID:" item ID missing from ":RPR.FILE
            				GOTO 99999
         			END
         			IF NUM(RPR.I.ATT) AND RPR.I.ATT > 0 THEN
            				IF NOT(NUM(RPR.I.MV)) OR RPR.I.MV < 1 THEN RPR.I.MV = 1
            				VALUE = SFV.REC<RPR.I.ATT,RPR.I.MV>
         			END ELSE
            				ERRMSG = "Invalid Attribute - " : RPR.I.ATT
            				GOTO 99999
         			END
      			END
      			
      			BEGIN CASE
				CASE RPR.TYPE = 13
            				P_VALUE = OCONV(VALUE, "MD0") "L#30"
         			CASE RPR.TYPE = 14
            				P_VALUE = OCONV(VALUE, "MD":RPR.SCLR) "L#30"
         			CASE RPR.TYPE = 16
            				P_VALUE = OCONV(VALUE, "D2/") "L#30"
         			CASE 1
            				P_VALUE = VALUE
      			END CASE
			*PROC.VALUES<I+2> = P_VALUE
			RPR.DEFAULT = P_VALUE
		END 
		PROMPTS.DESC<1,I> = RPR.DESC
		PROMPTS.FILE<1,I> = RPR.FILE
		PROMPTS.HMSG<1,I> = RPR.HMSG
		PROMPTS.MAXL<1,I> = RPR.MAXL
		PROMPTS.DEFAULT<1,I> = RPR.DEFAULT
		PROMPTS.TYPE<1,I> = RPR.TYPE
              IF RPR.TYPE = 8 THEN
			RPR.VALID = "Y,N"
		END
		SWAP "," WITH @SM IN RPR.VALID
		PROMPTS.VALID<1,I> = RPR.VALID
		PROPMPTS.O.R<1,I>  = RPR.O.R
		IF PRPT.PROMPTS.GDS<1,I> = "N" THEN ;* THIS PROCESS IS FOR N/A OPTION
  			IF COMPANY.SECURITY<1> = "N" THEN
				PROMPTS.DEFAULT<1,I> = 'N/A' ; * T26090
			END
		END
		PROMPTS.R.VAL<1,I> = LOWER(RPR.R.VAL)
		PROPMPTS.R.OPT<1,I> = LOWER(RPR.R.OPT)
		PROPMPTS.R.FLG<1,I> = RPR.R.FLG
1999
	END	
NEXT I

SC.HEAD = PRPT.HEADING
IF INDEX(SC.HEAD,"^",1) >= 1 THEN 
	SC.HEAD = CHANGE(SC.HEAD,"^",AM)
  	IH_PROMPTS = SC.HEAD
   	IH_COUNT = DCOUNT(SC.HEAD,AM)
   	FOR II = IH_COUNT TO 1 STEP - 1
      		IF REM(II,2) = 0 THEN
         		IF NUM(IH_PROMPTS<II>) = 1 THEN
            			SC.HEAD = DELETE(SC.HEAD,II,0,0)
        		END
      		END ELSE
         		IH_PROMPTS = DELETE(IH_PROMPTS,II,0,0)
      		END
   	NEXT II
   	SC.HEAD = CHANGE(SC.HEAD,AM,"")
END

READ EMAIL_FORMAT FROM CONTROL, CONO : "EMAIL_FORMAT" ELSE
      EMAIL_FORMAT = ""
END

IF EMAIL_FORMAT<1> # "PDF" AND EMAIL_FORMAT<1> # "RTF" AND EMAIL_FORMAT<1> # "BOTH" THEN
	EMAIL_FORMAT<1> = ""
END
IF PRPT.EMAIL.FLAG = "Y" AND EMAIL_FORMAT<1> # "" THEN
	PRPT.EMAIL.FLAG = "Y"
END ELSE
	PRPT.EMAIL.FLAG = ""
END
IF OVERNIGHT.OK = 1 THEN
    READ OPREC FROM OVERNIGHT.PROCS,USER.VERB THEN OP.FLAG = 1 ELSE OP.FLAG = 0
END ELSE
    OP.FLAG = 0
END

PROMPTS.DESC = CHANGE(PROMPTS.DESC,"#","No.")

CNT = DCOUNT(PROMPTS.FILE,@VM)
CODES = ""
DESCS = ""
temp1 = ""
temp2 = ""
FOR I = 1 TO CNT
	IF PRPT.PROMPTS.GDS<1,I> = "N" THEN
      		IF COMPANY.SECURITY<1> = "N" THEN
         		PROMPTS.DEFAULT<1,I> = "N/A"
         	END
   	END ELSE IF PRPT.PROMPTS.GDS<1,I> = "P" THEN
      		IF COMPANY.SECURITY<2> = "N" THEN
       		PROMPTS.DEFAULT<1,I> = "N/A"
	      	END
   	END

	IF PROMPTS.FILE<1,I> # "" THEN
		*CODES<1,I> = "0"
		*DESCS<1,I> = "--Select--"
		CODES<1,I> = ""
		DESCS<1,I> = ""
		XREF_ID = CONO:PROMPTS.FILE<1,I>
	LOCATE PROMPTS.FILE<1,I> IN PROMPTS.FILE<1> SETTING LOC THEN	
         IF LOC = I ELSE CONTINUE
		MATREAD XREF_REC FROM EPRIMAC_XREF, XREF_ID ELSE CONTINUE ;* THIS GETS ALL CODES AND DESCS FROM FROM DATA FILES
		
		XREF_DESC = CHANGE(XREF_DESC,'"',"²")
		XREF_DESC = CHANGE(XREF_DESC,"'","·")
		
		IF PROMPTS.FILE<1,I> = "DIVISION" THEN
			MATREAD SEC.REC FROM SECURITY, CONO:USER.ID ELSE
				MAT SEC.REC = ''
			END
			IF TRIM(SEC.DIVISION) = '' THEN SEC.DIVISION = XREF_CODE
			IF (COMPANY.SECURITY<2> = "Y") THEN ;* POST/CLOSE BY DIV
*				IF PROMPTS.DEFAULT<1,I> # "N/A" THEN PROMPTS.DEFAULT<1,I> = "" ;* REMOTE 'ALL' OPTION FROM DIVISION  DEFAULT AND DONOT ADD '00' OPTION
				DIV.CODES = SEC.DIVISION
			END ELSE
				DIV.CODES = XREF_CODE
				DIV.DESCS = XREF_DESC
			END
*10/09/2006 * TO GET DEFAULT VALUE ALL IN PROMPTS.DEFAULT<1,I> FOR REV12 DIVISION SECURITY v
*			BEGIN CASE
*                    		CASE COMPANY.SECURITY<1> = "N"
*         			CASE PRPT.PROMPTS.DS<1,I> = "G"  ; * CHECK FOR VALID DIVISION
*            				IF SEC.DIVISION # "" THEN   ;* ALL is null
*               				PROMPTS.DEFAULT<1,I> = "" ;* REMOTE 'ALL' OPTION FROM DIVISION  DEFAULT AND DONOT ADD '00' OPTION
*						DIV.CODES = SEC.DIVISION
*					END
*				CASE PRPT.PROMPTS.DS<1,I> = "B"  ; * CHECK FOR 00 OR ALL INVALID
*            				IF SEC.DIVISION # "" THEN   ;* ALL is null
*						DIV.CODES = SEC.DIVISION
*						LOCATE "00" IN DIV.CODES<1>,1 SETTING LOC THEN
*							DEL DIV.CODES<1,LOC>
*							DEL DIV.DESCS<1,LOC>
*						END
*						PROMPTS.DEFAULT<1,I> = "" ;* REMOTE 'ALL' OPTION FROM DIVISION  DEFAULT AND DONOT ADD '00' OPTION
*					END
*            		END CASE
*10/09/2006 ^
			DESCS_LIST = ""
			CNT1 = DCOUNT(DIV.CODES<1>,VM)
			FOR II = 1 TO CNT1 ;* THIS ITERATION IS FOR TO POPULATE DESCRIPTIONS
				CODE = DIV.CODES<1,II>
				LOCATE CODE IN XREF_CODE<1>,1 SETTING LOC THEN
					DESCS_LIST<1,II> = XREF_DESC<1,LOC>
				END ELSE
					DESCS_LIST<1,II> = ""
				END
			NEXT II
			CODES<1,I> =  LOWER(DIV.CODES)
			DESCS<1,I> =  LOWER(DESCS_LIST)		
			CODES<1,I> =  "00":SVM:CODES<1,I> ;*** DIVISION 00 ROUTINE ***
			DESCS<1,I> =  "GENERAL DIVISION" : SVM : DESCS<1,I>;*** DIVISION 00 ROUTINE ***
		END ELSE
			CODES<1,I> =  LOWER(XREF_CODE)
			DESCS<1,I> =  LOWER(XREF_DESC)
		END
	  END
	END

NEXT I

VAL = RBO.setProperty('','PRPT_EMAIL_FLAG',PRPT.EMAIL.FLAG)
VAL = RBO.setProperty('','PRPT_HEADING',SC.HEAD)
VAL = RBO.setProperty('','PRPT_PROMPTS',PRPT.PROMPTS)
VAL = RBO.setProperty('','PRPT_PROMPTS_DS',PRPT.PROMPTS.DS)
VAL = RBO.setProperty('','PRPT_PROMPTS_GDS',PRPT.PROMPTS.GDS)
VAL = RBO.setProperty('','PRPT_VIEW_FLAG',PRPT.VIEW.FLAG)

VAL = RBO.setProperty('','PROMPTS_DESC',PROMPTS.DESC)
VAL = RBO.setProperty('','PROMPTS_FILE',PROMPTS.FILE)
VAL = RBO.setProperty('','PROMPTS_HMSG',PROMPTS.HMSG);*TITLE OF THE COMBO
VAL = RBO.setProperty('','PROMPTS_MAXL',PROMPTS.MAXL)
VAL = RBO.setProperty('','PROMPTS_DEFAULT',PROMPTS.DEFAULT)
VAL = RBO.setProperty('','PROMPTS_TYPE',PROMPTS.TYPE)
VAL = RBO.setProperty('','PROMPTS_VALID',PROMPTS.VALID);* valid values
VAL = RBO.setProperty('','PROMPTS_O_R',PROPMPTS.O.R);* valid values
VAL = RBO.setProperty('','PROMPTS_R_VAL',PROMPTS.R.VAL);* 
VAL = RBO.setProperty('','PROMPTS_R_OPT',PROPMPTS.R.OPT);* ASSOCIATED options
VAL = RBO.setProperty('','PROPMPTS_R_FLG',PROPMPTS.R.FLG);* response flag

VAL = RBO.setProperty('','CODES',CODES)
VAL = RBO.setProperty('','DESCS',DESCS)

VAL = RBO.setProperty('','ID',REPORT_ID)
VAL = RBO.setProperty('','CODE_LIST',CODE.LIST)
VAL = RBO.setProperty('','OP_FLAG',OP.FLAG)


IF(REPORT_ID = "AR415") THEN
	LASER.FLAG = ''
   	IF OCONV(CONO:OCONV(@LOGNAME,'MCU'):'!LASER','TSECURITY;X;0;0') # '' THEN
      		LASER.FLAG = 1
  	END
	VAL = RBO.setProperty('','ReportImage',LASER.FLAG)
END
99999
IF ERRMSG # '' THEN
	STATUS = RBO.setProperty('','ServerStatus','E')        
	STATUS = RBO.setProperty('','ServerMessage',ERRMSG)
END ELSE
	STATUS = RBO.setProperty('','ServerStatus','')        
	STATUS = RBO.setProperty('','ServerMessage','')
END
RETURN
