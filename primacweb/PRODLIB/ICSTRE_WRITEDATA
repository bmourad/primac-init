SUBROUTINE ICSTRE_WRITEDATA
********************************************************************************
*   Program name :- ICSTRE_WRITEDATA
*   Created:- 8/4/2003
*------------------------------------------------------------------------------*
*
* AUTHOR :- G.PURUSHOTHAM RAO
* In Properties:
* --------------
*  
*
* Out Properties:
* ---------------
*  
********************************************************************************
$INCLUDE CPYLIB COMMON1             
$INCLUDE ICS.CPYLIB COM.INV.MAIN  
$INCLUDE ICS.CPYLIB COM.INV.SERIAL
$INCLUDE ICS.CPYLIB COM.INV.LINK  

$INCLUDE ICS.CPYLIB INV.CNV
$DEFINE CATEGORY 
$INCLUDE ICS.CPYLIB CATEGORY

$INCLUDE PMC.CPYLIB COMPANY
$INCLUDE PMC.CPYLIB FISCAL

$DEFINE INVENTORY
$INCLUDE ICS.CPYLIB INVENTORY

$DEFINE INVWHSE
$INCLUDE ICS.CPYLIB INV.WHSE

$DEFINE INVSERIAL
$INCLUDE ICS.CPYLIB INV_SERIAL

$DEFINE INVRECEIPTS
$INCLUDE ICS.CPYLIB INV_RECEIPTS

$DEFINE INVRECPWHSE
$INCLUDE ICS.CPYLIB INV_RECP_WHSE

$DEFINE INVAUDITHIST
$INCLUDE ICS.CPYLIB INV_AUDIT_HIST

$DEFINE JOB
$INCLUDE JCS.CPYLIB JOB

$DEFINE JOBSTATS
$INCLUDE JCS.CPYLIB JOB.STATS

$INCLUDE PMC.CPYLIB SALESDATES
$INCLUDE ICS.CPYLIB TRANSFER

$DEFINE DAILYTRANSFER
$INCLUDE ICS.CPYLIB DAILY_TRANSFER

$INCLUDE ICS.CPYLIB WAREHOUSE

$INCLUDE CPYLIB GEN.XREF.SUB

$DEFINE FILEVARS
$INCLUDE CPYLIB FILE.VARS

$DEFINE ICSID
$INCLUDE ICS.CPYLIB ICS.ID

$INCLUDE CPYLIB CHAR
$INCLUDE WWINSERT RBO.H

*
**** OPEN FILES
*
   DEFFUN CALC_STK_QTY(COST.QTY, MAT INV.CNV.REC,ROND,LN)
   DEFFUN CALC_COST_QTY(STK.QTY,MAT INV.CNV.REC,ROND,LN)

   OPEN '','CONTROL' TO CONTROL ELSE
      ERRMSG = 'CANNOT LOCATE CONTROL FILE'
      GOTO 93000
   END
   OPEN '','CATEGORY' TO CATEGORY ELSE
      ERRMSG = 'CANNOT LOCATE CATEGORY FILE'
      GOTO 93000
   END
   OPEN '','COMPANY' TO COMPANY ELSE
      ERRMSG = 'CANNOT LOCATE COMPANY FILE'
      GOTO 93000
   END
   OPEN '','DIVISION' TO DIVISION ELSE
      ERRMSG = 'CANNOT LOCATE DIVISION FILE'
      GOTO 93000
   END
   OPEN '','JOB' TO JOB ELSE
      ERRMSG = 'CANNOT LOCATE JOB FILE'
      GOTO 93000
   END
   OPEN '','JOB.STATS' TO JOB.STATS ELSE
      ERRMSG = 'CANNOT LOCATE JOB.STATS FILE'
      GOTO 93000
   END
   OPEN '','INVENTORY' TO INVENTORY ELSE
      ERRMSG = 'CANNOT LOCATE INVENTORY FILE'
      GOTO 93000
   END
   OPEN '','INVENTORY.XREF' TO INVENTORY.XREF ELSE
      ERRMSG = 'CANNOT LOCATE INVENTORY.XREF FILE'
      GOTO 93000
   END
   OPEN '','INV.WHSE' TO INV.WHSE ELSE
      ERRMSG = 'CANNOT LOCATE INV.WHSE FILE'
      GOTO 93000
   END
   OPEN '','INV.WHSE.LOC' TO INV.WHSE.LOC ELSE
      ERRMSG = 'CANNOT LOCATE INV.WHSE.LOC FILE'
      GOTO 93000
   END
   OPEN '','INV.WHSE.LOC.TEMP' TO INV.WHSE.LOC.TEMP ELSE
      ERRMSG = 'CANNOT LOC.TEMPATE INV.WHSE.LOC.TEMP FILE'
      GOTO 93000
   END
   OPEN '','INV_SERIAL' TO INV_SERIAL ELSE
      ERRMSG = 'CANNOT LOCATE INV_SERIAL FILE'
      GOTO 93000
   END
   OPEN '','INV_SERIAL_TEMP' TO INV_SERIAL_TEMP ELSE
      ERRMSG = 'CANNOT LOCATE INV_SERIAL_TEMP FILE'
      GOTO 93000
   END
   OPEN '','INV_AUDIT_HIST' TO INV_AUDIT_HIST ELSE
      ERRMSG = 'CANNOT LOCATE INV_AUDIT_HIST FILE'
      GOTO 93000
   END
   OPEN '','INV_AUDIT_HIST_TEMP' TO INV_AUDIT_HIST_TEMP ELSE
      ERRMSG = 'CANNOT LOCATE INV_AUDIT_HIST_TEMP FILE'
      GOTO 93000
   END
   OPEN '','INV_AUDIT_TAG' TO INV_AUDIT_TAG ELSE
      ERRMSG = 'CANNOT LOCATE INV_AUDIT_TAG FILE'
      GOTO 93000
   END
   OPEN '','INV_RECEIPTS' TO INV_RECEIPTS ELSE
      ERRMSG = 'CANNOT LOCATE INV_RECEIPTS FILE'
      GOTO 93000
   END
   OPEN '','INV_RECEIPTS_TEMP' TO INV_RECEIPTS_TEMP ELSE
      ERRMSG = 'CANNOT LOCATE INV_RECEIPTS_TEMP FILE'
      GOTO 93000
   END
   OPEN '','INV_RECP_WHSE' TO INV_RECP_WHSE ELSE
      ERRMSG = 'CANNOT LOCATE INV_RECP_WHSE FILE'
      GOTO 93000
   END
   OPEN '','INV_RECP_WHSE_TEMP' TO INV_RECP_WHSE_TEMP ELSE
      ERRMSG = 'CANNOT LOCATE INV_RECP_WHSE_TEMP FILE'
      GOTO 93000
   END
   OPEN '','TRANSFER' TO TRANSFER ELSE
      ERRMSG = 'CANNOT LOCATE TRANSFER FILE'
      GOTO 93000
   END
   OPEN '','DAILY_TRANSFER' TO DAILY_TRANSFER ELSE
      ERRMSG = 'CANNOT LOCATE DAILY_TRANSFER FILE'
      GOTO 93000
   END
   OPEN '','WAREHOUSE' TO WAREHOUSE ELSE
      ERRMSG = 'CANNOT LOCATE WAREHOUSE FILE'
      GOTO 93000
   END
   OPEN '','ICS.SCREENS' TO M.SCREENS ELSE
      ERRMSG = 'CANNOT LOCATE M.SCREENS FILE'
      GOTO 93000
   END
   OPEN '','PREFIX' TO PREFIX ELSE
      ERRMSG = 'CANNOT LOCATE PREFIX FILE'
      GOTO 93000
   END
   OPEN '','SECURITY' TO SECURITY ELSE
      ERRMSG = 'CANNOT LOCATE SECURITY FILE'
      GOTO 93000
   END
   OPEN '','XREF.DATA' TO XREF.DATA ELSE
      ERRMSG = 'CANNOT LOCATE XREF.DATA FILE'
      GOTO 93000
   END
*
*
TODAY = DATE()

STATUS=RBO.getProperty('','PMCProperty',PMCProperty)
CONO = PMCProperty<1,4>
STATUS = RBO.getProperty('','ID',ID)

  MATREAD COMP.REC FROM COMPANY, CONO ELSE
      ERRMSG = "Invalid Company ID (":CONO:")"
      GOTO 93000
  END
MAT TRAN.REC = ""
MAT D.TRAN.REC = ""
*****************************************************
STATUS = RBO.getProperty('','D_TRAN_PROD_NO',D_TRAN_PROD_NO)
STATUS = RBO.getProperty('','D_TRAN_FROM_WHSE',D_TRAN_FROM_WHSE)
STATUS = RBO.getProperty('','D_TRAN_TO_WHSE',D_TRAN_TO_WHSE)
STATUS = RBO.getProperty('','D_TRAN_QTY',D_TRAN_QTY)

STATUS = RBO.getProperty('','D_TRAN_SERIAL',D_TRAN_SERIAL)
STATUS = RBO.getProperty('','D_TRAN_RECP', D_TRAN_RECP)

STATUS = RBO.getProperty('','D_TRAN_TO_LOC', D_TRAN_TO_LOC)
STATUS = RBO.getProperty('','D_TRAN_FROM_LOC', D_TRAN_FROM_LOC)

STATUS = RBO.getProperty('','D_TRAN_PERIOD', D_TRAN_PERIOD)
STATUS = RBO.getProperty('','D_TRAN_DATE_ENTER',D_TRAN_DATE_ENTER)
STATUS = RBO.getProperty('','D_TRAN_DATE_PROSS', D_TRAN_DATE_PROSS)
STATUS = RBO.getProperty('','D_TRAN_REASON_DESC', D_TRAN_REASON_DESC)

D_TRAN_TOT_QTY = ""
*****************************************************

PROD.COUNT = DCOUNT(D_TRAN_PROD_NO,VM)

FOR I = 1 TO PROD.COUNT
   INV.ID = CONO : D_TRAN_PROD_NO<1,I>
   MATREAD INV.REC FROM INVENTORY,INV.ID THEN
	INV.UOM.STK = INV.UNIT<1,2>
   	INV.UOM.CST = INV.UNIT<1,3>
	GOSUB SET.HEADING
	GOSUB ICONV_PROD_QTY
   END
NEXT I

******************************************************
D.TRAN.PROD.NO      	= D_TRAN_PROD_NO
D.TRAN.SERIAL 	= D_TRAN_SERIAL

D.TRAN.RECP        = D_TRAN_RECP
D.TRAN.FROM.WHSE   = D_TRAN_FROM_WHSE
D.TRAN.FROM.LOC    = D_TRAN_FROM_LOC

D.TRAN.QTY         = D_TRAN_QTY 
D.TRAN.TOT.QTY     = D_TRAN_TOT_QTY

D.TRAN.TO.WHSE     = D_TRAN_TO_WHSE
D.TRAN.TO.LOC      = D_TRAN_TO_LOC 

D.TRAN.REASON.DESC = D_TRAN_REASON_DESC
D.TRAN.DATE.ENTER  = ICONV(D_TRAN_DATE_ENTER,"D4/")
D.TRAN.PRT.DATE    = D.TRAN.PRT.DATE
D.TRAN.DATE.PROSS  = D_TRAN_DATE_PROSS

D.TRAN.PERIOD      = D_TRAN_PERIOD 
D.TRAN.EMP         = PMCProperty<1,3>

******************************************************
   STATUS = RBO.getProperty('','ITEM_TYPE', ITEM.TYPE)
   
   IF ITEM.TYPE='FNGD' THEN
      PROCESS.FLAG='Y'
   END ELSE
      PROCESS.FLAG=CO.ICS.REAL.TRAN 
   END
	*PROCESS.FLAG='Y'

     IF PROCESS.FLAG='Y' THEN
	D.TRAN.PRT.DATE = TODAY
     END ELSE
	D.TRAN.PRT.DATE=''
     END
     *STATUS = RBO.setProperty('','ServerMessage',"PROCESS.FLAG : " : PROCESS.FLAG)
     MAT TRAN.REC=''
     NEW.ERRMSG = ""
     D.TRAN.CODE = ID[4,99]
     CALL TRAN_UPDATE(CONO,D.TRAN.CODE,MAT TRAN.REC,PROCESS.FLAG,CO.ICS.LOC.TRAN,NEW.ERRMSG)
     IF ID[4,99] = "N" THEN
       IF PROCESS.FLAG='Y' AND NEW.ERRMSG#"" THEN
	  ERRMSG=NEW.ERRMSG
       END ELSE	  
	   NEW_TRANS_ID = ''
          NEW_TRANS_ID = "Note new Daily transfer number. " :  D.TRAN.CODE 
	   STATUS = RBO.setProperty('','NEW_TRANS_ID',NEW_TRANS_ID)
       END
     END ELSE
        IF NEW.ERRMSG#"" THEN
	    ERRMSG=NEW.ERRMSG
        END
     END
     STATUS = RBO.setProperty('','ServerMessage',ERRMSG)
RETURN

*
************
ICONV_PROD_QTY:
************
*
D_TRAN_QTY_COUNT = DCOUNT(D_TRAN_QTY<1,I>,SM)
FOR J = 1 TO D_TRAN_QTY_COUNT
D_TRAN_QTY<1,I,J> = ICONV(D_TRAN_QTY<1,I,J>,ICR.CNV)
VALUE = D_TRAN_QTY<1,I,J>
SVALUE = CALC_COST_QTY(VALUE,MAT INV.CNV.REC,'.5','')
D_TRAN_QTY<1,I,J> = SVALUE
NEXT J

D_TRAN_TOT_QTY<1,I> = SUM(D_TRAN_QTY<1,I>)

RETURN
*
************
SET.HEADING: 
************
*
   BEGIN CASE
      CASE INV.UOM.STK='SHT' AND INV.UOM.CST='LBS'
         ICR.CNV="MD0";ICR.CNV1="MD0,"
         ICR.DV1=INV.M.WT;ICR.MT1=1;ICR.DV2=1
         HD1A='Qty/SHT'
         HD1B=""
         HD1C=""
         RX=46;QX=46
      CASE INV.UOM.STK='PC' AND INV.UOM.CST='MSI'
         ICR.CNV="MD0";ICR.CNV1="MD0,"
         ICR.DV1=INV.PAP.WIDTH/100;ICR.MT1=10;ICR.DV2=1
         ICR.TYPE=3;ICR.SCAL=0
         HD1='Roll Number Qty/PC'
         HD1A='Qty/PC'
         HD1B=""
         HD1C=""
         RX=46;QX=46
      CASE INV.UOM.STK='FT' AND INV.UOM.CST='MSI'
         ICR.CNV="MD0";ICR.CNV1="MD0,"
         ICR.DV1=INV.PAP.WIDTH/100;ICR.MT1=100;ICR.DV2=12
         ICR.TYPE=3;ICR.SCAL=0
         HD1A='Qty/FT'
         HD1B=""
         HD1C=""
         RX=46;QX=46
      CASE 1
         ICR.CNV="MD2";ICR.CNV1="MD2,"
         ICR.DV1=10;ICR.MT1=1;ICR.DV2=1
         ICR.TYPE=4;ICR.SCAL=2
         HD1A='Qty/':INV.UOM.STK
         HD1B=""
         HD1C=""
         RX=46;QX=46
   END CASE
RETURN

93000 
  STATUS = RBO.setProperty('','ServerStatus',"1")        
  STATUS = RBO.setProperty('','ServerMessage',ERRMSG ) 
RETURN
