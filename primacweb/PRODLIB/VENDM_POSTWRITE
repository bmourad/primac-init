SUBROUTINE VENDM_POSTWRITE
********************************************************************************
*   Program name :- VENDM_POSTWRITE
*   Created:- 11/7/2002, Abdullah Jibaly
*   See:- PMCBP VEND.MAINT
*------------------------------------------------------------------------------*
*
*  Server event triggered after the database has been updated. Note that the - *
*  API function RBO.getDBVals() should be used to retrieve values from the da- *
*  tabase image, as values from the uObject data aware properties may have be- *
*  en amended via the {m:WW:uObject=PreWrite} server event.
*
*
*
* In Properties:
* --------------
* ID,OLD.VEND.SHPV,VEND.SHIP.VIA
*
* Out Properties:
* ---------------
*  
********************************************************************************
$INCLUDE WWINSERT RBO.H
$INCLUDE PMC.CPYLIB VEND
$INCLUDE PMC.CPYLIB SHIP.VIA
$INCLUDE PMC.CPYLIB COMPANY

* Insert method code here
ERRMSG = ''

* Dimension array
DIM V.VALUES(5)
EQU V.ID  TO V.VALUES(1)
EQU V.CNT TO V.VALUES(2)
MAT V.VALUES = ""

* Open files
OPEN 'VEND' TO VEND ELSE ERRMSG = 'VEND'
OPEN 'SHIP.VIA' TO SHIP.VIA ELSE ERRMSG = 'SHIP.VIA'
OPEN 'COMPANY' TO COMPANY ELSE ERRMSG = 'COMPANY'
OPEN 'DICT', 'VEND' TO D_VEND ELSE ERRMSG = 'D_VEND'
IF ERRMSG # '' THEN
  ERRMSG = 'Cannot open the ' : ERRMSG : ' file.'
  CALL RBO_ERROR_SUB(ERRMSG); RETURN
END

* Get all properties
CHK.STATUS.ERROR = ''
CHK.STATUS.PROPERTY = 'ID'
STATUS = RBO.getProperty('','ID',ID); GOSUB CHK.STATUS
CHK.STATUS.PROPERTY = 'OLD_VEND_SHPV'
STATUS = RBO.getProperty('','OLD_VEND_SHPV',OLD.VEND.SHPV); GOSUB CHK.STATUS
CHK.STATUS.PROPERTY = 'VEND_SHIP_VIA'
STATUS = RBO.getProperty('','VEND_SHIP_VIA',VEND.SHIP.VIA); GOSUB CHK.STATUS
IF CHK.STATUS.ERROR THEN
  CALL RBO_ERROR_SUB(CHK.STATUS.ERROR); RETURN
END

* Get CONO
CONO = ID[1,3]
MATREAD COMP.REC FROM COMPANY, CONO ELSE
  ERRMSG = 'Invalid Company ID (':CONO:').'
  CALL RBO_ERROR_SUB(ERRMSG); RETURN
END

* Perform writes
VEND.NUM = ID[4,99]
IF CO.VEND.ROLDX # 'N' THEN
  MATREADU V.VALUES FROM D_VEND, CONO:'ROLODEX' ELSE MAT V.VALUES = ''
  LOCATE (CONO:VEND.NUM) IN V.ID<1>,1 SETTING FND ELSE FND = 0
  IF FND = 0 THEN
    V.ID = INSERT(V.ID,1,-1,0,CONO:VEND.NUM)
    V.CNT = V.CNT + 1
  END
  MATWRITE V.VALUES ON D_VEND, CONO:'ROLODEX'
END
IF VEND.SHIP.VIA # '' THEN
  MATREADU SHIP.VIA.REC FROM SHIP.VIA, CONO:VEND.SHIP.VIA ELSE
    MAT SHIP.VIA.REC = ''
  END
  IF SHPV.DESC # '' THEN
    LOCATE VEND.NUM IN SHPV.VEND<1>,1 SETTING VFND ELSE NULL
    SHPV.VEND<1,VFND> = VEND.NUM
    MATWRITE SHIP.VIA.REC ON SHIP.VIA, CONO:VEND.SHIP.VIA
  END ELSE
    RELEASE SHIP.VIA, CONO:VEND.SHIP.VIA
  END
END
IF OLD.VEND.SHPV # '' AND VEND.SHIP.VIA # OLD.VEND.SHPV THEN
  MATREADU SHIP.VIA.REC FROM SHIP.VIA, CONO:OLD.VEND.SHPV ELSE
    MAT SHIP.VIA.REC = ''
  END
  IF SHPV.VEND # '' THEN
    LOCATE VEND.NUM IN SHPV.VEND<1>,1 SETTING VFND ELSE VFND = 0
    IF VFND THEN
      SHPV.VEND = DELETE(SHPV.VEND,1,VFND,0)
      MATWRITE SHIP.VIA.REC ON SHIP.VIA, CONO:OLD.VEND.SHPV
    END ELSE
      RELEASE SHIP.VIA, CONO:OLD.VEND.SHPV
    END
  END ELSE
    RELEASE SHIP.VIA, CONO:OLD.VEND.SHPV
  END
END

* End of method code
RETURN

CHK.STATUS:
  IF STATUS # RBO.NO.ERROR THEN
    CHK.STATUS.ERROR<-1> = 'Cannot get ' : CHK.STATUS.PROPERTY : ' property.'
  END
RETURN
