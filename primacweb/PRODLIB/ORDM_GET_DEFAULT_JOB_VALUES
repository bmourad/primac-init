SUBROUTINE ORDM_GET_DEFAULT_JOB_VALUES
********************************************************************************
*   Program name :- ORDM_GET_DEFAULT_JOB_VALUES
*   Created:- 6/20/2006
*   Programmer :- Suhail Hussain S
********************************************************************************
$INCLUDE WWINSERT RBO.H
$INCLUDE PMC.CPYLIB COMPANY
$INCLUDE PMC.CPYLIB COMP.OPS
$INCLUDE OPS.CPYLIB ORDER
$INCLUDE OPS.CPYLIB ORDER.DETAIL
$INCLUDE OPS.CPYLIB ORDER.DETAIL.INQ
$INCLUDE OPS.CPYLIB JOB.FNGD.STATS
$INCLUDE JCS.CPYLIB JOB
$INCLUDE ICS.CPYLIB INVENTORY
$INCLUDE ICS.CPYLIB CATEGORY
$INCLUDE ICS.CPYLIB INV.WHSE
$INCLUDE PMC.CPYLIB CUSTOMER
$INCLUDE PMC.CPYLIB SALESMAN
$INCLUDE PMC.CPYLIB CSR.CODE
$INCLUDE PMC.CPYLIB SHIP.VIA
$INCLUDE PMC.CPYLIB DIVISION
$INCLUDE CPYLIB CHAR

OPEN "","COMPANY" TO COMPANY ELSE ERRMSG = "CANNOT OPEN COMPANY FILE";GOTO 91000
OPEN "","ORDER" TO ORDER ELSE ERRMSG = "CANNOT OPEN ORDER FILE";GOTO 91000
OPEN "","ORDER.DETAIL" TO ORDER.DETAIL ELSE ERRMSG = "CANNOT OPEN ORDER.DETAIL FILE";GOTO 91000
OPEN "","JOB.FNGD.STATS" TO JOB.FNGD.STATS ELSE ERRMSG = "CANNOT OPEN JOB.FNGD.STATS FILE";GOTO 91000
OPEN "","JOB" TO JOB ELSE ERRMSG = "CANNOT OPEN JOB FILE";GOTO 91000
OPEN "","INVENTORY" TO INVENTORY ELSE ERRMSG = "CANNOT OPEN INVENTORY FILE";GOTO 91000
OPEN "","CATEGORY" TO CATEGORY ELSE ERRMSG = "CANNOT OPEN CATEGORY FILE";GOTO 91000
OPEN "","INV.WHSE" TO INV.WHSE ELSE ERRMSG = "CANNOT OPEN INV.WHSE FILE";GOTO 91000
OPEN "","CUSTOMER" TO CUSTOMER ELSE ERRMSG = "CANNOT OPEN CUSTOMER FILE";GOTO 91000
OPEN "","SALESMAN" TO SALESMAN ELSE ERRMSG = "CANNOT OPEN SALESMAN FILE";GOTO 91000
OPEN "","DIVISION" TO DIVISION ELSE ERRMSG = "CANNOT OPEN DIVISION FILE";GOTO 91000
OPEN "","CSR.CODE" TO CSR.CODE ELSE ERRMSG = "CANNOT OPEN CSR.CODE FILE";GOTO 91000
OPEN "","SHIP.VIA" TO SHIP.VIA ELSE ERRMSG = "CANNOT OPEN SHIP.VIA FILE";GOTO 91000
OPEN "","JOB.CATEGORY" TO JOB.CATEGORY ELSE ERRMSG = "CANNOT OPEN JOB.CATEGORY FILE";GOTO 91000
OPEN "","CONTROL" TO CONTROL ELSE ERRMSG = "CANNOT OPEN CONTROL FILE";GOTO 91000

  STATUS = RBO.getProperty("","PMCProperty",PMCProperty)
  STATUS = RBO.getProperty("","ORDNO",ORDNO)
  STATUS = RBO.getProperty("","JOBNO",JOB.ID)
  STATUS = RBO.getProperty("","CALL_FROM",CALL_FROM)
  CONO = PMCProperty<1,4>
  
  MATREAD COMP.REC FROM COMPANY, CONO ELSE MAT COMP.REC = ""
  MATREAD OPCO.REC FROM CONTROL, CONO:"OPS" ELSE
    ERRMSG = "Cannot locate Order Processing company setup"
    GOTO 91000
  END
  MAT ORD.REC = ""
  MAT ORD.DET.REC = ""
  MAT ORD.DET.INQ = ""
  MATREAD ORD.REC FROM ORDER,CONO:ORDNO THEN
    MATREAD CUST.REC FROM CUSTOMER,CONO:ORD.CUST ELSE MAT CUST.REC = ""
    SHPNO = ORD.SHIP.TO
    FOR S = 1 TO DCOUNT(SHPNO,VM)
      MATREAD ORD.DET.REC FROM ORDER.DETAIL, CONO:ORDNO:"!":SHPNO<1,S> THEN
        PCNT=DCOUNT(OSD.PROD,VM)
        FOR P=1 TO PCNT
          PTR=1
          LOOP
            LOCATE OSD.PROD<1,P> IN ODQ.PROD<1>,PTR SETTING L THEN
              IF (OSD.WHSE<1,P>=ODQ.WHSE<1,L>) AND (OSD.KIT<1,P>=ODQ.KIT<1,L>) AND (OSD.PROD.SEQ<1,P>=ODQ.PROD.SEQ<1,L>) THEN
                 ODQ.O.QTY<1,L>=ODQ.O.QTY<1,L>+OSD.O.QTY<1,P>
                 ODQ.R.QTY<1,L>=ODQ.R.QTY<1,L>+OSD.R.QTY<1,P>
                 ODQ.A.QTY<1,L>=ODQ.A.QTY<1,L>+OSD.A.QTY<1,P>
                 ODQ.S.QTY<1,L>=ODQ.S.QTY<1,L>+OSD.S.QTY<1,P>
                 PTR=0
              END
            END ELSE
              ODQ.PROD<1,L>=OSD.PROD<1,P>
              ODQ.WHSE<1,L>=OSD.WHSE<1,P>
              ODQ.O.QTY<1,L>=OSD.O.QTY<1,P>
              ODQ.R.QTY<1,L>=OSD.R.QTY<1,P>
              ODQ.A.QTY<1,L>=OSD.A.QTY<1,P>
              ODQ.S.QTY<1,L>=OSD.S.QTY<1,P>
              ODQ.PRICE<1,L>=OSD.PRICE<1,P>
              ODQ.KIT<1,L>=OSD.KIT<1,P>
              ODQ.PROD.SEQ<1,L>=OSD.PROD.SEQ<1,P>
              PTR=0
            END
          WHILE PTR DO
             PTR=L+1
          REPEAT
        NEXT P
      END ELSE
        MAT ORD.DET.REC = ""
      END
    NEXT S
  END ELSE
    ERRMSG = "CANNOT READ ORDER # " : ORDNO
    GOTO 91000
  END
  MAT JOB.REC = ""
  MATREAD JOB.REC FROM JOB, CONO:JOB.ID ELSE
    BEGIN CASE
      CASE ORDNO = "" OR OPCO.JOB.BLD = "N"
        PMSG = "Job not on file. Do you want to add (Y/N)?"
        IF CALL_FROM = "ORD" THEN ERRMSG="NOF";GOTO 93000
      CASE JOB.ID # ""
        B.QTY = SUM(ODQ.O.QTY) - SUM(ODQ.R.QTY) - SUM(ODQ.A.QTY) - SUM(ODQ.S.QTY)
        IF B.QTY < 1 THEN
          PMSG = "No Back Order quantity for this order. Continue (Y/N) :"
          IF CALL_FROM = "ORD" THEN ERRMSG="NBO";GOTO 93000
        END
        JOBNO = JOB.ID
        JB.BLD = 0; EST.BLD = 0
        GOSUB JOB_FNGD_UPD
        IF CALL_FROM = "ORD" THEN ERRMSG="ERR";GOTO 93000
      CASE 1
         IF CALL_FROM = "ORD" THEN ERRMSG="CLJ";GOTO 93000
         JOBNO = JOB.ID
         JB.BLD = 0; EST.BLD = 0
         GOSUB JOB_FNGD_UPD
    END CASE
  END
RETURN

JOB_FNGD_UPD:
  EST.NUM = "*"
  PCNT = DCOUNT(ODQ.PROD,VM)
  ECNT = DCOUNT(EST.NUM,AM)
  MAT JOB.REC = ""
  SAVE.INV.JS.REC = ""
110*
  PCNT = DCOUNT(ODQ.PROD,VM)

  IF OPCO.ORD.JOB = "N" THEN
    JOBNO = "N"
  END ELSE
    JOBNO = ORDNO
    READ DUMMY FROM JOB, CONO:JOBNO THEN
      LIMIT = 10
      FOR I = 1 TO LIMIT
        JOBNO = ORDNO:(I-1)
        READ DUMMY FROM JOB, CONO:JOBNO ELSE LIMIT = 0
      NEXT I
      IF LIMIT THEN
        ERRMSG = "All possible job numbers are already in use"
        GOTO 91000
      END
    END
  END

  JOB.COLORS = OPCO.JOB.CLR
  JOB.CATG = OPCO.JOB.CAT
  JOB.DIV = ORD.DIV
  JOB.CUST = ORD.CUST
  JOB.CSR = ORD.CSR.CODE
  JOB.SLSMN = ORD.SLSMN
  JOB.TRACK.DATE<1,2> = OCONV(DATE(),"D2/")
  JOB.TRACK.DATE<1,4> = OCONV(ORD.DUE - OPCO.JOB.DUE,"D2/")
  JOB.TYPE = "R"
  JOB.MASTER = JOBNO
  JOB.SHIP.VIA = CUST.SHIP.VIA
  JOB.CUST.PO = ORD.PO
  JOB.ORDER = ORDNO

  MATREADU JFS.REC FROM JOB.FNGD.STATS, CONO:JOBNO ELSE
    MAT JFS.REC = ""
  END
  IF EST.NUM = "*" AND OPCO.ORD.JOB = "M" THEN GOTO 72000
  FOR PPTR = 1 TO PCNT
    IF EST.NUM = "*" THEN
      IF ODQ.KIT<1,PPTR> # "N" THEN
        GOTO 199
      END
      P = PPTR
    END
    B.QTY = ODQ.O.QTY<1,P> - ODQ.R.QTY<1,P> - ODQ.A.QTY<1,P> - ODQ.S.QTY<1,P>
    IF B.QTY > 0 THEN
      PDNO = ODQ.PROD<1,P>; WHNO = ODQ.WHSE<1,P>
      PTR = 1
      LOOP
        LOCATE PDNO IN JFS.PROD<1>,PTR SETTING PLOC THEN
          IF WHNO = JFS.WHSE<1,PLOC> THEN PTR = 0
        END ELSE
          JFS.PROD<1,PLOC> = PDNO
          JFS.WHSE<1,PLOC> = WHNO
          JFS.DATE<1,PLOC> = JOB.TRACK.DATE<1,4>
          GOSUB 7000
          JFS.M.QTY<1,PLOC> = B.QTY
          JFS.A.QTY<1,PLOC> = B.QTY
          JFS.F.QTY<1,PLOC> = 0
          JFS.S.QTY<1,PLOC> = 0
          JFS.ORDER<1,PLOC> = ORDNO
          JFS.ORD.QTY<1,PLOC> = B.QTY
          PTR = 0
        END
      WHILE PTR DO
        PTR = PLOC + 1
      REPEAT
    END
199*--
  NEXT P
  CALL CALC_JOB_RESV(CONO,JOBNO,SAVE.INV.JS.REC)
  JOB.QTY<1,1> = SUM(JFS.M.QTY)/1000
  JOB.QTY<1,2> = SUM(JFS.F.QTY)/1000
  JOB.QTY<1,3> = SUM(JFS.S.QTY)/1000
  GOSUB 72000
RETURN
*
*---- FIND UNIT PRICE
7000*
  MATREAD INV.REC FROM INVENTORY, CONO:PDNO ELSE
    MAT INV.REC = ""
  END
  MATREAD CATG.REC FROM CATEGORY, CONO:INV.LINE ELSE
    MAT CATG.REC = ""
  END
  MATREAD IWH.REC FROM INV.WHSE, CONO:PDNO:"!":WHNO ELSE
    MAT IWH.REC = ""
  END
  BEGIN CASE
    CASE CATG.SALE.TYPE = "CB"
      JFS.U.PRICE<1,PLOC> = ODQ.PRICE<1,P>
    CASE CATG.FNGD.TYPE = "ES"
      JFS.U.PRICE<1,PLOC> = IWH.EST.SALE
    CASE CATG.FNGD.TYPE = "SP"
      BEGIN CASE
        CASE CUST.PRICE.CODE = "2"
          JFS.U.PRICE<1,PLOC> = IWH.SELL<1,2>
        CASE CUST.PRICE.CODE = "3"
          JFS.U.PRICE<1,PLOC> = IWH.SELL<1,3>
        CASE CUST.PRICE.CODE = "4"
          JFS.U.PRICE<1,PLOC> = IWH.SELL<1,4>
        CASE 1
          JFS.U.PRICE<1,PLOC> = IWH.SELL<1,1>
      END CASE
    CASE CATG.FNGD.TYPE = "SD"
      JFS.U.PRICE<1,PLOC> = IWH.STD.COST
    CASE CATG.FNGD.TYPE = "AV"
      JFS.U.PRICE<1,PLOC> = IWH.AVG.COST
    CASE CATG.FNGD.TYPE = "LP"
      DIV.POS='';FISCAL.FLAG='JC';TRAN.PERIOD=''
      ERR.FLG='' ; ERRMSG=''
      IWH.ID = CONO:PDNO:"!":WHNO        ;* T26556
      CALL GET_LAST_COST(IWH.ID,MAT IWH.REC,WAREHOUSE,CONTROL,ERR.FLG,ERRMSG,DIV.POS,FISCAL.FLAG,TRAN.PERIOD,LAST.PRICE)
      JFS.U.PRICE<1,PLOC>=LAST.PRICE
    CASE 1
      JFS.U.PRICE<1,PLOC> = 0
  END CASE
RETURN

91000
  STATUS = RBO.setProperty("","ServerStatus",1)
  STATUS = RBO.setProperty("","ServerMessage",ERRMSG)
RETURN

93000
  STATUS = RBO.setProperty("","ServerStatus",1)
  STATUS = RBO.setProperty("","ServerMessage",ERRMSG)
RETURN

72000
  STATUS = RBO.setProperty("","JOB_COLORS",JOB.COLORS)
  STATUS = RBO.setProperty("","JOB_CATG",JOB.CATG)
  STATUS = RBO.setProperty("","JOB_DIV",JOB.DIV)
  STATUS = RBO.setProperty("","JOB_CUST",JOB.CUST)
  STATUS = RBO.setProperty("","JOB_CSR",JOB.CSR)
  STATUS = RBO.setProperty("","JOB_SLSMN",JOB.SLSMN)
  STATUS = RBO.setProperty("","JOB_TRACK_DATE",JOB.TRACK.DATE)
  STATUS = RBO.setProperty("","JOB_TYPE",JOB.TYPE)
  STATUS = RBO.setProperty("","JOB_MASTER",JOB.MASTER)
  STATUS = RBO.setProperty("","JOB_SHIP_VIA",JOB.SHIP.VIA)
  STATUS = RBO.setProperty("","JOB_CUST_PO",JOB.CUST.PO)
  STATUS = RBO.setProperty("","JOB_ORDER",JOB.ORDER)
  STATUS = RBO.setProperty("","JOB_QTY",JOB.QT)
  STATUS = RBO.setProperty("","JOB_DUE_DATE",JOB.TRACK.DATE<1,4>)

  MATREAD SALESMAN.REC FROM SALESMAN, CONO:JOB.SLSMN ELSE SALS.NAME = "UNKNOWN"
  MATREAD CUST.REC FROM CUSTOMER, CONO:JOB.CUST ELSE MAT CUST.REC = ""
  MATREAD CSR.REC FROM CSR.CODE,CONO:JOB.CSR ELSE MAT CSR.REC = ''
  MATREAD DIV.REC FROM DIVISION, CONO:JOB.DIV ELSE DIV.DESC = "UNKNOWN"
  IF JOB.SHIP.VIA = "" THEN SHPV.DESC = "" ELSE MATREAD SHIP.VIA.REC FROM SHIP.VIA, CONO:JOB.SHIP.VIA ELSE SHPV.DESC = "UNKNOWN"
  IF JOB.CATG # "" THEN
    CATG_DESC = ""
    READ CATG_DESC FROM JOB.CATEGORY, CONO:JOB.CATG ELSE CATG_DESC = "UNKNOWN"
  END

  STATUS = RBO.setProperty("","CUST_NAME",CUST.NAME)
  STATUS = RBO.setProperty("","JOB_SHPV_DESC",SHPV.DESC)
  STATUS = RBO.setProperty("","JOB_DIV_DESC",DIV.DESC)
  STATUS = RBO.setProperty("","JOB_SALS_NAME",SALS.NAME)
  STATUS = RBO.setProperty("","JOB_CSR_NAME",CSR.DESC)
  STATUS = RBO.setProperty("","JOB_CATG_DESC",CATG_DESC)

RETURN

99999 *
RETURN
