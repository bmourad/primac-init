SUBROUTINE ENT_PARENT_SERIAL
********************************************************************************
*   Program name :- ENT_PARENT_SERIAL
*   Created:- 03/09/2004
*------------------------------------------------------------------------------*
*
* In Properties:
* --------------
*  
*
* Out Properties:
* ---------------
*  
********************************************************************************
$INCLUDE WWINSERT RBO.H
$INCLUDE CPYLIB COMMON1
$INCLUDE ICS.CPYLIB COM.INV.SERIAL
$INCLUDE ICS.CPYLIB COM.INV.LINK
$INCLUDE ICS.CPYLIB INV.WHSE.LOC
$DEFINE INVSERIAL
$INCLUDE ICS.CPYLIB INV_SERIAL
$INCLUDE PMC.CPYLIB COMPANY
$INCLUDE ICS.CPYLIB INVENTORY
$INCLUDE ICS.CPYLIB WAREHOUSE
$INCLUDE ICS.CPYLIB CATEGORY
$INCLUDE ICS.CPYLIB INV.WHSE
$DEFINE INVRECEIPTS
$INCLUDE ICS.CPYLIB INV_RECEIPTS
$DEFINE INVRECPWHSE
$INCLUDE ICS.CPYLIB INV_RECP_WHSE
$INCLUDE ICS.CPYLIB INV.CNV
$DEFINE FILEVARS
$INCLUDE CPYLIB FILE.VARS

* Insert method code here
ERR_MSG = ""
OPEN '','CATEGORY' TO CATEGORY ELSE
  ERR_MSG = 'CATEGORY FILE IS MISSING'; GOTO 93000
END
OPEN '','COMPANY' TO COMPANY ELSE
  ERR_MSG = 'COMPANY FILE IS MISSING'; GOTO 93000
END
OPEN '','INVENTORY' TO INVENTORY ELSE
  ERR_MSG = 'INVENTORY FILE IS MISSING'; GOTO 93000
END
OPEN '','INV_SERIAL' TO INV_SERIAL ELSE
  ERR_MSG = 'INV_SERIAL FILE IS MISSING'; GOTO 93000
END
OPEN '','INV_RECEIPTS' TO INV_RECEIPTS ELSE
  ERR_MSG = 'INV_RECEIPTS FILE IS MISSING'; GOTO 93000
END
OPEN '','INV_RECP_WHSE' TO INV_RECP_WHSE ELSE
  ERR_MSG = 'INV_RECP_WHSE FILE IS MISSING'; GOTO 93000
END
OPEN '','WAREHOUSE' TO WAREHOUSE ELSE
  ERR_MSG = 'WAREHOUSE FILE IS MISSING'; GOTO 93000
END
OPEN '','INV.WHSE.LOC' TO INV.WHSE.LOC ELSE
  ERR_MSG = 'INV.WHSE.LOC FILE IS MISSING'; GOTO 93000
END
OPEN '','INV.WHSE' TO INV.WHSE ELSE
  ERR_MSG = 'INV.WHSE FILE IS MISSING'; GOTO 93000
END

MAT ORG.IWH.REC = ""

ERR  = 0
SER  = ""
CONO = "" 
PROD = ""
WHSE = ""
LOC  = ""
SLT.PERIOD = ""
SEND_ARR = ""
SLT.LOG.SLIT.QTY =0
OPEN.FLAG = 1
   SLT.LOG.SERIAL=''
   SLT.LOG.DESC=''
   SLT.LOG.PROD=''
   SLT.LOG.WHSE=''
   SLT.LOG.LOC=''
   SLT.LOG.STK.UOM=''
   SLT.LOG.CST.UOM=''
   SLT.LOG.CST.UOM=''
   SLT.LOG.USED.STK.QTY=''
   SLT.LOG.USED.AMT=''
   SLT.LOG.SLIT=''
   SLT.LOG.SLIT.AMT=''
   SLT.LOG.TRIM=''
   SLT.LOG.TRIM.AMT=''

	STATUS       = RBO.getProperty('','ID',ID)
	CONO         = FIELD(ID,"!",1)
       SLIT.CODE    = FIELD(ID,"!",2)
	SER	      = FIELD(ID,"!",3)
	PROD         = FIELD(ID,"!",4)
	WHSE         = FIELD(ID,"!",5)
	LOC          = FIELD(ID,"!",6)
	SLT.ENT.DATE = ICONV(FIELD(ID,"!",7),"D2")
	SLT.PERIOD   = FIELD(ID,"!",8)
	SLT.DIVISION = FIELD(ID,"!",9)
 STATUS = RBO.setProperty('', 'xy',"CONO-":CONO:" SER-":SER:" PROD-":PROD:" WHSE-":WHSE:" LOC -":LOC:" SLT.PERIOD -":SLT.PERIOD:" SLT.DIVISION -":SLT.DIVISION)
*RETURN

* End of method code

 	MATREAD COMP.REC FROM COMPANY,CONO ELSE MAT COMP.REC=''

	    IF PROD # '' THEN
		 IWLO.ID = CONO:PROD:"!":WHSE:"!":LOC
		 MATREAD IWLO.REC FROM INV.WHSE.LOC,IWLO.ID ELSE MAT IWLO.REC=''
               LOCATE SER IN IWLO.SERIAL<1>,1 SETTING RFND ELSE
                  ERR_MSG = 'Serial ':SER:' is not valid for '
                  ERR_MSG:='INV.WHSE.LOC ':IWLO.ID
		    ERR=1
                  GOTO 93000  
               END
            END
            IF NOT(ERR) THEN
               ISTK.ID=CONO:SER
               MATREAD ISTK.REC FROM INV_SERIAL,ISTK.ID THEN
            * T26497 v
                  IF CO.INTR.WHSE # '' AND ISTK.WHSE = CO.INTR.WHSE THEN
                     ERR_MSG = 'CAN NOT APPLY,SERIAL USING AN INTER-DIVISIONAL WHSE'
                     GOTO 93000 
                  END
            * T26497 ^
            * T26556 v
                  IF ISTK.RSVB.QTY LE 1 THEN
                     ERR_MSG = 'SERIAL NUMBER HAS NO QUANTITY AVAILABLE TO SLIT'
                     GOTO 93000 
                  END
            * T26556 ^
                  IF ISTK.POST.DATE='' THEN
                     ERR_MSG='Serial has not been received into inventory'
                     GOTO 93000
                  END ELSE
                     IF ISTK.RECP.PERIOD>SLT.PERIOD THEN
                        ERR_MSG='Serial received in period ':ISTK.RECP.PERIOD:' cannot be slitted'
                        ERR_MSG:='in period ':SLT.PERIOD
                        GOTO 93000
                     END ELSE
                        IF ISTK.RSVB.QTY<ISTK.CUR.QTY THEN 
                           ERR_MSG='This serial has quantity reserved and cannot be slitted.'
                           GOTO 93000
                        END ELSE
                           INV.ID=CONO:ISTK.PROD
                           MATREAD INV.REC FROM INVENTORY,INV.ID THEN
                              MATREAD WHSE.REC FROM WAREHOUSE, CONO:ISTK.WHSE ELSE MAT WHSE.REC = ''
                              IF WHS.DIV <> SLT.DIVISION THEN
                                ERR_MSG='Serial belongs to division ':WHS.DIV
                             END
*********************
                              IF ERR_MSG # '' THEN
                                 GOTO 93000
                              END ELSE
                                 IF NOT(ERR) THEN
                                    CATG.ID=CONO:INV.LINE
                                    MATREAD CATG.REC FROM CATEGORY,CATG.ID ELSE MAT CATG.REC=''
* T26556 v
                                    IF CATG.TRK.LVL # 'S' THEN
                                       ERR_MSG = 'Only Serial tracked products are allowed.'
                                       GOTO 93000
                                    END
* T26556 ^
                                    IF CATG.COST.TYPE='AC' THEN 
                                       DEPL.METHOD='AC'
                                    END ELSE
                                       DEPL.METHOD='FI'
                                    END
                                    IWH.ID=CONO:ISTK.PROD:"!":ISTK.WHSE
                                    MATREAD IWH.REC FROM INV.WHSE,IWH.ID THEN
                                       SLT.LOG.SERIAL = SER
                                       IF DEPL.METHOD='FI' THEN
                                          INAH.PROD=ISTK.PROD
                                          INAH.WHSE=ISTK.WHSE
                                          ACTION=1
                                          TMP.CNT='' ; LAST='' ; TMP.ARR=''
                                          PERIOD=SLT.PERIOD
                                          MAT ORG.IWH.REC = MAT IWH.REC
ERR_MSG = IWH.ON.HAND:" BEFOR  IWH.QTY.FI " : IWH.QTY.FI:" IWHID  ":IWH.ID:" START " :CONO : " CONO " : PERIOD :" PERIOD ": TMP.ARR : " TMP.ARR " :TMP.CNT:"  TMP.CNT ": LAST : "  LAST" :ACTION:" ACTION  " :OPEN.FLAG : "  OPEN.FLAG "

STATUS = RBO.setProperty('','testProp',ERR_MSG)

TESTMSG = "INITVASL"
						CALL ICS_IWH_SUB(CONO,PERIOD,TMP.ARR,TMP.CNT,LAST,ACTION,OPEN.FLAG,TESTMSG)

                                      *    CALL ICS.IWH.SUB(CONO,PERIOD,TMP.ARR,TMP.CNT,LAST,ACTION,OPEN.FLAG)
ERR_MSG = ERR_MSG : " AFTER IWH.QTY.FI " : IWH.QTY.FI :" TMP   ":TESTMSG
GOTO 93000

                                       END ELSE
                                          RECP.NO=ISTK.RECP
                                          INVR.ID = CONO:RECP.NO
                                          MATREAD INVR.REC FROM INV_RECEIPTS,INVR.ID THEN
                                             IRW.ID=CONO:ISTK.RECP:"!":ISTK.WHSE
                                             MATREAD IRW.REC FROM INV_RECP_WHSE,IRW.ID ELSE
                                                ERR_MSG='INV_RECP_WHSE record ':IRW.ID:' is missing.'
                                                GOTO 93000
                                             END 
                                          END ELSE
                                             ERR_MSG='INV_RECEIPTS record ':INVR.ID:' is missing.'
                                             GOTO 93000
                                          END
                                       END
                                    END ELSE
                                       MAT IWH.REC=''
                                    END
                                
					INCLUDE ICSBP INV.UM.CNV
                                    SLT.LOG.PROD = ISTK.PROD
                                    SLT.LOG.DESC = INV.FULL.DESC
                                    SLT.LOG.STK.UOM = INV.UNIT<1,2>
                                    SLT.LOG.CST.UOM = INV.UNIT<1,3>
                                    SLT.LOG.WHSE = ISTK.WHSE
                                    SLT.LOG.LOC = ISTK.LOC
                                    IWLO.ID=IWH.ID:"!":ISTK.LOC
*					  SEND_ARR = SLT.LOG.STK.UOM :"~":SLT.LOG.CST.UOM:"~":SLT.LOG.CST.UOM; *:"~":
                                    MATREAD IWLO.REC FROM INV.WHSE.LOC,IWLO.ID ELSE MAT IWLO.REC=''
                                    LOCATE SLT.LOG.SERIAL IN IWLO.SERIAL<1>,1 SETTING RSFND THEN
                                       ;* maybe +5 should not be added because
                                       ;* if it is converted back might show
                                       ;* more costing qty. than there really is.
                                       SER.STK.QTY=INT(((ISTK.CUR.QTY/ICR.DV1)*ICR.MT1)/ICR.DV2+.5)
                                       SER.STK.QTY=OCONV(SER.STK.QTY,ICR.CNV)
                                       SLT.LOG.USED.STK.QTY=SER.STK.QTY
*ERR_MSG =     SLT.LOG.USED.STK.QTY : "ERRRRRRRRRRRRRRRRRRRRRRRRRRJJJJJJJJ" : SER.STK.QTY : " KY AHUA "  :ISTK.CUR.QTY : "  ":ICR.DV1 : "  " :ICR.MT1 : "  " :ICR.DV2
*GOTO 93000
                                       SLT.LOG.USED.QTY=ISTK.CUR.QTY
                                       SLT.LOG.SLIT.STK.QTY = 0
                                       SLT.LOG.SLIT.AMT = 0
                                       SLT.LOG.TRIM.QTY=ISTK.CUR.QTY
                                       *//LOG.INV.LINE = INV.LINE
                                       *//LOG.PAP.WIDTH = INV.PAP.WIDTH
                                       *//LOG.COLOR = INV.COLOR
                                       SPTR = 6
                                       EPS=1
                                    END ELSE
                                       ERR_MSG='Serial is missing from INV.WHSE.LOC record.'
                                       GOTO 93000
                                    END
                                    *GOSUB BUILD.PARENT.LINE
                                    *ECD.ACTION=3 ; CALL SCRN.EDIT
                                 END
                              END
                           END ELSE
                              ERR_MSG='Product ':ISTK.PROD:' is not on file'
                              GOTO 93000
                           END
                        END
                     END
                  END
               END ELSE
                  ERR_MSG='Serial ':SER:' is not on file'
                  GOTO 93000
               END
            END

   DIFF.QTY=-(SLT.LOG.TRIM.QTY);PRICE='';TYPE='';ERRMSG='';RET.ARR=''
ERR_MSG = IWH.QTY.FI : " HHGGHGHGH "
GOTO 93000
*ERR_MSG = "CONO  " :CONO : " SLITCODE " :SLIT.CODE: " DEPLMETHOD " : DEPL.METHOD :" RECPNO " :RECP.NO: " SLTENT.DTE " :SLT.ENT.DATE: " SLTPERIOD " :SLT.PERIOD: " DIFFQTY ": DIFF.QTY: " PRICE " :PRICE: " TYPE " :TYPE
*GOTO 93000
   CALL QTY.CHANGE.SUB(CONO,SLIT.CODE,MAT IWH.REC, MAT INV.REC, MAT PO.REC,DEPL.METHOD,RECP.NO,SLT.ENT.DATE,SLT.PERIOD,DIFF.QTY,PRICE,TYPE,ERRMSG,RET.ARR)
   IF ERRMSG='' THEN
      TEMP.COST=ABS(RET.ARR<1>)
      SLT.LOG.UN.PRICE=(TEMP.COST/(ABS(DIFF.QTY)/10))
      SLT.LOG.UN.PRICE=ICONV(SLT.LOG.UN.PRICE,"MD4")
   END ELSE
ERR_MSG = SLT.LOG.UN.PRICE : " KYA BOTI "
STATUS = RBO.setProperty('','BUILD_PARENT_STR_VALUES',ERRMSG:" FFFF JJJ")
RETURN

      GOTO 93000 ; ERR=1

   END
 IF NOT(ERR) THEN
      SLT.LOG.USED.AMT=((SLT.LOG.USED.QTY/1000)*(SLT.LOG.UN.PRICE/10000))
      SLT.LOG.USED.AMT=ICONV(SLT.LOG.USED.AMT,"MD2")
      TRIM.QTY = SLT.LOG.USED.QTY-SLT.LOG.SLIT.QTY
      SLT.LOG.TRIM.AMT=((TRIM.QTY/1000)*(SLT.LOG.UN.PRICE/10000))
      SLT.LOG.TRIM.AMT=ICONV(SLT.LOG.TRIM.AMT,"MD2")
   END

93000*
   IF ERR_MSG # "" THEN
       BUILD_PARENT_STR_VALUES = "ERR" : "~" : ERR_MSG
   END ELSE
	   IF ICR.CNV="MD0" THEN
      		DQTY = OCONV(ICONV(SLT.LOG.USED.STK.QTY,"MD2"),"MD2")
   	   END ELSE
      		DQTY = SLT.LOG.USED.STK.QTY 
   	   END
	BUILD_PARENT_STR_VALUES = "GHGGGGGGGGGGGGGGGGGG":SLT.LOG.DESC : "~" :SLT.LOG.PROD: "~" :SLT.LOG.WHSE: "~" :SLT.LOG.LOC: "~" :SLT.LOG.STK.UOM: "~" :SLT.LOG.CST.UOM: "~" :SLT.LOG.CST.UOM: "~" :DQTY: "~":SLT.LOG.USED.AMT:"~" :OCONV(SLT.LOG.SLIT.QTY/10,"MD2") :"~":SLT.LOG.SLIT.AMT:"~":OCONV(SLT.LOG.TRIM.QTY/10,"MD2"):"~":SLT.LOG.TRIM.AMT
   END
STATUS = RBO.setProperty('','BUILD_PARENT_STR_VALUES',BUILD_PARENT_STR_VALUES:"JJJJJJJJJJJJJJJJJJJJ")
* End of method code
RETURN

