SUBROUTINE JOBM_DEL_UNRESV_EST
********************************************************************************
*   Program name :- JOBM_DEL_UNRESV_EST
*   Created:- 6/23/2004
*------------------------------------------------------------------------------*
*

* In Properties:
* --------------
*  
*
* Out Properties:
* ---------------
*  
********************************************************************************
$INCLUDE WWINSERT RBO.H

* Insert method code here
$INCLUDE JCS.CPYLIB JOB
$INCLUDE JES.CPYLIB ESTIMATE
$INCLUDE PMC.CPYLIB CUSTOMER
$INCLUDE PMC.CPYLIB SHIP.VIA
$INCLUDE JCS.CPYLIB JOB.STATS
$INCLUDE OPS.CPYLIB JOB.FNGD.STATS
$INCLUDE JES.CPYLIB ESTIMATE.RES
$INCLUDE ICS.CPYLIB INV.JOB.STATS
$INCLUDE ICS.CPYLIB WAREHOUSE
$INCLUDE ICS.CPYLIB INVENTORY
$INCLUDE ICS.CPYLIB CATEGORY
$INCLUDE PMC.CPYLIB COMPANY
$INCLUDE ICS.CPYLIB INV.WHSE
$INCLUDE JES.CPYLIB ESTIMATE.JOB
$INCLUDE ICS.CPYLIB INV_RECP_WHSE
$INCLUDE ICS.CPYLIB INV.CNV
$INCLUDE CPYLIB CHAR
ERRMSG = ""
* Insert method code here
OPEN "","INV_RECP_WHSE" TO INV_RECP_WHSE ELSE
	ERRMSG = "CANNOT OPEN INV_RECP_WHSE FILE"
      	GOTO 999999
END
OPEN '','ESTIMATE' TO ESTIMATE ELSE
	ERRMSG = "CANNOT OPEN ESTIMATE FILE"
	GOTO 999999
END
OPEN '','COMPANY' TO COMPANY ELSE
	ERRMSG = "CANNOT OPEN COMPANY FILE!"
	GOTO 999999
END

OPEN "","JOB" TO JOB ELSE
	ERRMSG = "CANNOT OPEN JOB FILE"
       GOTO 999999
END

OPEN "","INV.WHSE" TO INV.WHSE ELSE
	ERRMSG = "CANNOT OPEN INV.WHSE FILE"
	GOTO 999999
END

OPEN '','CUSTOMER' TO F.CUST ELSE
	ERRMSG = "CANNOT OPEN CUSTOMER FILE!"
	GOTO 999999
END

OPEN "","SHIP.VIA" TO SHIP.VIA ELSE
	ERRMSG = "CANNOT OPEN SHIP.VIA FILE"
	GOTO 999999
END
OPEN "","JOB.FNGD.STATS" TO JOB.FNGD.STATS ELSE
	ERRMSG = "CANNOT OPEN JOB.FNGD.STATS FILE"
	GOTO 999999
END

OPEN "","ESTIMATE.RES" TO ESTIMATE.RES ELSE
      ERRMSG = "CANNOT OPEN ESTIMATE.RES FILE"
      GOTO 999999
END

OPEN "","INV.JOB.STATS" TO INV.JOB.STATS ELSE
	ERRMSG = "CANNOT OPEN INV.JOB.STATS FILE"
      	GOTO 999999
END

OPEN "","WAREHOUSE" TO WAREHOUSE ELSE
	ERRMSG = "CANNOT OPEN WAREHOUSE FILE"
      	GOTO 999999
END

OPEN "","INVENTORY" TO INVENTORY ELSE
	ERRMSG = "CANNOT OPEN INVENTORY FILE"
	GOTO 999999
END

OPEN "","CATEGORY" TO CATEGORY ELSE
	ERRMSG = "CANNOT OPEN CATEGORY FILE"
	GOTO 999999
END

OPEN "","ESTIMATE.JOB" TO ESTIMATE.JOB ELSE
      	ERRMSG = "CANNOT OPEN ESTIMATE.JOB FILE"
	GOTO 999999
END

DEFFUN CALC_STK_QTY(BALANCE,MAT INV.CNV.REC,ROND,LN)


VAL = RBO.getProperty('','Cono',CONO)
VAL = RBO.getProperty('','JOB_NO',JOB.NO)

MATREAD JOB.REC FROM JOB,CONO:JOB.NO ELSE MAT JOB.REC = ""
MATREAD JFS.REC FROM JOB.FNGD.STATS, CONO:JOB.NO ELSE MAT JFS.REC = ""

VAL = RBO.getProperty('','EST_PAR',EST.PAR1)
VAL = RBO.getProperty('','VISITED_FLG',VISITED.MOD.FLG) ;* THIS FLAG INDICATES WHICH MODULES ARE VISITED -- 1-RS,RS 2-FG 3-GANG
IF VISITED.MOD.FLG # 0 THEN
	VAL = RBO.getProperty('','JOB_RESV_MATL',JOB.RESV.MATL) ;*RETURN
	VAL = RBO.getProperty('','JOB_RESV_WHSE',JOB.RESV.WHSE) ;*RETURN
END

VAL = RBO.getProperty('','ESTAT',ESTAT) ;* 0 - VALUE AND ALSO RETURN THIS VALUE
VAL = RBO.getProperty('','PRIOR_EST',PRIOR.EST)
OLD.EST = PRIOR.EST
VAL = RBO.getProperty('','SAVE_INV_JS_REC',SAVE.INV.JS.REC) ;* 0 - RETURN
SAVE.INV.JS.REC = RAISE(SAVE.INV.JS.REC)

*VAL = RBO.getProperty('','USER_WHSE_CODE',USER.WHSE.CODE) ;* THIS IS WHEN USER SENDS SELECTED WHSE.CODES
*VAL = RBO.getProperty('','ACTION',ACTION)

EST.PAR1 = RAISE(EST.PAR1)
CMATCH = 0

DIM EST.PAR(10)
EQU EST.PAR.QTY    TO EST.PAR(1)
EQU EST.PAR.COMP   TO EST.PAR(2)
EQU EST.PAR.DEPT   TO EST.PAR(3)
EQU EST.PAR.UPDM   TO EST.PAR(4)
EQU EST.PAR.MATL   TO EST.PAR(5)

EST.PAR(1) = EST.PAR1<1>
EST.PAR(2) = EST.PAR1<2>
EST.PAR(3) = EST.PAR1<3>
EST.PAR(4) = EST.PAR1<4>
EST.PAR(5) = EST.PAR1<5>


DIM OLD.EST.PAR(10)
MAT OLD.EST.PAR = ''
DIM NEW.EST.PAR(10)
MAT NEW.EST.PAR = ''

SAVE.COMP.CNT = 0
MATREAD COMP.REC FROM COMPANY,CONO ELSE MAT COMP.REC = ""

TODAY = DATE()
IF ESTAT THEN GOTO 99999;*T22154 <
ESTAT = 0
JOB.FLAG = ""

IF CO.PSS = "Y" THEN
	OPEN "","JOB.SCHED" TO JOB.SCHED ELSE
    		ERRMSG = "CANNOT OPEN JOB.SCHED FILE"
    		GOTO 999999
  	END
END

DEPT = ""
DPTR = 0


MATREAD EST.REC FROM ESTIMATE,CONO:OLD.EST ELSE MAT EST.REC = ""

*
*---- DELETE UNUSED UNRESERVED MATERIALS BROUGHT IN BY ESTIMATE
*
4000 *
MATREAD EST.RL.REC FROM ESTIMATE.RES, CONO:OLD.EST THEN
	ROLL.LABEL = 'Y'
END ELSE
  	ROLL.LABEL = ''
END
MATREAD EST.REC FROM ESTIMATE, CONO:OLD.EST ELSE NULL
MATREAD ESTJ.REC FROM ESTIMATE.JOB, CONO:JOB.NO THEN
  	LOCATE ESTJ.QTY IN EST.QTY<1>,1 SETTING QP ELSE QP = 0
  	GOT.ESTJ = 'Y'
END ELSE
  	LOCATE EST.PAR.QTY IN EST.QTY<1>,1 SETTING QP ELSE QP = 0
  	GOT.ESTJ = ''
END
OLD.PRODS = ""
OLD.QTYS = ""
IF GOT.ESTJ THEN
  	IF ESTJ.COMP = "ALL" THEN
    		COMP.CNT =EST.COMPONENT.CNT
  	END ELSE
    		COMP.CNT = DCOUNT(ESTJ.COMP<1,1>,SVM)
  	END
END ELSE
  	IF EST.PAR.COMP = "ALL" THEN
    		COMP.CNT =EST.COMPONENT.CNT
  	END ELSE
    		COMP.CNT = DCOUNT(EST.PAR.COMP<1,1>,SVM)
  END
END

FOR CP = 1 TO COMP.CNT
	IF GOT.ESTJ THEN
    		IF ESTJ.COMP = "ALL" THEN COMP = CP ELSE COMP = ESTJ.COMP<1,1,CP>
  	END ELSE
    		IF EST.PAR.COMP = "ALL" THEN COMP = CP ELSE COMP = EST.PAR.COMP<1,1,CP>
  	END
  	WEB.CNT = COUNT(EST.PROD.OS.PROD<1,COMP>,SM) + 1
  	FOR WB = 1 TO WEB.CNT
    		IF EST.PROD.INV.ID<1,COMP,WB> # "" THEN
      			PROD = EST.PROD.INV.ID<1,COMP,WB>
      			IF ROLL.LABEL THEN
        			QTY = FIELD(EST.RL.PAP.MSI<1,COMP,WB>,"!",QP)
        			WIDTH = EST.PROD.OS.WIDTH<1,COMP,WB>
        			GOSUB 70000
      			END ELSE
        			QTY = FIELD(EST.PROD.PQTY<1,COMP,WB>,"!",QP)
      			END
      			LOCATE PROD IN OLD.PRODS<1>,1 SETTING X ELSE NULL
      			OLD.PRODS<1,X> = PROD
      			OLD.QTYS<1,X> = OLD.QTYS<1,X> + QTY
    		END
  	NEXT WB
NEXT CP


IF ROLL.LABEL THEN
END
PROD.CNT = COUNT(OLD.PRODS,VM) + (OLD.PRODS # "")
FOR I = 1 TO PROD.CNT
	MATREAD INV.REC FROM INVENTORY,CONO:OLD.PRODS<1,I> ELSE MAT INV.REC = ''
  	GOSUB 80000
  	IF CASE1.FLAG THEN OLD.QTYS<1,I> = OLD.QTYS<1,I> * 100
  	MATREAD CATG.REC FROM CATEGORY,CONO:INV.LINE ELSE MAT CATG.REC = ''
  	MLOC = 0     ;*C33301
  	IF INDEX(JOB.RESV.MATL,OLD.PRODS<1,I>,1) = 1 THEN
    		LOCATE OLD.PRODS<1,I> IN JOB.RESV.MATL<1>,1 SETTING MLOC THEN
      			WHSE = JOB.RESV.WHSE<1,MLOC>
    		END ELSE MLOC = 0
  	END

*  	IF NOT(MLOC) THEN
*    		WCNT = DCOUNT(INV.WHSE.CODE,VM)
*    		DVCNT=0;WPTR=0
*    		GNCNT=0;GPTR=0
*    		HMSG='Warehouse - '
*    		GMSG=''
*    		FOR W = 1 TO WCNT
*      			MATREAD WHSE.REC FROM WAREHOUSE,CONO:INV.WHSE.CODE<1,W> THEN
*        			IF WHS.DIV = JOB.DIV THEN
*          				DVCNT += 1
*          				IF WPTR = 0 THEN WPTR = W
*          				HMSG=HMSG:INV.WHSE.CODE<1,W>:', '
*          				VALDAT=VALDAT:INV.WHSE.CODE<1,W>:VM
*        			END
*        			IF WHS.DIV = '00' THEN
*          				GMSG=GMSG:INV.WHSE.CODE<1,W>:', '
*          				VALDAT=VALDAT:INV.WHSE.CODE<1,W>:VM
*          				GNCNT += 1
*          				IF GPTR = 0 THEN GPTR = W
*        			END
*      			END
*    		NEXT W
*    		IF GMSG # '' THEN HMSG=HMSG:GMSG
*    		IF HMSG[LEN(HMSG)-1,2]=', ' THEN HMSG=HMSG[1,LEN(HMSG)-2]
*   		IF VALDAT[LEN(VALDAT),1]=VM THEN VALDAT=VALDAT[1,LEN(VALDAT)-1]
*    		BEGIN CASE
*      			CASE DVCNT = 1
*        			WHSE = INV.WHSE.CODE<1,WPTR>
*      			CASE GNCNT = 1 AND DVCNT = 0
*        			WHSE = INV.WHSE.CODE<1,GPTR>
*     			CASE 1
*        			DISP.PROD = OLD.PRODS<1,I>
*				WHSE = INV.WHSE.CODE<1,WPTR>
*        			*GOSUB 85000
*        			IF ESTAT THEN GOTO 99001
*    		END CASE
*  	END
  	IF WHSE # "" AND CATG.REQ.BOOK = "Y" THEN
    		IWH.ID=CONO:OLD.PRODS<1,I>:"!":WHSE
    		GOSUB GET.UNIT.PR
    		JRM.CNT = COUNT(JOB.RESV.MATL,VM) + (JOB.RESV.MATL # "")
    		FND = 0
    		FOR JM = 1 TO JRM.CNT UNTIL FND
      			IF JOB.RESV.MATL<1,JM> = OLD.PRODS<1,I> AND JOB.RESV.WHSE<1,JM> = WHSE THEN
        			SAVE.INV.JS.REC<JM,2> = UNIT.PR
        			YEOW.QTY = INT(((OLD.QTYS<1,I>/ICR.MT1)*ICR.DV1)*ICR.DV2 + .5)
        			IF SAVE.INV.JS.REC<JM,3> GE YEOW.QTY THEN
         				SAVE.INV.JS.REC<JM,3> = SAVE.INV.JS.REC<JM,3> - YEOW.QTY
        			END ELSE
          				SAVE.INV.JS.REC<JM,3> = 0
        			END
       			FND = 1
      			END
    		NEXT JM
  	END
NEXT I
GOTO 99999
***************************************END OF PROCESSING*************************************

*---- CONVERT ROLL LABEL MSI TO STOCKING UNIT
*
70000 *
MATREAD INV.REC FROM INVENTORY,CONO:PROD ELSE MAT INV.REC = ''
GOSUB 80000
NQTY = QTY
***************   NEED TO USE EST WIDTH FROM PROD DEF SCREEN   ***************
*
BEGIN CASE
	CASE INV.UNIT<1,2> = "MSI"
      	CASE INV.UNIT<1,2> = "FT"
       	IF WIDTH + 0 # 0 THEN
            		NQTY = (NQTY * 1000) / (12 * OCONV(WIDTH,"MD4"))
         	END ELSE
            		NQTY = 0
         	END
      	CASE INV.UNIT<1,2> = "PC"
       	IF WIDTH + 0 # 0 THEN
            		NQTY = (NQTY * 1000) / (10 * OCONV(WIDTH,"MD4"))
         	END ELSE
            		NQTY = 0
         	END
END CASE
QTY = NQTY
RETURN


80000 *
CASE1.FLAG = ""
	BEGIN CASE
      		CASE INV.UNIT<1,2> = 'SHT' AND INV.UNIT<1,3> = 'LBS'
         		ICR.DV1 = INV.M.WT
         		ICR.MT1 = 1
         		ICR.DV2 = 1
         		ICR.CNV = "MD0"
      		CASE INV.UNIT<1,2> = 'PC' AND INV.UNIT<1,3> = 'MSI'
         		ICR.DV1 = INV.PAP.WIDTH/100
         		ICR.MT1 = 10
         		ICR.DV2 = 1
        		ICR.CNV = "MD0"
      		CASE INV.UNIT<1,2> = 'FT' AND INV.UNIT<1,3> = 'MSI'
         		ICR.DV1 = INV.PAP.WIDTH/100
         		ICR.MT1 = 100
         		ICR.DV2 = 12
         		ICR.CNV = "MD0"
      		CASE 1
         		ICR.DV1 = 10
         		ICR.MT1 = 1
         		ICR.DV2 = 1
         		ICR.CNV = "MD2"
         		CASE1.FLAG = "Y"
   	END CASE
RETURN

*****************
GET.UNIT.PR: 
*****************
*
   MATREAD IWH.REC FROM INV.WHSE,IWH.ID ELSE  MAT IWH.REC=''
   BEGIN CASE
      CASE CO.JES.PARAM<1,11> = 'R'
         DIV.POS='';FISCAL.FLAG='JC';TRAN.PERIOD=''
         ERR.FLG='';ERRMSG=''
         CALL GET.LAST.COST (IWH.ID,MAT IWH.REC,WAREHOUSE,CONTROL,ERR.FLG,ERRMSG,DIV.POS,FISCAL.FLAG,TRAN.PERIOD,LAST.PRICE)
         IF ERR.FLG='' THEN
            UNIT.PR=LAST.PRICE
         END ELSE
            UNIT.PR = 0
         END
      CASE CO.JES.PARAM<1,11> = 'S'
         UNIT.PR = IWH.STD.COST
      CASE CO.JES.PARAM<1,11> = 'A'
         UNIT.PR = IWH.AVG.COST
      CASE CO.JES.PARAM<1,11> = 'L'
         UNIT.PR = IWH.LIST.COST
      CASE 1
         UNIT.PR = 0
   END CASE
RETURN


99999
;* SET PROPERRTIES HERE
EST.PAR.MATL = 'Y'
EST.PAR1 = ""
EST.PAR1<1,1> = EST.PAR(1)
EST.PAR1<1,2> = EST.PAR(2)
EST.PAR1<1,3> = EST.PAR(3)
EST.PAR1<1,4> = EST.PAR(4)
EST.PAR1<1,5> = EST.PAR(5)
VAL = RBO.setProperty('','EST_PAR',EST.PAR1)
SAVE.INV.JS.REC = LOWER(SAVE.INV.JS.REC)
VAL = RBO.setProperty('','SAVE_INV_JS_REC',SAVE.INV.JS.REC)
VAL = RBO.setProperty('','ESTAT',ESTAT)

RETURN
999999
  IF (TRIM(ERRMSG) # "") THEN
       STATUS = RBO.setProperty('','ServerStatus','1')
       STATUS = RBO.setProperty('','ServerMessage',ERRMSG)
  END ELSE
       STATUS = RBO.setProperty('','ServerStatus','')
       STATUS = RBO.setProperty('','ServerMessage','')
  END 
END
