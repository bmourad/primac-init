SUBROUTINE COAM_Balances_File
********************************************************************************
*   Program name :- COAM_Balances_File
*   Created:- 1/20/2003
*------------------------------------------------------------------------------
*
*
* In Properties:
* --------------
*  
*
* Out Properties:
* ---------------
*  
********************************************************************************
$INCLUDE WWINSERT RBO.H

* Insert method code here
$INCLUDE PMC.CPYLIB COA
$INCLUDE GLS.CPYLIB COA.BAL
$INCLUDE PMC.CPYLIB DIVISION
$INCLUDE PMC.CPYLIB DEPARTMENT
$INCLUDE PMC.CPYLIB COST.CNTR
$INCLUDE PMC.CPYLIB COMPANY
$INCLUDE CPYLIB CHAR

* Open files
ERRMSG = ''
OPEN 'COMPANY' TO COMPANY ELSE ERRMSG = 'CANNOT OPEN COMPANY FILE'
OPEN 'CONTROL' TO CONTROL ELSE ERRMSG = 'CANNOT OPEN CONTROL FILE'
OPEN 'CO.COA.BAL' TO CO.COA.BAL ELSE ERRMSG = 'CANNOT OPEN CO.COA.BAL FILE'
OPEN 'DP.COA.BAL' TO DP.COA.BAL ELSE ERRMSG = 'CANNOT OPEN DP.COA.BAL FILE'
OPEN 'DV.COA.BAL' TO DV.COA.BAL ELSE ERRMSG = 'CANNOT OPEN DV.COA.BAL FILE'
OPEN 'CC.COA.BAL' TO CC.COA.BAL ELSE ERRMSG = 'CANNOT OPEN CC.COA.BAL FILE'
OPEN 'COA' TO COA ELSE ERRMSG = 'CANNOT OPEN COA FILE'
IF ERRMSG THEN
  CALL RBO_ERROR_SUB(ERRMSG)
  RETURN
END

* Dimension variables
DIM OLD.CB(300)
DIM NEW.CB(300)

* Get properties
STATUS = RBO.getProperty('','ID',ID)
STATUS = RBO.getProperty('','Account',ACCT.NO)
STATUS = RBO.getProperty('','Div',DIVSN.CODE)
STATUS = RBO.getProperty('','Dept',DEPT.CODE)
STATUS = RBO.getProperty('','CCtr',CCTR.CODE)
STATUS = RBO.getProperty('','COAM_Balances_Rec',COAM_Balances_Rec)
STATUS = RBO.getProperty('','COAM_Old_Balances_Rec',COAM_Old_Balances_Rec)
MATPARSE CB.REC FROM COAM_Balances_Rec, VM
MATPARSE OLD.CB FROM COAM_Old_Balances_Rec, VM

* Get CONO
CONO = ID[1,3]
MATREAD COMP.REC FROM COMPANY, CONO ELSE
  ERRMSG = 'Invalid Company ID (':CONO:').'
  CALL RBO_ERROR_SUB(ERRMSG); RETURN
END

* Get Acct
MATREAD COA.REC FROM COA, CONO : ACCT.NO ELSE
  ERRMSG = 'Cannot locate account - ' : ACCT.NO CO.ACCT.MASK
  CALL RBO_ERROR_SUB(ERRMSG); RETURN
END

READ REC FROM CONTROL, CONO:"FISCAL" ELSE
  ERRMSG = "CONTROL FISCAL IS NOT ON FILE"
  CALL RBO_ERROR_SUB(ERRMSG); RETURN
END
YEAR = REC<1>[1,4]
CURR = REC<1>[5,2]
TAPE.FLG = "Y"
READ REC FROM CONTROL, CONO:(YEAR-1):"GLS.TAPE" ELSE TAPE.FLG = "N"

* Initialize and read values
ERRMSG = ""
READ PER.DATES FROM CONTROL, CONO:"OPENDATES" ELSE
  ERRMSG = "CONTROL RECORD OPENDATES IS MISSING"
  CALL RBO_ERROR_SUB(ERRMSG); RETURN
END
READ PERIOD.REC FROM CONTROL, CONO:"ACCT.PERIODS" ELSE
  PERIOD.REC = 12
END
NUM.PERIODS = PERIOD.REC<1>

IN.ACCT.LEN = LEN(CO.ACCT.PIC)
GEN.DIV = "00"
GEN.DEPT = "00"
GEN.CCTR = "000"
ACCT.NUM = ACCT.NO
READV ALL.DIV FROM CONTROL, CONO:"DIVISIONS", 1 ELSE ALL.DIV = "01"
DIV.CNT = DCOUNT(ALL.DIV,VM)
NUM.PERIODS = PERIOD.REC<1> + 1

* Set output values
IF CCTR.CODE = "" THEN
  ERRMSG = "No action taken."
  CALL RBO_ERROR_SUB(ERRMSG); RETURN
END
BLK = 0
FOR I = 3 TO 161 UNTIL BLK
  IF CB.REC(I) # OLD.CB(I) THEN BLK = 1
NEXT I
IF BLK THEN
  MAT NEW.CB = MAT CB.REC
  MATWRITE CB.REC ON CC.COA.BAL, CONO:DIVSN.CODE:DEPT.CODE:CCTR.CODE:ACCT.NUM
  MATREAD CB.REC FROM DP.COA.BAL, CONO:DIVSN.CODE:DEPT.CODE:ACCT.NUM ELSE MAT CB.REC = ""
  FOR I = 3 TO 161
    CB.REC(I) = CB.REC(I) - OLD.CB(I) + NEW.CB(I)
    IF CB.REC(I) = 0 THEN CB.REC(I) = ""
  NEXT I
  MATWRITE CB.REC ON DP.COA.BAL, CONO:DIVSN.CODE:DEPT.CODE:ACCT.NUM
  MATREAD CB.REC FROM DV.COA.BAL, CONO:DIVSN.CODE:ACCT.NUM ELSE MAT CB.REC = ""
  FOR I = 3 TO 161
    CB.REC(I) = CB.REC(I) - OLD.CB(I) + NEW.CB(I)
    IF CB.REC(I) = 0 THEN CB.REC(I) = ""
  NEXT I
  MATWRITE CB.REC ON DV.COA.BAL, CONO:DIVSN.CODE:ACCT.NUM
  MATREAD CB.REC FROM CO.COA.BAL, CONO:ACCT.NUM ELSE MAT CB.REC = ""
  FOR I = 3 TO 161
    CB.REC(I) = CB.REC(I) - OLD.CB(I) + NEW.CB(I)
    IF CB.REC(I) = 0 THEN CB.REC(I) = ""
  NEXT I
  MATWRITE CB.REC ON CO.COA.BAL, CONO:ACCT.NUM
  MATWRITE COA.REC ON COA, CONO : ACCT.NUM
END

COAM_Balances_Rec = ''

* Set output properties
STATUS = RBO.setProperty('','COAM_Balances_Rec',COAM_Balances_Rec)

* End of method code
RETURN
