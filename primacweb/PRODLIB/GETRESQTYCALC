FUNCTION GETRESQTYCALC(CONO,ACTION,EST.KEY,DEPT,COMP,EQTY)
********************************************************************************
*   Program name :- GETRESQTYCALC
*   Created:- 7/3/2003
*   Created By : B.Krishna
*------------------------------------------------------------------------------*
*
********************************************************************************
*---- COPY STATEMENTS
*
$INCLUDE WWINSERT RBO.H
$INCLUDE JES.CPYLIB SCOMMON.ESTIMATE
$DEFINE JESFILEVARS
$INCLUDE JES.CPYLIB JES.FILE.VARS
$DEFINE FILEVARS
$INCLUDE CPYLIB FILE.VARS
$DEFINE ESTIMATE
$INCLUDE JES.CPYLIB ESTIMATE

$DEFINE ESTIMATEDEPT
$INCLUDE JES.CPYLIB ESTIMATE.DEPT

$INCLUDE JES.CPYLIB EST.DEPT.CCTR.SUM
$INCLUDE CPYLIB CHAR

$DEFINE ESTIMATETEMP
$INCLUDE JES.CPYLIB ESTIMATE.TEMP

$INCLUDE JES.CPYLIB ESTIMATE.TEMP2

$DEFINE ESTIMATEMATL
$INCLUDE JES.CPYLIB ESTIMATE.MATL

$INCLUDE PMC.CPYLIB COST.CNTR

$DEFINE ESTIMATERES
$INCLUDE JES.CPYLIB ESTIMATE.RES
$INCLUDE JES.CPYLIB ESTIMATE.PRESS.SPOIL
$INCLUDE JES.CPYLIB ESTIMATE.TBL
$INCLUDE JES.CPYLIB ESTIMATE.RUN.EFF

$DEFINE FOHTABLE
$INCLUDE JCS.CPYLIB FOH.TABLE

$DEFINE ESTIMATEMARKUP
$INCLUDE JES.CPYLIB ESTIMATE.MARKUP



 OPEN "","ESTIMATE.RUN.EFF" TO ESTIMATE.RUN.EFF ELSE
       ERRMSG ="CAN NOT OPEN ESTIMATE.RUN.EFF FILE "
	GOTO 93000
 END

 OPEN "","ESTIMATE.RES" TO ESTIMATE.RES ELSE
       ERRMSG ="CAN NOT OPEN ESTIMATE.RES FILE "
	GOTO 93000
 END
 OPEN "","ESTIMATE.DEPT" TO ESTIMATE.DEPT ELSE
       ERRMSG ="CAN NOT OPEN ESTIMATE.DEPT FILE "
	GOTO 93000
 END 
 OPEN "","ESTIMATE.MATL" TO ESTIMATE.MATL ELSE
       ERRMSG ="CANNOT OPEN ESTIMATE.MATL FILE "
	GOTO 93000
 END     
 OPEN "","FOH.TABLE" TO FOH.TABLE ELSE
       ERRMSG ="CANNOT OPEN FOH.TABLE FILE "
	GOTO 93000
 END     
 OPEN "","COST.CNTR" TO COST.CNTR ELSE
       ERRMSG ="CANNOT OPEN COST.CNTR FILE "
	GOTO 93000
 END
 OPEN "","ESTIMATE.MARKUP" TO ESTIMATE.MARKUP ELSE
      ERRMSG ="CAN NOT OPEN ESTIMATE.MARKUP FILE "
      GOTO 93000
 END
 OPEN "","ESTIMATE.RES.RUN.EFF" TO ESTIMATE.RES.RUN.EFF ELSE
       ERRMSG ="CAN NOT OPEN ESTIMATE.RES.RUN.EFF FILE "
	GOTO 93000
 END

     ID=CONO:EST.KEY
*    MATREAD EST.REC FROM ESTIMATE,ID ELSE MAT EST.REC =''
     MATREAD EST.RL.REC FROM ESTIMATE.RES,ID ELSE MAT EST.RL.REC = ''
     MATREAD EST.REC FROM ESTIMATE,ID ELSE MAT EST.REC = ''


     
*
*---- INITIALIZATION
*

      BQTY = EST.BASE.QTY
      TEST.FLAG = 0 
      IF ACTION[2,1] = "" THEN
         PRINT.FLAG = 1
      END ELSE
         PRINT.FLAG = 0
      END

ERRMSG =""


*
*---- MAIN PROCESSING
*

      ESTD.ID = DEPT : "!" : COMP : "!" :BQTY
*WRITE ESTD.ID ON CONTROL,ESTD.ID;*ADDED
      MATREAD ESTD.REC FROM ESTIMATE.DEPT, CONO:EST.KEY:"!":ESTD.ID ELSE
         ERRMSG = "CAN NOT FOUND RECORD "
*	  GOTO 93000
         RETURN
      END
***********//START IF
      IF EQTY = BQTY THEN
         LOCATE "MR" IN ESTD.TYPE<1>,1 SETTING LPTR ELSE
            LPTR = 0
         END

         IF LPTR > 0 THEN
            GOSUB 50000
            IF TEMP.GRP.CCTR[1,2] = 'PR' THEN
               BEGIN CASE
                  CASE TEMP.GRP.CCTR='PRS'
                     TEMP.CCTR=EST.RL.PRESS.CCTR<1,COMP,1>
                  CASE NUM(TEMP.GRP.CCTR[3,99])
                     TEMP.CCTR=EST.RL.PRESS.CCTR<1,COMP,TEMP.GRP.CCTR[3,99]>
               END CASE
            END
            TCNT = DCOUNT(ESTD.TYPE,VM)
            FOR TPTR = TCNT TO LPTR STEP -1
               IF ESTD.TYPE<1,TPTR> = "MR" AND ESTD.GRP.QCALC<1,TPTR> # "A" THEN
                  FOR A = ESTD.FIRST.MV TO ESTD.LAST.MV
                     ESTD.REC(A) = DELETE(ESTD.REC(A),1,TPTR,0)
                  NEXT A
               END
            NEXT TPTR
            LPTR = LPTR - 1
            IF TEST.FLAG THEN MSG="INSERT STK ":LPTR
           CALL EST.RES.INSERT.STK (CONO, EQTY, DEPT, COMP, LPTR)
         END
*
         LOCATE "MI" IN ESTD.TYPE<1>,1 SETTING LPTR ELSE LPTR = 0
         IF LPTR > 0 THEN
            GOSUB 50000
*
            IF TEMP.GRP.CCTR[1,2] = 'PR' THEN
               BEGIN CASE
                  CASE TEMP.GRP.CCTR='PRS'
                     TEMP.CCTR=EST.RL.PRESS.CCTR<1,COMP,1>
                  CASE NUM(TEMP.GRP.CCTR[3,99])
                     TEMP.CCTR=EST.RL.PRESS.CCTR<1,COMP,TEMP.GRP.CCTR[3,99]>
               END CASE
            END
            TCNT = DCOUNT(ESTD.TYPE,VM)
            FOR TPTR = TCNT TO 1 STEP -1
               IF ESTD.TYPE<1,TPTR> = "MI" AND ESTD.GRP.QCALC<1,TPTR> # "A" THEN
                  FOR A = ESTD.FIRST.MV TO ESTD.LAST.MV
                     ESTD.REC(A) = DELETE(ESTD.REC(A),1,TPTR,0)
                  NEXT A
               END
            NEXT TPTR
            LPTR = LPTR - 1
            IF TEST.FLAG THEN MSG="INSERT INK"
       * COMMMENT     

	 CALL EST.RES.INSERT.INK (CONO, EQTY, DEPT, COMP, LPTR)
         END
*
         LOCATE "MC" IN ESTD.TYPE<1>,1 SETTING LPTR ELSE LPTR = 0
         IF LPTR > 0 THEN
            GOSUB 50000
            TCNT = DCOUNT(ESTD.TYPE,VM)
            FOR TPTR = TCNT TO 1 STEP -1
               IF ESTD.TYPE<1,TPTR> = "MC" AND ESTD.GRP.QCALC<1,TPTR> # "A" THEN
                  SAVE.CCTR = ESTD.CCTR<1,TPTR>
                  FOR A = ESTD.FIRST.MV TO ESTD.LAST.MV
                     ESTD.REC(A) = DELETE(ESTD.REC(A),1,TPTR,0)
                  NEXT A
               END
            NEXT TPTR
            LPTR = LPTR - 1
            IF TEST.FLAG THEN MSG="INSERT CASE"
           * COMMMENT   
	 	 CALL EST.INSERT.CASE (CONO, EQTY, DEPT, COMP, LPTR)
         END
*
         SLPTR = 1
         LOOP
            LOCATE "CUT" IN ESTD.GRP.CCTR<1>,SLPTR SETTING LPTR ELSE LPTR = 0
         WHILE LPTR > 0 DO
            OPER = ESTD.OPV<1,LPTR>
            MAT ESTD.TEMP2 = ""
            TDP = 0
            STORE.TEMP = 1
            LOOP
            WHILE ESTD.GRP.CCTR<1,LPTR> = "CUT" DO
               IF STORE.TEMP THEN
                  TDP = TDP + 1
                  FOR A = ESTD.FIRST.MV TO ESTD.LAST.MV
                     ESTD.TEMP2(A)<1,TDP> = ESTD.REC(A)<1,LPTR>
                  NEXT A
                  TEMP.GRP.QTY = ESTD.GRP.QTY<1,LPTR> / 100
                  IF TEMP.GRP.QTY = INT(TEMP.GRP.QTY) THEN TEMP.GRP.QTY = INT(TEMP.GRP.QTY)
                  TEMP2.GRP.QTY<1,TDP> = TEMP.GRP.QTY
               END
               FOR A = ESTD.FIRST.MV TO ESTD.LAST.MV
                  ESTD.REC(A) = DELETE(ESTD.REC(A),1,LPTR,0)
               NEXT A
               IF ESTD.OPV<1,LPTR> = OPER THEN STORE.TEMP = 0
            REPEAT
            LPTR = LPTR - 1
            IF TEST.FLAG THEN MSG="INSERT CUT"
                   * COMMMENT

		 CALL EST.INSERT.CUT (CONO, EQTY, DEPT, COMP, LPTR, MAT ESTD.TEMP2)
            SLPTR = LPTR+1
         REPEAT
*
         SLPTR = 1
         LOOP
            LOCATE "FLD" IN ESTD.GRP.CCTR<1>,SLPTR SETTING LPTR ELSE LPTR = 0
         WHILE LPTR > 0 DO
            OPER = ESTD.OPV<1,LPTR>
             MAT ESTD.TEMP2 = ""
            TDP = 0
            STORE.TEMP = 1
            LOOP
            WHILE ESTD.GRP.CCTR<1,LPTR> = "FLD" DO
               IF STORE.TEMP THEN
                  TDP = TDP + 1
                  FOR A = ESTD.FIRST.MV TO ESTD.LAST.MV
                     ESTD.TEMP2(A)<1,TDP> = ESTD.REC(A)<1,LPTR>
                  NEXT A
                  TEMP.GRP.QTY = ESTD.GRP.QTY<1,LPTR> / 100
                  IF TEMP.GRP.QTY = INT(TEMP.GRP.QTY) THEN TEMP.GRP.QTY = INT(TEMP.GRP.QTY)
                  TEMP2.GRP.QTY<1,TDP> = TEMP.GRP.QTY
               END
               FOR A = ESTD.FIRST.MV TO ESTD.LAST.MV
                  ESTD.REC(A) = DELETE(ESTD.REC(A),1,LPTR,0)
               NEXT A
               IF ESTD.OPV<1,LPTR> = OPER THEN STORE.TEMP = 0
            REPEAT
            LPTR = LPTR - 1
            IF TEST.FLAG THEN MSG="INSERT FLD"
             *COMMMENT
		 CALL EST.INSERT.FLD (CONO, EQTY, DEPT, COMP, LPTR, MAT ESTD.TEMP2)

            SLPTR = LPTR+1
         REPEAT
      END
***********//END IF

      TOTAL.HRS = 0
      TOTAL.DCOST = 0
      TOTAL.COST = 0
      TOTAL.SALE = 0
      TOTAL.TSALE = 0
      TOTAL.VSALE = 0
      TOTAL.VCOST = 0
      TCNT = DCOUNT(ESTD.TYPE,VM)
*KK = KK:"ID ":CONO:EST.KEY:"!":ESTD.ID:"TCNT ":TCNT
      FOR TPTR = 1 TO TCNT
150 *
         IF ESTD.TYPE<1,TPTR> = "G" THEN GOTO 990 ;* END OF FOR LOOP
         ACT = ACTION[1,1]
         MAT ESTD.TEMP = ""

         FOR A = ESTD.FIRST.MV TO ESTD.LAST.MV
            ESTD.TEMP(A) = ESTD.REC(A)<1,TPTR>
         NEXT A

       *IF TEMP.TYPE[1,1] = "L" AND ACT = "C" THEN
         IF TEMP.GRP.CCTR='PRS' OR TEMP.GRP.CCTR='PR1' THEN
            IF EST.RL.PRESS.CCTR<1,COMP> = "" THEN
               FOR A = ESTD.FIRST.MV TO ESTD.LAST.MV
                  ESTD.REC(A) = DELETE(ESTD.REC(A),1,TPTR,0)
               NEXT A
               IF TPTR = TCNT THEN GOTO 1000 ELSE GOTO 150
            END
            IF EST.RL.PRESS.CCTR<1,COMP> # TEMP.CCTR THEN
               TEMP.CCTR=EST.RL.PRESS.CCTR<1,COMP>
               ACT = "C"
            END
         END

	IF TEMP.TYPE[1,1] = "L" AND ACT = "C" THEN
            MATREAD CCTR.REC FROM COST.CNTR, CONO:TEMP.CCTR ELSE
               TEMP.CCTR = ESTD.CCTR<1,TPTR>
               GOTO 200
            END

            LOCATE TEMP.OPV IN CCTR.OPER<1>,1 SETTING OP.PTR ELSE
               TEMP.CCTR = ESTD.CCTR<1,TPTR>
               GOTO 200
            END
                
	  TEMP.OPV.TYPE=CCTR.OPER.TYPE<1,OP.PTR>
       	  IF CCTR.OPER.STD.IMP<1,OP.PTR>+0=0 THEN TEMP.OPV.TYPE="F"
            IF TEMP.OPV.TYPE="F" THEN
               IF CCTR.OPER.STD.HRS<1,OP.PTR>+0 > 0 THEN
                  TEMP.STD=CCTR.OPER.STD.HRS<1,OP.PTR>
                  TEMP.STD.TYPE="HR/OP"
               END
            END ELSE
               IF CCTR.OPER.STD.IMP<1,OP.PTR>+0 > 0 THEN
                  TEMP.STD=CCTR.OPER.STD.IMP<1,OP.PTR>*100
                  TEMP.STD.TYPE="OP/HR"
               END
            END

            IF TEMP.STD+0=0 THEN TEMP.STD=""
            TEMP.RATE=CCTR.OPER.HR.RATE<1,OP.PTR>
            TEMP.IND.1=CCTR.FOH.TYPE<1,1>:CCTR.FOH.PCT<1,1>
            TEMP.IND.2=CCTR.FOH.TYPE<1,2>:CCTR.FOH.PCT<1,2>
            TEMP.IND.3=CCTR.FOH.TYPE<1,3>:CCTR.FOH.PCT<1,3>
            TEMP.IND.4=CCTR.FOH.TYPE<1,4>:CCTR.FOH.PCT<1,4>
            TEMP.MARKUP=CCTR.OPER.MARKUP<1,OP.PTR>
         END
200 *


        TEMP.QTY = TEMP.QTY / 100

       IF TEMP.QTY = INT(TEMP.QTY) THEN TEMP.QTY = INT(TEMP.QTY)
         TEMP.STD = TEMP.STD / 100

         IF TEMP.STD = INT(TEMP.STD) THEN TEMP.STD = INT(TEMP.STD)

         TEMP.GRP.QTY = TEMP.GRP.QTY / 100
         IF TEMP.GRP.QTY = INT(TEMP.GRP.QTY) THEN TEMP.GRP.QTY = INT(TEMP.GRP.QTY)
	    BEGIN CASE
            CASE TEMP.TYPE[1,1] = "L"
               BEGIN CASE
      		    CASE TEMP.GRP.CCTR = "CUT" AND EQTY = BQTY
                  CASE TEMP.GRP.CCTR = "FLD" AND EQTY = BQTY
                  CASE TEMP.GRP.QCALC = "F"
                     TEMP.FPTR = TPTR

			SUB.NAME = "EST.FORMULA.Q":TEMP.GRP.QPARAM
                     IF TEST.FLAG THEN MSG=SUB.NAME
                            * WORKING
********* ADDED ********
* 		VALUECONTENT = SUB.ID :"^": ACTION :"^": EQTY :"^": DEPT :"^": COMP :"^": PreOrPost :"^": MODE1 :"^": ESTID :"^": TYPE	:"^": CCTR :"^": TEMP.OPV :"^":	REF.NO :"^": TEMP.QTY :"^": TEMP.GRP.QTY :"^": TEMP.CODE  :"^": WIDTH_VALUES
		VALUECONTENT = TEMP.GRP.QPARAM :"^": "R" :"^": EQTY :"^": DEPT :"^": COMP :"^": "PRE" :"^": "C" :"^": EST.KEY :"^": TEMP.TYPE :"^": TEMP.CCTR :"^": TEMP.OPV :"^TPTR^": TEMP.QTY :"^": TEMP.GRP.QTY :"^": TEMP.CODE  :"^ "

		STATUS = RBO.setProperty('','DREFCREF',VALUECONTENT)
		CALL ESTCEM_EST_FORMULA_Q
		STATUS = RBO.getProperty('', 'ESTDEPTINFO',ESTDEPTINFO)
		RESULT_OF_FORMULA = ESTDEPTINFO
		GOSUB ASSIGN_VALUES
*               CALL @SUB.NAME (CONO, "R", EQTY, DEPT, COMP)
********* ADDED ********

  			 
               END CASE
               BEGIN CASE
                  CASE TEMP.GRP.CCTR = "CUT"
                  CASE TEMP.GRP.CCTR = "FLD"
                  CASE TEMP.GRP.FCALC = "F"
                     TEMP.FPTR = TPTR
			IF TEMP.GRP.FPARAM = "865" THEN
	              SUB.NAME = "EST_FORMULA_F":TEMP.GRP.FPARAM
			END ELSE
                     SUB.NAME = "EST.FORMULA.F":TEMP.GRP.FPARAM
			END

                 IF TEST.FLAG THEN MSG=SUB.NAME
		       * COMMMENT
*                     
********* ADDED ********
			VALUECONTENT = TEMP.GRP.FPARAM :"^": "R" :"^": EQTY :"^": DEPT :"^": COMP :"^": "PRE" :"^": "C" :"^": EST.KEY :"^": TEMP.TYPE :"^": TEMP.CCTR :"^": TEMP.OPV :"^^": TEMP.QTY :"^": TEMP.GRP.QTY :"^": TEMP.CODE :"^": TEMP.STD :"^": TEMP.STD.TYPE :"^ "

			STATUS = RBO.setProperty('','DREFCREF',VALUECONTENT)
			CALL ESTCEM_EST_FORMULA_F
			STATUS = RBO.getProperty('', 'ESTDEPTINFO', ESTDEPTINFO)

			RESULT_OF_FORMULA = ESTDEPTINFO
			GOSUB ASSIGN_VALUES
*	                CALL @SUB.NAME (CONO, "R", EQTY, DEPT, COMP)
********* ADDED ********

			*UDTEXECUTE  "CALL " : SUB.NAME:"(":CONO:",'R',":EQTY:",": DEPT:",":COMP:")"

				STATUS = RBO.getProperty('',"CALCCASEIN",EST_ESTIMATOR)
				STATUS = RBO.setProperty('',"CALCCASEIN"," SUBROUTINEMAE : " : SUB.NAME)
                  CASE TEMP.GRP.FCALC = "T"
                     TBL.ID = TEMP.GRP.FPARAM
                     IF TEST.FLAG THEN MSG="EST.TABLE.FCTR"
		       * COMMMENT
*                     CALL EST.TABLE.FCTR (CONO, TBL.ID, TEMP.GRP.FCTR)
  		      CALL EST_TABLE_FCTR (CONO, TEMP.QTY, TBL.ID, TEMP.GRP.FCTR)
                     IF TEMP.FCTR+0 = 0 THEN TEMP.FCTR = 1000
               END CASE

	     CASE TEMP.TYPE[1,1] = "M"
               BEGIN CASE
*            CASE TEMP.TYPE = "MR" AND EQTY = BQTY
*               GOTO 390
                  CASE TEMP.TYPE = "MI" AND EQTY = BQTY
                     GOTO 390
                  CASE TEMP.TYPE = "MC" AND EQTY = BQTY
                     GOTO 390
                  CASE TEMP.TYPE = "MS" OR TEMP.TYPE = "MR"
                     TEMP.TYPE = "M":EST.PROD.OS.TYPE<1,COMP>
                     MPTR = TEMP.MPTR
                     MATREAD ESTM.REC FROM ESTIMATE.MATL, CONO:EST.PROD.OS.TYPE<1,COMP>:EST.PROD.OS.USAGE<1,COMP,MPTR> ELSE GOTO 390
                     LOCATE EST.PROD.OS.PROD<1,COMP,MPTR> IN ESTM.PROD<1>,1 SETTING MT.PTR ELSE GOTO 390
                  CASE 1
                     MATREAD ESTM.REC FROM ESTIMATE.MATL, CONO:TEMP.TYPE[2,1] ELSE GOTO 390
                     LOCATE TEMP.OPV IN ESTM.PROD<1>,1 SETTING MT.PTR ELSE GOTO 390
               END CASE
IF ACT = "C" AND (TEMP.TYPE = "MP" OR TEMP.TYPE = "MF" OR TEMP.TYPE = "MB" OR TEMP.TYPE = "ML" OR TEMP.TYPE = "MO" OR TEMP.TYPE = "MX") THEN
           TEMP.STD = ESTM.COST <1,MT.PTR>/ 100
END
*           TEMP.GRP.QCALC = ESTM.QCALC<1,MT.PTR>
*           TEMP.GRP.QPARAM = ESTM.QPARAM<1,MT.PTR>
*           TEMP.GRP.QOR = ESTM.QOR<1,MT.PTR>
*           TEMP.GRP.FCALC = ESTM.FCALC<1,MT.PTR>
*           TEMP.GRP.FPARAM = ESTM.FPARAM<1,MT.PTR>
*           TEMP.GRP.FOR = ESTM.FOR<1,MT.PTR>


               BEGIN CASE
                  CASE TEMP.GRP.QCALC = "F"
                     TEMP.FPTR = TPTR
	                IF TEMP.GRP.QPARAM = "859" THEN
			 SUB.NAME = "EST_FORMULA_Q":TEMP.GRP.QPARAM
			END ELSE
			  SUB.NAME = "EST.FORMULA.Q":TEMP.GRP.QPARAM
			END
                     IF TEST.FLAG THEN MSG=SUB.NAME

			ERRMSG=RBO.setProperty('','SelDeptCompQty',"IMS" :SUB.NAME:"(":CONO:",'R',":EQTY:",": DEPT:",":COMP:")")
			 *CALL EST_FORMULA_Q859(CONO, "R", EQTY, DEPT, COMP)	
			*UDTEXECUTE  "CALL " : SUB.NAME:"(":CONO:",'R',":EQTY:",": DEPT:",":COMP:")"
********* ADDED ********
	* 		VALUECONTENT = SUB.ID :"^": ACTION :"^": EQTY :"^": DEPT :"^": COMP :"^": PreOrPost :"^": MODE1 :"^": ESTID :"^": TYPE	:"^": CCTR :"^": TEMP.OPV :"^":	REF.NO :"^": TEMP.QTY :"^": TEMP.GRP.QTY :"^": TEMP.CODE  :"^": WIDTH_VALUES
			VALUECONTENT = TEMP.GRP.QPARAM :"^": "R" :"^": EQTY :"^": DEPT :"^": COMP :"^": "PRE" :"^": "C" :"^": EST.KEY :"^": TEMP.TYPE :"^": TEMP.CCTR :"^": TEMP.OPV :"^^": TEMP.QTY :"^": TEMP.GRP.QTY :"^": TEMP.CODE  :"^ "
			STATUS = RBO.setProperty('','DREFCREF',VALUECONTENT)
			CALL ESTCEM_EST_FORMULA_Q
			STATUS = RBO.getProperty('','ESTDEPTINFO',ESTDEPTINFO)
			RESULT_OF_FORMULA = ESTDEPTINFO
			GOSUB ASSIGN_VALUES
	*               CALL @SUB.NAME(CONO, "R", EQTY, DEPT,COMP)
********* ADDED ********
               END CASE
               BEGIN CASE
                  CASE TEMP.GRP.FCALC = "F"
                     TEMP.FPTR = TPTR
			IF TEMP.GRP.FPARAM = "865" THEN
	                   SUB.NAME = "EST_FORMULA_F":TEMP.GRP.FPARAM
			END ELSE
                           SUB.NAME = "EST.FORMULA.F":TEMP.GRP.FPARAM
			END

                     IF TEST.FLAG THEN MSG=SUB.NAME
                       * COMMMENT     
 
********* ADDED ********
			VALUECONTENT = TEMP.GRP.FPARAM :"^": "R" :"^": EQTY :"^": DEPT :"^": COMP :"^": "PRE" :"^": "C" :"^": EST.KEY :"^": TEMP.TYPE :"^": TEMP.CCTR :"^": TEMP.OPV :"^^": TEMP.QTY :"^": TEMP.GRP.QTY :"^": TEMP.CODE :"^": TEMP.STD :"^": TEMP.STD.TYPE :"^ "
			
			STATUS = RBO.setProperty('','DREFCREF',VALUECONTENT)			
			CALL ESTCEM_EST_FORMULA_F
			STATUS = RBO.getProperty('', 'ESTDEPTINFO', ESTDEPTINFO)
			RESULT_OF_FORMULA = ESTDEPTINFO
			GOSUB ASSIGN_VALUES
*	                CALL @SUB.NAME (CONO, "R", EQTY, DEPT, COMP)
********* ADDED ********

STATUS = RBO.getProperty('',"EST_ESTIMATOR",EST_ESTIMATOR)
STATUS = RBO.setProperty('',"EST_ESTIMATOR",EST_ESTIMATOR: " : " : SUB.NAME)


                  CASE TEMP.GRP.FCALC = "T"
                     TBL.ID = TEMP.GRP.FPARAM
                     IF TEST.FLAG THEN MSG="EST.TABLE.FCTR"
		       * COMMMENT
*                     CALL EST.TABLE.FCTR (CONO, TBL.ID, TEMP.GRP.FCTR)
			CALL EST_TABLE_FCTR (CONO, TEMP.QTY, TBL.ID, TEMP.GRP.FCTR)
                     IF TEMP.FCTR+0 = 0 THEN TEMP.FCTR = 1000
               END CASE
            CASE 1
               BEGIN CASE
                  CASE TEMP.GRP.QCALC = "F"
                     TEMP.FPTR = TPTR
                     SUB.NAME = "EST.FORMULA.Q":TEMP.GRP.QPARAM
                     IF TEST.FLAG THEN MSG=SUB.NAME
                       * COMMMENT 
********* ADDED ********
	* 		VALUECONTENT = SUB.ID :"^": ACTION :"^": EQTY :"^": DEPT :"^": COMP :"^": PreOrPost :"^": MODE1 :"^": ESTID :"^": TYPE	:"^": CCTR :"^": TEMP.OPV :"^":	REF.NO :"^": TEMP.QTY :"^": TEMP.GRP.QTY :"^": TEMP.CODE  :"^": WIDTH_VALUES
			VALUECONTENT = TEMP.GRP.QPARAM :"^": "R" :"^": EQTY :"^": DEPT :"^": COMP :"^": "PRE" :"^": "C" :"^": EST.KEY :"^": TEMP.TYPE :"^": TEMP.CCTR :"^": TEMP.OPV :"^TPTR^": TEMP.QTY :"^": TEMP.GRP.QTY :"^": TEMP.CODE  :"^ "


			STATUS = RBO.setProperty('','DREFCREF',VALUECONTENT)
			CALL ESTCEM_EST_FORMULA_Q
			STATUS = RBO.getProperty('','ESTDEPTINFO',ESTDEPTINFO)
			RESULT_OF_FORMULA = ESTDEPTINFO
			GOSUB ASSIGN_VALUES
	*               CALL @SUB.NAME (CONO, "R", EQTY, DEPT, COMP)
********* ADDED ********
               END CASE             
		  BEGIN CASE
                  CASE TEMP.GRP.FCALC = "F"
                     TEMP.FPTR = TPTR
			IF TEMP.GRP.FPARAM = "865" THEN
	                   SUB.NAME = "EST_FORMULA_F":TEMP.GRP.FPARAM
			END ELSE
                           SUB.NAME = "EST.FORMULA.F":TEMP.GRP.FPARAM
			END

                     IF TEST.FLAG THEN MSG=SUB.NAME
                        * COMMMENT
********* ADDED ********
			VALUECONTENT = TEMP.GRP.FPARAM :"^": "R" :"^": EQTY :"^": DEPT :"^": COMP :"^": "PRE" :"^": "C" :"^": EST.KEY :"^": TEMP.TYPE :"^": TEMP.CCTR :"^": TEMP.OPV :"^^": TEMP.QTY :"^": TEMP.GRP.QTY :"^": TEMP.CODE :"^": TEMP.STD :"^": TEMP.STD.TYPE :"^ "
			STATUS = RBO.setProperty('','DREFCREF',VALUECONTENT)			
			CALL ESTCEM_EST_FORMULA_F			
			STATUS = RBO.getProperty('', 'ESTDEPTINFO', ESTDEPTINFO)
			RESULT_OF_FORMULA = ESTDEPTINFO
			GOSUB ASSIGN_VALUES
*	                CALL @SUB.NAME (CONO, "R", EQTY, DEPT, COMP)
********* ADDED ********
			 


STATUS = RBO.getProperty('',"EST_ESTIMATOR",EST_ESTIMATOR)
STATUS = RBO.setProperty('',"EST_ESTIMATOR",EST_ESTIMATOR: " : " : SUB.NAME)
                  CASE TEMP.GRP.FCALC = "T"
                     TBL.ID = TEMP.GRP.FPARAM
                     IF TEST.FLAG THEN MSG="EST.TABLE.FCTR"
                            * COMMMENT
*			CALL EST.TABLE.FCTR (CONO, TBL.ID, TEMP.GRP.FCTR)
			CALL EST_TABLE_FCTR (CONO, TEMP.QTY, TBL.ID, TEMP.GRP.FCTR)
                     IF TEMP.FCTR+0 = 0 THEN TEMP.FCTR = 1000
               END CASE
         END CASE


390 *
         IF TEMP.TYPE[1,1] = "P" THEN
*             CALL EST.OSP.UPD(CONO,"R",DEPT,COMP,EQTY,TPTR)
              VALUECONTENT = "A":"^":DPTR:"^":COMP:"^":EQTY:"^":TPTR:"^":EST.KEY:"^":DPTR:"^":TEMP.TYPE:"^":TEMP.OPV:"^":TEMP.CODE:"^":TEMP.QTY:"^":TEMP.STD
              STATUS = RBO.setProperty('','DREFCREF',VALUECONTENT)
              CALL ESTCEM_OSP_UPD
              STATUS = RBO.getProperty('', 'ESTDEPTINFO', ESTDEPTINFO)
              RESULT_OF_FORMULA = ESTDEPTINFO
              GOSUB ASSIGN_VALUES
         END
finalHours =''


*
*---- CALCULATE HOURS, COST AND SALE AMOUNTS
*
*        CALL EST_RES_CALC_COST(CONO,EQTY,DEPT)
	 GOSUB EST_RES_CALC_COST_LOCAL
*	 CALL EST.RES.CALC.COST (CONO,EQTY,DEPT)
         TOTAL.HRS = TOTAL.HRS + TEMP.HRS
         TOTAL.DCOST = TOTAL.DCOST + TEMP.DCOST
         TOTAL.COST = TOTAL.COST + TEMP.COST
         TOTAL.SALE = TOTAL.SALE + TEMP.SALE
         TOTAL.TSALE = TOTAL.TSALE + TEMP.TSALE
         IF TEMP.VSALE = "Y" THEN
           TOTAL.VSALE = TOTAL.VSALE + TEMP.TSALE
           TOTAL.VCOST = TOTAL.VCOST + TEMP.COST
         END
*
*---- RESTORE TEMP DATA
*
         FOR A = ESTD.FIRST.MV TO ESTD.LAST.MV
            ESTD.REC(A)<1,TPTR> = ESTD.TEMP(A)
         NEXT A
         ESTD.QTY<1,TPTR> = TEMP.QTY * 100
         ESTD.STD<1,TPTR> = TEMP.STD * 100
         ESTD.GRP.QTY<1,TPTR> = TEMP.GRP.QTY * 100
990   NEXT TPTR
*
*---- WRITE RECORD FOR NEW QUANTITY
*
1000 *
      ESTD.ID = DEPT:"!":COMP:"!":EQTY
      LOCATE ESTD.ID IN EST.DEPT.COMP<1>,1 SETTING PP ELSE
         EST.DEPT.COMP<1,PP> = ESTD.ID
      END
      EST.DEPT.COMP.HRS<1,PP> = TOTAL.HRS
      EST.DEPT.COMP.DCOST<1,PP> = TOTAL.DCOST
      EST.DEPT.COMP.COST<1,PP> = TOTAL.COST
      EST.DEPT.COMP.SALE<1,PP> = TOTAL.SALE
      EST.DEPT.COMP.TSALE<1,PP> = TOTAL.TSALE
      EST.DEPT.COMP.VSALE<1,PP> = TOTAL.VSALE
      EST.DEPT.COMP.VCOST<1,PP> = TOTAL.VCOST

      MATWRITE ESTD.REC ON ESTIMATE.DEPT, CONO:EST.KEY:"!":ESTD.ID
RETURN

*
*---- SAVE GROUP VALUES
*

50000 *
      MAT ESTD.TEMP = ""
      TEMP.TYPE = ESTD.TYPE<1,LPTR>
      TEMP.CCTR = ESTD.CCTR<1,LPTR>
      TEMP.GRP.ID = ESTD.GRP.ID<1,LPTR>
      TEMP.GRP.CCTR = ESTD.GRP.CCTR<1,LPTR>
      TEMP.GRP.QTY = ESTD.GRP.QTY<1,LPTR>
      TEMP.GRP.FCTR = ESTD.GRP.FCTR<1,LPTR>
      TEMP.GRP.QCALC = ESTD.GRP.QCALC<1,LPTR>
      TEMP.GRP.QPARAM = ESTD.GRP.QPARAM<1,LPTR>
      TEMP.GRP.QOR = ESTD.GRP.QOR<1,LPTR>
      TEMP.GRP.FCALC = ESTD.GRP.FCALC<1,LPTR>
      TEMP.GRP.FPARAM = ESTD.GRP.FPARAM<1,LPTR>
      TEMP.GRP.FOR = ESTD.GRP.FOR<1,LPTR>
      TEMP.GRP.QTY = TEMP.GRP.QTY / 100
      IF TEMP.GRP.QTY = INT(TEMP.GRP.QTY) THEN TEMP.GRP.QTY = INT(TEMP.GRP.QTY)

RETURN
ASSIGN_VALUES:
	FOR DC = 1 TO DCOUNT(RESULT_OF_FORMULA,"~")
		QTY_VALUE = FIELD(RESULT_OF_FORMULA,"~",DC)
		BEGIN CASE
	         CASE FIELD(QTY_VALUE,"=",1) = "TEMP.QTY"
			TEMP.QTY = FIELD(QTY_VALUE,"=",2)
		  CASE FIELD(QTY_VALUE,"=",1) = "TEMP.FCTR"
			TEMP.FCTR = FIELD(QTY_VALUE,"=",2)
   		  CASE FIELD(QTY_VALUE,"=",1) = "TEMP.STD"
			TEMP.STD = FIELD(QTY_VALUE,"=",2)
		  CASE FIELD(QTY_VALUE,"=",1) = "TEMP.CODE"
			TEMP.CODE = FIELD(QTY_VALUE,"=",2)
		  CASE FIELD(QTY_VALUE,"=",1) = "TEMP.STD.TYPE"
			TEMP.STD.TYPE = FIELD(QTY_VALUE,"=",2)
		  CASE FIELD(QTY_VALUE,"=",1) = "TEMP.TSALE"
			TEMP.TSALE = FIELD(QTY_VALUE,"=",2)
		  CASE FIELD(QTY_VALUE,"=",1) = "TEMP.UM"
			TEMP.UM = FIELD(QTY_VALUE,"=",2)
		  CASE FIELD(QTY_VALUE,"=",1) = "TEMP.IND.1"
			TEMP.IND.1 = FIELD(QTY_VALUE,"=",2)
		  CASE FIELD(QTY_VALUE,"=",1) = "TEMP.IND.2"
			TEMP.IND.2 = FIELD(QTY_VALUE,"=",2)
		  CASE FIELD(QTY_VALUE,"=",1) = "TEMP.IND.3"
			TEMP.IND.3 = FIELD(QTY_VALUE,"=",2)
		  CASE FIELD(QTY_VALUE,"=",1) = "TEMP.IND.4"
			TEMP.IND.4 = FIELD(QTY_VALUE,"=",2)
		  CASE FIELD(QTY_VALUE,"=",1) = "TEMP.MARKUP"
			TEMP.MARKUP = FIELD(QTY_VALUE,"=",2)
		  CASE FIELD(QTY_VALUE,"=",1) = "TEMP.DESC"
			TEMP.DESC = FIELD(QTY_VALUE,"=",2)
		  CASE FIELD(QTY_VALUE,"=",1) = "TEMP.VSALE"
			TEMP.VSALE = FIELD(QTY_VALUE,"=",2)
		  CASE FIELD(QTY_VALUE,"=",1) = "EST.RL.NO.PER.ROLL"
			EST.RL.NO.PER.ROLL = FIELD(QTY_VALUE,"=",2)
		  CASE FIELD(QTY_VALUE,"=",1) = "EST.RL.NO.ROLLS"
			EST.RL.NO.ROLLS = FIELD(QTY_VALUE,"=",2)
		  CASE FIELD(QTY_VALUE,"=",1) = "EST.RL.NO.CTNS"
			EST.RL.NO.CTNS = FIELD(QTY_VALUE,"=",2)
		  CASE FIELD(QTY_VALUE,"=",1) = "EST.RL.NO.KGS"
			EST.RL.NO.KGS = FIELD(QTY_VALUE,"=",2)
		  CASE FIELD(QTY_VALUE,"=",1) = "EST.RL.CALC.MAX.OD"
			EST.RL.CALC.MAX.OD = FIELD(QTY_VALUE,"=",2)
		  CASE FIELD(QTY_VALUE,"=",1) = "EST.RL.CALC.ROLL.QTY"
			EST.RL.CALC.ROLL.QTY = FIELD(QTY_VALUE,"=",2)
		  CASE FIELD(QTY_VALUE,"=",1) = "PR.SPOIL.PC"
			PR.SPOIL.PC = FIELD(QTY_VALUE,"=",2)
		  CASE FIELD(QTY_VALUE,"=",1) = "EST.DEPT.OSP"
			EST.DEPT.OSP = FIELD(QTY_VALUE,"=",2)
		  CASE FIELD(QTY_VALUE,"=",1) = "EST.DEPT.OSP.ID"
			EST.DEPT.OSP.ID = FIELD(QTY_VALUE,"=",2)
		  CASE FIELD(QTY_VALUE,"=",1) = "EST.DEPT.OSP.UM"
			EST.DEPT.OSP.UM = FIELD(QTY_VALUE,"=",2)
		  CASE FIELD(QTY_VALUE,"=",1) = "EST.DEPT.OSP.QTY"
			EST.DEPT.OSP.QTY = FIELD(QTY_VALUE,"=",2)
		  CASE FIELD(QTY_VALUE,"=",1) = "EST.DEPT.OSP.PRICE"
			EST.DEPT.OSP.PRICE = FIELD(QTY_VALUE,"=",2)
		END CASE
	NEXT DC
	RESULT_OF_FORMULA = ""
RETURN


EST_RES_CALC_COST_LOCAL: 

DPTR = DEPT
READ EST.RL.PP FROM CONTROL,CONO:'EST.RES.PRE.PRESS' ELSE EST.RL.PP = ''
*
*---- MAIN PROCESSING
*
         BEGIN CASE
         CASE TEMP.TYPE[1,1] = "L"
            IF TEMP.OPV.TYPE = "F" THEN
              IF TEMP.GRP.QPARAM = '866' OR TEMP.GRP.QPARAM = '870' THEN
                TEMP.HRS = TEMP.QTY*TEMP.FCTR/10
              END ELSE
                TEMP.HRS = INT(TEMP.QTY*TEMP.FCTR*TEMP.STD/10+0.5)
              END
            END ELSE
               BEGIN CASE
               CASE 1
                  TEMP.HRS = INT(TEMP.QTY/(TEMP.FCTR/1000*TEMP.STD)*100+0.5)
               END CASE
            END
            TEMP.DCOST = INT(TEMP.HRS*TEMP.RATE/100+0.5)
            BASE.COST = TEMP.RATE
         CASE TEMP.TYPE = "PT"
            IF TEMP.UM+0 = 0 THEN TEMP.UM = 1
            TEMP.DCOST = INT((TEMP.FCTR/1000)*(TEMP.STD*100)+0.5)
            BASE.COST = TEMP.DCOST
          CASE TEMP.TYPE='MR'
            IF TEMP.UM+0=0 THEN TEMP.UM=1
            TEMP.DCOST=INT((TEMP.QTY/TEMP.UM)*(TEMP.FCTR/1000)*(TEMP.STD*100)+0.5)
            BASE.COST=TEMP.DCOST
         CASE 1
            IF TEMP.UM+0 = 0 THEN TEMP.UM = 1
            TEMP.DCOST = INT((TEMP.QTY/TEMP.UM)*(TEMP.FCTR/1000)*(TEMP.STD*100)+0.5)
            BASE.COST = TEMP.DCOST
         END CASE
         IND.COST = 0
         FOR TI = 1 TO 4
            BEGIN CASE
            CASE TI = 1
               TEMP.IND = TEMP.IND.1
            CASE TI = 2
               TEMP.IND = TEMP.IND.2
            CASE TI = 3
               TEMP.IND = TEMP.IND.3
            CASE TI = 4
               TEMP.IND = TEMP.IND.4
            END CASE
            BEGIN CASE
            CASE TEMP.IND = ""
            CASE TEMP.IND[1,1] = "$"
               IND.AMT = TEMP.IND[2,99]
               IND.COST = IND.COST+IND.AMT
            CASE TEMP.IND[1,1] = "%" OR NUM(TEMP.IND)
               IF TEMP.IND[1,1] = "%" THEN IND.PCT = TEMP.IND[2,99] ELSE IND.PCT = TEMP.IND
               IND.COST = IND.COST+INT(BASE.COST*(IND.PCT/10000)+0.5)
            CASE 1
               MATREAD FTR.REC FROM FOH.TABLE, CONO:TEMP.IND ELSE
                  MAT FTR.REC = ""
               END
               LOCATE BASE.COST IN FTR.QTY<1>,1 BY "AR" SETTING FP ELSE NULL
               IF FP > COUNT(FTR.QTY,VM) + 1 THEN FP = COUNT(FTR.QTY,VM) + 1
               IF FTR.TYPE = "$" THEN
                  IND.COST = IND.COST+FTR.PCT<1,FP>
               END ELSE
                  IND.COST = IND.COST+INT(BASE.COST*(FTR.PCT<1,FP>/10000)+0.5)
               END
            END CASE
         NEXT TI
         BEGIN CASE
         CASE TEMP.TYPE[1,1] = "L"
            TEMP.COST = INT(TEMP.HRS*(TEMP.RATE+IND.COST)/100+0.5)
         CASE 1
            TEMP.COST = TEMP.DCOST+IND.COST
         END CASE
      IF EST.RL.PP.INCLUDE#'Y' THEN
         LOCATE EST.DEPT<1,DPTR> IN EST.RL.PP<1>,1 SETTING DPOS THEN
            TEMP.SALE = 0
            TEMP.TSALE = 0
         END
    END
         TEMP.SALE = TEMP.COST
*
*--- Calculate Markups to Apply
*
         BEGIN CASE
         CASE NUM(TEMP.MARKUP)
            TEMP.SALE = TEMP.SALE+INT(TEMP.COST*(TEMP.MARKUP/10000)+0.5)
         CASE 1
            MATREAD MKU.REC FROM ESTIMATE.MARKUP, CONO:TEMP.MARKUP ELSE
               MAT MKU.REC = ""
            END
            LOCATE TEMP.COST IN MKU.QTY<1>,1 BY "AR" SETTING FP ELSE NULL
            IF FP > COUNT(MKU.QTY,VM) + 1 THEN FP = COUNT(MKU.QTY,VM) + 1
            TEMP.SALE = TEMP.SALE+INT(TEMP.COST*(MKU.PCT<1,FP>/10000)+0.5)
         END CASE
*
* Use RUN Lineal Metres to Find Markup%
*
      IF EST.RL.DIE.REPEAT<1,1,1>+0 > 0 THEN
         LINEAL.RUN=EQTY/1000*(EST.RL.DIE.REPEAT<1,1,1>/10000)
         LINEAL.RUN=LINEAL.RUN/EST.RL.DIE.NO.ACR<1,1,1>
         LINEAL.RUN=INT(LINEAL.RUN*100)
      END ELSE
         LINEAL.RUN = 0
      END
         BEGIN CASE
         CASE TEMP.TYPE[1,1] = "L"
            MATREAD MKU.REC FROM ESTIMATE.MARKUP,CONO:'L':TEMP.CCTR ELSE
              MAT MKU.REC = ''
            END
            FP=1
            LOCATE LINEAL.RUN IN MKU.QTY<1>,1 BY "AR" SETTING FP ELSE NULL
            IF FP > COUNT(MKU.QTY,VM) + 1 THEN FP = COUNT(MKU.QTY,VM) + 1
            LAB.MARKUP=''
            LAB.MARKUP=MKU.PCT<1,FP>+0
            IF LAB.MARKUP = 0 THEN
               LAB.MARKUP = EST.MARKUP<1,1>
            END
            TEMP.TSALE = INT(TEMP.SALE * (1+LAB.MARKUP/10000)+0.5)
         CASE TEMP.TYPE = "MS" OR TEMP.TYPE = "MR" OR TEMP.TYPE = "MI"
            MATREAD MKU.REC FROM ESTIMATE.MARKUP,CONO:'M':TEMP.CCTR ELSE
              MAT MKU.REC = ''
            END
            FP=1
            LOCATE LINEAL.RUN IN MKU.QTY<1>,1 BY "AR" SETTING FP ELSE NULL
            IF FP > COUNT(MKU.QTY,VM) + 1 THEN FP = COUNT(MKU.QTY,VM) + 1
            MAT.MARKUP=''
            MAT.MARKUP=MKU.PCT<1,FP>+0
            IF MAT.MARKUP = 0 THEN
               MAT.MARKUP = EST.MARKUP<1,2>
            END
            TEMP.TSALE = INT(TEMP.SALE * (1+MAT.MARKUP/10000) + 0.5)
         CASE TEMP.TYPE[1,1] = "M"
            TEMP.TSALE = INT(TEMP.SALE * (1+EST.MARKUP<1,3>/10000) + 0.5)
         CASE TEMP.TYPE[1,1] = "P"
            TEMP.TSALE = INT(TEMP.SALE * (1+EST.MARKUP<1,4>/10000) + 0.5)
         CASE TEMP.TYPE[1,1] = "S"
            TEMP.TSALE = INT(TEMP.SALE * (1+EST.MARKUP<1,5>/10000) + 0.5)
         CASE TEMP.TYPE[1,1] = "O"
            TEMP.TSALE = INT(TEMP.SALE * (1+EST.MARKUP<1,6>/10000) + 0.5)
         END CASE
*
*---- END OF PROGRAM
*
RETURN
93000*
STATUS = RBO.setProperty('',"ServerStatus",1)
STATUS = RBO.setProperty('',"ServerMessage",ERRMSG)
RETURN
* End of method code


