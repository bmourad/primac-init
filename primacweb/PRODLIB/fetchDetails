SUBROUTINE fetchDetails
********************************************************************************
*   Program name :- fetchDetails
*------------------------------------------------------------------------------*
* PROGRAM  - fetchDetails
*
* AUTHOR   - Deepak Chaggar
*
* DATE     - 06/26/2003
*
* DESCRIPTION
*
* In Properties:
* --------------
*  
*
* Out Properties:
* ---------------
*  
********************************************************************************
$INCLUDE WWINSERT RBO.H
*$INCLUDE CPYLIB SCOMMON1
$INCLUDE PMC.CPYLIB COMPANY
$INCLUDE PMC.CPYLIB CUSTOMER
$INCLUDE ICS.CPYLIB DAILY_STOCK
$INCLUDE PMC.CPYLIB VEND
$INCLUDE PMC.CPYLIB PO
$INCLUDE ICS.CPYLIB INVENTORY
$INCLUDE ICS.CPYLIB INV.WHSE
$INCLUDE ICS.CPYLIB INV.WHSE.LOC
$INCLUDE ICS.CPYLIB INV_SERIAL
$INCLUDE JCS.CPYLIB JOB
$INCLUDE ICS.CPYLIB PO.MAN.XREF
$INCLUDE ICS.CPYLIB PO.RSKI.XREF
*$INCLUDE CPYLIB SCREEN.COM
$INCLUDE CPYLIB FILE.VARS
$INCLUDE CPYLIB CHAR
*
*---- DEFINE DATA STORAGE
*
DIM TEMP.REC(20)
EQU TEMP.PROD.NO  TO TEMP.REC(1)  ;* (MA)     Product ID
EQU TEMP.DESC     TO TEMP.REC(2)  ;* (MA)     Product description
EQU TEMP.BASIS    TO TEMP.REC(3)  ;* (MA)     Basis weight
EQU TEMP.WIDTH    TO TEMP.REC(4)  ;* (MA)     Roll width
EQU TEMP.JOB.NO   TO TEMP.REC(5)  ;* (MA,MSV) Job numbers
EQU TEMP.QTY.ORD  TO TEMP.REC(6)  ;* (MA)     Quantity ordered
EQU TEMP.QTY.INT  TO TEMP.REC(7)  ;* (MA)     Quantity in transit
EQU TEMP.QTY.RCV  TO TEMP.REC(8)  ;* (MA)     Quantity received
*
EQU TEMP.MAN.NO   TO TEMP.REC(11) ;* (MA,MV)  Product ID
EQU TEMP.MAN.DT   TO TEMP.REC(12) ;* (MA,MV)  Product description
EQU TEMP.MQTY.INT TO TEMP.REC(13) ;* (MA,MV)  Quantity in transit
EQU TEMP.MQTY.RCV TO TEMP.REC(14) ;* (MA,MV)  Quantity received
EQU TEMP.MAN.SOURCE TO TEMP.REC(15) ;* (MA,VM) DAILY_STOCK OR ISTK

*MY VARIABLES
	CONO = ''
	ERRMSG = ''
	REF.NO = ''
	SDATA = ''
	SDATA3 = ''
	SDATA5 = ''
	SDATA6 = ''
	SDATA12 = ''
	SDATA13 = ''
	SDATA14 = ''
	SDATA15 = ''
	SDATA16 = ''
	SDATA17 = ''
	SDATA18 = ''
	SDATA19 = ''
	DISP.QTY = ''
	S$SCR = 1
	SDATA32 = ""
	SDATA33 = ""
	SDATA34 = ""
	SDATA35 = ""
	
*END

  ERRMSG = RBO.getProperty('','ID',ID)
  CONO = ID[1,3]
  PO_NUMBER = ID[4,99]

*
*---- OPEN ALL FILES
*
OPEN "","COMPANY" TO COMPANY ELSE ERRMSG = "CANNOT OPEN COMPANY FILE"; GOSUB 90000; STOP
OPEN "","CONTROL" TO CONTROL ELSE ERRMSG = "CANNOT OPEN CONTROL FILE"; GOSUB 90000; STOP
OPEN "","DAILY_STOCK" TO DAILY_STOCK ELSE ERRMSG = "CANNOT OPEN DAILY_STOCK FILE"; GOSUB 90000; STOP
OPEN "","CUSTOMER" TO CUSTOMER ELSE ERRMSG = "CANNOT OPEN CUSTOMER FILE"; GOSUB 90000; STOP
OPEN "","VEND" TO VEND ELSE ERRMSG = "CANNOT OPEN VEND FILE"; GOSUB 90000; STOP
OPEN "","PO" TO PO ELSE ERRMSG = "CANNOT OPEN PO FILE"; GOSUB 90000; STOP
OPEN "","PO.MAN.XREF" TO PO.MAN.XREF ELSE ERRMSG = "CANNOT OPEN PO.MAN.XREF FILE"; GOSUB 90000; STOP
OPEN "","PO.RSKI.XREF" TO PO.RSKI.XREF ELSE ERRMSG = "CANNOT OPEN PO.RSKI.XREF FILE"; GOSUB 90000; STOP
OPEN "","INVENTORY" TO INVENTORY ELSE ERRMSG = "CANNOT OPEN INVENTORY FILE"; GOSUB 90000; STOP
OPEN "","INV.WHSE" TO INV.WHSE ELSE ERRMSG = "CANNOT OPEN INV.WHSE FILE"; GOSUB 90000; STOP
OPEN "","INV.WHSE.LOC" TO INV.WHSE.LOC ELSE ERRMSG = "CANNOT OPEN INV.WHSE.LOC FILE"; GOSUB 90000; STOP
OPEN "","INV_SERIAL" TO INV_SERIAL ELSE ERRMSG = "CANNOT OPEN INV_SERIAL FILE"; GOSUB 90000; STOP
OPEN "","JOB" TO JOB ELSE ERRMSG = "CANNOT OPEN JOB FILE"; GOSUB 90000; STOP
*OPEN "","RCV.SCREENS" TO M.SCREENS ELSE ERRMSG = "CANNOT OPEN RCV.SCREENS FILE"; GOSUB 90000; STOP
*OPEN "","RCV.SCREENS" TO RCV.SCREENS ELSE ERRMSG = "CANNOT OPEN RCV.SCREENS FILE"; GOSUB 90000; STOP
*     OPEN "","DEV.SCREENS" TO M.SCREENS ELSE ERRMSG = "CANNOT OPEN DEV.SCREENS FILE"; GOSUB 90000; STOP
*
*---- INITIALIZATION
*

MATREAD PO.REC FROM PO, CONO:PO_NUMBER ELSE
  ERRMSG = "Invalid P/O. Try again! "
  GOSUB 90000
END
PO.NO = PO_NUMBER
MATREAD VEND.REC FROM VEND, CONO:PO.VEND.NO ELSE
  MAT VEND.REC = ""
  VEND.DESC = "VENDOR # ":PO.VEND.NO
END
S$SCR = 1
GOSUB 80000
GOSUB 81000
GOSUB 81500
*SET THE DATA HERE

  STATUS = RBO.setProperty('','PODesc',SDATA3)
  STATUS = RBO.setProperty('','Date',SDATA6)
  STATUS = RBO.setProperty('','Prod',SDATA12)
  STATUS = RBO.setProperty('','ProdDescription',SDATA19)
  STATUS = RBO.setProperty('','Basis',SDATA13)
  STATUS = RBO.setProperty('','Width',SDATA14)
  STATUS = RBO.setProperty('','JobDescription',SDATA5)
  STATUS = RBO.setProperty('','JobNumber',SDATA15<1,1>)
  STATUS = RBO.setProperty('','JobNumbers',SDATA15)
  STATUS = RBO.setProperty('','Ordered',SDATA16)
  STATUS = RBO.setProperty('','InTransit',SDATA17)
  STATUS = RBO.setProperty('','Received',SDATA18)
  SWAP AM WITH @SM IN TEMP.MAN.NO 
  STATUS = RBO.setProperty('','ManifestNumber',TEMP.MAN.NO)
  NCNT = DCOUNT(TEMP.MAN.DT,@AM)
  FOR DINDEX = 1 TO NCNT
    VCNT = DCOUNT(TEMP.MAN.DT<DINDEX>,@VM)
	FOR K = 1 TO VCNT
	    TEMP.MAN.DT<DINDEX,K> = OCONV(TEMP.MAN.DT<DINDEX,K>,"D4/")
       NEXT K
  NEXT DINDEX
  SWAP AM WITH @SM IN TEMP.MAN.DT
  STATUS = RBO.setProperty('','MDate',TEMP.MAN.DT)
  SWAP AM WITH @SM IN SDATA34
  STATUS = RBO.setProperty('','MInTransit',SDATA34)
  SWAP AM WITH @SM IN SDATA35
  STATUS = RBO.setProperty('','MReceived',SDATA35)
* End of method code
RETURN

80000 *
JOB.NOS = ""
CUST.NOS = ""
MAT TEMP.REC = ""
PPTR = 0
ICR.CNV = ""
ICR.DV1 = ""
ICR.DV2 = ""
ICR.MT1 = ""
DIFF.UM=''
PC = DCOUNT(PO.PROD.NUM,VM)
FOR PP = 1 TO PC
  PROD.NO = PO.PROD.NUM<1,PP>
  MATREAD INV.REC FROM INVENTORY, CONO:PROD.NO THEN
    PPTR += 1
    GOSUB GET.CONVERSION
    TEMP.PROD.NO<PPTR> = PROD.NO
    TEMP.DESC<PPTR>    = INV.DESC
    TEMP.BASIS<PPTR>   = INV.BAS.WT
    TEMP.WIDTH<PPTR>   = INV.PAP.WIDTH
    TEMP.JOB.NO<PPTR>  = PO.JOB.NO<1,PP>
    JCNT = DCOUNT(PO.JOB.NO<1,PP>,SM)
    FOR JPTR = 1 TO JCNT
      JOB.NO = PO.JOB.NO<1,PP,JPTR>
      IF JOB.NO # "" THEN
        LOCATE JOB.NO IN JOB.NOS<1>,1 SETTING P ELSE
          MATREAD JOB.REC FROM JOB, CONO:JOB.NO THEN
            JOB.NOS<1,-1> = JOB.NO
            IF JOB.CUST # "" THEN
              LOCATE JOB.CUST IN CUST.NOS<1>,1 SETTING P ELSE
                CUST.NOS<1,-1> = JOB.CUST
              END
            END
          END
        END
      END
    NEXT JPTR
    TEMP.QTY.ORD<PPTR> = PO.TOT.ONORD<1,PP>
*    TEMP.QTY.INT<PPTR> = ""
    TEMP.QTY.RCV<PPTR> = ""
  END
NEXT PP
LINE.CNT = DCOUNT(TEMP.PROD.NO,AM)
XCNT = DCOUNT(PO.MAN,VM)
FOR XPTR = 1 TO XCNT
  MAN.NO = PO.MAN<1,XPTR>
  MATREAD DSR.REC FROM DAILY_STOCK, CONO:PO.NO:"!":MAN.NO THEN
    PC = DCOUNT(DSR.PROD,VM)
    FOR PP = 1 TO PC
      IF DSR.SHPMNT.TOT+0 > 0 OR SUM(DSR.QTY<1,PP>)+0 # 0 THEN
        QTY.RCV = SUM(DSR.QTY<1,PP>)           ;* 999999
        QTY.RCV = QTY.RCV / 10
      END
      LOCATE DSR.PROD<1,PP> IN TEMP.PROD.NO,1 SETTING PINDEX THEN
        LOCATE MAN.NO IN TEMP.MAN.NO<PINDEX>,1 BY "AR" SETTING MINDEX ELSE
          INS MAN.NO BEFORE TEMP.MAN.NO<PINDEX,MINDEX>
          INS "" BEFORE TEMP.MAN.DT<PINDEX,MINDEX>
          INS "" BEFORE TEMP.MQTY.INT<PINDEX,MINDEX>
          INS "" BEFORE TEMP.MQTY.RCV<PINDEX,MINDEX>
        END
        TEMP.MQTY.INT<PINDEX,MINDEX> += QTY.RCV
      END
    NEXT PP
  END
NEXT XPTR

MATREAD RSXRF.REC FROM PO.RSKI.XREF, CONO:PO.NO ELSE
  MAT RSXRF.REC = ""
END

NUM.SERIAL = DCOUNT(RSXRF.RS.NO,VM)

FOR PP = 1 TO NUM.SERIAL
  MATREAD ISTK.REC FROM INV_SERIAL, CONO:RSXRF.RS.NO<1,PP> ELSE
    MAT ISTK.REC = ""
  END
  IF ISTK.POST.DATE # "" THEN
    LOCATE ISTK.PROD IN TEMP.PROD.NO,1 SETTING PINDEX THEN
      IF ISTK.MANIFEST.NO = "" THEN 
        ISTK.MANIFEST.NO = "NOT RCVD"
      END
      LOCATE ISTK.MANIFEST.NO IN TEMP.MAN.NO<PINDEX>,1 BY "AR" SETTING MINDEX ELSE
        INS ISTK.MANIFEST.NO BEFORE TEMP.MAN.NO<PINDEX,MINDEX>
        INS ISTK.POST.DATE BEFORE TEMP.MAN.DT<PINDEX,MINDEX>
        INS "" BEFORE TEMP.MQTY.RCV<PINDEX,MINDEX>
        INS "" BEFORE TEMP.MQTY.INT<PINDEX,MINDEX>
      END
      TEMP.MQTY.RCV<PINDEX,MINDEX> += ISTK.QTY.ENTERED
    END
  END
NEXT PP
*

JCNT = DCOUNT(JOB.NOS,VM)
CCNT = DCOUNT(CUST.NOS,VM)
BEGIN CASE
  CASE JCNT = 0
    JOB.NO = ""
    CNAME = ""
  CASE JCNT = 1
    JOB.NO = JOB.NOS
    CUST.NO = CUST.NOS
    MATREAD CUST.REC FROM CUSTOMER, CONO:CUST.NO THEN CNAME=CUST.NAME
  CASE CCNT = 1
    JOB.NO = "MULTIPLE"
    CUST.NO = CUST.NOS
    MATREAD CUST.REC FROM CUSTOMER, CONO:CUST.NO THEN CNAME=CUST.NAME
  CASE 1
    JOB.NO = "MULTIPLE"
* T 26394
    CNAME = ""
END CASE
SDATA<1,S$SCR> = DATE()
SDATA<2,S$SCR> = PO.NO
SDATA3<S$SCR> = VEND.DESC
SDATA<4,S$SCR> = JOB.NO
SDATA5<S$SCR> = CNAME
SDATA6<S$SCR> = OCONV(PO.DATE,"D4/")
RETURN


81000 *
SDATA12<S$SCR> = ""
SDATA13<S$SCR> = ""
SDATA14<S$SCR> = ""
SDATA15<S$SCR> = ""
SDATA16<S$SCR> = ""
SDATA17<S$SCR> = ""
SDATA18<S$SCR> = ""
SDATA19<S$SCR> = ""
SDATA<50,S$SCR> = ""
LINE.CNT = DCOUNT(TEMP.PROD.NO,AM)
FOR REF = 1 TO LINE.CNT
  QTY = ''
  SDATA12<S$SCR,REF> = TEMP.PROD.NO<REF>
  SDATA13<S$SCR,REF> = INT(TEMP.BASIS<REF>/100)
  SDATA14<S$SCR,REF> = TEMP.WIDTH<REF>
  JCNT = DCOUNT(TEMP.JOB.NO<REF>,SM)
  BEGIN CASE
    CASE JCNT = 0
      SDATA15<S$SCR,REF> = ""
    CASE JCNT = 1
      SDATA15<S$SCR,REF> = TEMP.JOB.NO<REF,1>
    CASE 1
      SDATA15<S$SCR,REF> = "MULTIPLE"
  END CASE
*  SDATA16<S$SCR,REF> = OCONV(INT(TEMP.QTY.ORD<REF>/1000),"MD0,")
  QTY=TEMP.QTY.ORD<REF>
  GOSUB CALC.ORD.QTY
  SDATA16<S$SCR,REF>=DISP.QTY
* T 26394
  QTY = TEMP.QTY.ORD<REF> - (SUM(TEMP.MQTY.RCV<REF>) * 10)
  GOSUB CALC.ORD.QTY
  SDATA17<S$SCR,REF> = DISP.QTY
  QTY = SUM(TEMP.MQTY.RCV<REF>)
  QTY = QTY * 10
  GOSUB CALC.ORD.QTY
  SDATA18<S$SCR,REF>=DISP.QTY
  SDATA19<S$SCR,REF> = TEMP.DESC<REF>
*
*  SDATA17<S$SCR,REF> = OCONV(TEMP.QTY.INT<REF>,"MD0Z,")
* IF PO.UNIT.FLG<1,REF>='LBS' OR PO.UNIT.FLG<1,REF>='MSI' THEN
*   SDATA18<S$SCR,REF>=OCONV(TEMP.QTY.RCV<REF>,'MD2,')
* END ELSE
*   SDATA18<S$SCR,REF>=OCONV(TEMP.QTY.RCV<REF>,'MD0,')
* END
NEXT REF
RETURN


CALC.ORD.QTY: 
DISP.QTY=''
* T 26394
IF DIFF.UM<REF> = "Y" THEN
  IF ICR.CNV<REF,2> = "MD0" THEN
    IF QTY # "" THEN
      DISP.QTY = ICONV(((QTY/ICR.DV1<REF,2>)*ICR.MT1<REF,2>)/ICR.DV2<REF,2>, 'MD0')
    END
  END ELSE
    IF QTY # "" THEN
      IF ICR.CNV<REF,1> = "MD0" THEN
        DISP.QTY = OCONV(INT(QTY/10), "MD2")
      END ELSE
        DISP.QTY = OCONV(INT((QTY/10)/ICR.MT1<REF,1>), "MD2")
      END
    END
  END
END ELSE
  IF ICR.CNV<REF,1> = "MD0" THEN
    IF QTY # "" THEN
      DISP.QTY = ICONV(((QTY/ICR.DV1<REF,1>)*ICR.MT1<REF,1>)/ICR.DV2<REF,1>,'MD0')
    END
  END ELSE
    IF QTY # "" THEN
      DISP.QTY = OCONV(INT(QTY/10), "MD2")
    END
  END
END
*   IF ICR.CNV<REF,1> = "MD0" THEN
*     IF QTY # "" THEN
*       DISP.QTY = INT(((QTY/ICR.DV1<REF,1>)*ICR.MT1<REF,1>)/ICR.DV2<REF,1> + .5)
*     END
*   END ELSE
*     IF QTY # "" THEN
*       DISP.QTY = OCONV(INT(QTY/10)/100, "MD0")
*     END
*   END
* END
*
RETURN

GET.CONVERSION:
BEGIN CASE                                                 
  CASE INV.UNIT<1,2> = "SHT" AND INV.UNIT<1,3> = "LBS"       
    ICR.CNV<PPTR,1> = "MD0";             ICR.DV2<PPTR,1> = 1      
    ICR.DV1<PPTR,1> = INV.M.WT;          ICR.MT1<PPTR,1> = 1      
  CASE INV.UNIT<1,2> = "PC" AND INV.UNIT<1,3> = "MSI"        
    ICR.CNV<PPTR,1> = "MD0";             ICR.DV2<PPTR,1> = 1      
    ICR.DV1<PPTR,1> = INV.PAP.WIDTH/100; ICR.MT1<PPTR,1> = 10     
  CASE INV.UNIT<1,2> = "FT" AND INV.UNIT<1,3> = "MSI"        
    ICR.CNV<PPTR,1> = "MD0";             ICR.DV2<PPTR,1> = 12     
    ICR.DV1<PPTR,1> = INV.PAP.WIDTH/100; ICR.MT1<PPTR,1> = 100    
  CASE 1                                                     
    ICR.CNV<PPTR,1> = "MD2";             ICR.DV2<PPTR,1> = 1      
    ICR.DV1<PPTR,1> = 10;                ICR.MT1<PPTR,1> = INV.SBR
END CASE                                                   
*                                                            
BEGIN CASE                                             
  CASE PO.UNIT.FLG<1,PP> = "SHT" AND INV.UNIT<1,3> = "LBS"       
    ICR.CNV<PPTR,2> = "MD0";             ICR.DV2<PPTR,2> = 1  
    ICR.DV1<PPTR,2> = INV.M.WT;          ICR.MT1<PPTR,2> = 1  
  CASE PO.UNIT.FLG<1,PP> = "PC" AND INV.UNIT<1,3> = "MSI"        
    ICR.CNV<PPTR,2> = "MD0";             ICR.DV2<PPTR,2> = 1  
    ICR.DV1<PPTR,2> = INV.PAP.WIDTH/100; ICR.MT1<PPTR,2> = 10 
  CASE PO.UNIT.FLG<1,PP> = "FT" AND INV.UNIT<1,3> = "MSI"        
    ICR.CNV<PPTR,2> = "MD0";             ICR.DV2<PPTR,2> = 12 
    ICR.DV1<PPTR,2> = INV.PAP.WIDTH/100; ICR.MT1<PPTR,2> = 100
  CASE 1                                                 
    ICR.CNV<PPTR,2> = "MD2";             ICR.DV2<PPTR,2> = 1  
    ICR.DV1<PPTR,2> = 10;                ICR.MT1<PPTR,2> = 1  
END CASE                                               
IF PO.UNIT.FLG<1,PP> # INV.UNIT<1,2> THEN DIFF.UM<PPTR> = "Y" ELSE DIFF.UM<PPTR> = "N"
RETURN


81500 *
*SDATA32<S$SCR> = ""
*SDATA33<S$SCR> = ""
*SDATA34<S$SCR> = ""
*SDATA35<S$SCR> = ""
FOR REF.NO = 1 TO LINE.CNT
	LINE.CNT2 = DCOUNT(TEMP.MAN.NO<REF.NO>,VM)
	FOR REF = 1 TO LINE.CNT2
	  SDATA32<REF.NO,REF> = TEMP.MAN.NO<REF.NO,REF>
	  SDATA33<REF.NO,REF> = TEMP.MAN.DT<REF.NO,REF>
	  QTY = TEMP.MQTY.INT<REF.NO,REF>
	  QTY = QTY * 10
	  TEMP.REF = REF
	  REF = REF.NO
	  GOSUB CALC.ORD.QTY
	  REF = TEMP.REF
	  SDATA34<REF.NO,REF> = DISP.QTY
	*  S$DATA(34)<S$SCR,REF> = OCONV(TEMP.MQTY.INT<REF.NO,REF>,"MD0Z,")
	* T 26394
	  QTY = TEMP.MQTY.RCV<REF.NO,REF>
	  QTY = QTY * 10 ;* this is done because manifest is 2 digits inv is 3 digits
	*                ;* can use the same conversion routine to display qty
	  TEMP.REF = REF
	  REF = REF.NO
	  GOSUB CALC.ORD.QTY
	* REF.NO = TEMP.REF
	  REF = TEMP.REF
	  SDATA35<REF.NO,REF>=DISP.QTY
	* IF PO.UNIT.FLG<1,REF.NO>='LBS' OR PO.UNIT.FLG<1,REF.NO>='MSI' THEN  
	*   S$DATA(35)<S$SCR,REF> = OCONV(TEMP.MQTY.RCV<REF.NO,REF>,"MD2")
	* END ELSE
	*   S$DATA(35)<S$SCR,REF> = OCONV(TEMP.MQTY.RCV<REF.NO,REF>,"MD0Z")
	* END
	NEXT REF
NEXT REF.NO
RETURN


90000 *
  STATUS = RBO.setProperty('','ServerStatus',1)
  STATUS = RBO.setProperty('','ServerMessage',ERRMSG)
  RETURN
END
