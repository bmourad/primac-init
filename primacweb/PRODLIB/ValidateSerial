SUBROUTINE ValidateSerial
*********************************************************************
* SYSTEM      - EPRIMAC
* PROGRAM     - ValidateSerial
* BY          - KHAJA ZIAUDDIN
* DATE
* DESCRIPTION - Validate the Serial
* TASK
*
*ENDDOC
*********************************************************************
$INCLUDE WWINSERT RBO.H
$INCLUDE ICS.CPYLIB INV_SERIAL
$INCLUDE ICS.CPYLIB INV.WHSE.LOC
$INCLUDE ICS.CPYLIB INVENTORY
$INCLUDE ICS.CPYLIB INV.CNV

STATUS = RBO.getProperty('','ID', TRANS.ID)
STATUS = RBO.getProperty('','FromWhse', IDM.FROM.WHSE)
STATUS = RBO.getProperty('','ShipMon', IDM.SHIP.MON)
STATUS = RBO.getProperty('','Serial', SERIAL.ID)
STATUS = RBO.getProperty('','Prod', PROD)
STATUS = RBO.getProperty('','PMCProperty',PMCPROPERTY)
CONO = PMCPROPERTY<1,4>

OPEN '','INV_SERIAL' TO INV_SERIAL ELSE ERRMSG = 'INV_SERIAL FILE IS MISSING';   GOTO 93000
OPEN '','INV.WHSE.LOC' TO INV.WHSE.LOC ELSE ERRMSG = 'INV.WHSE.LOC FILE IS MISSING'; GOTO 93000
OPEN '','INTR_SERIAL_XREF' TO INTR_SERIAL_XREF ELSE ERRMSG = 'INTR_SERIAL_XREF FILE IS MISSING'; GOTO 93000
OPEN '','INVENTORY' TO INVENTORY ELSE ERRMSG = 'INVENTORY FILE IS MISSING'; GOTO 93000
OPEN '','CONTROL' TO CONTROL ELSE ERRMSG = 'CONTROL FILE IS MISSING'; GOTO 93000

MATREAD INV.REC FROM INVENTORY, CONO:PROD ELSE MAT INV.REC = ''
$INCLUDE ICSBP INV.UM.CNV

   MATREAD ISTK.REC FROM INV_SERIAL, CONO:SERIAL.ID THEN
      IF ISTK.POST.DATE = "" THEN
         ERRMSG = 'SERIAL NUMBER (':SERIAL.ID:') HAS NOT BEEN RECIEVED INTO INVENTORY'
         GOSUB 91000 ; VALID.ROLL = 0 ; RETURN
      END
   END ELSE
      ERRMSG = 'SERIAL NUMBER (':SERIAL.ID:') DOES NOT EXIST'
      GOSUB 91000 ; VALID.ROLL = 0 ; RETURN
   END
   IF ISTK.PROD # PROD THEN
      ERRMSG = 'SERIAL NUMBER (':SERIAL.ID:') IS NOT TIED TO PRODUCT ':PROD
      GOSUB 91000 ; VALID.ROLL = 0 ; RETURN
   END
   IF ISTK.WHSE # IDM.FROM.WHSE THEN
      ERRMSG = 'SERIAL NUMBER (':SERIAL.ID:') BELONGS TO ANOTHER WAREHOUSE'
      GOSUB 91000 ; VALID.ROLL = 0 ; RETURN
   END
   IF ISTK.RSVB.QTY LE 1 THEN
      ERRMSG = 'SERIAL NUMBER (':SERIAL.ID:') HAS NO QUANTITY AVAILABLE TO TRANSFER'
      GOSUB 91000 ; VALID.ROLL = 0 ; RETURN
   END
   IF ISTK.RSVB.QTY # ISTK.CUR.QTY THEN
      ERRMSG = 'SERIAL (':SERIAL.ID:') HAS QUANTITY RESERVED AND CAN NOT BE TRANSFERRED'
      GOSUB 91000 ; VALID.ROLL = 0 ; RETURN
   END
   IF ISTK.RECP.PERIOD GT IDM.SHIP.MON THEN
      ERRMSG = 'SERIAL (':SERIAL.ID:') WAS RECEIVED IN PERIOD ':ISTK.RECP.PERIOD:' CAN NOT BE TRANSFERRED'
      GOSUB 91000 ; VALID.ROLL = 0 ; RETURN
   END
   IWLO.ID = CONO:PROD:'!':ISTK.WHSE:'!':ISTK.LOC
   MATREAD IWLO.REC FROM INV.WHSE.LOC, IWLO.ID THEN
      LOCATE SERIAL.ID IN IWLO.SERIAL<1>,1 SETTING ROS ELSE
         ERRMSG = 'SERIAL (':SERIAL.ID:') DOES NOT EXIST FOR WHSE #':ISTK.WHSE:' AND LOCATION #':ISTK.LOC
         GOSUB 91000 ; VALID.ROLL = 0 ; RETURN
      END
   END ELSE
      ERRMSG = 'SERIAL (':SERIAL.ID:' DOES NOT EXIST FOR WHSE #':ISTK.WHSE:' AND LOCATION #':ISTK.LOC
      GOSUB 91000 ; VALID.ROLL = 0 ; RETURN
   END
   READ TEST.REC FROM INTR_SERIAL_XREF, CONO:SERIAL.ID THEN
      BEGIN CASE
         CASE TRANS.ID = TEST.REC<1>
         CASE TEST.REC<1> = ''
         CASE 1
            ERRMSG = 'SERIAL NUMBER (':SERIAL.ID:') IS BEING USED FOR TRANSIT #':TEST.REC<1>
            GOSUB 91000 ; VALID.ROLL = 0  ; RETURN
      END CASE
   END

  *
STATUS = RBO.setProperty('','Loc',ISTK.LOC)
STATUS = RBO.setProperty('','SerialMill',ISTK.MILL.ID)
STATUS = RBO.setProperty('','SerialQty', OCONV(INT(((ISTK.CUR.QTY/ICR.DV1)*ICR.MT1)/ICR.DV2+.5), ICR.CNV))

RETURN


91000

93000
STATUS = RBO.setProperty('','ServerStatus',1)
STATUS = RBO.setProperty('','ServerMessage',ERRMSG)
RETURN
