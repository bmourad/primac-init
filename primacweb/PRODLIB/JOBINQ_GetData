SUBROUTINE JOBINQ_GetData
********************************************************************************
*   Program name :- JOBINQ_GetData
*   Created:- 12/06/2002
*   Author:- L. Ross
*   Used to get the Job Status Description and sum EST COST & CONF AMT for Master-Subs.
*------------------------------------------------------------------------------*
*

* In Properties:
* --------------
*  
*
* Out Properties:
* ---------------
*  
********************************************************************************
$INCLUDE WWINSERT RBO.H
$INCLUDE JCS.CPYLIB JOB
$INCLUDE CPYLIB CHAR
ERRMSG=''
IF FILEINFO(JOB,0)=0 THEN
  OPEN '','JOB' TO JOB ELSE
    ERRMSG<1,-1>='JOB FILE IS MISSING'
  END
END
IF ERRMSG#'' THEN GOTO 93000
*
*
STATUS=RBO.getProperty('','ID',ID)
STATUS=RBO.getProperty('','STAT',STAT)

CONO=ID[1,3]
JOB_NO=ID[4,8]
STATUS=RBO.getProperty('','MAST_SUB_FLAG',MAST.SUB.FLAG)
JBSTATUS=''
MATREAD JOB.REC FROM JOB,ID ELSE
  ERRMSG='Cannot read JOB record ':ID
  GOTO 93000
END
IF JOB.SUBS="" THEN
  MAST.SUB.FLAG=0
END ELSE
  MAST.SUB.FLAG=1
END
VAL = RBO.setProperty('','MAST_SUB_FLAG',MAST.SUB.FLAG)
STAT_DESC = ""
CNT = DCOUNT(STAT,@VM)
IF STAT = "" THEN
	STAT_DESC = "BOOKED"
END
FOR L = 1 TO CNT
	CALL JOB.STATUS.SUB(STAT<1,L>,JOB.TRACK.DATE,JBSTATUS)
       STAT_DESC<1,L> = JBSTATUS
NEXT I

IF MAST.SUB.FLAG THEN
	EST.COST=JOB.EST.COST
  	CONF.AMT=JOB.CONF.AMT
  	SCNT=DCOUNT(JOB.SUBS,VM)
  	FOR S = 1 TO SCNT
    		MATREAD JOB.REC FROM JOB, CONO:JOB.SUBS<1,S> ELSE MAT JOB.REC = ''
    		EST.COST += JOB.EST.COST
    		CONF.AMT += JOB.CONF.AMT
  	NEXT S
  	MATREAD JOB.REC FROM JOB, ID ELSE NULL
  	JOB.EST.COST = OCONV(EST.COST,'MD2,')
  	JOB.CONF.AMT = OCONV(CONF.AMT,'MD2,')
  	STATUS=RBO.setProperty('','JOB_EST_COST',JOB.EST.COST)
  	STATUS=RBO.setProperty('','JOB_CONF_AMT',JOB.CONF.AMT)
END

STATUS=RBO.setProperty('','STAT_DESC',STAT_DESC)

VAL = RBO.getProperty('','JOB_WIP',JOB_WIP)
VAL = RBO.getProperty('','JOB_LB_WIP',JOB_LB_WIP)
VAL = RBO.getProperty('','JOB_MT_WIP',JOB_MT_WIP)
VAL = RBO.getProperty('','JOB_OS_WIP',JOB_OS_WIP)
VAL = RBO.getProperty('','JOB_SP_WIP',JOB_SP_WIP)
VAL = RBO.getProperty('','JOB_MS_WIP',JOB_MS_WIP)


CNT = DCOUNT(JOB_WIP<1,2>,@SVM)
FOR I = 1 TO CNT
	JOB_WIP<1,2,I> = OCONV(JOB_WIP<1,2,I>,"MD2,")
NEXT I

CNT = DCOUNT(JOB_WIP<1,3>,@SVM)
FOR I = 1 TO CNT
	JOB_WIP<1,3,I> = OCONV(JOB_WIP<1,3,I>,"MD2,")
NEXT I

CNT = DCOUNT(JOB_LB_WIP<1,2>,@SVM)
FOR I = 1 TO CNT
	JOB_LB_WIP<1,2,I> = OCONV(JOB_LB_WIP<1,2,I>,"MD2,")
NEXT I

CNT = DCOUNT(JOB_LB_WIP<1,3>,@SVM)
FOR I = 1 TO CNT
	JOB_LB_WIP<1,3,I> = OCONV(JOB_LB_WIP<1,3,I>,"MD2,")
NEXT I

CNT = DCOUNT(JOB_MT_WIP<1,2>,@SVM)
FOR I = 1 TO CNT
	JOB_MT_WIP<1,2,I> = OCONV(JOB_MT_WIP<1,2,I>,"MD2,")
NEXT I

CNT = DCOUNT(JOB_MT_WIP<1,3>,@SVM)
FOR I = 1 TO CNT
	JOB_MT_WIP<1,3,I> = OCONV(JOB_MT_WIP<1,3,I>,"MD2,")
NEXT I

CNT = DCOUNT(JOB_OS_WIP<1,2>,@SVM)
FOR I = 1 TO CNT
	JOB_OS_WIP<1,2,I> = OCONV(JOB_OS_WIP<1,2,I>,"MD2,")
NEXT I

CNT = DCOUNT(JOB_OS_WIP<1,3>,@SVM)
FOR I = 1 TO CNT
	JOB_OS_WIP<1,3,I> = OCONV(JOB_OS_WIP<1,3,I>,"MD2,")
NEXT I

CNT = DCOUNT(JOB_SP_WIP<1,2>,@SVM)
FOR I = 1 TO CNT
	JOB_SP_WIP<1,2,I> = OCONV(JOB_SP_WIP<1,2,I>,"MD2,")
NEXT I

CNT = DCOUNT(JOB_SP_WIP<1,3>,@SVM)
FOR I = 1 TO CNT
	JOB_SP_WIP<1,3,I> = OCONV(JOB_SP_WIP<1,3,I>,"MD2,")
NEXT I

CNT = DCOUNT(JOB_MS_WIP<1,2>,@SVM)
FOR I = 1 TO CNT
	JOB_MS_WIP<1,2,I> = OCONV(JOB_MS_WIP<1,2,I>,"MD2,")
NEXT I

CNT = DCOUNT(JOB_MS_WIP<1,3>,@SVM)
FOR I = 1 TO CNT
	JOB_MS_WIP<1,3,I> = OCONV(JOB_MS_WIP<1,3,I>,"MD2,")
NEXT I
VAL = RBO.setProperty('','JOB_WIP',JOB_WIP)
VAL = RBO.setProperty('','JOB_LB_WIP',JOB_LB_WIP)
VAL = RBO.setProperty('','JOB_MT_WIP',JOB_MT_WIP)
VAL = RBO.setProperty('','JOB_OS_WIP',JOB_OS_WIP)
VAL = RBO.setProperty('','JOB_SP_WIP',JOB_SP_WIP)
VAL = RBO.setProperty('','JOB_MS_WIP',JOB_MS_WIP)

*
*
RETURN

93000
STATUS = RBO.setProperty('','ServerStatus',1)        
STATUS = RBO.setProperty('','ServerMessage',ERRMSG) 

RETURN
