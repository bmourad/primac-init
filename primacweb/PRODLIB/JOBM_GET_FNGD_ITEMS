SUBROUTINE JOBM_GET_FNGD_ITEMS
********************************************************************************
*   Program name :- JOBM_GET_FNGD_ITEMS
*   Created:- 12/15/2003
*------------------------------------------------------------------------------*
*

* In Properties:
* --------------
*  
*
* Out Properties:
* ---------------
*  
********************************************************************************
$INCLUDE WWINSERT RBO.H
$INCLUDE OPS.CPYLIB JOB.FNGD.STATS
$INCLUDE ICS.CPYLIB INVENTORY
$INCLUDE ICS.CPYLIB INV.CNV
$INCLUDE JCS.CPYLIB JOB
$INCLUDE ICS.CPYLIB FNGD.STATS

* Insert method code here
ERRMSG = ""
OPEN "","JOB.FNGD.STATS" TO JOB.FNGD.STATS ELSE
	ERRMSG = "UNABLE TO OPEN FILE!"
	GOTO 99999
END
OPEN '','INVENTORY' TO INVENTORY ELSE
	ERRMSG = 'INVENTORY FILE IS MISSING'
	GOTO 99999
END
OPEN "","JOB" TO JOB ELSE
	ERRMSG = "CANNOT OPEN JOB FILE"
       GOTO 99999
END

OPEN "","FNGD.STATS" TO FNGD.STATS ELSE
       ERRMSG = "FNGD.STATS"
	GOTO 99999
END

VAL = RBO.getProperty('','ID',ID)
CONO = ID[1,3]

JOB_NO = ID[4,99]
MATREAD JFS.REC FROM JOB.FNGD.STATS, ID ELSE MAT JFS.REC = ""
MATREAD JOB.REC FROM JOB,ID ELSE MAT JOB.REC = ""

*************************BEGIN OF FNGD***********************************
PCNT=DCOUNT(JFS.PROD,@VM) ;* LIST OF FININSHED GOODS PRODUCTS
PRODDESCS=''; UMS=''
BALANCE=''
F.QTY = JFS.F.QTY 
S.QTY = JFS.S.QTY 
FGS_B_QTY = ""
FGS_ORDER = ""
MAX_ALOC_QTY = ""
FOR P = 1 TO PCNT
	MATREAD INV.REC FROM INVENTORY,CONO:JFS.PROD<1,P> ELSE
    		INV.FULL.DESC = 'Unknown'
  	END
	PRODDESCS<1,P> = INV.FULL.DESC		
	$INCLUDE ICSBP INV.UM.CNV
	IWH.ID = CONO : JFS.PROD<1,P> : '!' : JFS.WHSE<1,P>
	MATREAD FGS.REC FROM FNGD.STATS, IWH.ID ELSE
		MAT FGS.REC = ""
	END
	FGS_B_QTY<1,P> = SUM(FGS.B.QTY)
	FGS_ORDER<1,P> = LOWER(FGS.ORDER)
  	ROND=''; LN=''
  	UMS<1,P> = INV.UNIT<1,2>
	JFS.U.PRICE<1,P> = OCONV(JFS.U.PRICE<1,P>,"MD4")
	JFS.DATE<1,P> = OCONV(JFS.DATE<1,P>,"D2/")
  	*IF BALANCE<1,P> < 0 THEN BALANCE<1,P> = 0
  	*BALANCE<1,P> = CalcStkQty(BALANCE<1,P>,MAT INV.CNV.REC,ROND,P)
  	*IF JFS.ORDER<1,P,2> # '' THEN
    	*	JFS.ORDER<1,P> = 'MULTI'
  	*END
JFS.ORDER<1,P>=JFS.ORDER<1,P>
	JFS.M.QTY<1,P> = OCONV(INT(((JFS.M.QTY<1,P>/ICR.DV1)*ICR.MT1)/ICR.DV2+.5),ICR.CNV)
	JFS.A.QTY<1,P> = OCONV(INT(((JFS.A.QTY<1,P>/ICR.DV1)*ICR.MT1)/ICR.DV2+.5),ICR.CNV)
	JFS.F.QTY<1,P> = OCONV(INT(((JFS.F.QTY<1,P>/ICR.DV1)*ICR.MT1)/ICR.DV2+.5),ICR.CNV)
	JFS.S.QTY<1,P> = OCONV(INT(((JFS.S.QTY<1,P>/ICR.DV1)*ICR.MT1)/ICR.DV2+.5),ICR.CNV)

	*JFS.ORD.QTY<1,P> = OCONV(INT(((JFS.ORD.QTY<1,P>/ICR.DV1)*ICR.MT1)/ICR.DV2+.5),ICR.CNV)
        JFS.OED.QTY<1,P>=JFS.ORD.QTY<1,P>
        J=DCOUNT(JFS.OED.QTY<1,P>,@SVM)
        FOR M=1 TO J
            JFS.ORD.QTY<1,P,M> = OCONV(INT(((JFS.ORD.QTY<1,P,M>/ICR.DV1)*ICR.MT1)/ICR.DV2+.5),ICR.CNV)

        NEXT M
      *  JFS.ORD.QTY<1,P> = OCONV(INT(((JFS.ORD.QTY<1,P>/ICR.DV1)*ICR.MT1)/ICR.DV2+.5),ICR.CNV)

	TOT.ALOC = SUM(FGS.B.QTY) + JFS.A.QTY<1,P>
	AVL.ALOC = JFS.M.QTY<1,P> - JFS.F.QTY<1,P> - JFS.S.QTY<1,P>
	
	IF AVL.ALOC < 0 THEN AVL.ALOC = 0
	IF TOT.ALOC < AVL.ALOC THEN AVL.ALOC = TOT.ALOC
	MAX_ALOC_QTY<1,P> = AVL.ALOC

	IF JOB.STATUS<1,1> = 4 OR JOB.STATUS<1,1> > 5 THEN
    		BALANCE<1,P> = 0
  	END ELSE
    		BALANCE<1,P> = JFS.M.QTY<1,P> - JFS.F.QTY<1,P> - JFS.S.QTY<1,P>
  	END
	IF BALANCE<1,P> < 0  THEN BALANCE<1,P> = 0
NEXT P

IF JFS.PROD # "" THEN
	JOB.QTY<1,2> = SUM(F.QTY)/1000
	JOB.QTY<1,3> = SUM(S.QTY)/1000
	STATUS=RBO.setDBVals('JOB_FIN_QTY',JOB.QTY<1,2>)
	STATUS=RBO.setDBVals('JOB_SHP_QTY',JOB.QTY<1,3>)
END

STATUS=RBO.setProperty('','RET_PROD_LIST',JFS.PROD)
STATUS=RBO.setProperty('','JOB_RET_DETAILS',PRODDESCS)
STATUS=RBO.setProperty('','RET_WHSE_LIST',JFS.WHSE)
STATUS=RBO.setProperty('','JFS_UMS',UMS)
STATUS=RBO.setProperty('','JFS_U_PRICE',JFS.U.PRICE)
STATUS=RBO.setProperty('','JFS_M_QTY',JFS.M.QTY)
STATUS=RBO.setProperty('','JFS_DATE',JFS.DATE)

STATUS=RBO.setProperty('','JFS_A_QTY',JFS.A.QTY)
STATUS=RBO.setProperty('','JFS_O_QTY',JFS.ORD.QTY)
STATUS=RBO.setProperty('','JFS_ORDER',JFS.ORDER)
STATUS=RBO.setProperty('','JFS_F_QTY',JFS.F.QTY)
STATUS=RBO.setProperty('','JFS_S_QTY',JFS.S.QTY)
STATUS=RBO.setProperty('','JFS_BAL',BALANCE)
STATUS = RBO.setProperty('','FGS_B_QTY',FGS_B_QTY)
STATUS = RBO.setProperty('','FGS_ORDER',FGS_ORDER)
STATUS = RBO.setProperty('','CREDIT_AUTH',MAX_ALOC_QTY)

**************************END OF FNGD************************************

*FGS.B.QTY
99999
IF ERRMSG <> "" THEN
	STATUS = RBO.setProperty('','ServerStatus','1')
	STATUS = RBO.setProperty('','ServerMessage',ERRMSG)
END
* End of method code
RETURN


