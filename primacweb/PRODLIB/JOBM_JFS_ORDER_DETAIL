SUBROUTINE JOBM_JFS_ORDER_DETAIL
********************************************************************************
*   Program name :- JOBM_JFS_ORDER_DETAIL
*   Created:- 4/2/2004
*------------------------------------------------------------------------------*
*

* In Properties:
* --------------
*  
*
* Out Properties:
* ---------------
*  
********************************************************************************
$INCLUDE WWINSERT RBO.H
$INCLUDE CPYLIB CHAR
$INCLUDE OPS.CPYLIB ORDER
$INCLUDE OPS.CPYLIB ORDER.DETAIL
$INCLUDE ICS.CPYLIB FNGD.ORDER.STATS
$INCLUDE ICS.CPYLIB INVENTORY
$INCLUDE PMC.CPYLIB CUSTOMER
$INCLUDE ICS.CPYLIB INV.CNV

ERRMSG = ""
* Insert method code here
OPEN '','ORDER' TO ORDER ELSE
	ERRMSG = "ORDER FILE MISSING"
	GOTO 99999
END
OPEN '','ORDER.DETAIL' TO ORDER.DETAIL ELSE
	ERRMSG = "ORDER.DETAIL FILE MISSING"
	GOTO 99999
END
OPEN '','FNGD.ORDER.STATS' TO FNGD.ORDER.STATS ELSE
	ERRMSG = "FNGD.ORDER.STATS FILE MISSING"
	GOTO 99999
END
OPEN '','INVENTORY' TO INVENTORY ELSE
	ERRMSG = "INVENTORY FILE MISSING"
	GOTO 99999
END
OPEN '','CUSTOMER' TO CUSTOMER ELSE
	ERRMSG = "CUSTOMER FILE MISSING"
	GOTO 99999
END

VAL = RBO.getProperty('','ID',ID) ;* CONO:JOB.NO
VAL = RBO.getProperty('','JOB_RESV_MATL',PDNO)
VAL = RBO.getProperty('','JOB_RESV_WHSE',WHNO)
VAL = RBO.getProperty('','JFS_ORDER',JFS.ORDER)
VAL = RBO.getProperty('','FGS_ORDER',FGS.ORDER)
VAL = RBO.getProperty('','JFS_O_QTY',JFS.ORD.QTY)
VAL = RBO.getProperty('','JFS_A_QTY',JFS.A.QTY)

VAL = RBO.getProperty('','JFS_M_QTY',JFS.M.QTY)
VAL = RBO.getProperty('','JFS_F_QTY',JFS.F.QTY)
VAL = RBO.getProperty('','JFS_S_QTY',JFS.S.QTY)

VAL = RBO.getProperty('','CO_POS',LN) ;* LINE NO.

CONO = ID[1,3]
JOBNO = ID[4,99]


MATREAD INV.REC FROM INVENTORY,CONO:PDNO ELSE
	ERRMSG = "INVENTORY ITEM MISSING"
	GOTO 99999
END
*STATUS=RBO.setProperty('','tempval',JFS.ORD.QTY)
$INCLUDE ICSBP INV.UM.CNV

CNT = DCOUNT(JFS.M.QTY,VM)

FOR M = 1 TO CNT
	JFS.M.QTY<1,M> = ICONV((((JFS.M.QTY<1,M>/ICR.MT1)*ICR.DV1)*ICR.DV2),ICR.CNV)
	JFS.F.QTY<1,M> = ICONV((((JFS.F.QTY<1,M>/ICR.MT1)*ICR.DV1)*ICR.DV2),ICR.CNV)
	JFS.S.QTY<1,M> = ICONV((((JFS.S.QTY<1,M>/ICR.MT1)*ICR.DV1)*ICR.DV2),ICR.CNV)
	JFS.A.QTY<1,M> = ICONV((((JFS.A.QTY<1,M>/ICR.MT1)*ICR.DV1)*ICR.DV2),ICR.CNV)
	CNT1 = DCOUNT(JFS.ORD.QTY<1,M>,SM)
	FOR I = 1 TO CNT1
		JFS.ORD.QTY<1,M,I> = ICONV((((JFS.ORD.QTY<1,M,I>/ICR.MT1)*ICR.DV1)*ICR.DV2),ICR.CNV)
	NEXT I
NEXT M

* OSD... ORDER.DETAIL

AQTY = ""; RCNT = DCOUNT(JFS.ORDER,SVM)

AVL.ALOC = JFS.M.QTY<1,LN> - JFS.F.QTY<1,LN> - JFS.S.QTY<1,LN>
*AVL.ALOC = JFS.A.QTY<1,LN>

ALOC.MAX = AVL.ALOC
*STATUS=RBO.setProperty('','tempval',"AQTY:":RCNT)
JFS.ORDER<1,LN>=JFS.ORDER
FOR R = 1 TO RCNT
	LOCATE JFS.ORDER<1,LN,R> IN FGS.ORDER<1>,1 SETTING OPTR THEN

		AQTY<1,OPTR> = JFS.ORD.QTY<1,LN,R>
	END
	*JFS.ORD.QTY<1,LN,R> = 0
NEXT R

ALOC.QTY = AQTY
ATYPE = "M"; ATOT = JFS.A.QTY<1,LN>
ALOC.TOT = JFS.A.QTY<1,LN>

**CALL JOB.ORDER.SEL(CONO,JOBNO,PDNO,WHNO,ATYPE,AVL.ALOC,ATOT,AQTY)
LN = 0; IWH.ID = CONO:PDNO:"!":WHNO
LINES = DCOUNT(FGS.ORDER,VM)
S.B.QTY = ""; S.A.QTY = ""; S.V.QTY = ""
S.CUST = ""; S.DATE = ""
CUST.NAMES = ""

OSD.PROD.SEQ='' ; *T24291
FOR I = 1 TO LINES
	MATREAD ORD.REC FROM ORDER,CONO:FGS.ORDER<1,I> ELSE
       	MAT ORD.REC = ""
	END
	ST.CNT = DCOUNT(ORD.SHIP.TO,VM)
	TOT.B.QTY = 0
	TOT.A.QTY = 0
	TOT.R.QTY = 0
	TOT.V.QTY = 0
	TOT.R.QTY = 0; TOT.S.QTY = 0 ; TOT.O.QTY = 0
	FOR S = 2 TO ST.CNT
       	MATREAD ORD.DET.REC FROM ORDER.DETAIL,CONO:FGS.ORDER<1,I>:"!":ORD.SHIP.TO<1,S> ELSE
              	MAT ORD.DET.REC = ""
            	END
            	IF OSD.PROD.SEQ = "" THEN
			MATREAD FOS.REC FROM FNGD.ORDER.STATS, IWH.ID:"!":FGS.ORDER<1,I> ELSE
				MAT FOS.REC = ""
            			MATREAD ORD.REC FROM ORDER, CONO:FGS.ORDER<1,I> THEN
               			FOS.CUST = ORD.CUST
               			FOS.DATE = ORD.DATE
            			END
         		END
         		S.CUST<I> = FOS.CUST
         		S.DATE<I> = OCONV(FOS.DATE,'D2/')
         		LOCATE JOBNO IN FOS.JOB<1>,1 SETTING JLOC THEN
            			IF FOS.JOB.QTY<1,JLOC> > ALOC.QTY<1,I> THEN
               			S.V.QTY<I> = FOS.A.QTY - FOS.JOB.QTY<1,JLOC>
            			END ELSE
               			S.V.QTY<I> = FOS.A.QTY - ALOC.QTY<1,I>
            			END
         		END ELSE
            			S.V.QTY<I> = FOS.A.QTY - ALOC.QTY<1,I>
            			S.A.QTY<I> = FOS.A.QTY
         		END
			IF S.V.QTY<I> < 0 THEN S.V.QTY<I> = 0
         		S.V.QTY<I> = FOS.O.QTY - FOS.R.QTY - FOS.S.QTY - S.V.QTY<I>
         		S.B.QTY<I> = FOS.O.QTY - FOS.R.QTY - FOS.S.QTY
         		IF LN = 0 THEN
            			IF S.B.QTY<I> > 0 THEN
               			LN = I
            			END
         		END
            	END ELSE
              	PTR = 1
               	LOOP
                  		LOCATE PDNO IN OSD.PROD<1>,PTR SETTING INDX THEN
                     		IF WHNO = OSD.WHSE<1,INDX> THEN
                        			FOS.ID = CONO:PDNO:"!":WHNO:"!":FGS.ORDER<1,I>:"!":OSD.PROD.SEQ<1,INDX>:"!":OSD.KIT<1,INDX>
                        			MATREAD FOS.REC FROM FNGD.ORDER.STATS, FOS.ID ELSE
                           				MAT FOS.REC = ""
                           				MATREAD ORD.REC FROM ORDER, CONO:FGS.ORDER<1,I> THEN
                              				FOS.CUST = ORD.CUST
                              				FOS.DATE = ORD.DATE
                           				END
                        			END
                        			S.CUST<I> = FOS.CUST
                        			S.DATE<I> = OCONV(FOS.DATE,'D2/')
                        			TOT.O.QTY = TOT.O.QTY + FOS.O.QTY
                        			TOT.S.QTY = TOT.S.QTY + FOS.S.QTY
                        			TOT.R.QTY = TOT.R.QTY + FOS.R.QTY
                        			LOCATE JOBNO IN FOS.JOB<1>,1 SETTING JLOC THEN
                          				IF FOS.JOB.QTY<1,JLOC> > ALOC.QTY<1,I> THEN
                              				TOT.V.QTY = TOT.V.QTY + (FOS.A.QTY - FOS.JOB.QTY<1,JLOC>)
                          				END ELSE
                              				TOT.V.QTY = TOT.V.QTY + (FOS.A.QTY - ALOC.QTY<1,I>)
                           				END
                        			END ELSE
                           				TOT.V.QTY = TOT.V.QTY + (FOS.A.QTY - ALOC.QTY<1,I>)
                           				TOT.A.QTY = TOT.A.QTY + FOS.A.QTY
                        			END
                        			PTR = 0
                     		END
                  		END ELSE
                     		PTR = 0
                  		END
               	WHILE PTR DO
                  		PTR = INDX + 1
               	REPEAT
*               	S.V.QTY<I> = TOT.V.QTY
*               	S.B.QTY<I> = TOT.B.QTY
*               	S.A.QTY<I> = TOT.A.QTY
            	END
      	NEXT S
      	IF OSD.PROD.SEQ # "" THEN
       	IF TOT.V.QTY < 0 THEN TOT.V.QTY = 0
           	S.V.QTY<I> = TOT.O.QTY - TOT.R.QTY - TOT.S.QTY - TOT.V.QTY
            	S.B.QTY<I> = TOT.O.QTY - TOT.R.QTY - TOT.S.QTY
            	S.A.QTY<I> = TOT.A.QTY
	END
	MATREAD CUST.REC FROM CUSTOMER,CONO:S.CUST<I> ELSE
		CUST.NAME = ""
	END
	CUST.NAMES<I> = CUST.NAME
NEXT I

IF LN = 0 THEN LN = 1	

BALANCE = OCONV(INT(((ALOC.MAX - SUM(ALOC.QTY)/ICR.DV1) * ICR.MT1) / ICR.DV2 +.5),ICR.CNV1)
BACK.ORD.SUM = OCONV(INT(((SUM(S.B.QTY)/ICR.DV1) * ICR.MT1) / ICR.DV2 +.5),ICR.CNV1)
ALOCD.SUM = OCONV(INT(((SUM(S.A.QTY)/ICR.DV1) * ICR.MT1) / ICR.DV2 +.5),ICR.CNV1)
REQ.SUM = OCONV(INT(((SUM(S.V.QTY)/ICR.DV1) * ICR.MT1) / ICR.DV2 +.5),ICR.CNV1)
ALOC.SUM = OCONV(INT(((SUM(ALOC.QTY)/ICR.DV1) * ICR.MT1) / ICR.DV2 +.5),ICR.CNV1)

CNT = DCOUNT(S.B.QTY,AM)
FOR N = 1 TO CNT
	S.B.QTY<N> = OCONV(INT(((S.B.QTY<N>/ICR.DV1) * ICR.MT1) / ICR.DV2 +.5),ICR.CNV1)
	S.A.QTY<N> = OCONV(INT(((S.A.QTY<N>/ICR.DV1) * ICR.MT1) / ICR.DV2 +.5),ICR.CNV1)
	S.V.QTY<N> = OCONV(INT(((S.V.QTY<N>/ICR.DV1) * ICR.MT1) / ICR.DV2 +.5),ICR.CNV1)
	ALOC.QTY<1,N> = OCONV(INT(((ALOC.QTY<1,N>/ICR.DV1) * ICR.MT1) / ICR.DV2 +.5),ICR.CNV)
NEXT N

ALOC.MAX = OCONV(INT(((ALOC.MAX/ICR.DV1) * ICR.MT1) / ICR.DV2 +.5),ICR.CNV1)

VAL = RBO.setProperty('','FGS_ORDER',FGS.ORDER)
VAL = RBO.setProperty('','RESV_ALOC_QTY',LOWER(S.CUST))
VAL = RBO.setProperty('','CustomerDescs',LOWER(CUST.NAMES))
VAL = RBO.setProperty('','RESV_DATE',LOWER(S.DATE))
VAL = RBO.setProperty('','RESV_MATL_DESC',LOWER(S.B.QTY))
VAL = RBO.setProperty('','RESV_MATL_TYPE',LOWER(S.A.QTY))
VAL = RBO.setProperty('','RESV_MATL_UM',LOWER(S.V.QTY))
VAL = RBO.setProperty('','RESV_QTY',ALOC.QTY) ;* THE AMOUNT TO ALLOCATE

VAL = RBO.setProperty('','RESV_USED_QTY',BALANCE)
VAL = RBO.setProperty('','RET_DEF_WHSE',BACK.ORD.SUM)
VAL = RBO.setProperty('','RET_PROD_LIST',ALOCD.SUM)
VAL = RBO.setProperty('','RET_WHSE_LIST',REQ.SUM)
VAL = RBO.setProperty('','RSV_BALANCE',ALOC.SUM)
VAL = RBO.setProperty('','CO_JIS',ALOC.MAX)

* End of method code

99999*
IF ERRMSG <> "" THEN
	VAL = RBO.setProperty('','ServerStatus','1')
	VAL = RBO.setProperty('','ServerMessage',ERRMSG)
END ELSE
	VAL = RBO.setProperty('','ServerStatus','')
	VAL = RBO.setProperty('','ServerMessage','')
END
RETURN

