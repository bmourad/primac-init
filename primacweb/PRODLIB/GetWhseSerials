  SUBROUTINE GetWhseSerials(ERRMSG,IN_PARAM,OUT_PARAM,MAT FILE.VARS)
*********************************************************************
*
* REVISION - [12.0]
*
* PROGRAM  - GetWhseSerials
*
* AUTHOR   - ALEJANDRO DELGAD
*
* DATE     - 09/25/2002
*
* DESCRIPTION
*
* This program set all the inventory qty conversion variable per setup.
*
*********************************************************************
*
*---- FILE COPY STATEMENTS
*
  $INCLUDE WWINSERT RBO.H
  $INCLUDE ICS.CPYLIB INVENTORY
  $INCLUDE ICS.CPYLIB INV.WHSE.LOC
  $INCLUDE ICS.CPYLIB INV.WHSE
  $INCLUDE ICS.CPYLIB INV_SERIAL
  $INCLUDE ICS.CPYLIB INV_RECEIPTS
  $INCLUDE CPYLIB FILE.VARS
  $INCLUDE CPYLIB CHAR
*
  CONO = IN_PARAM<1>
  PROD.NUM = IN_PARAM<2>
  WHSE = IN_PARAM<3>
  OUT_PARAM = ''
*
  TMP.SERIAL= ""
  IWH.ID = CONO:PROD.NUM:"!":WHSE
  MATREAD IWH.REC FROM INV.WHSE,IWH.ID ELSE MAT IWH.REC=''
  NBR.LOC = DCOUNT(IWH.LOC<1>,VM)
  FOR WL = 1 TO NBR.LOC
    IWLO.ID = IWH.ID:'!':IWH.LOC<1,WL>
    MATREAD IWLO.REC FROM INV.WHSE.LOC,IWLO.ID THEN
      S.CNT = DCOUNT(IWLO.SERIAL<1>,VM)
      FOR S = 1 TO S.CNT
        S.ID = CONO:IWLO.SERIAL<1,S>
        MATREAD ISTK.REC FROM INV_SERIAL,S.ID THEN
          MATREAD INVR.REC FROM INV_RECEIPTS, CONO:ISTK.RECP ELSE
            MAT INVR.REC = ""                                      
          END                                                       
          IF ISTK.POST.DATE # "" THEN
            LOCATE ISTK.LOC IN TMP.SERIAL<1>,1 SETTING LX THEN
              LOCATE ISTK.CUR.QTY IN TMP.SERIAL<3,LX>,1 BY "AR" SETTING CX THEN
                TMP.SERIAL = INSERT(TMP.SERIAL,2,LX,CX,S.ID[4,999])
                TMP.SERIAL = INSERT(TMP.SERIAL,3,LX,CX,ISTK.CUR.QTY)
                TMP.SERIAL = INSERT(TMP.SERIAL,4,LX,CX,ISTK.ORG.QTY)
                TMP.SERIAL = INSERT(TMP.SERIAL,5,LX,CX,ISTK.CUR.DIAM)
                TMP.SERIAL = INSERT(TMP.SERIAL,6,LX,CX,ISTK.ORG.DIAM)
                TMP.SERIAL = INSERT(TMP.SERIAL,7,LX,CX,ISTK.CUR.STK.QTY)
                TMP.SERIAL = INSERT(TMP.SERIAL,8,LX,CX,ISTK.ORG.STK.QTY)
                TMP.SERIAL = INSERT(TMP.SERIAL,9,LX,CX,ISTK.LA.USED+0)
                TMP.SERIAL = INSERT(TMP.SERIAL,10,LX,CX,INVR.PO)
                TMP.SERIAL = INSERT(TMP.SERIAL,11,LX,CX,INVR.ENT.DATE)
                TMP.SERIAL = INSERT(TMP.SERIAL,12,LX,CX,ISTK.RSVB.QTY)
              END ELSE
                TMP.SERIAL = INSERT(TMP.SERIAL,2,LX,CX,S.ID[4,999])
                TMP.SERIAL = INSERT(TMP.SERIAL,3,LX,CX,ISTK.CUR.QTY)
                TMP.SERIAL = INSERT(TMP.SERIAL,4,LX,CX,ISTK.ORG.QTY)
                TMP.SERIAL = INSERT(TMP.SERIAL,5,LX,CX,ISTK.CUR.DIAM)
                TMP.SERIAL = INSERT(TMP.SERIAL,6,LX,CX,ISTK.ORG.DIAM)
                TMP.SERIAL = INSERT(TMP.SERIAL,7,LX,CX,ISTK.CUR.STK.QTY+0)
                TMP.SERIAL = INSERT(TMP.SERIAL,8,LX,CX,ISTK.ORG.STK.QTY+0)
                TMP.SERIAL = INSERT(TMP.SERIAL,9,LX,CX,ISTK.LA.USED+0)
                TMP.SERIAL = INSERT(TMP.SERIAL,10,LX,CX,INVR.PO)
                TMP.SERIAL = INSERT(TMP.SERIAL,11,LX,CX,INVR.ENT.DATE)
                TMP.SERIAL = INSERT(TMP.SERIAL,12,LX,CX,ISTK.RSVB.QTY)
              END
            END ELSE
              TMP.SERIAL = INSERT(TMP.SERIAL,1,LX,1,ISTK.LOC)
              TMP.SERIAL = INSERT(TMP.SERIAL,2,LX,1,S.ID[4,999])
              TMP.SERIAL = INSERT(TMP.SERIAL,3,LX,1,ISTK.CUR.QTY)
              TMP.SERIAL = INSERT(TMP.SERIAL,4,LX,1,ISTK.ORG.QTY)
              TMP.SERIAL = INSERT(TMP.SERIAL,5,LX,1,ISTK.CUR.DIAM)
              TMP.SERIAL = INSERT(TMP.SERIAL,6,LX,1,ISTK.ORG.DIAM)
              TMP.SERIAL = INSERT(TMP.SERIAL,7,LX,1,ISTK.CUR.STK.QTY+0)
              TMP.SERIAL = INSERT(TMP.SERIAL,8,LX,1,ISTK.ORG.STK.QTY+0)
              TMP.SERIAL = INSERT(TMP.SERIAL,9,LX,1,ISTK.LA.USED+0)
              TMP.SERIAL = INSERT(TMP.SERIAL,10,LX,1,INVR.PO)
              TMP.SERIAL = INSERT(TMP.SERIAL,11,LX,1,INVR.ENT.DATE)
              TMP.SERIAL = INSERT(TMP.SERIAL,12,LX,1,ISTK.RSVB.QTY)
            END
          END
        END ELSE
          MAT ISTK.REC = ""
        END
      NEXT S
    END ELSE
      MAT IWLO.REC = ""
    END
  NEXT WL
  OUT_PARAM = TMP.SERIAL
  *
  RETURN

