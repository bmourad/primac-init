SUBROUTINE NEWSUMMARYMARKUP
********************************************************************************
*   Program name :- NEWSUMMARYMARKUP

*   Created:- 6/2/2003
*------------------------------------------------------------------------------*
*
*   AUTHOR :- B.KRISHNA
*
* DESCRIPTION
*
* This program gets the data from the ESTIMATE.DEPT file to load into the
* Estimate Cost/Type Summary screen.
*
*********************************************************************
*
*---- FILE COPY STATEMENTS
*
   $INCLUDE JES.CPYLIB SCOMMON.ESTIMATE
   $INCLUDE WWINSERT RBO.H
   $DEFINE JESFILEVARS
   $INCLUDE JES.CPYLIB JES.FILE.VARS
   $DEFINE FILEVARS
   $INCLUDE CPYLIB FILE.VARS
   $DEFINE ESTIMATE
   $INCLUDE JES.CPYLIB ESTIMATE
   $DEFINE ESTIMATERES
   $INCLUDE JES.CPYLIB ESTIMATE.RES
   $DEFINE ESTIMATEDEPT
   $INCLUDE JES.CPYLIB ESTIMATE.DEPT
   $DEFINE ESTIMATEPAPERGROUP
   $INCLUDE JES.CPYLIB ESTIMATE.PAPER.GROUP
   $INCLUDE JES.CPYLIB EST.COST.TYPE.SUM
   $INCLUDE CPYLIB CHAR

  * MAT SYSCOM.REC =  ""; SYS.TYPE = 2
   DIM SAVE.CSUM.REC(40)
   EQU SAVE.LB.HRS           TO SAVE.CSUM.REC(2)    ;* Labor hours
   EQU SAVE.LB.DCOST         TO SAVE.CSUM.REC(3)    ;* Labor direct cost
   EQU SAVE.LB.COST          TO SAVE.CSUM.REC(4)    ;* Labor total cost
   EQU SAVE.LB.SALE          TO SAVE.CSUM.REC(5)    ;* Labor sale
   EQU SAVE.MT.DCOST         TO SAVE.CSUM.REC(6)    ;* Material direct cost
   EQU SAVE.MT.COST          TO SAVE.CSUM.REC(7)    ;* Material total cost
   EQU SAVE.MT.SALE          TO SAVE.CSUM.REC(8)    ;* Material sale
   EQU SAVE.OS.DCOST         TO SAVE.CSUM.REC(9)    ;* O/P direct cost
   EQU SAVE.OS.COST          TO SAVE.CSUM.REC(10)   ;* O/P total cost
   EQU SAVE.OS.SALE          TO SAVE.CSUM.REC(11)   ;* O/P sale
   EQU SAVE.SP.DCOST         TO SAVE.CSUM.REC(12)   ;* Shipping direct cost
   EQU SAVE.SP.COST          TO SAVE.CSUM.REC(13)   ;* Shipping total cost
   EQU SAVE.SP.SALE          TO SAVE.CSUM.REC(14)   ;* Shipping sale
   EQU SAVE.MS.DCOST         TO SAVE.CSUM.REC(15)   ;* Misc direct cost
   EQU SAVE.MS.COST          TO SAVE.CSUM.REC(16)   ;* Misc total cost
   EQU SAVE.MS.SALE          TO SAVE.CSUM.REC(17)   ;* Misc sale
   EQU SAVE.TOT.DCOST        TO SAVE.CSUM.REC(18)   ;* Total direct cost
   EQU SAVE.TOT.COST         TO SAVE.CSUM.REC(19)   ;* Total cost
   EQU SAVE.TOT.SALE         TO SAVE.CSUM.REC(20)   ;* Total sale
   EQU SAVE.MT.DCOST.DET     TO SAVE.CSUM.REC(21)   ;* (MV1) Material direct cost detail


*
*---- OPEN ALL FILES
*
  * IN_PARAM = "" ; OUT_PARAM = ""
  * ERRMSG = "CALL openEstimateFiles PROBLEM"
  * CALL openEstimateFiles(ERRMSG,IN_PARAM,OUT_PARAM,MAT FILE.VARS, MAT JES.FILE.VARS)
  * IF ERRMSG # "" THEN GOTO 1000
*
*---- INITIALIZATION
*
 
OPEN "ESTIMATE.DEPT.BU" TO ESTIMATE.DEPT ELSE
ERRMSH = "CAN NOT OPEN ESTIMATE.DEPT.BU FILE"
END 

OPEN "ESTIMATE" TO ESTIMATE ELSE
ERRMSH = "CAN NOT OPEN ESTIMATE FILE"
END 

OPEN "ESTIMATE.RES" TO ESTIMATE.RES ELSE
ERRMSH = "CAN NOT OPEN ESTIMATE.RES FILE"
END 


   STATUS = RBO.getProperty('','ID',ESTIMATE.ID)
   CONO = ESTIMATE.ID[1,3]
   EST.ID = TRIM(ESTIMATE.ID[4,99])
   MATREAD EST.REC FROM ESTIMATE, ESTIMATE.ID ELSE
      ERRMSG = 'Estimate not on file. Try again!'
      GOTO 93000
   END

   MATREAD EST.RL.REC FROM ESTIMATE.RES, ESTIMATE.ID ELSE
      ERRMSG = 'ESTIMATE not on file. Try again!'
      GOTO 93000
   END

   IN_PARAM = ""
   EST.KEY = EST.ID
   DSEL = "ALL"
   CSEL = "ALL"
  

*  CALL SetSummaryData(ERRMSG,IN_PARAM,OUT_PARAM,MAT FILE.VARS,MAT JES.FILE.VARS,MAT EST.REC)
*******************************************************************************************8

*---- INITIALIZATION
*
      MAT CSUM.REC = ""
      READ EST.RL.PP FROM CONTROL,CONO:'EST.RES.PRE.PRESS' ELSE EST.RL.PP=''
*
*---- MAIN PROCESSING
*

ERRMSG = RBO.getProperty('','Qty',QSEL)
ERRMSG=RBO.getProperty('','NewQtyIds',BUILDiD)

*   QCNT = DCOUNT(EST.QTY,VM)
 EST_QTY = EST.QTY : VM : QSEL
 EST_DEPT_COMP = EST.DEPT.COMP : VM : BUILDiD
 QCNT = DCOUNT(EST_QTY,VM)

 FOR QPTR = 1 TO QCNT
	QSEL = EST_QTY<1,QPTR>
       MAT CSUM.REC = ""

      DCNT = DCOUNT(EST_DEPT_COMP,VM)
      *DCNT = COUNT(EST.DEPT.COMP,VM) + (EST.DEPT.COMP # "")
      FOR DP = 1 TO DCNT
         ESTD.ID = EST_DEPT_COMP<1,DP>
         IF DSEL # "ALL" AND DSEL # EST.DEPT<1,FIELD(ESTD.ID,"!",1)> THEN GOTO 190
         IF CSEL # "ALL" AND CSEL # FIELD(ESTD.ID,"!",2) THEN GOTO 190
         IF QSEL # FIELD(ESTD.ID,"!",3) THEN GOTO 190
         MATREAD ESTD.REC FROM ESTIMATE.DEPT, CONO:EST.KEY:"!":ESTD.ID ELSE GOTO 190
         TCNT = COUNT(ESTD.TYPE,VM) + (ESTD.TYPE # "")
         FOR TP = 1 TO TCNT
            TYPE = ESTD.TYPE<1,TP>[1,1]
            IF TYPE = "G" THEN GOTO 180
            TSUB = ESTD.TYPE<1,TP>[2,1]
            HRS = ESTD.HRS<1,TP>
            DCOST = ESTD.DCOST<1,TP>
            COST = ESTD.COST<1,TP>
            IF EST.RL.PP.INCLUDE#'Y' THEN
               LOCATE ESTD.DEPT IN EST.RL.PP<1>,1 SETTING DPOS THEN
                  SALE = 0
               END ELSE
                  SALE = ESTD.TSALE<1,TP>
               END
            END ELSE
               SALE = ESTD.TSALE<1,TP>
            END
	     RATE = ESTD.RATE<1,TP>
            PROD = ESTD.OPV<1,TP>
            QCALC = ESTD.GRP.QCALC<1,TP>
            QPARAM = ESTD.GRP.QPARAM<1,TP>
            BEGIN CASE
               CASE TYPE = "L"
                  IF QCALC = "A" THEN
                     BEGIN CASE
                        CASE QPARAM = "100"
                           CSUM.LB.COPY = CSUM.LB.COPY + RATE
                        CASE QPARAM = "200"
                           CSUM.LB.COLOR = CSUM.LB.COLOR + RATE
                        CASE QPARAM = "300"
                           CSUM.LB.VERSION = CSUM.LB.VERSION + RATE
                     END CASE
                  END
                  CSUM.LB.HRS = CSUM.LB.HRS + HRS
                  CSUM.LB.DCOST = CSUM.LB.DCOST + DCOST
                  CSUM.LB.COST = CSUM.LB.COST + COST
                  CSUM.LB.SALE = CSUM.LB.SALE + SALE
               CASE TYPE = "M" OR TYPE = "I"
                  IF QCALC = "A" THEN
                     BEGIN CASE
                        CASE QPARAM = "100"
                           CSUM.MT.COPY<1,-1> = PROD
                        CASE QPARAM = "200"
                           CSUM.MT.COLOR<1,-1> = PROD
                        CASE QPARAM = "300"
                           CSUM.MT.VERSION<1,-1> = PROD
                     END CASE
                  END
                  CSUM.MT.DCOST = CSUM.MT.DCOST + DCOST
                  CSUM.MT.COST = CSUM.MT.COST + COST
                  CSUM.MT.SALE = CSUM.MT.SALE + SALE
                  BEGIN CASE
* CSF 32159 v
                     CASE ESTD.TYPE<1,TP> = 'MR' OR ESTD.TYPE<1,TP> = 'MS'
                        DET = 1
                     CASE ESTD.TYPE<1,TP> = 'MI'
                        DET = 2
                     CASE ESTD.TYPE<1,TP> = 'MF'
                        DET = 3
                     CASE ESTD.TYPE<1,TP> = 'MP'
                        DET = 4
                     CASE ESTD.TYPE<1,TP> = 'MC'
                        DET = 5
                     CASE ESTD.TYPE<1,TP> = 'MO'
                        DET = 6
                  END CASE
                  CSUM.MT.DCOST.DET<1,DET> = CSUM.MT.DCOST.DET<1,DET> + DCOST
                  CSUM.MT.COST.DET<1,DET> = CSUM.MT.COST.DET<1,DET> + COST
                  CSUM.MT.SALE.DET<1,DET> = CSUM.MT.SALE.DET<1,DET> + SALE
               CASE TYPE = "P"
                  CSUM.OS.DCOST = CSUM.OS.DCOST + DCOST
                  CSUM.OS.COST = CSUM.OS.COST + COST
                  CSUM.OS.SALE = CSUM.OS.SALE + SALE
               CASE TYPE = "S"
                  CSUM.SP.DCOST = CSUM.SP.DCOST + DCOST
                  CSUM.SP.COST = CSUM.SP.COST + COST
                  CSUM.SP.SALE = CSUM.SP.SALE + SALE
               CASE TYPE = "O"
                  CSUM.MS.DCOST = CSUM.MS.DCOST + DCOST
                  CSUM.MS.COST = CSUM.MS.COST + COST
                  CSUM.MS.SALE = CSUM.MS.SALE + SALE
            END CASE
            CSUM.TOT.DCOST = CSUM.TOT.DCOST + DCOST
            CSUM.TOT.COST = CSUM.TOT.COST + COST
            CSUM.TOT.SALE = CSUM.TOT.SALE + SALE
180      NEXT TP
190   NEXT DP

      SAVE.LB.SALE<1,QPTR> = CSUM.LB.SALE
      SAVE.MT.SALE<1,QPTR> = CSUM.MT.SALE
      SAVE.OS.SALE<1,QPTR> = CSUM.OS.SALE
      SAVE.SP.SALE<1,QPTR> = CSUM.SP.SALE
      SAVE.MS.SALE<1,QPTR> = CSUM.MS.SALE
      TOTAL.SALE<1,QPTR> = CSUM.TOT.SALE

NEXT QPTR




************************************************************
EstSummStr=SAVE.LB.SALE:SVM:SAVE.MT.SALE:SVM:SAVE.OS.SALE:SVM:SAVE.SP.SALE:SVM:SAVE.MS.SALE:SVM:TOTAL.SALE
STATUS = RBO.setProperty('','EstSummStr',EstSummStr)

RETURN


  IF ERRMSG # "" THEN GOTO 93000
   RETURN


93000 *
   STATUS = RBO.setProperty('','ServerStatus',1)
   STATUS = RBO.setProperty('','ServerMessage',ERRMSG)
   RETURN
*  

