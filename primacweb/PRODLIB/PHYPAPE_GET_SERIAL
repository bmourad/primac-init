*SUBROUTINE PHYPAPE_GET_SERIAL
********************************************************************************
$INCLUDE WWINSERT RBO.H
$INCLUDE ICS.CPYLIB INV_SERIAL
$INCLUDE PMC.CPYLIB COMPANY
$INCLUDE ICS.CPYLIB INV.WHSE.LOC
$INCLUDE ICS.CPYLIB PHYSICAL.INV
$INCLUDE ICS.CPYLIB WAREHOUSE
$INCLUDE ICS.CPYLIB INVENTORY
$INCLUDE ICS.CPYLIB INV.CNV
$INCLUDE CPYLIB CHAR

* Insert method code here
OPEN '','CATEGORY' TO CATEGORY ELSE ERRMSG='CATEGORY FILE IS MISSING';GOTO 93000
OPEN '','COMPANY' TO COMPANY ELSE ERRMSG='COMPANY FILE IS MISSING';GOTO 93000
OPEN '','INV.WHSE.LOC' TO INV.WHSE.LOC ELSE  ERRMSG='INV.WHSE.LOC FILE IS MISSING';GOTO 93000
OPEN '','INV_SERIAL' TO INV_SERIAL ELSE ERRMSG='INV_SERIAL FILE IS MISSING';GOTO 93000
OPEN '','INV_SERIAL_DELETED' TO INV_SERIAL_DELETED ELSE ERRMSG='INV_SERIAL_DELETED FILE IS MISSING';GOTO 93000
OPEN '','WAREHOUSE' TO WAREHOUSE ELSE ERRMSG='WAREHOUSE FILE IS MISSING';GOTO 93000
OPEN '','INVENTORY' TO INVENTORY ELSE ERRMSG='INVENTORY FILE IS MISSING';GOTO 93000
OPEN '','CONTROL' TO CONTROL ELSE ERRMSG='CONTROL FILE IS MISSING';GOTO 93000

DEFFUN CALC_STK_QTY(COST.QTY, MAT INV.CNV.REC,ROND,LN)
DEFFUN CALC_COST_QTY(STK.QTY,MAT INV.CNV.REC,ROND,LN)
DEFFUN CALC_DIAM(COST.QTY,STK.QTY,MAT INV.REC)
DEFFUN GET.SERIAL.SEQ(CONO,CONTROL.FILE,INV_SERIAL.FILE)

STATUS=RBO.getProperty('','PMCProperty',PMCProperty)
CONO = PMCProperty<1,4>

MATREAD COMP.REC FROM COMPANY, CONO ELSE
	MAT COMP.REC = ""
	ERRMSG = "COMPANY (" : CONO : ") NOT SETUP"
	GOTO 93000
END

STATUS=RBO.getProperty('','PROD_WHSE',WHSE.CODE)
STATUS=RBO.getProperty('','PROD_LOC',LOC.CODE)
STATUS=RBO.getProperty('','PROD_NO',PROD.NUM)
STATUS=RBO.getProperty('','SERIAL_NO',SERIAL_NO)
STATUS=RBO.getProperty('','PHS_ADJ_TYPE',PHS.ADJ.TYPE)
STATUS=RBO.getProperty('','GRID_COLUMNS',GRID_COLUMNS)

WHSE.KEY=CONO:PROD.NUM:'!':WHSE.CODE:'!':LOC.CODE 
STATUS = RBO.setProperty("","ServerMessage",WHSE.KEY)

MATREAD INV.REC FROM INVENTORY,CONO:PROD.NUM THEN
$INCLUDE ICSBP INV.UM.CNV
END
TEST_SERIAL = ''

MATREAD IWLO.REC FROM INV.WHSE.LOC, WHSE.KEY THEN
	ERRMSG=''
	SCNT=DCOUNT(IWLO.SERIAL,VM)

	IF SERIAL_NO = '' THEN
		BEGIN CASE
			CASE PHS.ADJ.TYPE # "R" AND SCNT=1
				SERIAL_NO = IWLO.SERIAL
			CASE 1
				IF IWLO.SERIAL="" THEN 
					ERRMSG='LOCATION HAS NO SERIALS'
				END ELSE
					ERRMSG = ''
				END	
				GOTO 93000
		END CASE
	END

	IF IWLO.SERIAL # "" THEN 
		IF SERIAL_NO ='N' THEN
			WRITE SERIAL_NO ON CONTROL,'HLL'
			IF  PHS.ADJ.TYPE = 'R' THEN
				SERIAL_NO = GET.SERIAL.SEQ(CONO,CONTROL,INV_SERIAL)
				PHS.R.S.ID=SERIAL_NO
				GOTO 99999
			END ELSE
				ERRMSG='CANNOT GENERATE NEW SERIAL WITH THIS ADJUSTMENT CODE'
				GOTO 93000
			END
		END
		ISTK.ID = CONO:SERIAL_NO
		
		MATREAD ISTK.REC FROM INV_SERIAL,ISTK.ID THEN
			BEGIN CASE
				CASE ISTK.POST.DATE=''
					ERRMSG='THIS SERIAL HAS NOT BEEN RECEIVED YET'
					GOTO 93000
				CASE ISTK.WHSE=CO.INTR.WHSE  AND ISTK.WHSE#''
					ERRMSG="CANNOT ADJUST ITEMS IN THE"
					ERRMSG:=" INTER-DIVISIONAL WAREHOUSE"
					GOTO 93000
				CASE ISTK.WHSE#WHSE.CODE OR ISTK.LOC#LOC.CODE 
					ERRMSG='SERIAL BELONGS TO ANOTHER WAREHOUSE OR LOCATION.'
					GOTO 93000
					*T27893 v
				CASE ISTK.PROD # PROD.NUM
				ERRMSG='THIS SERIAL IS NOT FOR PRODUCT # ':PROD.NUM
				GOTO 93000
					*T27893 ^
			END CASE
			GOTO 99999
		END ELSE
			MATREAD ISTK.REC FROM INV_SERIAL_DELETED,ISTK.ID THEN
				IF PHS.ADJ.TYPE = 'M' THEN
					ERRMSG='THIS SERIAL HAS BEEN DELETED AND'
					ERRMSG:=' CANNOT BE NEGATIVE ADJUSTED'
					GOTO 93000
				END
			END ELSE
				IF PHS.ADJ.TYPE # 'R' THEN
					ERRMSG='CANNOT ADJUST A NON EXISTING SERIAL'
					GOTO 93000
				END
				MAT ISTK.REC = ''
			END
		END
	END
END ELSE
	MAT IWLO.REC=""
	IWLO.LOC.ON.HAND=0
	ERRMSG="INV.WHSE.LOC IS MISSING"
	GOTO 93000
END

99999*
	PHS.CUR.WGHT=ISTK.CUR.QTY
	WGHT=ISTK.CUR.QTY
	PHS.NEW.SHEET=ISTK.CUR.STK.QTY ;*T27801
	DIAM=ISTK.CUR.DIAM
	PHS.NEW.SHEET='' ;*T27801
	PHS.NEW.SHEET = ISTK.CUR.STK.QTY
	DIAM=CALC_DIAM(WGHT,PHS.NEW.SHEET,MAT INV.REC) 
	PHS.CUR.DIAM=DIAM
	TMP=CALC_STK_QTY(PHS.CUR.WGHT,MAT INV.CNV.REC,'','')
	PHS.CUR.WGHT=OCONV(TMP,ICR.CNV)
	PHS.CUR.DIAM = OCONV(PHS.CUR.DIAM,"MD2")
	ORG.STK.QTY = ISTK.ORG.STK.QTY

	STATUS = RBO.setProperty("","SERIAL_NO",SERIAL_NO)			
	STATUS = RBO.setProperty("","SERIAL_NO",SERIAL_NO)			
	STATUS = RBO.setProperty("","PHS_CUR_WGHT",PHS.CUR.WGHT)
	STATUS = RBO.setProperty("","PHS_CUR_DIAM",PHS.CUR.DIAM)
	STATUS = RBO.setProperty("","ServerMessage","")


* End of method code
93000*
*ADDED
	STATUS = RBO.setProperty('','TEST_SERIAL',TEST_SERIAL)
	STATUS = RBO.setProperty('','ServerMessage',ERRMSG)
RETURN


