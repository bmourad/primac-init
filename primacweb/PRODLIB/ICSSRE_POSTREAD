SUBROUTINE ICSSRE_POSTREAD
*********************************************************************
* Copyright 1998 by Primac Systems India
* SYSTEM       - EPRIMAC
* PROGRAM      - ICSSRE_POSTREAD
* BY           - KHAJA ZIAUDDIN
* DATE         - 06/07/2003 (mm/dd/yyyy)
* DESCRIPTION  - 
*                
*                
*                
*                
*ENDDOC
*********************************************************************
$INCLUDE WWINSERT RBO.H
$INCLUDE ICS.CPYLIB INV.WHSE
$INCLUDE ICS.CPYLIB INVENTORY
$INCLUDE ICS.CPYLIB CATEGORY
$INCLUDE PMC.CPYLIB VEND
*****ADDED BY ZUBAIR
$INCLUDE PMC.CPYLIB PO
$INCLUDE ICS.CPYLIB INV.CNV
***********
DEFFUN CALC_STK_QTY(COST.QTY,MAT INV.CNV.REC,ROND,LN) ; * FOR READING 
DEFFUN CALC_COST_QTY(STK.QTY,MAT INV.CNV.REC,ROND,LN) ; * FOR WRITING
* Insert method code here
PRODS = ''
WHSE = ''
ONHANDLIST = ''
TRACKQOHLIST = ''	;* TRACK QTY ON HAND
CATGLIST = ''
MAT IWH.REC = ''
MAT INV.REC = ''
MAT CATG.REC = ''

*****ADDED BY ZUBAIR
OPEN '','PO' TO PO ELSE ERRMSG = 'PO FILE IS MISSING'; GOTO 93000
*********

OPEN '', 'CATEGORY' TO CATEGORY ELSE 
	ERRMSG = 'CATEGORY FILE IS MISSING'
	GOTO 93000
END
OPEN '', 'INVENTORY' TO INVENTORY ELSE
	ERRMSG = 'INVENTORY FILE IS MISSING'
	GOTO 93000
END

OPEN '', 'INV.WHSE' TO INV.WHSE ELSE
	ERRMSG = 'INV.WHSE FILE IS MISSING'
	GOTO 93000
END
OPEN '', 'VEND' TO VEND ELSE
	ERRMSG = 'VEND FILE IS MISSING'
	GOTO 93000
END

STATUS = RBO.getProperty('','PMCProperty',PMCPROPERTY)
STATUS = RBO.getDBVals('PO_PROD_NUM',PRODS)
STATUS = RBO.getDBVals('PO_WHSE',WHSE)
STATUS = RBO.getProperty('','JBOpen',JBOpen)
STATUS = RBO.getProperty('','JBOnOrd',JBOnOrd)

STATUS = RBO.getDBVals('PO_VEND_NO',VEND_NO)
CONO = PMCPROPERTY<1,4>
FOR I = 1 TO DCOUNT(JBOpen,@VM)
   JBOpen<1,I> = JBOpen<1,I> / 10
   JBOpen<1,I> = OCONV(JBOpen<1,I>,"MD2")
NEXT I

FOR I = 1 TO DCOUNT(JBOnOrd,@VM)
   JBOnOrd<1,I> = JBOnOrd<1,I> / 10
   JBOnOrd<1,I> = OCONV(JBOnOrd<1,I>,"MD2")
NEXT I

STATUS = RBO.setProperty('','JBOpen',JBOpen)
STATUS = RBO.setProperty('','JBOnOrd',JBOnOrd)

FOR X = 1 TO DCOUNT(PRODS,@VM)
  MATREAD INV.REC FROM INVENTORY, CONO : PRODS<1,X> THEN    
		$INCLUDE ICSBP INV.UM.CNV
    MATREAD CATG.REC FROM CATEGORY,CONO:INV.LINE THEN
	CATGLIST<1,-1> = CATG.TRK.LVL
	IF CATG.TRK.LVL # 'S' THEN		 ;* AND CATG.TRACK.QOH="Y"
		MATREAD IWH.REC FROM INV.WHSE, CONO:PRODS<1,X>:"!":WHSE<1,X> THEN
                     ROND='.5'
                      IF IWH.ON.HAND<0 THEN ROND='-.5'
* commented by suhail: the conversion of onhandqty is now done in ICSSRE_GET_CONV_VALS
			*IWH.ON.HAND =CALC_STK_QTY(IWH.ON.HAND,MAT INV.CNV.REC,ROND,'')
			*ONHANDLIST<1,-1> = OCONV(IWH.ON.HAND,ICR.CNV)                     
                     ONHANDLIST<1,-1> = IWH.ON.HAND
			TRACKQOHLIST<1,-1> = CATG.TRACK.QOH
		END ELSE
			MAT IWH.REC = ''
			ONHANDLIST<1,-1> = " "
			TRACKQOHLIST<1,-1> = " "
		END 
	END ELSE
		ONHANDLIST<1,-1> = ' '
		TRACKQOHLIST<1,-1> = " "
	END 
     END ELSE
		ONHANDLIST<1,-1> = ' '
		TRACKQOHLIST<1,-1> = " "
		CATGLIST<1,-1> = ' '
     END
  END ELSE
    	ONHANDLIST<1,-2> = ' '
	TRACKQOHLIST<1,-1> = " "
	CATGLIST<1,-1> = ' '
  END
NEXT

*************************************** START CODE FOR VENDOR DETAILS ******************
MATREAD VEND.REC FROM VEND,CONO:VEND_NO  ELSE 
ERRMSG="CANNOT READ VEND FILE" 
GOTO 93000
END

STATUS = RBO.setProperty('','PO_VEND_DESC',VEND.DESC)
STATUS = RBO.setProperty('','VEND_ADDR1',VEND.ADDR1)
STATUS = RBO.setProperty('','VEND_ADDR2',VEND.ADDR2)
STATUS = RBO.setProperty('','VEND_ADDR3',VEND.CITY)
STATUS = RBO.setProperty('','VEND_ADDR4',VEND.ZIP)
*STATUS = RBO.setProperty('','VEND_ADDR2',VEND.ADDR1)


*************************************** END CODE FOR VENDOR DETAILS ******************
STATUS = RBO.setProperty('','QtyOnHand',ONHANDLIST)
STATUS = RBO.setProperty('','TrackQOH',TRACKQOHLIST)
STATUS = RBO.setProperty('','Category',CATGLIST)

STATUS = RBO.setProperty('','ServerStatus',0) 
* End of method code
RETURN

93000 
  STATUS = RBO.setProperty('','ServerStatus',1)        
  STATUS = RBO.setProperty('','ServerMessage',ERRMSG) 
  RETURN

99999 
RETURN

