SUBROUTINE ENT_MATL_COST
********************************************************************************
*   Program name :- ENT_MATL_COST
*   Created:- 8/2/2005
*   By :- S.Suhail Hussain
*------------------------------------------------------------------------------*
* T853  09/02/2005    Test Track

* In Properties:
* --------------
*  
*
* Out Properties:
* ---------------
*  
********************************************************************************
$INCLUDE WWINSERT RBO.H
$INCLUDE JCS.CPYLIB JOB
$INCLUDE ICS.CPYLIB INVENTORY
$INCLUDE ICS.CPYLIB CATEGORY
$INCLUDE ICS.CPYLIB INV.WHSE
$INCLUDE ICS.CPYLIB INV_SERIAL
$INCLUDE ICS.CPYLIB WAREHOUSE

DEFFUN DIVISION_POSITION (CONO,CONTROL.FILE,DIV.CODE)
DEFFUN CURRENT_PERIOD(CONO,CONTROL.FILE,DIV.POS,FISCAL.FLAG)

OPEN "","JOB" TO JOB ELSE ERRMSG="JOB FILE IS MISSING";GOTO 91000
OPEN "","CATEGORY" TO CATEGORY ELSE ERRMSG="CATEGORY FILE IS MISSING";GOTO 91000
OPEN "","INVENTORY" TO INVENTORY ELSE ERRMSG="INVENTORY FILE IS MISSING";GOTO 91000
OPEN "","INV.WHSE" TO INV.WHSE ELSE ERRMSG="INV.WHSE FILE IS MISSING";GOTO 91000
OPEN "","INV_SERIAL" TO INV_SERIAL ELSE ERRMSG="FILE INV_SERIAL IS MISSING";GOTO 91000
OPEN "","WAREHOUSE" TO WAREHOUSE ELSE ERRMSG="FILE WAREHOUSE IS MISSING";GOTO 91000
OPEN "","CONTROL" TO CONTROL ELSE ERRMSG = "FIEL CONTROL IS MISSING";GOTO 91000

* Insert method code here
STATUS = RBO.getProperty('','SERIAL_DATA',UNIT_DATA)

CONO = UNIT_DATA<1,1>
JOB.NO = UNIT_DATA<1,2>
DMT.PROD = UNIT_DATA<1,3>
WHSE.NO = UNIT_DATA<1,4>
SERIAL.NO = UNIT_DATA<1,5>
CUR.PERIOD = UNIT_DATA<1,6>
IWH.ID=CONO:DMT.PROD:"!":WHSE.NO

ERRMSG = ""
GET.VALUE = ""
*CUR.PERIOD = ""
WFND = ""

MATREAD JOB.REC FROM JOB,CONO:JOB.NO ELSE MAT JOB.REC = ""
MATREAD INV.REC FROM INVENTORY,CONO:DMT.PROD ELSE MAT INV.REC = ""
MATREAD CATG.REC FROM CATEGORY,CONO:INV.LINE ELSE MAT CATG.REC = ""
MATREAD IWH.REC FROM INV.WHSE,IWH.ID ELSE MAT IWH.REC = ""
MATREAD ISTK.REC FROM INV_SERIAL,CONO:SERIAL.NO ELSE MAT ISTK.REC = ""
MATREAD WHSE.REC FROM WAREHOUSE,CONO:WHSE.NO ELSE MAT WHSE.REC = ""

LOCATE WHSE.NO IN INV.WHSE.CODE<1>,1 SETTING WFND ELSE WFND=0

GOSUB CHECK.MATL.RESV
*GOSUB GET.CUR.PERIOD

******************
ENT.MATERIAL.COST: 
******************
*
DMT.COST=0
GOSUB CHECK.MATL.COST
IF CHECK.COST # 0 THEN
  IF CATG.COST.TYPE = 'FI' OR CATG.COST.TYPE = 'LC' THEN
*T853 v  IF CATG.COST.TYPE = 'FI' THEN CPTR = Q ELSE CPTR = QCNT
	IF CATG.COST.TYPE = 'FI' THEN
          IF Q > 1 THEN CPTR = Q-1 ELSE CPTR = 1
	END ELSE 
	   CPTR = QCNT
	END	
*T853 ^
    IF IWH.RECP.PERIOD<1,CPTR> > CUR.PERIOD THEN
      ERRMSG=ERRMSG : 'Receipt Quantity not available until ':IWH.RECP.PERIOD<1,CPTR>
      GOTO 91000
    END
  END
END
IF CHECK.COST <> 0 OR ECD.RET.VALUE="END" THEN GET.VALUE = 0 : @VM : CHECK.COST;GOTO 6999
IF CATG.COST.TYPE = 'SD' OR CATG.COST.TYPE = 'LT' THEN
  GET.VALUE = 1  : @VM : CHECK.COST
END ELSE
  GET.VALUE = 0  : @VM : CHECK.COST
END
6999*
  STATUS = RBO.setProperty('','SERIAL_INFO',GET.VALUE)
RETURN

*
*****************
CHECK.MATL.COST: 
*****************
CHECK.COST=0;ECD.RET.VALUE=""
ERR.FLG='';ERRMSG=''
PERIOD=''
OPEN.FLAG = 1
CALL BUILD_IWH_FI(IWH.ID,MAT IWH.REC,PERIOD,ERR.FLG,ERRMSG,OPEN.FLAG)
FIFO.COST=0
QCNT=DCOUNT(IWH.QTY.FI,@VM)
FOR Q=1 TO QCNT WHILE FIFO.COST=0
  IF IWH.QTY.FI<1,Q> > 0 AND IWH.COST.FI<1,Q> > 0 THEN
    FIFO.COST=IWH.COST.FI<1,Q>
  END
NEXT Q
LAST.COST=IWH.COST.FI<1,QCNT>
BEGIN CASE
  CASE RESV.AMT > 0
    CHECK.COST=RESV.AMT
  CASE CATG.COST.TYPE="SD"
    CHECK.COST=IWH.STD.COST
  CASE CATG.COST.TYPE="AV"
    CHECK.COST=IWH.AVG.COST
  CASE CATG.COST.TYPE="LT"
    CHECK.COST=IWH.LIST.COST
  CASE CATG.TRACK.QOH # "Y"
    CHECK.COST=0
  CASE CATG.COST.TYPE="FI"
    CHECK.COST=FIFO.COST
  CASE CATG.COST.TYPE="LC"
    CHECK.COST=LAST.COST
  CASE CATG.COST.TYPE='AC'
    CHECK.COST=ISTK.UNIT.COST
  CASE 1
    ERRMSG="INVALID COSTING METHOD SPECIFIED FOR PRODUCT LINE" : "~"
    ECD.RET.VALUE="END"
END CASE
RETURN

*****************
CHECK.MATL.RESV: 
*****************
*
PTR=1
LOOP
  LOCATE DMT.PROD IN JOB.RESV.MATL<1>,PTR SETTING MLOC ELSE
    MLOC=0;PTR=0
    RESV.QTY=0;RESV.AMT=0
  END
  IF MLOC AND WFND THEN
    IF INV.WHSE.CODE<1,WFND>=JOB.RESV.WHSE<1,MLOC> THEN
      PTR=0
      RESV.QTY=JOB.RESV.QTY<1,MLOC>;RESV.AMT=JOB.RESV.AMT<1,MLOC>
    END ELSE
      PTR=MLOC+1
    END
  END ELSE
    PTR = 0
  END
WHILE PTR DO
REPEAT
RETURN
*
*****************
GET.CUR.PERIOD:
*****************
ERRMSG = ''
CUR.PERIOD = ''
DIV.POS=DIVISION_POSITION(CONO,CONTROL,WHS.DIV)
  IF DIV.POS<1,1>='' THEN
    DIV.POS=DIV.POS<1,2>
    CUR.PERIOD=CURRENT_PERIOD(CONO,CONTROL,DIV.POS,"JC")
    IF CUR.PERIOD<1,1>='' THEN                          
      CUR.PERIOD=CUR.PERIOD<1,2>                        
    END
  END                                                
RETURN


* End of method code
91000:
   STATUS = RBO.setProperty('','ServerStatus',1)
   STATUS = RBO.setProperty('','ServerMessage',ERRMSG)
   STATUS = RBO.setProperty('','SERIAL_INFO',0 : @VM : CHECK.COST)
RETURN

