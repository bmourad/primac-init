SUBROUTINE INTROUTM_POSTREAD
*********************************************************************
* SYSTEM      - EPRIMAC
* PROGRAM     - INTROUTM_POSTREAD
* BY          - KHAJA ZIAUDDIN
* DATE
* DESCRIPTION - 
* TASK
*
*ENDDOC
*********************************************************************
$INCLUDE WWINSERT RBO.H
$INCLUDE ICS.CPYLIB INVENTORY
$INCLUDE ICS.CPYLIB CATEGORY
$INCLUDE ICS.CPYLIB INV.WHSE
$INCLUDE ICS.CPYLIB INV.CNV
$INCLUDE ICS.CPYLIB INV_SERIAL
$INCLUDE ICS.CPYLIB INTR_DIV_TRANSFER


OPEN '','INVENTORY' TO INVENTORY ELSE ERRMSG = 'INVENTORY FILE IS MISSING'; GOTO 93000
OPEN '','CATEGORY'  TO CATEGORY ELSE ERRMSG = 'CATEGORY FILE IS MISSING'; GOTO 93000
OPEN '','INV.WHSE' TO INV.WHSE ELSE ERRMSG = 'INV.WHSE FILE IS MISSING'; GOTO 93000
OPEN '','INV_SERIAL' TO INV_SERIAL ELSE ERRMSG = 'INV_SERIAL FILE IS MISSING'; GOTO 93000


MAT IDM.REC = ''
STATUS = RBO.getDBVals("IDM_PROD_NO",PRODNO)
STATUS = RBO.getDBVals("IDM_SERIAL", IDM.SERIAL)
STATUS = RBO.getDBVals("IDM_SERIAL_QTY", IDM.SERIAL.QTY)
STATUS = RBO.getDBVals("IDM_SERIAL_MILL", IDM.SERIAL.MILL)
STATUS = RBO.getDBVals("IDM_FROM_WHSE",IDM.FROM.WHSE)
STATUS = RBO.getDBVals("IDM_STATUS", IDM.STATUS)
STATUS = RBO.getProperty('','new_item', NEWITEM)
STATUS = RBO.getProperty('','ID',ID)
CONO  = ID[1,3]

INQUIRY.FLG = 0 

IF IDM.STATUS GT 1 THEN
   INQUIRY.FLG = 1
END 
IF NEWITEM = 0 THEN
PROD.ARRAY = PRODNO
IDM.PROD.NO = PRODNO
U.M = ''
TRANSQTY = ''
K = 1
   PROD.QTY = 0
   PROD.CNT = DCOUNT(IDM.PROD.NO,@VM)
   FOR PROD.PTR = 1 TO PROD.CNT
      PROD.ID = IDM.PROD.NO<1,PROD.PTR>
      GOSUB VALIDATE.INV
      ROLL.CNT = DCOUNT(IDM.SERIAL<1,PROD.PTR>,@SVM)
      PROD.QTY = 0
      FOR ROLL.PTR = 1 TO ROLL.CNT
         MATREAD ISTK.REC FROM INV_SERIAL, CONO:IDM.SERIAL<1,PROD.PTR,ROLL.PTR> THEN
            RS.ARRAY<1,PROD.PTR,ROLL.PTR> = OCONV(INT(((ISTK.CUR.QTY/ICR.DV1)*ICR.MT1)/ICR.DV2+.5), ICR.CNV)
            **RS.ARRAY<PROD.PTR,ROLL.PTR,4> = ISTK.MILL.ID<1,PROD.PTR,ROLL.PTR>
	     MILLID<1,PROD.PTR,ROLL.PTR> = ISTK.MILL.ID<1,PROD.PTR,ROLL.PTR>
	     K = K + 1
         END ELSE
            RS.ARRAY<1,PROD.PTR,ROLL.PTR> = INT(((IDM.SERIAL.QTY<1,PROD.PTR,ROLL.PTR>/ICR.DV1)*ICR.MT1)/ICR.DV2+.5)
            **RS.ARRAY<PROD.PTR,ROLL.PTR,4> = IDM.SERIAL.MILL<1,PROD.PTR,ROLL.PTR>
	     MILLID<1,PROD.PTR,ROLL.PTR> = IDM.SERIAL.MILL<1,PROD.PTR,ROLL.PTR>
	     K = K + 1
         END
	PROD.QTY += RS.ARRAY<1,PROD.PTR,ROLL.PTR>
      NEXT ROLL.PTR
      TRANSQTY<1,-1> = OCONV(PROD.QTY*100, "MD2")
   NEXT PROD.PTR
END 

STATUS = RBO.setProperty('','UM', U.M)
STATUS = RBO.setDBVals("IDM_SERIAL_QTY", RS.ARRAY)
STATUS = RBO.setDBVals("IDM_SERIAL_MILL",MILLID)
STATUS = RBO.setProperty('','TransQty', TRANSQTY)
RETURN


****************************
* SUBROUTINES
****************************

*************
VALIDATE.INV: 
*************
MAT INV.CNV.REC = ''
   MATREAD INV.REC FROM INVENTORY, CONO:PROD.ID THEN
      MATREAD CATG.REC FROM CATEGORY, CONO:INV.LINE THEN
	$INCLUDE ICSBP INV.UM.CNV
         BEGIN CASE           
            CASE CATG.TYPE="L" 
               U.M<1,-1>="LBS"        
            CASE CATG.TYPE="S" 
               U.M<1,-1>="SHT"        
            CASE CATG.TYPE="RL"
               U.M<1,-1>="PC"        
            CASE CATG.TYPE="PC"
               U.M<1,-1>="FT "
            CASE 1 
               IF INQUIRY.FLG = 0 THEN
                  ERRMSG='PRODUCT ':PROD.ID:' IS NOT A PAPER PRODUCT LINE'
                  GOSUB 91000 ; VALID.PRODUCT = 0
               END
         END CASE 
         BASWGT = INT(INV.BAS.WT/100)
         BEGIN CASE
            CASE MOD(INV.PAP.WIDTH,10000) = 0
               IWIDTH = OCONV(INT(INV.PAP.WIDTH/10000),"MD0")
            CASE MOD(INV.PAP.WIDTH,1000) = 0
               IWIDTH = OCONV(INT(INV.PAP.WIDTH/1000),"MD1")
            CASE MOD(INV.PAP.WIDTH,100) = 0
               IWIDTH = OCONV(INT(INV.PAP.WIDTH/100),"MD2")
            CASE MOD(INV.PAP.WIDTH,10) = 0
               IWIDTH = OCONV(INT(INV.PAP.WIDTH/10),"MD3")
            CASE 1
               IWIDTH = OCONV(INV.PAP.WIDTH,"MD4")
         END CASE
          MATREAD IWH.REC FROM INV.WHSE, CONO:PROD.ID:'!':IDM.FROM.WHSE THEN
            IF INQUIRY.FLG = 0 THEN
               IF IWH.ON.HAND-IWH.RESV LE 1 THEN
                  ERRMSG = 'PRODUCT ':PROD.ID:' HAS NO QUANTITY AVAILABLE TO TRANSFER'
                  GOSUB 91000 ; VALID.PRODUCT = 0 ; RETURN
               END
               IF CATG.TRK.LVL # 'S' THEN
                  ERRMSG = 'PRODUCT ':PROD.ID:' IS NOT SERIAL TRACKED'
                  GOSUB 91000 ; VALID.PRODUCT = 0 ; RETURN
               END
               LOCATE IDM.FROM.WHSE IN INV.WHSE.CODE<1>,1 SETTING ZPOS ELSE
                  ERRMSG = 'WAREHOUSE #':IDM.FROM.WHSE:' IS NOT SETUP FOR PRODUCT ':PROD.ID
                  GOSUB 91000 ; VALID.PRODUCT = 0 ; RETURN
               END
            END
         END ELSE
            IF INQUIRY.FLG = 0 THEN
               ERRMSG = 'INV.WHSE #':CONO:PROD.ID:'!':IDM.FROM.WHSE:'IS NOT ON FILE'
               GOSUB 91000 ; VALID.PRODUCT = 0
            END
         END
      END ELSE
         ERRMSG = 'INVALID PRODUCT LINE ASSOCIATED TO THE PRODUCT ':PROD.ID
         GOSUB 91000 ; VALID.PRODUCT = 0
      END
   END ELSE
      ERRMSG = 'INVALID PRODUCT ':PROD.ID
      GOSUB 91000 ; VALID.PRODUCT = 0 ; MAT INV.REC = ''
   END
  *
RETURN


*****
91000
*****

*****
93000
*****
STATUS = RBO.setProperty('','ServerStatus',1)
STATUS = RBO.setProperty('','ServerMessage', ERRMSG)





