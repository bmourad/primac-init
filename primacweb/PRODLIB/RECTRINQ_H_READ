  SUBROUTINE GET.RECP.TRAN.HIST.INQ.INFO
*********************************************************************
*
* REVISION - [12.0]
*
* PROGRAM  - GET.RECP.TRAN.HIST.INQ.INFO
*
* AUTHOR   - ALEJANDRO DELGADO
*
* DATE     - 09/27/2002
*
* DESCRIPTION
*
* This program builds the data from INVENTORY file to load into 
* Receipt Transaction History Inquiry screen.
*
*********************************************************************
*
*---- FILE COPY STATEMENTS
*
  $INCLUDE WWINSERT RBO.H
  $INCLUDE ICS.CPYLIB INVENTORY
  $INCLUDE ICS.CPYLIB INV.CNV
  $INCLUDE ICS.CPYLIB INV_AUDIT_HIST
  $INCLUDE ICS.CPYLIB INV_RECEIPTS
  $INCLUDE ICS.CPYLIB INV_SERIAL
  $INCLUDE ICS.CPYLIB CATEGORY
  $INCLUDE CPYLIB>FILE.VARS
  $INCLUDE CPYLIB CHAR
*
*---- INITIALIZATION
*
  ERRMSG = RBO.getProperty('','ID',RECP.NUM)
  CONO = RECP.NUM[1,3]
  RECP.NUM = RECP.NUM[4,99]
  ERRMSG = ''
  SYSLIST = ''
  *
  ERRMSG = "" ; IN_PARAM = "" ; OUT_PARAM = ""
  IN_PARAM<1,1> = 'INVENTORY'
  IN_PARAM<1,2> = 'CATEGORY'
  IN_PARAM<1,3> = 'INV_AUDIT_HIST'
  IN_PARAM<1,4> = 'INV_RECEIPTS'
  IN_PARAM<1,5> = 'INV_SERIAL'
  CALL GetInvOpenFiles(ERRMSG,IN_PARAM,OUT_PARAM,MAT FILE.VARS)
  IF ERRMSG # '' THEN GOTO SET.ERROR
*
*---- PROCESSING
*
  MATREAD INVR.REC FROM INV_RECEIPTS, CONO:RECP.NUM ELSE
    ERRMSG = RECP.NUM:" is not a valid receipt tracking ID."
    GOTO SET.ERROR
  END
  MATREAD INV.REC FROM INVENTORY, CONO:INVR.PROD ELSE MAT INV.REC=""
  MATREAD CATG.REC FROM CATEGORY, CONO:INV.LINE ELSE MAT CATG.REC=""
  ERRMSG = "" ; IN_PARAM = "" ; OUT_PARAM = "" ; MAT INV.CNV.REC = ""
  CALL GetInvUMCnv(ERRMSG,IN_PARAM,OUT_PARAM,MAT INV.CNV.REC,MAT INV.REC)
  *
  SEL.WHSE = '';  SEL.LOC = ''
  SEL.SERIAL = '';SEL.MILL = ''
  SEL.QTY = '';    SEL.AMOUNT = ''
  SEL.DATE = '';  SEL.PERIOD = ''
  SEL.RECNO = ''; SEL.OPER.ID = ''
  SEL.DIV = '';   SEL.SOURCE = ''
  SEQ.ARR = INVR.AUDIT.NO
  ID.CNT = DCOUNT(SEQ.ARR,VM)
  IF ID.CNT >=1 THEN
    FOR I = 1 TO ID.CNT
      SEQ.ARR<1,I> = CONO:SEQ.ARR<1,I>
    NEXT I
    CONVERT VM TO AM IN SEQ.ARR
    FORMLIST SEQ.ARR TO 0
    CMD = 'SSELECT INV_AUDIT_HIST BY @ID BY DIV BY INAH_WHSE BY INAH_LOC'
    PERFORM CMD RTNLIST SYSLIST CAPTURING RESPONSE
    DONE = 0 ; LN.CNT=0
    LOOP
      READNEXT SEL.ID FROM SYSLIST ELSE DONE=1
    UNTIL (DONE) DO
      MATREAD INAH.REC FROM INV_AUDIT_HIST, SEL.ID THEN
        LN.CNT += 1
        ROND = 0.5
        IF INAH.QTY < 0 THEN ROND = -0.5
        SEL.SOURCE<1,LN.CNT> = INAH.SRC
        SEL.DATE<1,LN.CNT> = OCONV(INAH.DATE,'D2/')
        IF CATG.TRK.LVL='S' THEN
          SEL.SERIAL<1,LN.CNT> = INAH.SERIAL
        END
        SEL.RECNO<1,LN.CNT> = INAH.TRAN
        SEL.DIV<1,LN.CNT> = INAH.DV.DP.CC[1,2]
        SEL.WHSE<1,LN.CNT> = INAH.WHSE
        SEL.LOC<1,LN.CNT> = INAH.LOC
        SEL.QTY<1,LN.CNT> = OCONV(INT(((INAH.QTY/ICR.DV1)*ICR.MT1)/ICR.DV2+ROND),ICR.CNV)
        SEL.AMOUNT<1,LN.CNT> = OCONV(INAH.EXT.COST,'MD2')
        SEL.PERIOD<1,LN.CNT> = INAH.PERIOD
        MATREAD ISTK.REC FROM INV_SERIAL, CONO:INAH.SERIAL ELSE MAT ISTK.REC = ""
        SEL.MILL<1,LN.CNT> = ISTK.MILL.ID
        SEL.OPER.ID<1,LN.CNT> = INAH.OPER.ID
      END ELSE
        MAT INAH.REC = ""
      END
    REPEAT
  END

*
*---- BUILD RBO RECORD
*
  STATUS = RBO.setProperty('','SEL_SOURCE',SEL.SOURCE)
  STATUS = RBO.setProperty('','SEL_DATE',SEL.DATE)
  STATUS = RBO.setProperty('','SEL_SERIAL',SEL.SERIAL)
  STATUS = RBO.setProperty('','SEL_RECNO',SEL.RECNO)
  STATUS = RBO.setProperty('','SEL_DIV',SEL.DIV)
  STATUS = RBO.setProperty('','SEL_WHSE',SEL.WHSE)
  STATUS = RBO.setProperty('','SEL_LOC',SEL.LOC)
  STATUS = RBO.setProperty('','SEL_QTY',SEL.QTY)
  STATUS = RBO.setProperty('','SEL_AMOUNT',SEL.AMOUNT)
  STATUS = RBO.setProperty('','SEL_PERIOD',SEL.PERIOD)
  STATUS = RBO.setProperty('','SEL_MILL',SEL.MILL)
  STATUS = RBO.setProperty('','SEL_OPER_ID',SEL.OPER.ID)
  RETURN
*
SET.ERROR: 
*
  STATUS = RBO.setProperty('','ServerStatus',1)
  STATUS = RBO.setProperty('','ServerMessage',ERRMSG)
  RETURN
END
