*********************************************************************
* REVISION    - [12.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* PROGRAM     - EOD_CLOSE_PreProcess
* DESCRIPTION - This is the generic pre-process for all module's EOD/EOM
* CLOSING Processes.
* ID property will contain: CONO:ModulePrefix(e.g.,"APD"):"FISCAL"
* The ModulePrefix will determine the work filenames to be used.

*T505 09/05/2005 TestTrack Redback
*ENDDOC
*********************************************************************
*
***** INSERT FILE EQUATE
*
$INCLUDE WWINSERT RBO.H
$INCLUDE PMC.CPYLIB COMPANY
$INCLUDE PMC.CPYLIB SALESDATES
$INCLUDE PMC.CPYLIB FISCAL
$INCLUDE PMC.CPYLIB DIVISION ;* T23278
$INCLUDE CPYLIB CHAR
*
**** INTITIALIZATION
*
***** SETUP ERRMSG ROUTINE
*
ERRMSG=''
*
*
STATUS = RBO.getProperty('','PMCProperty',PMCProperty)
CONO=PMCProperty<1,4>
STATUS = RBO.getProperty('','ID',ID)
MODULE=ID[4,3]
BEGIN CASE
   CASE MODULE[1,2] = 'AP'
   CASE MODULE[1,2] = 'AR'
   CASE 1
      MODULE = MODULE[1,2]
END CASE
STATUS = RBO.getProperty('','DivCode',DIV.CODE)
STATUS = RBO.getProperty('','DM_Flag',D.M.FLG)
STATUS = RBO.getProperty('','FngdFlag',FNGD.FLG)
*
***** OPEN FILES
*
OPEN '','COMPANY' TO COMPANY ELSE ERRMSG='COMPANY FILE MISSING';GOTO 93000
OPEN '','CONTROL' TO CONTROL ELSE ERRMSG='CONTROL FILE MISSING';GOTO 93000
OPEN '','DIVISION' TO DIVISION ELSE ERRMSG='DIVISION FILE IS MISSING';GOTO 93000;* T23278
OPEN '','SECURITY' TO SECURITY ELSE ERRMSG='SECURITY FILE MISSING';GOTO 93000
OPEN '','EOD.HIST' TO EOD.HIST ELSE ERRMSG='EOD.HIST FILE MISSING';GOTO 93000
*
READ SECURITY.REC FROM CONTROL, CONO:"DIV.SECURITY" ELSE
   SECURITY.REC = 'N'
   SECURITY.REC<2> = 'N'
END
IF SECURITY.REC<1> = "N" THEN DIV.CODE = "ALL"
READ DIVISION.REC FROM CONTROL, CONO:"DIVISIONS" ELSE
   ERRMSG = "CANNOT LOCATE CONTROL, DIVISIONS"
   GOTO 93000
END
IF SECURITY.REC<1> = "Y" AND SECURITY.REC<2> = "Y" THEN
   IF DIV.CODE = "00" OR DIV.CODE = "ALL" THEN
      ERRMSG = " 'ALL' OR '00' INVALID WHEN DIVISION-LEVEL POSTING & CLOSING IS SELECTED"
      GOTO 93000
   END
   LOCATE DIV.CODE IN DIVISION.REC<1>,1 SETTING POS ELSE 
      ERRMSG = "Division ":DIV.CODE:" not found on Control File DIVISIONS Record"
      GOTO 93000
   END
   ALL.DIVS.COUNT = DCOUNT(DIVISION.REC<1>,VM)
END ELSE
   POS = 1; ALL.DIVS.COUNT = 1
END
MATREAD COMP.REC FROM COMPANY, CONO ELSE
   ERRMSG = "COMPANY RECORD IS MISSING"
   GOTO 93000
END
IF FNGD.FLG = 'F' AND CO.OPS # 'Y' THEN
  ERRMSG='You have not licensed this function.'
  GOTO 93000
END
IC.PER=''; OP.PER=''
IF CO.ICS = "Y" THEN
   MATREAD FISCAL.REC FROM CONTROL, CONO:'ICFISCAL' ELSE
      ERRMSG = 'CANNOT LOCATE CONTROL, ICFISCAL'
      GOTO 93000
   END
   IC.PER = FR.CURR.PER<1,POS>;* T23278
END
IF CO.OPS = "Y" THEN
   MATREAD FISCAL.REC FROM CONTROL, CONO:'OPFISCAL' ELSE
      ERRMSG = 'CANNOT LOCATE CONTROL, OPFISCAL'
      GOTO 93000
   END
   OP.PER = FR.CURR.PER<1,POS>;* T23278
END
MATREAD FISCAL.REC FROM CONTROL,CONO:"JCFISCAL" THEN JC.YEAR=FR.CURR.PER<1,POS>[1,4]
*T505   JC.YEAR = FR.CURR.PER<1,POS>[1,4]
 
READ FNGD.EOM FROM CONTROL, CONO:"FNGD.EOM" ELSE FNGD.EOM = ""
SYS.FISCAL = MODULE:'FISCAL'
WRITE SYS.FISCAL : " SYS.FISCAL" ON CONTROL,"SYS26"
MATREADU FISCAL.REC FROM CONTROL, CONO:SYS.FISCAL ELSE
   RELEASE CONTROL, CONO:SYS.FISCAL
   ERRMSG = 'CANNOT LOCATE CONTROL, ':SYS.FISCAL
   GOTO 93000
END
BEGIN CASE
   CASE FR.PRINT<1,POS> = "X" AND FNGD.FLG # "F"
      RELEASE CONTROL, CONO:SYS.FISCAL
      ERRMSG = 'E R R O R !!! FLAG IS SET TO ABORT ALL END OF PERIOD PROCEDURES'
      GOTO 93000
   CASE FR.PRINT<1,POS> = "O" AND FNGD.FLG # "F"
      RELEASE CONTROL, CONO:SYS.FISCAL
      ERRMSG = "E R R O R !!! THE END OF ":D.M.FLG:" REPORT IS OUT OF BALANCE.  UNABLE TO CLOSE."
      GOTO 93000
   CASE FR.NEXT.PER<1,POS> + 0 = 0 AND FNGD.FLG # "F"
      RELEASE CONTROL, CONO:SYS.FISCAL
      ERRMSG = 'YOU NEED TO RUN END OF ':D.M.FLG:' PROCESSING BEFORE YOU CLOSE THE ':D.M.FLG
      GOTO 93000
   CASE FR.PRINT<1,POS> = '' AND FNGD.FLG # "F"
      RELEASE CONTROL, CONO:SYS.FISCAL
      ERRMSG = 'YOU NEED TO PRINT THE END OF ':D.M.FLG:' SUMMARY REPORT BEFORE YOU CLOSE'
      GOTO 93000
   CASE FR.D.M.FLG<1,POS> # D.M.FLG AND FNGD.FLG # "F"
      RELEASE CONTROL, CONO:SYS.FISCAL
      ERRMSG = 'WARNING !!! YOU MUST RUN END OF ':D.M.FLG:' SUMMARY REPORT BEFORE CLOSING'
      GOTO 93000
END CASE

*commneted the below condition is checked in EOD_CLOSE_Process 
*
*IF SYS.FISCAL = "ICFISCAL" AND FNGD.FLG = "F" THEN
*   IF FNGD.EOM<8,POS> # "" THEN
*      ERRMSG = "E R R O R !!! END OF ":D.M.FLG:" ICF REPORT IS OUT OF BALANCE.  UNABLE TO CLOSE."
*      GOTO 93000
*   END
*   IF FNGD.EOM<2,POS> = "" THEN
*      ERRMSG = 'YOU NEED TO RUN THE END OF ':D.M.FLG:' ICF REPORT FOR ':DIV.CODE:' DIVISION'
*      GOTO 93000
*   END
*END
*
IF SYS.FISCAL = "JCFISCAL" AND CO.OPS = "Y" AND D.M.FLG = "PERIOD" THEN
   BEGIN CASE
      CASE FR.CURR.PER<1,POS> >= IC.PER AND CO.ICS = "Y";* T23278
         ERRMSG = 'The ICS module must be closed before you may continue'
         RELEASE CONTROL, CONO:SYS.FISCAL
         GOTO 93000
      CASE FR.CURR.PER<1,POS> >= OP.PER;* T23278
         ERRMSG = 'The OPS module must be closed before you may continue'
         RELEASE CONTROL, CONO:SYS.FISCAL
         GOTO 93000
   END CASE
END
*
*
MATREAD SALESDATES.REC FROM CONTROL, CONO:'SALESDATES' ELSE
   RELEASE CONTROL, CONO:SYS.FISCAL
   ERRMSG = 'CANNOT LOCATE CONTROL, SALESDATES'
   GOTO 93000
END
READ FISCALMON FROM CONTROL, CONO:'FISCAL' ELSE
   RELEASE CONTROL, CONO:SYS.FISCAL
   ERRMSG = 'CANNOT LOCATE CONTROL, FISCAL'
   GOTO 93000
END
READ OPENDATES FROM CONTROL, CONO:'OPENDATES' ELSE
   RELEASE CONTROL, CONO:SYS.FISCAL
   ERRMSG = 'CANNOT LOCATE CONTROL, OPENDATES'
   GOTO 93000
END
EOD.HID = ''
IF SECURITY.REC<2> = 'Y' THEN EOD.HID = '!':DIV.CODE
READ EOD.HIST.REC FROM EOD.HIST, CONO:SYS.FISCAL:FR.CURR.PER<1,POS>:EOD.HID ELSE;* T23278
   EOD.HIST.REC = ""
END
*
CurrSalesMon = SALD.CURR<1,1>
CurrSalesAlphaMon = SALD.CURR<1,3>
CurrSalesDate = OCONV(SALD.CURR<1,2>,'D2/')
GenLedMon = FISCALMON[5,2]
GenLedAlphaMon = SALESDATES.REC(GenLedMon+1)<1,2>
GenLedOpenDate = OCONV(OPENDATES<GenLedMon>,'D2/')
CurrPeriod = FR.CURR.PER<1,POS>
CurrYear = FR.CURR.PER<1,POS>[1,4]
CurrMon = FR.CURR.PER<1,POS>[5,2]
YRS = CurrYear - JC.YEAR
CurrAlphaMon = SALESDATES.REC(CurrMon+1)<1,2>
LINES = DCOUNT(EOD.HIST.REC, AM)
PerPostHistDates = ''
IF LINES < 1 THEN LINES = 1
FOR I = 1 TO LINES
   PerPostHistDates<1,I> = OCONV(EOD.HIST.REC<I>,'D2/')
NEXT I
  IF FR.CURR.DATE<1,POS> = '' THEN;* T23278
    CurrDate = OCONV(SALESDATES.REC(CurrMon+1)<1,1>,"D/")
    CurrDate = CurrDate[1,6] : CurrDate[7,4] + YRS
  END ELSE
    CurrDate = OCONV(FR.CURR.DATE<1,POS>,'D/')
  END

*
BEGIN CASE
   CASE SYS.FISCAL[1,2] = "AR" AND CO.GL.LINK<1,1> = "Y"
      GLlinkMesg = "General Ledger is LINKED     "
   CASE SYS.FISCAL[1,2] = "AR" AND CO.GL.LINK<1,1> # "Y"
      GLlinkMesg = "General Ledger is NOT LINKED "
   CASE SYS.FISCAL[1,2] = "AP" AND CO.GL.LINK<1,2> = "Y"
      GLlinkMesg = "General Ledger is LINKED     "
   CASE SYS.FISCAL[1,2] = "AP" AND CO.GL.LINK<1,2> # "Y"
      GLlinkMesg = "General Ledger is NOT LINKED "
   CASE SYS.FISCAL[1,2] = "PR" AND CO.GL.LINK<1,3> = "Y"
      GLlinkMesg = "General Ledger is LINKED     "
   CASE SYS.FISCAL[1,2] = "PR" AND CO.GL.LINK<1,3> # "Y" 
      GLlinkMesg = "General Ledger is NOT LINKED "
   CASE SYS.FISCAL[1,2] = "FA" AND CO.GL.LINK<1,4> = "Y"
      GLlinkMesg = "General Ledger is LINKED     "
   CASE SYS.FISCAL[1,2] = "FA" AND CO.GL.LINK<1,4> # "Y"
      GLlinkMesg = "General Ledger is NOT LINKED "
   CASE SYS.FISCAL[1,2] = "IC" AND CO.GL.LINK<1,5> = "Y"
      GLlinkMesg = "General Ledger is LINKED     "
   CASE SYS.FISCAL[1,2] = "IC" AND CO.GL.LINK<1,5> # "Y"
      GLlinkMesg = "General Ledger is NOT LINKED "
   CASE SYS.FISCAL[1,2] = "JC" AND CO.GL.LINK<1,6> = "Y"
      GLlinkMesg = "General Ledger is LINKED     "
   CASE SYS.FISCAL[1,2] = "JC" AND CO.GL.LINK<1,6> # "Y"
      GLlinkMesg = "General Ledger is NOT LINKED "
   CASE SYS.FISCAL[1,2] = "OP" AND CO.GL.LINK<1,7> = "Y"
      GLlinkMesg = "General Ledger is LINKED     "
   CASE SYS.FISCAL[1,2] = "OP" AND CO.GL.LINK<1,7> # "Y"
      GLlinkMesg = "General Ledger is NOT LINKED "
END CASE
* Set return properties here
STATUS=RBO.setProperty('','DivPos',POS)
STATUS=RBO.setProperty('','AllDivsCount',ALL.DIVS.COUNT)
STATUS=RBO.setProperty('','CurrSalesMon',CurrSalesMon)
STATUS=RBO.setProperty('','CurrSalesAlphaMon',CurrSalesAlphaMon)
STATUS=RBO.setProperty('','CurrSalesDate',CurrSalesDate)
STATUS=RBO.setProperty('','PerPostHistDates',PerPostHistDates)
STATUS=RBO.setProperty('','GenLedMon',GenLedMon)
STATUS=RBO.setProperty('','GenLedAlphaMon',GenLedAlphaMon)
STATUS=RBO.setProperty('','GenLedOpenDate',GenLedOpenDate)
STATUS=RBO.setProperty('','CurrMon',CurrMon)
STATUS=RBO.setProperty('','CurrAlphaMon',CurrAlphaMon)
STATUS=RBO.setProperty('','CurrDate',CurrDate)
STATUS=RBO.setProperty('','GLlinkMesg',GLlinkMesg)
GOTO 99999
93000 *
STATUS=RBO.setProperty('','ServerStatus','1')
STATUS=RBO.setProperty('','ServerMessage',ERRMSG)
99999 END
