SUBROUTINE ORDM_JOB_LINE_INQ
********************************************************************************
*   Program name :- ORDM_JOB_LINE_INQ
*   Created:- 3/3/2006
*   Programmer :- Suhail Hussain S
********************************************************************************
$INCLUDE WWINSERT RBO.H

$INCLUDE CPYLIB COMMON1
$INCLUDE JCS.CPYLIB COM.JCS.LINK
$INCLUDE ICS.CPYLIB COM.INV.MAIN
$INCLUDE ICS.CPYLIB COM.INV.SERIAL
$INCLUDE JCS.CPYLIB COM.INV.STATS
$INCLUDE PMC.CPYLIB COM.CUST
$INCLUDE OPS.CPYLIB COM.ORDER

$DEFINE INVENTORY
$DEFINE ORDER
$DEFINE ORDERDETAILINQ
$DEFINE CUSTOMER
$DEFINE CATEGORY
$DEFINE INVWHSE
$DEFINE FNGDSTATS
$DEFINE FNGDORDERSTATS
$DEFINE JOB
$DEFINE FILEVARS

$INCLUDE PMC.CPYLIB CUSTOMER
$INCLUDE OPS.CPYLIB ORDER
$INCLUDE OPS.CPYLIB ORDER.JOB
$INCLUDE OPS.CPYLIB ORDER.DETAIL
$INCLUDE OPS.CPYLIB ORDER.DETAIL.INQ
$INCLUDE OPS.CPYLIB ORDER.RELEASE
$INCLUDE ICS.CPYLIB INVENTORY
$INCLUDE ICS.CPYLIB CATEGORY
$INCLUDE ICS.CPYLIB INV.WHSE
$INCLUDE ICS.CPYLIB INV.FNGD
$INCLUDE ICS.CPYLIB INV.CNV
$INCLUDE ICS.CPYLIB FNGD.BOM
$INCLUDE ICS.CPYLIB FNGD.STATS
$INCLUDE ICS.CPYLIB FNGD.ORDER.STATS
$INCLUDE ICS.CPYLIB FNGD.JOB.STATS
$INCLUDE JCS.CPYLIB JOB
$INCLUDE PMC.CPYLIB SHIP.TO
$INCLUDE CPYLIB FILE.VARS
$INCLUDE CPYLIB CHAR

   OPEN "","CUSTOMER" TO CUSTOMER ELSE ERRMSG = "CANNOT OPEN CUSTOMER FILE";GOTO 91000
   OPEN "","ORDER" TO ORDER ELSE ERRMSG = "CANNOT OPEN ORDER FILE";GOTO 91000
   OPEN "","ORDER.DETAIL" TO ORDER.DETAIL ELSE ERRMSG = "CANNOT OPEN ORDER.DETAIL FILE";GOTO 91000
   OPEN "","ORDER.RELEASE" TO ORDER.RELEASE ELSE ERRMSG = "CANNOT OPEN ORDER.RELEASE FILE";GOTO 91000
   OPEN "","INVENTORY" TO INVENTORY ELSE ERRMSG = "CANNOT OPEN INVENTORY FILE";GOTO 91000
   OPEN "","CATEGORY" TO CATEGORY ELSE ERRMSG = "CANNOT OPEN CATEGORY FILE";GOTO 91000
   OPEN "","INV.WHSE" TO INV.WHSE ELSE ERRMSG = "CANNOT OPEN INV.WHSE FILE";GOTO 91000
   OPEN "","INV.FNGD" TO INV.FNGD ELSE ERRMSG = "CANNOT OPEN INV.FNGD FILE";GOTO 91000
   OPEN "","FNGD.BOM" TO FNGD.BOM ELSE ERRMSG = "CANNOT OPEN FNGD.BOM FILE";GOTO 91000
   OPEN "","FNGD.STATS" TO FNGD.STATS ELSE ERRMSG = "CANNOT OPEN FNGD.STATS FILE";GOTO 91000
   OPEN "","FNGD.ORDER.STATS" TO FNGD.ORDER.STATS ELSE ERRMSG = "CANNOT OPEN  FILE";GOTO 91000
   OPEN "","FNGD.JOB.STATS" TO FNGD.JOB.STATS ELSE ERRMSG = "CANNOT OPEN FNGD.JOB.STATS FILE";GOTO 91000
   OPEN "","PRICE.TABLE" TO PRICE.TABLE ELSE ERRMSG = "CANNOT OPEN PRICE.TABLE FILE";GOTO 91000
   OPEN "","WAREHOUSE" TO WAREHOUSE ELSE ERRMSG = "CANNOT OPEN WAREHOUSE FILE";GOTO 91000
   OPEN "","ESTIMATE" TO ESTIMATE ELSE ERRMSG = "CANNOT OPEN ESTIMATE FILE";GOTO 91000
   OPEN "","JOB" TO JOB ELSE ERRMSG = "CANNOT OPEN JOB FILE";GOTO 91000
   OPEN "","CONTROL" TO CONTROL ELSE ERRMSG = "CANNOT OPEN CONTROL FILE";GOTO 91000
   OPEN "","SHIP.TO" TO SHIP.TO ELSE ERRMSG = "CANNOT OPEN SHIP.TO FILE";GOTO 91000

   STATUS = RBO.getProperty("","INARR",INARR)
   STATUS = RBO.getProperty("","PMCProperty",PMCProperty)
   STATUS = RBO.getProperty("","GRIDARR",OSD_FULL_ARR)   

   STATUS = RBO.setProperty("","GRIDARR","") 

   CONO           = PMCProperty<1,4>
   ORD.SHIP.TO    = INARR<1,1>
   JOBNO          = INARR<1,2>
   ORD.JOB        = INARR<1,3>
   CNV = "MD0,"

   RET_VAL         = ""
   MAT ORD.DET.SUM = ""
   MAT ORD.DET.INQ = ""

   SWAP "#" WITH VM IN ORD.SHIP.TO
   SWAP "#" WITH VM IN ORD.JOB
   
   FOR X = 1 TO DCOUNT(ORD.SHIP.TO,VM)
      TEMPORD_REC = FIELD(OSD_FULL_ARR,"¥",X,1)
      MATPARSE ORD.DET.REC FROM TEMPORD_REC,"ð"
      FOR P = 1 TO ORD.DET.REC.SIZE
        ORD.DET.SUM(P,X) = ORD.DET.REC(P)
      NEXT P
   NEXT X
   FOR X = 1 TO DCOUNT(ORD.SHIP.TO,VM)
      FOR P = 1 TO ORD.DET.REC.SIZE
        ORD.DET.REC(P) = ORD.DET.SUM(P,X)
      NEXT P
      STATUS = "L"; SHPNO = ORD.SHIP.TO<1,X>
      CALL ORDER_LINE_UPD(CONO,ORDNO,SHPNO,STATUS)
   NEXT X

   LOCATE JOBNO IN ORD.JOB<1>,1 SETTING SPTR ELSE
      ORD.JOB<1,SPTR> = JOBNO
   END
   MAT ORD.JOB.REC = ""
   LCNT = DCOUNT(ODQ.PROD,VM)
   FOR L = 1 TO LCNT
    JPTR = 1
    LOOP
      LOCATE JOBNO IN ODQ.JOB<1,L>,JPTR SETTING JL THEN
        PTR = 1
        LOOP
          LOCATE ODQ.PROD<1,L> IN OJD.PROD<1>,PTR SETTING P ELSE
            OJD.PROD<1,P> = ODQ.PROD<1,L>
            OJD.WHSE<1,P> = ODQ.WHSE<1,L>

            OJD.A.QTY<1,P> = 0
          END
          IF OJD.WHSE<1,P> = ODQ.WHSE<1,L> THEN
            OJD.A.QTY<1,P> = OJD.A.QTY<1,P> + ODQ.JOB.QTY<1,L,JL>
            PTR = 0
          END
        WHILE PTR DO
          PTR = P + 1
        REPEAT
      END ELSE
        JPTR = 0
      END
    WHILE JPTR DO
      JPTR = JL + 1
    REPEAT
   NEXT L
   LINES = DCOUNT(OJD.PROD,VM)

   START.LINE = 1
   LAST.LINE = LINES
   FOR N = START.LINE TO LAST.LINE
      MATREAD INV.REC FROM INVENTORY, CONO:OJD.PROD<1,N> ELSE
         MAT INV.REC = ""; INV.FULL.DESC = "Unknown"
      END
      $INCLUDE ICSBP INV.UM.CNV
      RET_VAL<1,N,1> = OJD.PROD<1,N>
      RET_VAL<1,N,2> = OJD.WHSE<1,N>
      RET_VAL<1,N,3> = OCONV(INT(((OJD.A.QTY<1,N> / ICR.DV1) * ICR.MT1) / ICR.DV2 + .5),ICR.CNV1)
      RET_VAL<1,N,4> = INV.FULL.DESC
   NEXT N
   STATUS = RBO.setProperty("","RETARR",RET_VAL)
   STATUS = RBO.setProperty("","DISPARR",JOBNO)
RETURN

91000*
   STATUS = RBO.setProperty("","ServerStatus",1)
   STATUS = RBO.setProperty("","ServerMessage",ERRMSG)
RETURN
