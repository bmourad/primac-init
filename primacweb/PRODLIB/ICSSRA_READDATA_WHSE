SUBROUTINE ICSSRA_READDATA_WHSE
********************************************************************************
*   Program name :- ICSSRA_READDATA_WHSE
*   Created:- 6/18/2003
*------------------------------------------------------------------------------*
*
*PROGRAMMER : G.PURUSHOTHAM RAO
* In Properties:
* --------------
*  
*
* Out Properties:
* ---------------
*  
********************************************************************************
$INCLUDE WWINSERT RBO.H

$INCLUDE CPYLIB COMMON1
$INCLUDE ICS.CPYLIB COM.INV.MAIN 
$INCLUDE ICS.CPYLIB COM.INV.SERIAL
$INCLUDE ICS.CPYLIB COM.INV.LINK

$DEFINE FILEVARS
$INCLUDE CPYLIB FILE.VARS

$DEFINE INVENTORY
$INCLUDE ICS.CPYLIB INVENTORY
$INCLUDE ICS.CPYLIB WAREHOUSE
$DEFINE INVWHSE
$INCLUDE ICS.CPYLIB INV.WHSE
$INCLUDE ICS.CPYLIB INV.HIST
$DEFINE INVWHSELOC
$INCLUDE ICS.CPYLIB INV.WHSE.LOC
$INCLUDE ICS.CPYLIB INV.STATS
$INCLUDE ICS.CPYLIB INV.CNV
$DEFINE CATEGORY
$INCLUDE ICS.CPYLIB CATEGORY
$INCLUDE ICS.CPYLIB INV.REC.ADJ
$INCLUDE PMC.CPYLIB COMPANY
$DEFINE PO
$INCLUDE PMC.CPYLIB PO
$INCLUDE APS.CPYLIB VEND.STATS
$INCLUDE APS.CPYLIB VEND.PO.STATS
$INCLUDE APS.CPYLIB VEND.PROD.STATS

$INCLUDE CPYLIB CHAR

$INCLUDE POS.CPYLIB ACCRUED.LIAB.HIST
$DEFINE INVSERIAL
$INCLUDE ICS.CPYLIB INV_SERIAL
$DEFINE INVRECEIPTS
$INCLUDE ICS.CPYLIB INV_RECEIPTS
$DEFINE INVRECPWHSE
$INCLUDE ICS.CPYLIB INV_RECP_WHSE
$DEFINE INVAUDITHIST
$INCLUDE ICS.CPYLIB INV_AUDIT_HIST
$DEFINE ICSID
$INCLUDE ICS.CPYLIB ICS.ID 
$INCLUDE PMC.CPYLIB FISCAL

* Insert method code here

DEFFUN DIVISION_POSITION(COMP.NO,CONTROL.FILE,DIV.NO)
DEFFUN CALC_STK_QTY(COST.QTY,MAT INV.CNV.REC,LN,ROND)
MAT IWH.REC = ''
MAT ORG.IWH.REC=''
RECP.NO = ''
OPEN.FLAG=1

OPEN '','INVENTORY' TO INVENTORY ELSE ERRMSG = 'INVENTORY FILE IS MISSING'; GOTO 93000
OPEN '','WAREHOUSE' TO WAREHOUSE ELSE ERRMSG = 'WAREHOUSE FILE IS MISSING'; GOTO 93000
OPEN '','CATEGORY' TO CATEGORY ELSE ERRMSG = 'CATEGORY FILE IS MISSING'; GOTO 93000
OPEN '','INV.WHSE' TO INV.WHSE ELSE ERRMSG = 'INV.WHSE FILE IS MISSING'; GOTO 93000
OPEN '','INV.HIST' TO INV.HIST ELSE ERRMSG = 'INV.HIST FILE IS MISSING'; GOTO 93000
OPEN '','INV.WHSE.LOC' TO INV.WHSE.LOC ELSE ERRMSG = 'INV.WHSE.LOC FILE IS MISSING'; GOTO 93000
OPEN '','INV_SERIAL' TO INV_SERIAL ELSE ERRMSG='INV_SERIAL FILE IS MISSING'; GOTO 93000
OPEN '','INV.STATS' TO INV.STATS ELSE ERRMSG = 'INV.STATS FILE IS MISSING'; GOTO 93000
OPEN '','INV_AUDIT_HIST' TO INV_AUDIT_HIST ELSE ERRMSG = 'INV_AUDIT_HIST FILE IS MISSING'; GOTO 93000
OPEN '','INV.REC.ADJ' TO INV.REC.ADJ ELSE ERRMSG = 'INV.REC.ADJ FILE IS MISSING'; GOTO 93000
OPEN '','PREFIX' TO PREFIX ELSE ERRMSG = 'PREFIX FILE IS MISSING'; GOTO 93000
OPEN '','COMPANY' TO COMPANY ELSE ERRMSG = 'COMPANY FILE IS MISSING'; GOTO 93000
OPEN '','CONTROL' TO CONTROL ELSE ERRMSG = 'CONTROL FILE IS MISSING'; GOTO 93000
OPEN '','SECURITY' TO SECURITY ELSE ERRMSG = 'SECURITY FILE IS MISSING'; GOTO 93000
OPEN '','ICS.SCREENS' TO M.SCREENS ELSE ERRMSG = 'ICS.SCREENS FILE IS MISSING'; GOTO 93000
OPEN '','INVENTORY.XREF' TO INVENTORY.XREF ELSE ERRMSG = 'INVENTORY.XREF FILE IS MISSING'; GOTO 93000
OPEN '','ACCRUED.LIAB.HIST' TO ACCRUED.LIAB.HIST ELSE ERRMSG = 'ACCRUED.LIAB.HIST FILE IS MISSING'; GOTO 93000
OPEN '','INV.JOB.STATS' TO INV.JOB.STATS ELSE ERRMSG = 'INV.JOB.STATS FILE IS MISSING'; GOTO 93000
OPEN '','INV_SERIAL_DELETED' TO INV_SERIAL_DELETED ELSE ERRMSG='INV_SERIAL_DELETED FILE IS MISSING'; GOTO 93000


STATUS=RBO.getProperty('','PMCProperty',PMCProperty)
LOGIN.NAME = PMCProperty<1,3>
CONO = PMCProperty<1,4>
STATUS=RBO.getProperty('','ID',PRODUCT.ID)

  READ OREC FROM CONTROL, CONO:"OPENDATES" ELSE
    ERR = "Opendates Control Record Is Missing"
    GOTO 93000
  END

  NUM.PERIODS = DCOUNT(OREC,AM)
  STATUS = RBO.setProperty('','NUM_PERIODS',NUM.PERIODS ) 

ERR_NUM = ""
PROD = PRODUCT.ID
WHSE.DESC.LIST= ""
WHSE.ID.LIST = ""
WHSE.SECURITY.LIST = ""

GEN.DIV = "00";GEN.DEPT = "00";GEN.CCTR = "000" 
STATUS=RBO.getProperty('','WHSE_NO',WHSE.NUM)

MATREAD INV.REC FROM INVENTORY, CONO:PRODUCT.ID ELSE
  ERRMSG = 'CANNOT LOCATE PRODUCT - ':PRODUCT.ID 
  ERR_NUM = "1"
  GOTO 93000
END

$INCLUDE ICSBP INV.UM.CNV
SWAP "'" WITH "" IN INV.FULL.DESC
SWAP '"' WITH "" IN INV.FULL.DESC
SWAP "." WITH "" IN INV.FULL.DESC
  STATUS = RBO.setProperty('','PRODUCT_DESC',INV.FULL.DESC ) 


    IF INV.WHSE.CODE # '' THEN
      CATG.ID = CONO:INV.LINE
      MATREAD CATG.REC FROM CATEGORY,CATG.ID THEN
        IF CATG.MAJ.LINE='FNGD'  THEN
          ERRMSG="USE FINISHED GOOD RECEIPT ADJUSTMENT FOR THIS PRODUCT"
          ERR_NUM =2 ; GOTO 93000
	 END ELSE
          EM=''
          IF CATG.INV = '' THEN EM='INVENTORY A/C'
          IF CATG.ACCRU.LIAB = '' THEN
            IF EM # '' THEN EM=EM:' AND'
            EM=EM:' ACCRUED LIABILITY A/C'
          END
          IF EM # '' THEN
            ERRMSG=EM:' NOT SET UP FOR PRODUCT LINE ':INV.LINE
            ERR_NUM =3 ; GOTO 93000
          END ELSE
            WHSE.CNT=DCOUNT(INV.WHSE.CODE,VM)
            IF INV.COST.WT + 0 = 0 THEN INV.COST.WT = 100
            IF INV.SBR + 0 = 0 THEN INV.SBR = 1
            GOSUB GET.QTY.TYPE
            GOSUB DISPLAY.HEADING
            EOI=1
          END
        END
      END ELSE
        ERRMSG = 'CANNOT LOCATE PRODUCT LINE - ':INV.LINE
	 ERR_NUM = 4 ; GOTO 93000
      END
    END ELSE
      ERRMSG = 'PRODUCT (':PROD:') IS NOT SETUP IN ANY WAREHOUSE'
	 ERR_NUM = 5 ; GOTO 93000
    END

	WHSE.COUNT = DCOUNT(INV.WHSE.CODE,VM)
	XX = 1
   IF WHSE.COUNT = 1 THEN WHSE.NUM = INV.WHSE.CODE<1,1>

   FOR X = 1 TO WHSE.COUNT 
      WHSE.ID=CONO:INV.WHSE.CODE<1,X>
      MATREAD WHSE.REC FROM WAREHOUSE,WHSE.ID THEN
        IF WHS.DIV = "" THEN WHS.DIV = GEN.DIV  

        DIV.CODE = WHS.DIV; USER.ID = UPCASE(LOGIN.NAME); ERRMSG = ''
        DV.DP.CC = WHS.DIV:GEN.DEPT:GEN.CCTR    
        CALL CK.DIV.SEC.SUB(CONO,DIV.CODE,USER.ID,ERRMSG)
	RELEASE 
        IF ERRMSG # '' THEN
          WHSE_SECURITY = "N"
        END ELSE
          WHSE_SECURITY = "Y" 
       END
	WHSE.ID.LIST<1,XX> = INV.WHSE.CODE<1,X>
	WHSE.DESC.LIST<1,XX> = INV.WHSE.CODE<1,X> : "_" : WHS.DESC
	WHSE.SECURITY.LIST<1,XX> = WHSE_SECURITY

	XX = XX + 1
      END ELSE
        *ERRMSG='RECORD FOR WAREHOUSE ':WHSE.NUM:' IS MISSING.'
        *GOSUB 93000
      END
  NEXT

  STATUS = RBO.setProperty('','WHSE_NUM',WHSE.ID.LIST)        
  STATUS = RBO.setProperty('','WHSE_DESC',WHSE.DESC.LIST)  
  STATUS = RBO.setProperty('','WHSE_SECURITY',WHSE.SECURITY.LIST) 
  STATUS = RBO.setProperty('','GRID_HEADING',GRID.HEADING) 
  STATUS = RBO.setProperty('','DIA_FLAG',DIA.FLAG) 

    IF WHSE.COUNT > 1 THEN  
	STATUS=RBO.getProperty('','WHSE_NO',WHSE.NUM)
*** ADDED
	IF WHSE.NUM = "" THEN
	   WHSE.NUM = INV.WHSE.CODE<1,1>	  	
	END
***	
    END ELSE
	STATUS=RBO.setProperty('','WHSE_NO',WHSE.NUM)
    END

    IWH.ID=CONO:PROD:'!':WHSE.NUM

*IF WHSE.COUNT > 1 THEN
*	IWH.ID=CONO:PROD:'!':INV.WHSE.CODE<1,1>
*END

MATREAD IWH.REC FROM INV.WHSE,IWH.ID THEN 
*MATREAD IWH.REC FROM INV.WHSE,IWH.ID ELSE
*ERRMSG=IWH.ID:' IS NOT OF FILE. TRY AGAIN !'
*GOTO 93000
* REMOVED MATREADU
END ;*MATREAD IWH.REC

INAH.PROD=PROD
INAH.WHSE=WHSE.NUM
ACTION=1; * build INV.WHSE fifo buckets 
TMP.CNT='' ; LAST='' ; TMP.ARR=''
PERIOD='' ; *include future posted receipts too.
MAT ORG.IWH.REC=MAT IWH.REC

*       CALL ICS_IWH_SUB(CONO,PERIOD,TMP.ARR,TMP.CNT,LAST,ACTION,OPEN.FLAG)
*T27990 CALL ICS.IWH.SUB(CONO,PERIOD,TMP.ARR,TMP.CNT,LAST,ACTION,OPEN.FLAG)
        CALL ICS_IWH_SUB(CONO,PERIOD,TMP.ARR,TMP.CNT,LAST,ACTION,OPEN.FLAG,ERRMSG)
RELEASE 
IH.ID = CONO : PROD

MATREAD IH.REC FROM INV.HIST, IH.ID ELSE 
;* REMOVED MATREADU
  MAT IH.REC = ''
END
TT = ""
RECEIPTS.ERR.MSGE = ""

IF IWH.RECP.NO = '' THEN
  ERR_NUM = 1
  ERRMSG='NO RECEIPTS LOCATED FOR ':PROD:' IN WAREHOUSE ':WHSE.NUM
  *GOSUB 91000
END ELSE
  LINES=DCOUNT(IWH.RECP.NO,VM)

  RCNT=DCOUNT(IWH.RECP.NO,VM)
  S.ORIG=IWH.ORG.FI
  S.RSV=IWH.RSV.FI
    
    COL1.LIST = ""
    COL2.LIST = ""
    COL3.LIST = ""
    COL4.LIST = ""
    SERIALSTATUS = ''   
    IRW.SERIAL.NO.LIST = ""
    WRK.SER.LOC.LIST = ""
    WRK.SER.QTY.LIST = ""
    WRK.SER.RSV.QTY.LIST = ""
    WRK.SER.DIAM.LIST = ""
    WRK.SER.STK.QTY.LIST = ""
    WRK.SER.DEL.FLG = ""

  FOR R=1 TO RCNT
    IWH.RECV.FI<1,R>=OCONV(IWH.RECV.FI<1,R>,"D2/")
    IWH.COST.FI<1,R>=OCONV(IWH.COST.FI<1,R>,'MD4')

    *COL1.LIST<1,R> = ""
    COL2.LIST<1,R> = ""
    COL3.LIST<1,R> = ""
    COL4.LIST<1,R> = ""

    S.RSV<1,R>=OCONV(INT(((S.RSV<1,R>/ICR.DV1)*ICR.MT1)/ICR.DV2+.5),ICR.CNV)
    S.ORIG<1,R>=OCONV(INT(((S.ORIG<1,R>/ICR.DV1)*ICR.MT1)/ICR.DV2+.5),ICR.CNV)
**************GET SERIALS INFORMATION
      RECEIPTS.ERR.MSGE<1,R> = ""

	RECP.NO = IWH.RECP.NO<1,R>
      INVR.ID=CONO:RECP.NO
      MATREADU INVR.REC FROM INV_RECEIPTS,INVR.ID ELSE
        RECEIPTS.ERR.MSGE<1,R>='INV_RECEIPTS ':INVR.ID:' IS MISSING.'
        CONTINUE
      END
      IRW.ID=CONO:RECP.NO:"!":WHSE.NUM
      MATREADU IRW.REC FROM INV_RECP_WHSE,IRW.ID ELSE
        RECEIPTS.ERR.MSGE<1,R> = 'INV_RECP_WHSE ':IRW.ID:' IS MISSING.'
        CONTINUE 
      END
*T27990 v
      *IF INVR.ORG.WHSE # WHSE.NUM THEN
      *  ERRMSG='Cannot adjust - product moved after receipt!'
      *  GOSUB 93000
      *  CONTINUE
      *END
*T27990 ^
    *  BEGIN CASE
     *   CASE IRW.SERIAL.NO=''
      *    RECEIPTS.ERR.MSGE<1,R>='Cannot adjust receipt, record is either cleared or cost adjusted.'
      *  CASE IRW.RSVB.QTY <=0
       *   RECEIPTS.ERR.MSGE<1,R> = "Cannot adjust receipt, entire quantity is either reserved or depleted"
       *   CONTINUE
    *  END CASE
************************************
SCNT=DCOUNT(IRW.SERIAL.NO,VM)
TT<1,-1> = " _ " : IRW.SERIAL.NO : " : IRW.ID " : IRW.ID : " = " : SCNT
IF SCNT =0 THEN SERIALSTATUS<1,R,1> = "LN"
*YYYYY<1,R> = IRW.SERIAL.NO
FOR S=1 TO SCNT
  ISTK.ID=CONO:IRW.SERIAL.NO<1,S>
  WRK.SER.DEL.FLG<1,R,S>=0
  ISTK.FND = 1
 * MATREAD ISTK.REC FROM INV_SERIAL,ISTK.ID THEN 
   MATREAD ISTK.REC FROM INV_SERIAL,ISTK.ID ELSE 
     ISTK.FND=0
     MATREAD ISTK.REC FROM INV_SERIAL_DELETED,ISTK.ID THEN
       ISTK.FND=1
	WRK.SER.DEL.FLG<1,R,S> = 1
     END ELSE ISTK.FND=0
  END 

    IF ISTK.FND THEN COL1.LIST<1,R,S>=ISTK.LOC
    *END ELSE
	*COL1.LIST<1,R,S>=''
    *END
    IWLO.ID = CONO:PRODUCT.ID:"!":WHSE.NUM:"!":ISTK.LOC
	
    RLOC = 0
    MATREAD IWLO.REC FROM INV.WHSE.LOC,IWLO.ID THEN
          
       IF CATG.TRK.LVL='S' THEN
          LOCATE IRW.SERIAL.NO<1,S> IN IWLO.SERIAL<1>,1 SETTING RLOC THEN
            SERIALSTATUS<1,R,S> = "SY"
          END ELSE 
            SERIALSTATUS<1,R,S> = "SN"
          END	
       END
    END ELSE
	SERIALSTATUS<1,R,S> = "LN"
    END
IF ISTK.FND THEN
     IRW.SERIAL.NO.LIST<1,R,S>=IRW.SERIAL.NO<1,S>
     WRK.SER.LOC.LIST<1,R,S>=ISTK.LOC
     WRK.SER.QTY.LIST<1,R,S>=ISTK.CUR.QTY
     WRK.SER.RSV.QTY.LIST<1,R,S>=ISTK.RSVB.QTY
     WRK.SER.DIAM.LIST<1,R,S>=ISTK.CUR.DIAM
     WRK.SER.STK.QTY.LIST<1,R,S>=ISTK.CUR.STK.QTY

 
*    END

*    COL1.LIST<1,R,S>=ISTK.LOC

    IF CATG.TRK.LVL='S' THEN
*      SCV.REC(22)<ESN,S>=IRW.SERIAL.NO<1,S>
	COL2.LIST<1,R,S> = IRW.SERIAL.NO<1,S>
    END
    DQTY=ISTK.ORG.QTY

*    DQTY=OCONV(INT(((DQTY/ICR.DV1)*ICR.MT1)/ICR.DV2+.5),ICR.CNV)
    DQTY=CALC_STK_QTY(DQTY,MAT INV.CNV.REC,'','')
    DQTY=OCONV(DQTY,ICR.CNV)
    IF CATG.TRK.LVL='S' THEN
      *SCV.REC(23)<ESN,S>=DQTY
	COL3.LIST<1,R,S>=DQTY
      IF (DIA.FLAG) THEN
*        SCV.REC(24)<ESN,S>=OCONV(ISTK.ORG.DIAM,'MD2')
	COL4.LIST<1,R,S> = OCONV(ISTK.ORG.DIAM,'MD2')
      END
    END ELSE
      *SCV.REC(22)<ESN,S>=DQTY
	COL2.LIST<1,R,S> = DQTY
    END
  END 
NEXT S
*************************************
NEXT  

RELEASE 
  STATUS = RBO.setProperty('','SERIALSTATUS',SERIALSTATUS)

  *STATUS = RBO.setProperty('','WRK_SER_QTY_LIST',IRWDIFF)
  STATUS = RBO.setProperty('','COLUMN1',COL1.LIST)         
  STATUS = RBO.setProperty('','COLUMN2',COL2.LIST) 
 
  STATUS = RBO.setProperty('','COLUMN3',COL3.LIST)        
  STATUS = RBO.setProperty('','COLUMN4',COL4.LIST) 

  STATUS = RBO.setProperty('','SERIAL_NO',IRW.SERIAL.NO.LIST)        
  STATUS = RBO.setProperty('','WRK_SER_DEL_FLG',WRK.SER.DEL.FLG)

  STATUS = RBO.setProperty('','IWH_RECV_FI',IWH.RECV.FI)        
  STATUS = RBO.setProperty('','IWH_PO_NO_FI',IWH.PO.NO.FI) 
 
  STATUS = RBO.setProperty('','IWH_RECP_PERIOD',IWH.RECP.PERIOD)        
  STATUS = RBO.setProperty('','IWH_COST_FI',IWH.COST.FI) 


*  V.COUNT = DCOUNT(S.RSV,VM)
*  S.COUNT = DCOUNT(S.RSV,SM)

* FOR I = 1 TO V.COUNT
*  FOR J = 1 TO S.COUNT
*	S.RSV<1,I,J> = CALC_STK_QTY(S.RSV<1,I,J>,MAT INV.CNV.REC,'','')
*  NEXT J
* NEXT I

  V.COUNT = DCOUNT(S.ORIG,VM)
  S.COUNT = DCOUNT(S.ORIG,SM)

* FOR I = 1 TO V.COUNT
*  FOR J = 1 TO S.COUNT
*	S.ORIG<1,I,J> = CALC_STK_QTY(S.ORIG<1,I,J>,MAT INV.CNV.REC,'','')
*  NEXT J
* NEXT I

  STATUS = RBO.setProperty('','IWH_ORG_FI',S.RSV)        
  STATUS = RBO.setProperty('','IWH_RSV_FI',S.ORIG) 
  
  STATUS = RBO.setProperty('','IWH_RECP_NO',IWH.RECP.NO) 
  STATUS = RBO.setProperty('','IWH_VDR_FI',IWH.VDR.FI) 
  STATUS = RBO.setProperty('','RECEIPT_DISABLED',RECEIPTS.ERR.MSGE)

END

*STATUS=RBO.getProperty('','WHSE_NO',WHSE.NUM)
DIV.POS = ""

 MATREAD WHSE.REC FROM WAREHOUSE,CONO : WHSE.NUM THEN
   IF WHS.DIV = "" THEN WHS.DIV = GEN.DIV  
    **GET PERIOD FOR THE DIVISION
     DIV.POS=DIVISION_POSITION(CONO,CONTROL,WHS.DIV)
  MATREAD FISCAL.REC FROM CONTROL, CONO:"ICFISCAL" ELSE
    ERR.FLG = 2
    ERR = "ICS Control Fiscal record is missing"
    *GOTO 99999
  END
	IF DIV.POS<1,1> = '' THEN DIV.POS = DIV.POS<1,2>
	DIVISION_PERIOD = FR.CURR.PER<1,DIV.POS>
 END
  STATUS = RBO.setProperty('','DIVISION_PERIOD',DIVISION_PERIOD)
**************
*FOR CLEARING ANY LOCKS
***
RELEASE 
***
*
  STATUS = RBO.setProperty('','WHSE_NO',WHSE.NUM)        
  
  STATUS = RBO.setProperty('','ServerStatus',ERR_NUM)        
  STATUS = RBO.setProperty('','ServerMessage',ERRMSG) 

  STATUS = RBO.setProperty('','WHSE_NUM',WHSE.ID.LIST)        
  STATUS = RBO.setProperty('','WHSE_DESC',WHSE.DESC.LIST)  
  STATUS = RBO.setProperty('','WHSE_SECURITY',WHSE.SECURITY.LIST) 
  STATUS = RBO.setProperty('','GRID_HEADING',GRID.HEADING) 
  STATUS = RBO.setProperty('','DIA_FLAG',DIA.FLAG) 

*STATUS = RBO.setProperty('','ServerMessage',"LINES : " :  LINES : " IWH.ID:  : IWH.RECP.NO :" : IWH.RECP.NO) 

* End of method code
RETURN

*
****************
GET.QTY.TYPE: 
****************
*
MAIN.HEAD = CL:'Ln Loc  '
 H1 = "Ln"
H2 = "Loc"
H3 = "Serial Number"
H4 = ""
H5 = ""
H6 = ""
H7 = ""
REC.QTY.HEAD = 'Rec Qty ':INV.UNIT<1,2> "L#3"
ADJ.QTY.HEAD = 'New Qty ':INV.UNIT<1,2> "L#3"
DIA.FLAG=0
$INCLUDE ICSBP INV.UM.CNV
BEGIN CASE
  CASE INV.UNIT<1,2> = 'SHT' AND INV.UNIT<1,3> = 'LBS'
    H4 = REC.QTY.HEAD
    H5 = ADJ.QTY.HEAD
  CASE INV.UNIT<1,2> = 'PC' AND INV.UNIT<1,3> = 'MSI'
    H4 = REC.QTY.HEAD
    H5 = ADJ.QTY.HEAD
  CASE INV.UNIT<1,2> = 'FT' AND INV.UNIT<1,3> = 'MSI'
    H4 = REC.QTY.HEAD
    H5 = ADJ.QTY.HEAD
  CASE 1
    BEGIN CASE
      CASE INV.PAP.TYPE="ROLL" OR INV.PAP.TYPE="LROLL" OR INV.PAP.TYPE="PCOAT"
        DIA.FLAG=1
        H4 = REC.QTY.HEAD
        H5 = 'Diameter'
        H6 = ADJ.QTY.HEAD
        H7 = 'Diameter'
      CASE 1
        H4 = REC.QTY.HEAD
        H5 = ADJ.QTY.HEAD
    END CASE
END CASE
RETURN
*
****************
DISPLAY.HEADING: 
****************
*
GRID.HEADING = H1 : VM : H2

IF CATG.TRK.LVL='S' THEN
  GRID.HEADING = GRID.HEADING : VM : H3 : VM : H4 : VM : H5 : VM : H6 : VM : H7 
END ELSE
  GRID.HEADING = GRID.HEADING : VM : H4 : VM : H5 
END

RETURN
*


93000 
**************
*FOR CLEARING ANY LOCKS
***
RELEASE 
***
*
  STATUS = RBO.setProperty('','ServerStatus',ERR_NUM)        
  STATUS = RBO.setProperty('','ServerMessage',ERRMSG) 

99999 
RETURN


