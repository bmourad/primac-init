SUBROUTINE ESTRLM_INV_XREF
********************************************************************************
*   Program name :- ESTRLM_INV_XREF
*   Created:- 9/30/2005
*------------------------------------------------------------------------------*
*

* In Properties:
* --------------
*  
*
* Out Properties:
* ---------------
*  
********************************************************************************
$INCLUDE WWINSERT RBO.H
* Insert method code here

$INCLUDE ICS.CPYLIB INVENTORY
$INCLUDE ICS.CPYLIB INV.CNV
$INCLUDE ICS.CPYLIB INV.WHSE
$INCLUDE CPYLIB SYSCOM
$INCLUDE CPYLIB CHAR
MAT SYSCOM.REC =  ""

ERRMSG = RBO.getProperty('','Inv_XREF',INV_ID)


*INV_ID = "001!ROLL!5000!SMOOTH!WHITE!240000!0"

CONO 			= FIELD(INV_ID,"!",1)
*PROD.LINE		= FIELD(INV_ID,"!",2)
*BASIS.WT		= FIELD(INV_ID,"!",3)
*FINISH			= FIELD(INV_ID,"!",4)
*COLOR			= FIELD(INV_ID,"!",5)
*WIDTH			= FIELD(INV_ID,"!",6)
PAP_LEN                 = FIELD(INV_ID,"!",7)

PLINE                   = FIELD(INV_ID,"!",2)
BASIS                   = FIELD(INV_ID,"!",3)
FIN                     = FIELD(INV_ID,"!",4)
CLR			= FIELD(INV_ID,"!",5)
WIDTH			= FIELD(INV_ID,"!",6)
XXLENGTH                = FIELD(INV_ID,"!",7)

*****
* New Code Added
*****
XXLENGTH	= PAP_LEN

OUTPUT_RESULT = ""
AVAIL_STR = ""
AVAIL = ""

      DIM XREF(10)
      EQU X.PROD      TO XREF(1)
      EQU X.COLOR     TO XREF(2)
      EQU X.LENGTH    TO XREF(3)
      EQU X.WIDTH     TO XREF(4)
	
OPEN "","PRODUCT.XREF" TO PRODUCT.XREF ELSE
	ERRMSG="CAN NOT OPEN PRODUCT.XREF FILE"
END

OPEN "","INVENTORY" TO INVENTORY ELSE
	ERRMSG="CAN NOT OPEN INVENTORY FILE"
END
OPEN "","INV.WHSE" TO INV.WHSE ELSE
	ERRMSG="CAN NOT OPEN INV.WHSE FILE"
END

*MATREAD XREF FROM PRODUCT.XREF, CONO:PROD.LINE:FINISH:BASIS.WT ELSE
*       MAT XREF = ""
*END
MATREAD XREF FROM PRODUCT.XREF, CONO:PLINE:FIN:BASIS ELSE
         MAT XREF = ""
END
      CURR.REF.NO = ""
      LINE.CNT = 0
      CNT = COUNT(X.PROD,VM) + (X.PROD # "")
      FOR C = 1 TO CNT
         IF CLR # "" AND CLR # X.COLOR<1,C> THEN GOTO 190
*        IF WIDTH # "" AND WIDTH # INT(X.WIDTH<1,C>/100) THEN GOTO 190      ;* REL 07.0
         IF WIDTH # "" AND WIDTH # INT(X.WIDTH<1,C>/10000) THEN GOTO 190    ;* REL 08.0
*        IF LENGTH # "" AND LENGTH # INT(X.LENGTH<1,C>/100) THEN GOTO 190   ;* REL 07.0
         IF XXLENGTH # "" AND XXLENGTH # INT(X.LENGTH<1,C>/10000) THEN GOTO 190 ;* REL 08.0
         LINE.CNT = LINE.CNT + 1
*        S$DATA(12)<S$SCR,LINE.CNT> = X.PROD<1,C>
*        OUTPUT_RESULT<1,-1> = X.PROD<1,C>
         MATREAD INV.REC FROM INVENTORY, CONO:X.PROD<1,C> ELSE
            MAT INV.REC = ""
            INV.FULL.DESC = "????????????????????"
         END
*        S$DATA(13)<S$SCR,LINE.CNT> = INV.FULL.DESC
         OUTPUT_RESULT<1,-1> = X.PROD<1,C> : "^" : INV.FULL.DESC
         AVAIL = 0
         WCNT = COUNT(INV.WHSE.CODE,VM) + (INV.WHSE.CODE # "")
         FOR WP = 1 TO WCNT
            MATREAD IWH.REC FROM INV.WHSE, CONO:X.PROD<1,C>:"!":INV.WHSE.CODE<1,WP> ELSE
               MAT IWH.REC = ""
            END
            AVAIL = AVAIL + (IWH.ON.HAND - IWH.RESV)
         NEXT WP
         MAT INV.CNV.REC = ''
         BEGIN CASE
         CASE INV.UNIT<1,2> = 'SHT' AND INV.UNIT<1,3> = 'LBS'
            ICR.CNV = "MD0"
*           ICR.DV1 = INV.M.WT; ICR.MT1 = 1000; ICR.DV2 = 1   ;* REL 07.0
            ICR.DV1 = INV.M.WT; ICR.MT1 = 1; ICR.DV2 = 1      ;* REL 08.0
         CASE 1
            ICR.CNV = "MD2"
*           ICR.DV1 = 1; ICR.MT1 = 1; ICR.DV2 = 1     ;* REL 07.0
            ICR.DV1 = 10 ; ICR.MT1 = 1; ICR.DV2 = 1   ;* REL 08.0
         END CASE
         IF AVAIL < 0 THEN
            AVAIL = INT(((AVAIL / ICR.DV1) * ICR.MT1) / ICR.DV2 - .5)
         END ELSE
            AVAIL = INT(((AVAIL / ICR.DV1) * ICR.MT1) / ICR.DV2 + .5)
         END
         AVAIL = INT(OCONV(AVAIL,ICR.CNV))
*         S$DATA(14)<S$SCR,LINE.CNT> = AVAIL
         AVAIL_STR<1,-1> = AVAIL
190   NEXT C

STATUS = RBO.setProperty('','ESTRLM_Inv_Xref', OUTPUT_RESULT<1> : "~" : AVAIL_STR)

90000 *
  STATUS = RBO.setProperty('','ServerStatus',1)
  STATUS = RBO.setProperty('','ServerMessage',ERRMSG)
  RETURN

* End of method code
RETURN


