SUBROUTINE PHYPAPE_GET_PRODUCTS
********************************************************************************
*   Program name :- PHYPAPE_GET_PRODUCTS
*   Created:- 8/20/2003
*------------------------------------------------------------------------------*
*
* AUTHOR G.PURUSHOTHAM RAO
* In Properties:
* --------------
*  
*
* Out Properties:
* ---------------
*  
********************************************************************************
$INCLUDE WWINSERT RBO.H
$INCLUDE ICS.CPYLIB INVENTORY
$INCLUDE ICS.CPYLIB INV.WHSE
$INCLUDE ICS.CPYLIB INV.WHSE.LOC
$INCLUDE ICS.CPYLIB CATEGORY
$INCLUDE PMC.CPYLIB COMPANY
$INCLUDE ICS.CPYLIB WAREHOUSE
$INCLUDE ICS.CPYLIB INV_SERIAL
$INCLUDE CPYLIB CHAR
$INCLUDE ICS.CPYLIB INV.CNV
* Insert method code here

 DEFFUN CALC_COST_QTY(STK.QTY,MAT INV.CNV.REC,ROND,LN)
 DEFFUN CALC_STK_QTY(COST.QTY, MAT INV.CNV.REC,ROND,LN)

OPEN '','INVENTORY' TO INVENTORY ELSE ERRMSG='INVENTORY FILE IS MISSING';GOTO 93000
OPEN '','INV.WHSE' TO INV.WHSE ELSE ERRMSG='INV.WHSE FILE IS MISSING';GOTO 93000
OPEN '','INV.WHSE.LOC' TO INV.WHSE.LOC ELSE ERRMSG='INV.WHSE.LOC FILE IS MISSING';GOTO 93000
OPEN '','CATEGORY' TO CATEGORY ELSE ERRMSG='CATEGORY FILE IS MISSING';GOTO 93000
OPEN '','WAREHOUSE' TO WAREHOUSE ELSE ERRMSG='WAREHOUSE FILE IS MISSING';GOTO 93000
OPEN '','COMPANY' TO COMPANY ELSE ERRMSG='COMPANY FILE IS MISSING';GOTO 93000
OPEN '','CONTROL' TO CONTROL ELSE ERRMSG='CONTROL FILE IS MISSING';GOTO 93000
OPEN '','INV_SERIAL' TO INV_SERIAL ELSE ERRMSG='INV_SERIAL FILE IS MISSING';GOTO 93000
STATUS=RBO.getProperty('','PROD_INV_LINE',PROD.LINE)
STATUS=RBO.getProperty('','PROD_WHSE',WHSE.CODE)
STATUS=RBO.getProperty('','PROD_LOC',LOC.CODE)
STATUS=RBO.getProperty('','PMCProperty',PMCProperty)
CONO = PMCProperty<1,4>
USER.ID = PMCProperty<1,3>

	MATREAD COMP.REC FROM COMPANY, CONO ELSE
	  MAT COMP.REC = ""
   	  ERRMSG = "COMPANY (" : CONO : ") NOT SETUP"
	  GOTO 93000
	END


CMD = "SSELECT INVENTORY WITH CONO = '" : CONO : "' "
CMD := "AND (INV.PAP.TYPE#'REGULAR' OR INV.PAP.TYPE#'REG' OR INV.PAP.TYPE#'') "
CMD := "AND INV.LINE = '" : PROD.LINE : "'"

UDTEXECUTE CMD

DATA = 1
I = 1
LOOP
	READNEXT INVENTORY.ID THEN
		INVENTORY.ID.LIST<1,I> = INVENTORY.ID
		I = I + 1
	END ELSE
		DATA = 0  
	END
WHILE DATA DO
REPEAT

INVENTORY.COUNT = DCOUNT(INVENTORY.ID.LIST,@VM)
J = 1
PROD_NO = ""
PROD_DESC = ""
PROD_DESCRIPTION = ""
PROD_CUR_QTY = ""
PROD_NEW_QTY = ""
PROD_DIFF_QTY = ""
INV_PAP_TYPE = "";INV_PAP_WIDTH = "";INV_FACTOR = "";INV_CORE_DIA = "";INV_UNIT = ""

FOR I = 1 TO INVENTORY.COUNT
	 SKIP = 0
	 VALUE = INVENTORY.ID.LIST<1,I>
	 PROD.NUM=VALUE
        MATREAD INV.REC FROM INVENTORY,VALUE THEN
          MATREAD CATG.REC FROM CATEGORY,CONO:INV.LINE THEN
            IF PROD.LINE = INV.LINE THEN
              IF INV.PAP.TYPE="REGULAR" OR INV.PAP.TYPE="REG" OR INV.PAP.TYPE="" THEN
                ERRMSG="THIS PRODUCT IS NOT A PAPER PRODUCT"
		  GOTO 120
              END ELSE
                LOCATE WHSE.CODE IN INV.WHSE.CODE<1>,1 SETTING WFND THEN
                  WHSE.KEY=PROD.NUM:'!':WHSE.CODE
                  MATREAD IWH.REC FROM INV.WHSE, WHSE.KEY THEN
                    LOCATE LOC.CODE IN IWH.LOC<1>,1 SETTING LFND THEN
                      EOI=1
                    END ELSE
                      *LFND=DCOUNT(IWH.LOC,VM)+1
                      *IWH.LOC<1,LFND>=LOC.CODE
                      *ERRMSG='THIS PRODUCT IS NOT SETUP FOR LOCATION - ':LOC.CODE
                      GOTO 120;SKIP=1
                    END
                    IF NOT(SKIP) THEN
                      MATREAD IWLO.REC FROM INV.WHSE.LOC, WHSE.KEY:"!":IWH.LOC<1,LFND> ELSE
                        MAT IWLO.REC=""
                        IWLO.LOC.ON.HAND=0
                      END
                      IF IWLO.SERIAL='' THEN
                        ERRMSG='THERE ARE NO SERIALS FOR THIS LOCATION'
                        GOTO 120;SKIP=1
                      END
                    END
                  END ELSE
                    ERRMSG='INV.WHSE RECORD NOT ON FILE'
                    GOTO 120;SKIP=1
                  END
                END ELSE
                  ERRMSG='PRODUCT IS NOT SETUP FOR WAREHOUSE # ':WHSE.CODE
                  GOTO 120;SKIP=1
                END
              END
            END ELSE
              ERRMSG='THIS PRODUCT DOES NOT BELONG TO PRODUCT LINE'
              GOTO 120 ;SKIP=1
            END
          END ELSE
            ERRMSG="CATEGORY (":INV.LINE:") IS NOT ON FILE"
            GOTO 120;SKIP=1
          END
        END ELSE
          ERRMSG='INVENTORY (':VALUE:') IS NOT ON FILE.'
          GOTO 120;SKIP=1
        END
	
  $INCLUDE ICSBP INV.UM.CNV

  ON.HAND=IWLO.LOC.ON.HAND
  PHS.INV.PROD=PROD.NUM
  PHS.INV.DESC=INV.DESC
  PHS.M.WGHT=INV.M.WT
  PHS.CUR.QTY=ON.HAND
  PHS.NEW.QTY=PHS.CUR.QTY
  DIFF.QTY=PHS.NEW.QTY - PHS.CUR.QTY
  PHS.UN.COST=''

  *PRODUCT NO
  PROD_NO<1,J> = PROD.NUM[4,99]

  *INVENTORY DESCRIPTION
*PROD_DESC<1,J> = INV.DESC
  PROD_DESC<1,J> = " - " : INV.DESC
  
  *CURRENT QTY
  PHS.CUR.QTY = CALC_STK_QTY(PHS.CUR.QTY,MAT INV.CNV.REC,'.5','')
  PHS.CUR.QTY = OCONV(PHS.CUR.QTY,ICR.CNV)
  PROD_CUR_QTY<1,J> = PHS.CUR.QTY

  *ADJUSTMENT QTY
  PHS.NEW.QTY = CALC_STK_QTY(PHS.NEW.QTY,MAT INV.CNV.REC,'.5','')
  PHS.NEW.QTY = OCONV(PHS.NEW.QTY,ICR.CNV)
  PROD_NEW_QTY<1,J> = PHS.NEW.QTY

  *DIFFERENCE QTY
  DIFF.QTY = CALC_STK_QTY(DIFF.QTY,MAT INV.CNV.REC,'.5','')
  DIFF.QTY = OCONV(DIFF.QTY,ICR.CNV)
  PROD_DIFF_QTY<1,J> = DIFF.QTY
 
  *INV_PAP_TYPE = "";INV_PAP_WIDTH = "";INV_FACTOR = "";INV_CORE_DIA = "";INV_UNIT = ""
  INV_PAP_TYPE<1,J> = INV.PAP.TYPE
  INV_PAP_WIDTH<1,J> = INV.PAP.WIDTH
  INV_FACTOR<1,J> = INV.FACTOR
  INV_CORE_DIA<1,J> = INV.CORE.DIA
  INV_UNIT<1,J> = INV.UNIT<1,2>
  J = J + 1
  
120*
X<1,I> = ERRMSG : "___"
NEXT

PROD_DESCRIPTION = CATS(PROD_NO,PROD_DESC)
	STATUS = RBO.setProperty("","PROD_NO",PROD_NO)
	STATUS = RBO.setProperty("","PROD_DESC",PROD_DESCRIPTION)
	STATUS = RBO.setProperty("","PROD_CUR_QTY",PROD_CUR_QTY)
	STATUS = RBO.setProperty("","PROD_NEW_QTY",PROD_NEW_QTY)
	STATUS = RBO.setProperty("","PROD_DIFF_QTY",PROD_DIFF_QTY)

	STATUS = RBO.setProperty("","INV_PAP_TYPE",INV_PAP_TYPE)
	STATUS = RBO.setProperty("","INV_PAP_WIDTH",INV_PAP_WIDTH)
	STATUS = RBO.setProperty("","INV_FACTOR",INV_FACTOR)
	STATUS = RBO.setProperty("","INV_CORE_DIA",INV_CORE_DIA)
	STATUS = RBO.setProperty("","INV_UNIT",INV_UNIT)

	STATUS = RBO.setProperty("","ServerMessage","") ;*X : "___" :INVENTORY.ID.LIST)
* ADDED v
	CALL PHYPAPE_GET_ID
	CALL PHYPAPE_READ_DATA
* ADDED ^

* End of method code
RETURN

93000*
	STATUS = RBO.setProperty("","ServerMessage",ERRMSG)

