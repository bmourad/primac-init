SUBROUTINE JCSRVWP_Write
********************************************************************************
*   Program name :- JCSRVWP_Write
*   Created:- 7/31/2003
*------------------------------------------------------------------------------*
*

* In Properties:
* --------------
*  
*
* Out Properties:
* ---------------
*  
********************************************************************************
$INCLUDE CPYLIB COMMON1
$INCLUDE JCS.CPYLIB COM.JCS.LINK
$INCLUDE ICS.CPYLIB COM.INV.MAIN  
$INCLUDE ICS.CPYLIB COM.INV.SERIAL
$INCLUDE JCS.CPYLIB COM.INV.STATS 
$INCLUDE PMC.CPYLIB COM.CUST
$INCLUDE OPS.CPYLIB COM.ORDER

$INCLUDE WWINSERT RBO.H
$DEFINE CUSTOMER
$INCLUDE PMC.CPYLIB CUSTOMER
$INCLUDE PMC.CPYLIB JOB.SALES.STATS
$INCLUDE PMC.CPYLIB INVOICE.SALES.STATS
$DEFINE JOB
$INCLUDE JCS.CPYLIB JOB
$INCLUDE JCS.CPYLIB REVERSE.WIP.HIST
$DEFINE INVJOBSTATS
$INCLUDE ICS.CPYLIB INV.JOB.STATS
$INCLUDE PMC.CPYLIB COMPANY
$INCLUDE PMC.CPYLIB COST.CNTR
$INCLUDE PMC.CPYLIB FISCAL
$DEFINE FILEVARS
$INCLUDE CPYLIB FILE.VARS

GOSUB 100		;* OPEN FILES

STATUS = RBO.getProperty('','PMCProperty', PMCPROPERTY)
CONO = PMCPROPERTY<1,4>
STATUS = RBO.getProperty('','ID', ID)

OPER.ID = PMCPROPERTY<1,3>
TODAY = DATE()
READ PERIOD.REC FROM CONTROL, CONO:"ACCT.PERIODS" ELSE
  PERIOD.REC = ""
  PERIOD.REC<1> = 12
END
NUM.PERIODS = PERIOD.REC<1>
READ CTL.WIP.TYPE FROM CONTROL, CONO : "WIP.DEFAULT" ELSE CTL.WIP.TYPE = ""
IF CTL.WIP.TYPE = "" THEN CTL.WIP.TYPE = "ALL"

ALL.TYPE = "LB"
ALL.TYPE<1,2> = "MT"
ALL.TYPE<1,3> = "OS"
ALL.TYPE<1,4> = "SP"
ALL.TYPE<1,5> = "MS"
*--- GET CURRENT FISCAL PERIOD
*
  MATREAD FISCAL.REC FROM CONTROL, CONO:"JCFISCAL" ELSE
    ERRMSG = "JCFISCAL IS NOT ON CONTROL FILE"
    GOTO 93000
  END
*
  READ DIVISION.REC FROM CONTROL, CONO:"DIVISIONS" ELSE
    ERRMSG = "DIVISIONS CONTROL RECORD IS MISSING"
    GOTO 93000
  END
  READ SECURITY.REC FROM CONTROL, CONO:"DIV.SECURITY" ELSE
    ERRMSG = "DIVISIONS SECURITY CONTROL RECORD IS MISSING"
    GOTO 93000
  END

MATREAD COMP.REC FROM COMPANY, CONO ELSE MAT COMP.REC = ''
*MATREAD JOB.REC FROM JOB, CONO:ID ELSE MAT JOB.REC = ''
MATREADU JOB.REC FROM JOB, CONO:ID THEN
END LOCKED
	ERRMSG = 'JOB record is locked by user - ':GETUSERNAME(STATUS())
END ELSE
END

DIV.CODE = JOB.DIV

IF SECURITY.REC<1> = "Y" AND SECURITY.REC<2> = "Y" THEN 
 IF DIV.CODE = "00" OR DIV.CODE = "ALL" THEN
   ERRMSG = " 'ALL' OR '00' INVALID WHEN DIVISION-LEVEL POSTING & CLOSING IS SELECTED"
   GOTO 93000
 END
 LOCATE DIV.CODE IN DIVISION.REC<1>,1 SETTING POS ELSE
   ERRMSG = "Division ":DIV.CODE:" not found in Control File DIVISIONS Record"
   GOTO 93000
 END
END ELSE
 POS = 1
END

GOSUB 200

IF RWH.REV.TYPE = "OTH" THEN
  PTR = 0
  FOR II = 1 TO 5
    LOCATE ALL.TYPE<1,II> IN CTL.WIP.TYPE<1>,1 SETTING FND ELSE
      PTR = PTR + 1
      RWH.REV.TYPE<1,PTR> = ALL.TYPE<1,II>
      IF PTR > 1 THEN
        RWH.REV.DATE<1,PTR> = RWH.REV.DATE<1,1>
        RWH.REV.PER<1,PTR> = RWH.REV.PER<1,1>
      END
     END
   NEXT II
 END
GOSUB 8000  ;* GET 'BEFORE' COSTS    ISS

CALL REVERSE_JOB_WIP(CONO,RWH.JOB,RWH.REV.TYPE,RWH.REV.PER,RWH.REV.DATE,RWH.PERIOD,FR.CURR.PER<1,POS>)
GOSUB 9000  ;* GET 'AFTER' COSTS    ISS
RWH.JB.AFTER = JOB.WIP<1,2>
RWH.LB.AFTER = JOB.LB.WIP<1,2>
RWH.MT.AFTER = JOB.MT.WIP<1,2>
RWH.OS.AFTER = JOB.OS.WIP<1,2>
RWH.SP.AFTER = JOB.SP.WIP<1,2>
RWH.MS.AFTER = JOB.MS.WIP<1,2>
        IF RWH.Z.R.QTY = "Y" THEN
          RESV.ACTION = "D"
          RESV.LOC = 0
          CALL JOB_RESV_SUB(CONO,RESV.ACTION,RESV.LOC,RWH.JOB)
          MCNT = COUNT(JOB.RESV.MATL,@VM) + (JOB.RESV.MATL # "")
          FOR M = MCNT TO 1 STEP - 1
            IF JOB.RESV.QTY<1,M> + JOB.ALOC.QTY<1,M> + JOB.USED.QTY<1,M> = 0 THEN
              JSTAT.ID = JOB.RESV.MATL<1,M>:"!":JOB.RESV.WHSE<1,M>:"!":RWH.JOB
              MATREAD INV.JS.REC FROM INV.JOB.STATS, CONO:JSTAT.ID ELSE
                JOB.RESV.MATL = DELETE(JOB.RESV.MATL,1,M,0)
                JOB.RESV.WHSE = DELETE(JOB.RESV.WHSE,1,M,0)
                JOB.RESV.DATE = DELETE(JOB.RESV.DATE,1,M,0)
                JOB.ALOC.QTY = DELETE(JOB.ALOC.QTY,1,M,0)
                JOB.RESV.QTY = DELETE(JOB.RESV.QTY,1,M,0)
                JOB.USED.QTY = DELETE(JOB.USED.QTY,1,M,0)
                JOB.ALOC.AMT = DELETE(JOB.ALOC.AMT,1,M,0)
                JOB.RESV.AMT = DELETE(JOB.RESV.AMT,1,M,0)
                JOB.USED.AMT = DELETE(JOB.USED.AMT,1,M,0)
              END
            END
          NEXT M
        END
        BEGIN CASE
          CASE RWH.REV.PER < 10000
          CASE RWH.REV.TYPE # "ALL"
          CASE RWH.REV.DATE # "ALL"
          CASE RWH.PERIOD # "ALL"
          CASE JOB.STATUS<1,1> = 1 OR JOB.STATUS<1,1> = 5
            LOCATE "3" IN JOB.STATUS<1>,1 SETTING INVOICED ELSE INVOICED = 0
            LOCATE "4" IN JOB.STATUS<1>,1 SETTING COMPLETED ELSE COMPLETED = 0
            BEGIN CASE
              CASE INVOICED + COMPLETED = 0
              CASE INVOICED = 0
                JOB.STATUS = INSERT(JOB.STATUS,1,1,0,"4")
                JOB.STAT.DATE = INSERT(JOB.STAT.DATE,1,1,0,TODAY)
                JOB.TRACK.DATE<1,10> = TODAY
              CASE COMPLETED = 0
                JOB.STATUS = INSERT(JOB.STATUS,1,1,0,"3")
                JOB.STAT.DATE = INSERT(JOB.STAT.DATE,1,1,0,TODAY)
                JOB.TRACK.DATE<1,9> = TODAY
              CASE INVOICED < COMPLETED
                JOB.STATUS = INSERT(JOB.STATUS,1,1,0,"3")
                JOB.STAT.DATE = INSERT(JOB.STAT.DATE,1,1,0,TODAY)
                JOB.TRACK.DATE<1,9> = TODAY
              CASE 1
*        IF INVOICED THEN
                JOB.STATUS = INSERT(JOB.STATUS,1,1,0,"4")
                JOB.STAT.DATE = INSERT(JOB.STAT.DATE,1,1,0,TODAY)
                JOB.TRACK.DATE<1,10> = TODAY
*        END
            END CASE
        END CASE
        MATWRITE JOB.REC ON JOB, CONO:RWH.JOB
        READU SEQ.NUM FROM CONTROL , CONO:"REVERSE.WIP" ELSE SEQ.NUM = 10001
        REV.REC = ""
        LOOP
          READ REV.REC FROM REVERSE.WIP.HIST, CONO:SEQ.NUM ELSE REV.REC = ""
        WHILE REV.REC # "" DO
          SEQ.NUM = SEQ.NUM + 1
        REPEAT
        NEW.SEQ.NO = SEQ.NUM + 1
        WRITE NEW.SEQ.NO ON CONTROL , CONO:"REVERSE.WIP"
        RWH.OPER = OPER.ID ; RWH.ENT.DATE = TODAY
        MATWRITE RWH.REC ON REVERSE.WIP.HIST , CONO:SEQ.NUM
        GOSUB 6000
        GOSUB 7000   ;* UPDATE THE INVOICE SALES STATS RECORD ISS


RETURN


100
*--- OPEN FILES
*
  OPEN '','COMPANY' TO COMPANY ELSE
    ERRMSG = 'COMPANY FILE IS MISSING' ; GOTO 93000
  END
  OPEN '','CONTROL' TO CONTROL ELSE
    ERRMSG = 'CONTROL FILE IS MISSING' ; GOTO 93000
  END
  OPEN '','JOB' TO JOB ELSE
    ERRMSG = 'JOB FILE IS MISSING' ; GOTO 93000
  END
  OPEN '','REVERSE.WIP.HIST' TO REVERSE.WIP.HIST ELSE
    ERRMSG = 'REVERSE.WIP.HIST FILE IS MISSING' ; GOTO 93000
  END
  OPEN '','CUSTOMER' TO CUSTOMER ELSE
    ERRMSG = 'CUSTOMER FILE IS MISSING' ; GOTO 93000
  END
  OPEN '','CUSTOMER.XREF' TO CUSTOMER.XREF ELSE
    ERRMSG = 'CUSTOMER.XREF FILE IS MISSING' ; GOTO 93000
  END
  OPEN '','JOB.TIME' TO JOB.TIME ELSE
    ERRMSG = 'JOB.TIME FILE IS MISSING' ; GOTO 93000
  END
  OPEN '','JOB.MATL' TO JOB.MATL ELSE
    ERRMSG = 'JOB.MATL FILE IS MISSING' ; GOTO 93000
  END
  OPEN '','JOB.OSP' TO JOB.OSP ELSE
    ERRMSG = 'JOB.OSP FILE IS MISSING' ; GOTO 93000
  END
  OPEN '','JOB.SHIP' TO JOB.SHIP ELSE
    ERRMSG = 'JOB.SHIP FILE IS MISSING' ; GOTO 93000
  END
  OPEN '','JOB.MISC' TO JOB.MISC ELSE
    ERRMSG = 'JOB.MISC FILE IS MISSING' ; GOTO 93000
  END
  OPEN '','COST.CNTR.WIP' TO COST.CNTR.WIP ELSE
    ERRMSG = 'COST.CNTR.WIP FILE IS MISSING' ; GOTO 93000
  END
  OPEN '','INVENTORY' TO INVENTORY ELSE
    ERRMSG = 'INVENTORY FILE IS MISSING' ; GOTO 93000
  END
  OPEN '','CATEGORY' TO CATEGORY ELSE
    ERRMSG = 'CATEGORY FILE IS MISSING' ; GOTO 93000
  END
  OPEN '','INV.WHSE' TO INV.WHSE ELSE
    ERRMSG = 'INV.WHSE FILE IS MISSING' ; GOTO 93000
  END
  OPEN '','INV.JOB.STATS' TO INV.JOB.STATS ELSE
    ERRMSG = 'INV.JOB.STATS FILE IS MISSING' ; GOTO 93000
  END
  OPEN '','INV.STATS' TO INV.STATS ELSE
    ERRMSG = 'INV.STATS FILE IS MISSING' ; GOTO 93000
  END
  OPEN '','INV.WHSE.LOC' TO INV.WHSE.LOC ELSE
    ERRMSG = 'INV.WHSE.LOC FILE IS MISSING' ; GOTO 93000
  END
  OPEN '','PREFIX' TO PREFIX ELSE
    ERRMSG = 'PREFIX FILE IS MISSING' ; GOTO 93000
  END
  OPEN '','SECURITY' TO SECURITY ELSE
    ERRMSG = 'SECURITY FILE IS MISSING' ; GOTO 93000
  END
  OPEN '','COST.CNTR' TO COST.CNTR ELSE
    ERRMSG = 'COST.CNTR FILE IS MISSING' ; GOTO 93000
  END
  OPEN '','INVOICE.SALES.STATS' TO INVOICE.SALES.STATS ELSE
    ERRMSG = 'INVOICE.SALES.STATS FILE IS MISSING'; GOTO 93000
  END
OPEN '','JOB.SALES.STATS' TO JOB.SALES.STATS ELSE ERRMSG = "JOB.SALES.STATS FILE IS MISSING" ; GOTO 93000
*
RETURN

****
200
****
RWH.OPER = PMCPROPERTY<1,3>
RWH.ENT.DATE = DATE()
STATUS = RBO.getProperty('','RWH_REV_DATE', RWH.REV.DATE)
RWH.JOB = ID
STATUS = RBO.getProperty('','RWH_REV_PER', RWH.REV.PER)
STATUS = RBO.getProperty('','RWH_Z_R_QTY', RWH.Z.R.QTY)
STATUS = RBO.getProperty('','RWH_PERIOD', RWH.PERIOD)
RWH.JB.BEFORE = JOB.WIP<1,2>
RWH.LB.BEFORE = JOB.LB.WIP<1,2>
RWH.MT.BEFORE = JOB.MT.WIP<1,2>
RWH.OS.BEFORE = JOB.OS.WIP<1,2>
RWH.SP.BEFORE = JOB.SP.WIP<1,2>
RWH.MS.BEFORE = JOB.MS.WIP<1,2>
STATUS = RBO.getProperty('','RWH_REV_TYPE', RWH.REV.TYPE)
RETURN

*---- UPDATE SALES STATISTICS
*
6000*
  IF CO.SAS = "Y" THEN
    MATREADU JSS.REC FROM JOB.SALES.STATS, CONO:RWH.JOB ELSE
      RELEASE JOB.SALES.STATS,CONO:RWH.JOB
     * GOTO 6999
    END
    JSS.COST.TOTAL = JOB.TOT.COST
    TOT.DCOST = ""
    TOT.SPOILAGE = ""
    TOT.SHIP = ""
    LCNT = COUNT(JOB.LB.DEPT,@VM) + (JOB.LB.DEPT # "")
    FOR LB = 1 TO LCNT
      MATREAD CCTR.REC FROM COST.CNTR, CONO:JOB.LB.CCTR<1,LB> ELSE
        MAT CCTR.REC = ""
      END
      IF CCTR.TYPE = "S" OR CCTR.TYPE = "W" OR CCTR.TYPE = "B" THEN
        LOCATE JOB.LB.CCTR<1,LB> IN JSS.PRESS<1>,1 SETTING FOND ELSE
          FOND = COUNT(JSS.PRESS,@VM) + (JSS.PRESS # "") + 1
          JSS.PRESS<1,FOND> = JOB.LB.CCTR<1,LB>
          IF FOND > 1 AND JSS.MULTI.PRESS # "Y" THEN JSS.MULTI.PRESS = "Y"
        END
      END
      TOT.SPOILAGE = TOT.SPOILAGE + JOB.LB.TCOST<1,LB,4>
    NEXT LB
    MCNT = COUNT(JOB.MT.DEPT,@VM) + (JOB.MT.DEPT # "")
    FOR MT = 1 TO MCNT
      TOT.SPOILAGE = TOT.SPOILAGE + JOB.MT.TCOST<1,MT,4>
      TOT.DCOST = TOT.DCOST + JOB.MT.DCOST<1,MT,1> + JOB.MT.DCOST<1,MT,2>
    NEXT MT
    OCNT = COUNT(JOB.OS.DEPT,@VM) + (JOB.OS.DEPT # "")
    FOR OO = 1 TO OCNT
      TOT.SPOILAGE = TOT.SPOILAGE + JOB.OS.TCOST<1,OO,4>
      TOT.DCOST = TOT.DCOST + JOB.OS.DCOST<1,OO>
    NEXT OO
    MSCNT = COUNT(JOB.MS.DEPT,@VM) + (JOB.MS.DEPT # "")
    FOR MS = 1 TO MSCNT
      TOT.SPOILAGE = TOT.SPOILAGE + JOB.MS.TCOST<1,MS,4>
      TOT.DCOST = TOT.DCOST + JOB.MS.DCOST<1,MS>
    NEXT MS
    SCNT = COUNT(JOB.SP.DEPT,@VM) + (JOB.SP.DEPT # "")
    FOR SP = 1 TO SCNT
      TOT.SPOILAGE = TOT.SPOILAGE + JOB.SP.TCOST<1,SP,4>
      TOT.DCOST = TOT.DCOST + JOB.SP.DCOST<1,SP>
      TOT.SHIP = TOT.SHIP + JOB.SP.COST<1,SP>
    NEXT SP
    JSS.VALUE.ADDED = JSS.INVOICE.TOTAL - TOT.DCOST
    JSS.SPOILAGE = TOT.SPOILAGE
    JSS.SHIP.COST = TOT.SHIP
    MATWRITE JSS.REC ON JOB.SALES.STATS, CONO:RWH.JOB
RETURN


*****************************************************************
*
*------INVOICE SALES STATS UPDATE
*
******************************************************************
*
7000*
  PROD.KEY='0'
  WHSE.KEY='0'
*  IF RWH.PERIOD = "ALL" THEN RWH.PERIOD = FR.CURR.PER;* T23278
  IF RWH.PERIOD = "ALL" THEN RWH.PERIOD = FR.CURR.PER<1,POS>;* T23278
  MATREADU ISS.REC FROM INVOICE.SALES.STATS, CONO:"_J_":RWH.JOB:"_":RWH.PERIOD:"XX_":PROD.KEY:"_":WHSE.KEY ELSE
    MAT ISS.REC = ""
  END
  ISS.CUST.ID = JOB.CUST
  ISS.SLSM.ID = JOB.SLSMN
*  ISS.INVOICE.NO = FR.CURR.PER;* T23278
  ISS.INVOICE.NO = FR.CURR.PER<1,POS>;* T23278
  ISS.INVOICE.DATE = DATE()
  ISS.SALES.CODE = JOB.SALES.CODE
  ISS.DIV = JOB.DIV
  ISS.JOB.CAT = JOB.CATG
  ISS.NO.COLORS = JOB.COLORS
*  ISS.POSTING.MONTH = FR.CURR.PER;* T23278
  ISS.POSTING.MONTH = FR.CURR.PER<1,POS>;* T23278
  ISS.MASTER = JOB.MASTER
  ISS.LABOR.DCOST = ISS.LABOR.DCOST + AFTER.LABOR.DCOST
  ISS.LABOR.FFOH = ISS.LABOR.FFOH + AFTER.LABOR.FFOH
  ISS.LABOR.VFOH = ISS.LABOR.VFOH + AFTER.LABOR.VFOH
  ISS.LABOR.SAOH = ISS.LABOR.SAOH + AFTER.LABOR.SAOH
  ISS.MATL.DCOST = ISS.MATL.DCOST + AFTER.MATL.DCOST
  ISS.MATL.FFOH = ISS.MATL.FFOH + AFTER.MATL.FFOH
  ISS.MATL.VFOH = ISS.MATL.VFOH + AFTER.MATL.VFOH
  ISS.OSP.DCOST = ISS.OSP.DCOST + AFTER.OSP.DCOST
  ISS.OSP.FFOH = ISS.OSP.FFOH + AFTER.OSP.FFOH
  ISS.SHIP.DCOST = ISS.SHIP.DCOST + AFTER.SHIP.DCOST
  ISS.SHIP.FFOH = ISS.SHIP.FFOH + AFTER.SHIP.FFOH
  ISS.MISC.DCOST = ISS.MISC.DCOST + AFTER.MISC.DCOST
  ISS.MISC.FFOH = ISS.MISC.FFOH + AFTER.MISC.FFOH 
  ISS.COST.TOTAL = ISS.COST.TOTAL + ( AFTER.LABOR.DCOST + AFTER.LABOR.FFOH  + AFTER.LABOR.VFOH  + AFTER.LABOR.SAOH  + AFTER.MATL.DCOST  + AFTER.MATL.FFOH   + AFTER.MATL.VFOH   + AFTER.OSP.DCOST   + AFTER.OSP.FFOH    + AFTER.SHIP.DCOST  + AFTER.SHIP.FFOH   + AFTER.MISC.DCOST  + AFTER.MISC.FFOH   )
  PLANT.CON = ISS.ADJUST.AMT<1,3>
  OTH = ISS.ADJUST.AMT<1,4>
*     ADJ.FACT.COST = TOT.COST + ADJ.COST + SPOIL + PLANT.CON + OTH
      *ISS.ADJUST.COST<1,1> = ADJ.FACT.COST
*     ISS.VALUE.ADDED = ISS.VALUE.ADDED - (AFTER.LABOR.DCOST + AFTER.MATL.DCOST + AFTER.OSP.DCOST + AFTER.SHIP.DCOST + AFTER.MISC.DCOST)
  ISS.VALUE.ADDED = 0 - ( ISS.MATL.DCOST + ISS.OSP.DCOST + ISS.SHIP.DCOST + ISS.MISC.DCOST)
  IF CO.SAS = "Y" THEN
    MATWRITE ISS.REC ON INVOICE.SALES.STATS, CONO:"_J_":RWH.JOB:"_":RWH.PERIOD:"XX_":PROD.KEY:"_":WHSE.KEY
  END
RETURN

******************************************************************
8000 * CAPTURE BEFORE  WIP COSTS
******************************************************************
  BEFORE.LABOR.DCOST = JOB.LB.WIP<1,3,1>
  BEFORE.LABOR.FFOH  = JOB.LB.WIP<1,3,2> 
  BEFORE.LABOR.VFOH  = JOB.LB.WIP<1,3,3>
  BEFORE.LABOR.SAOH  = JOB.LB.WIP<1,3,4>
  BEFORE.MATL.DCOST  = JOB.MT.WIP<1,3,1>
  BEFORE.MATL.FFOH   = JOB.MT.WIP<1,3,2> 
  BEFORE.MATL.VFOH   = JOB.MT.WIP<1,3,3>
  BEFORE.OSP.DCOST   = JOB.OS.WIP<1,3,1>
  BEFORE.OSP.FFOH    = JOB.OS.WIP<1,3,2> 
  BEFORE.SHIP.DCOST  = JOB.SP.WIP<1,3,1>
  BEFORE.SHIP.FFOH   = JOB.SP.WIP<1,3,2> 
  BEFORE.MISC.DCOST  = JOB.MS.WIP<1,3,1>
  BEFORE.MISC.FFOH   = JOB.MS.WIP<1,3,2> 
RETURN

********************************************************************
9000 * CAPTURE AFTER  WIP COSTS
********************************************************************
  AFTER.LABOR.DCOST = JOB.LB.WIP<1,3,1>
  AFTER.LABOR.FFOH  = JOB.LB.WIP<1,3,2> 
  AFTER.LABOR.VFOH  = JOB.LB.WIP<1,3,3>
  AFTER.LABOR.SAOH  = JOB.LB.WIP<1,3,4>
  AFTER.MATL.DCOST  = JOB.MT.WIP<1,3,1>
  AFTER.MATL.FFOH   = JOB.MT.WIP<1,3,2> 
  AFTER.MATL.VFOH   = JOB.MT.WIP<1,3,3>
  AFTER.OSP.DCOST   = JOB.OS.WIP<1,3,1>
  AFTER.OSP.FFOH    = JOB.OS.WIP<1,3,2> 
  AFTER.SHIP.DCOST  = JOB.SP.WIP<1,3,1>
  AFTER.SHIP.FFOH   = JOB.SP.WIP<1,3,2> 
  AFTER.MISC.DCOST  = JOB.MS.WIP<1,3,1>
  AFTER.MISC.FFOH   = JOB.MS.WIP<1,3,2> 
  AFTER.LABOR.DCOST = AFTER.LABOR.DCOST - BEFORE.LABOR.DCOST
  AFTER.LABOR.FFOH = AFTER.LABOR.FFOH - BEFORE.LABOR.FFOH
  AFTER.LABOR.VFOH = AFTER.LABOR.VFOH - BEFORE.LABOR.VFOH
  AFTER.LABOR.SAOH = AFTER.LABOR.SAOH - BEFORE.LABOR.SAOH
  AFTER.MATL.DCOST = AFTER.MATL.DCOST - BEFORE.MATL.DCOST
  AFTER.MATL.FFOH = AFTER.MATL.FFOH - BEFORE.MATL.FFOH 
  AFTER.MATL.VFOH = AFTER.MATL.VFOH - BEFORE.MATL.VFOH
  AFTER.OSP.DCOST = AFTER.OSP.DCOST - BEFORE.OSP.DCOST
  AFTER.OSP.FFOH = AFTER.OSP.FFOH - BEFORE.OSP.FFOH 
  AFTER.SHIP.DCOST = AFTER.SHIP.DCOST - BEFORE.SHIP.DCOST
  AFTER.SHIP.FFOH = AFTER.SHIP.FFOH - BEFORE.SHIP.FFOH
  AFTER.MISC.DCOST = AFTER.MISC.DCOST - BEFORE.MISC.DCOST
  AFTER.MISC.FFOH = AFTER.MISC.FFOH - BEFORE.MISC.FFOH
RETURN
*


*******
93000
*******
STATUS = RBO.setProperty('','ServerStatus',1)
STATUS = RBO.setProperty('','ServerMessage', ERRMSG)
END


