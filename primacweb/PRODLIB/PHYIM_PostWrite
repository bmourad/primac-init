SUBROUTINE PHYIM_PostWrite
********************************************************************************
*   Program name :- PHYIM_PostWrite
*   Created:- 8/30/2003
*------------------------------------------------------------------------------*
*

* In Properties:
* --------------
*  
*
* Out Properties:
* ---------------
*  
********************************************************************************
$INCLUDE WWINSERT RBO.H
$INCLUDE ICS.CPYLIB PHY.INV
$INCLUDE ICS.CPYLIB INV.CNV
$INCLUDE ICS.CPYLIB INVENTORY
$INCLUDE ICS.CPYLIB INV_SERIAL
$INCLUDE OPS.CPYLIB JOB.FNGD.STATS
$INCLUDE JCS.CPYLIB JOB
* Insert method code here
OPEN "","CONTROL" TO CONTROL ELSE ERRMSG="CONTROL FILE IS MISSING ";GOTO 90000

OPEN "","PHY.INV" TO PHY.INV ELSE
	ERRMSG = "PHY.INV FILE IS MISSING"
      	GOSUB 90000
END

OPEN "","PHY.XREF" TO PHY.XREF ELSE
	ERRMSG = "PHY.XREF FILE IS MISSING"
      	GOSUB 90000
END
OPEN "","INVENTORY" TO INVENTORY ELSE
	ERRMSG = "INVENTORY FILE IS MISSING"
      	GOSUB 90000
END

OPEN "","INV_SERIAL" TO INV_SERIAL ELSE
	ERRMSG = "INV_SERIAL FILE IS MISSING"
      	GOSUB 90000
END
OPEN "","JOB" TO JOB ELSE
	ERRMSG = "JOB FILE IS MISSING"
      	GOSUB 90000
END
OPEN "","JOB.FNGD.STATS" TO JOB.FNGD.STATS ELSE
	ERRMSG = "JOB.FNGD.STATS FILE IS MISSING"
      	GOSUB 90000
END

LOC.WAS.NULL = 0
PHY.ID = ''
PXREF.ID = ''
CONO = ''

ERRMSG = RBO.getProperty('','ID',PHY.ID)
CONO = PHY.ID[1,3]

DEFFUN CALC_COST_QTY(STK.QTY,MAT INV.CNV.REC,ROND,LN)
DEFFUN CALC_DIAM(COST.QTY,STK.QTY,MAT INV.REC)

MATREAD PHYSI.REC FROM PHY.INV,PHY.ID THEN
	*ERRMSG = RBO.getProperty('','PHYSI_WHSE',PHYSI.WHSE)
	*ERRMSG = RBO.getProperty('','PHYSI_LOC',PHYSI.LOC)
	*ERRMSG = RBO.getProperty('','PHYSI_PERIOD',PHYSI.PERIOD)

	ERRMSG = RBO.getProperty('','PHYSI_PRODUCT',PHYSI.PRODUCT)
	ERRMSG = RBO.getProperty('','PHYSI_DESC',PHYSI.DESC)
	ERRMSG = RBO.getProperty('','PHYSI_LOC',PHYSI.LOC)
	IF PHYSI.LOC='' THEN LOC.WAS.NULL=1
	ERRMSG = RBO.getProperty('','PHYSI_SERIAL',PHYSI.SERIAL)
	ERRMSG = RBO.getProperty('','PHYSI_RECP_NO',PHYSI.RECP.NO)
	ERRMSG = RBO.getProperty('','PHYSI_UNIT',PHYSI.UNIT) ;*UOM
	ERRMSG = RBO.getProperty('','PHYSI_PREV_QTY',PHYSI.PREV.QTY)
	ERRMSG = RBO.getProperty('','PHYSI_CURR_QTY',PHYSI.CURR.QTY)
	*ERRMSG = RBO.getProperty('','PHYSI_PREV_SQTY',PHYSI.PREV.SQTY)
	ERRMSG = RBO.getProperty('','PHYSI_CURR_SQTY',PHYSI.CURR.SQTY)
	ERRMSG = RBO.getProperty('','PHYSI_PREV_DIA',PHYSI.PREV.DIA)
	ERRMSG = RBO.getProperty('','PHYSI_CURR_DIA',PHYSI.CURR.DIA)
	ERRMSG = RBO.getProperty('','PHYSI_UNIT_COST',PHYSI.UNIT.COST)

	*ERRMSG = RBO.getProperty('','PHYSI_PRINT_DATE',PHYSI.PRINT.DATE)
	*ERRMSG = RBO.getProperty('','PHYSI_MAINT_DATE',PHYSI.MAINT.DATE)

	*ERRMSG = RBO.getProperty('','PHYSI_BSWT',PHYSI.BSWT)
	*ERRMSG = RBO.getProperty('','PHYSI_MWT',PHYSI.MWT)
	*ERRMSG = RBO.getProperty('','PHYSI_COLOR',PHYSI.COLOR)
	ERRMSG = RBO.getProperty('','PHYSI_OPER_ID',PHYSI.OPER.ID)
	ERRMSG = RBO.getProperty('','PHYSI_STATUS',PHYSI.STATUS)
	ERRMSG = RBO.getProperty('','PHYSI_PO',PHYSI.PO)
	ERRMSG = RBO.getProperty('','PHYSI_VENDOR',PHYSI.VENDOR)
	ERRMSG = RBO.getProperty('','PHYSI_TRAN_TO',RECP.SERIAL)

	ERRMSG = RBO.getProperty('','INV_PRECI',PHYSI.PREV.SQTY)
	ERRMSG = RBO.getProperty('','PHYSI_TEMP_INPUT',SERIAL.NOS)
	ERRMSG = RBO.getProperty('','PHYSI_TEMP_OUTPUT',RECP.NOS)
	ERRMSG = RBO.getProperty('','PHYSI_TEMP_RECEIPT',TEMP.ONHAND.LST)

	CNT = DCOUNT(PHYSI.PRODUCT,@VM)
WRITE PHYSI.SERIAL:@AM:CNT ON CONTROL,'01SERI'
	TEMP.VENDOR = ""
	TEMP.RECP.NO = ""
	TEMP.SERIAL = ""
       TEMP.ONHAND=""	
	FOR I = 1 TO CNT
		TEMP.PO = PHYSI.PO<1,I>
		TEMP.ONHAND<1,I> = TEMP.ONHAND.LST<1,I>
		MATREAD INV.REC FROM INVENTORY,CONO:PHYSI.PRODUCT<1,I> ELSE
			MAT INV.REC = ''
		END
		IF RECP.SERIAL<1,I> = "S" THEN
			TEMP.SERIAL<1,I> = PHYSI.SERIAL<1,I>
		END ELSE IF RECP.SERIAL<1,I> = "R" THEN
			TEMP.RECP.NO<1,I> = PHYSI.SERIAL<1,I>
		*END
		END ELSE
			TEMP.SERIAL<1,I> = PHYSI.SERIAL<1,I>
		END

		IF INV.M.LINE='FNGD' THEN TEMP.SERIAL<1,I> = ''

		$INCLUDE ICSBP INV.UM.CNV
		EQU INV.UOM.STK TO INV.UNIT<1,2>
	   	EQU INV.UOM.CST TO INV.UNIT<1,3>

		IF PHYSI.PO<1,I> = "INIT" THEN
			TEMP.VENDOR<1,I> = "INIT"
		END ELSE IF PHYSI.PO<1,I> # "INIT" THEN
			JOB.ID=CONO:TEMP.PO
              	MATREAD JOB.REC FROM JOB,JOB.ID THEN
              		MATREAD JFS.REC FROM JOB.FNGD.STATS,JOB.ID ELSE
                    			MAT JFS.REC=''
	                    	END
       	             	PTR = 1
              	      	LOOP
                     		LOCATE PHYSI.PRODUCT<1,I> IN JFS.PROD<1>,PTR SETTING FND THEN
                           			IF PHYSI.WHSE = JFS.WHSE<1,FND> THEN
                              			PTR = 0
	                           		END
       	                 	END ELSE
              	             		PTR = 0
                     	      		FND = 0
                        		END
	                     WHILE PTR DO
       	              	PTR = FND + 1
              	       REPEAT
                     	IF FND THEN
                     		EOJ=1
	                        	TEMP.VENDOR<1,I> = JOB.CUST
       	            	END ELSE
					TEMP.VENDOR<1,I>  = ""
				END
			END
		END
		IF PHYSI.PREV.QTY<1,I> < 0 THEN ROND="-.5" ELSE ROND=".5"
		PHYSI.PREV.QTY<1,I> = INT(((PHYSI.PREV.QTY<1,I>/ICR.MT1)*ICR.DV1)*ICR.DV2+ROND)
		*CALC_COST_QTY(PHYSI.PREV.QTY<1,I>,MAT INV.CNV.REC,ROND,'')
		
   		*ISTK.ID = CONO:PHYSI.SERIAL<1,I>"R%8"
		ISTK.ID = CONO:PHYSI.SERIAL<1,I>
 	   	*MATREAD ISTK.REC FROM INV_SERIAL, CONO:PHYSI.SERIAL"R%8" THEN
		MATREAD ISTK.REC FROM INV_SERIAL, CONO:PHYSI.SERIAL THEN
			IF ISTK.PROD = PHYSI.PRODUCT<1,I> THEN
				PHY.TRK.ID=ISTK.ID
				IF PHYSI.WHSE # ISTK.WHSE OR PHYSI.LOC # ISTK.LOC THEN
				
				END ELSE
					PHYSI.PREV.SQTY<1,I> = ISTK.CUR.STK.QTY
					PHYSI.PREV.DIA<1,I> = ISTK.CUR.DIAM
				END
			END
		END
		PHYSI.CURR.QTY<1,I> = INT(((PHYSI.CURR.QTY<1,I>/ICR.MT1)*ICR.DV1)*ICR.DV2+ROND)
            *  IF PHYSI.CURR.QTY<1,I> < 0 THEN ROND="-.5" ELSE ROND=".5"
             *    TEMP.CURR.QTY<1,I>=CALC_STK_QTY(PHYSI.CURR.QTY<1,I>,MAT INV.CNV.REC,ROND,'')
   
		*CALC_COST_QTY(PHYSI.CURR.QTY<1,I>,MAT INV.CNV.REC,'.5','')

		*TEMP.ONHAND = PHYSI.CURR.QTY<1,I>
		IF TEMP.ONHAND<1,I> < 0 THEN ROND="-.5" ELSE ROND=".5"
		BEGIN CASE
       		CASE INV.UOM.STK='SHT' AND INV.UOM.CST='LBS'
            			IF PHYSI.PREV.SQTY<1,I> = "" THEN PHYSI.PREV.SQTY<1,I> = 0
            			PHYSI.CURR.SQTY<1,I> = TEMP.ONHAND<1,I>
	         	CASE INV.UOM.STK='PC' AND INV.UOM.CST='MSI'
       	     		IF PHYSI.PREV.SQTY<1,I> = "" THEN PHYSI.PREV.SQTY<1,I> = 0
            			PHYSI.CURR.SQTY<1,I> =TEMP.ONHAND<1,I>
	         	CASE INV.UOM.STK='FT' AND INV.UOM.CST='MSI'
       	     		IF PHYSI.PREV.SQTY<1,I> = "" THEN PHYSI.PREV.SQTY<1,I> = 0
            			PHYSI.CURR.SQTY<1,I> = TEMP.ONHAND<1,I>
	         	CASE 1
       	     		IF PHYSI.PREV.SQTY<1,I> = "" THEN PHYSI.PREV.SQTY<1,I> = 0
            			PHYSI.CURR.SQTY<1,I> = TEMP.ONHAND<1,I>
	      	END CASE
		TEMP.DIA = ""
              TMP.WGT=""
		IF TEMP.ONHAND<1,I> = 0 THEN
			TEMP.DIA = 0
		END ELSE 
                    * ROND=".5"
                     *IF TEMP.ONHAND # 0 THEN
			*TMP.WGT = INT(((TEMP.ONHAND<1,I>/ICR.MT1)*ICR.DV1)*ICR.DV2+ROND)
			COST.QTY=CALC_COST_QTY(TEMP.ONHAND<1,I>,MAT INV.CNV.REC,'.5','')
            		*COST.QTY= TMP.WGT ; 
                     STK.QTY=TEMP.ONHAND<1,I>
	            	DIAM = CALC_DIAM(COST.QTY,STK.QTY,MAT INV.REC)
			IF DIAM # '' THEN
				TEMP.DIA = DIAM
			END
		END
		*PHYSI.CURR.DIA<1,I> = TEMP.DIA
	NEXT I
	PHYSI.SERIAL = TEMP.SERIAL
	WRITE PHYSI.SERIAL ON CONTROL,'01PHYSI'
	PHYSI.RECP.NO = TEMP.RECP.NO
	PHYSI.VENDOR = TEMP.VENDOR
	*	PHYSI.PO = TEMP.PO

	*ERRMSG = RBO.setProperty('','PHYSI_PO',PHYSI.PO)
	*ERRMSG = RBO.setProperty('','PHYSI_VENDOR',PHYSI.VENDOR)
	*ERRMSG = RBO.setProperty('','PHYSI_PREV_QTY',PHYSI.PREV.QTY)
	*ERRMSG = RBO.setProperty('','PHYSI_CURR_QTY',PHYSI.CURR.QTY)
	*ERRMSG = RBO.setProperty('','PHYSI_PREV_SQTY',PHYSI.PREV.SQTY)
	*ERRMSG = RBO.setProperty('','PHYSI_CURR_SQTY',PHYSI.CURR.SQTY)
	*ERRMSG = RBO.setProperty('','PHYSI_PREV_DIA',PHYSI.PREV.DIA)
	*ERRMSG = RBO.setProperty('','PHYSI_CURR_DIA',PHYSI.CURR.DIA)

	*ERRMSG = RBO.setProperty('','PHYSI_SERIAL',PHYSI.SERIAL)
	*ERRMSG = RBO.setProperty('','PHYSI_RECP_NO',PHYSI.RECP.NO)

	*MATWRITE PHYSI.REC ON PHY.INV,PHY.ID
	*	IF (LOC.WAS.NULL) THEN
       *		PXREF.ID=CONO:PHYSI.WHSE
	 *      	READU PHY.SEQ FROM PHY.XREF,PXREF.ID THEN
       *	   		NEWID=CONO:PHYSI.WHSE:"!":PHYSI.LOC
        *  			WRITE PHY.SEQ ON PHY.XREF,NEWID
         * 			DELETE PHY.XREF,PXREF.ID
	   *    	END
   		*END
	*END
END
WRITE PHYSI.CURR.SQTY ON CONTROL,'01PHY'
MATWRITE PHYSI.REC ON PHY.INV,PHY.ID
* End of method code
RETURN

90000:
STATUS = RBO.setProperty('','ServerStatus',1)
STATUS = RBO.setProperty('','ServerMessage',ERRMSG)
RETURN

