SUBROUTINE JOBM_GET_JOB_INFO
********************************************************************************
*   Program name :- JOBM_GET_JOB_INFO
*   Created:- 7/17/2003
*------------------------------------------------------------------------------*
*
******GET JOB INFO 2000
* In Properties:
* --------------
*  Cono,JOB_NO,JOB_EST,EST_PAR,JOB_CUST,EST_MATL,ESTAT,USER_WHSE_CODE
*
* Out Properties:
* ---------------
*  DEFAULT_WHSE_PROD,JOB_PRICE_PER_THOU,JOB_EST_COST,JOB_EST_SALE,JOB_DESC,JOB_CONF_AMT
********************************************************************************
$INCLUDE WWINSERT RBO.H
$INCLUDE JCS.CPYLIB JOB
$INCLUDE JES.CPYLIB ESTIMATE
$INCLUDE PMC.CPYLIB CUSTOMER
$INCLUDE PMC.CPYLIB SHIP.VIA
$INCLUDE JCS.CPYLIB JOB.STATS
$INCLUDE OPS.CPYLIB JOB.FNGD.STATS
$INCLUDE JES.CPYLIB ESTIMATE.RES
$INCLUDE ICS.CPYLIB INV.JOB.STATS
$INCLUDE ICS.CPYLIB WAREHOUSE
$INCLUDE ICS.CPYLIB INVENTORY
$INCLUDE ICS.CPYLIB CATEGORY
$INCLUDE PMC.CPYLIB COMPANY
$INCLUDE ICS.CPYLIB INV.WHSE
$INCLUDE ICS.CPYLIB INV_RECP_WHSE
$INCLUDE CPYLIB CHAR
ERRMSG = ""
* Insert method code here
OPEN "","INV_RECP_WHSE" TO INV_RECP_WHSE ELSE
	ERRMSG = "CANNOT OPEN INV_RECP_WHSE FILE"
      	GOTO 99999
END
OPEN '','ESTIMATE' TO F.EST ELSE
	ERRMSG = "UNABLE TO OPEN FILE!"
	GOTO 99999
END
OPEN '','COMPANY' TO COMPANY ELSE
	ERRMSG = "UNABLE TO OPEN FILE!"
	GOTO 99999
END

OPEN "","JOB" TO JOB ELSE
	ERRMSG = "CANNOT OPEN JOB FILE"
       GOTO 99999
END

OPEN "","INV.WHSE" TO INV.WHSE ELSE
	ERRMSG = "INV.WHSE"
	GOTO 99999
END

OPEN '','CUSTOMER' TO F.CUST ELSE
	ERRMSG = "UNABLE TO OPEN FILE!"
	GOTO 99999
END

OPEN "","SHIP.VIA" TO SHIP.VIA ELSE
	ERRMSG = "UNABLE TO SHIP.VIA"
	GOTO 99999
END
OPEN "","JOB.FNGD.STATS" TO JOB.FNGD.STATS ELSE
	ERRMSG = "JOB.FNGD.STATS"
	GOTO 99999
END

OPEN "","ESTIMATE.RES" TO ESTIMATE.RES ELSE
      ERRMSG = "CANNOT OPEN ESTIMATE.RES FILE"
      GOTO 99999
END

OPEN "","INV.JOB.STATS" TO INV.JOB.STATS ELSE
	ERRMSG = "INV.JOB.STATS"
      	GOTO 99999
END

OPEN "","WAREHOUSE" TO WAREHOUSE ELSE
	ERRMSG = "CANNOT OPEN WAREHOUSE FILE"
      	GOTO 99999
END

OPEN "","INVENTORY" TO INVENTORY ELSE
	ERRMSG = "INVENTORY"
	GOTO 99999
END

OPEN "","CATEGORY" TO CATEGORY ELSE
	ERRMSG = "CATEGORY"
	GOTO 99999
END

VAL = RBO.getProperty('','Cono',CONO)
VAL = RBO.getProperty('','JOB_NO',JOBNO)

MATREAD JOB.REC FROM JOB,CONO:JOBNO ELSE MAT JOB.REC = ""

MATREAD JFS.REC FROM JOB.FNGD.STATS, CONO:JOBNO ELSE MAT JFS.REC = ""

VAL = RBO.getProperty('','JOB_EST',JOB.EST)
IF JOB.EST = 0 THEN JOB.EST = ""
VAL = RBO.getProperty('','EST_PAR',EST.PAR)
VAL = RBO.getProperty('','JOB_CUST',JOB.CUST)
IF JOB.CUST = 0 THEN JOB.CUST = ""
VAL = RBO.getProperty('','EST_MATL',EST.MATL) ;* -> 1 OR 0 HERE WE HAVE TO PASS 1
VAL = RBO.getProperty('','ESTAT',ESTAT) ;* 0 - VALUE
VAL = RBO.getProperty('','USER_WHSE_CODE',USER.WHSE.CODE) ;* THIS IS WHEN USER SENDS SELECTED WHSE.CODES
IF USER.WHSE.CODE = 0 THEN USER.WHSE.CODE = ""
VAL = RBO.getProperty('','ACTION',ACTION)
VAL = RBO.getProperty('','JOB_TRACK_DATE',JOB.TRACK.DATE)
VAL = RBO.getProperty('','PRIOR_EST',PRIOR.EST)
VAL = RBO.getProperty('','SAVE_INV_JS_REC',SAVE.INV.JS.REC)

SAVE.INV.JS.REC = RAISE(SAVE.INV.JS.REC)

EST.PAR = RAISE(EST.PAR)
CMATCH = 0

EQU EST.PAR.QTY    TO EST.PAR<1>
EQU EST.PAR.COMP   TO EST.PAR<2>
EQU EST.PAR.DEPT   TO EST.PAR<3>
EQU EST.PAR.UPDM   TO EST.PAR<4>
EQU EST.PAR.MATL   TO EST.PAR<5>

SAVE.COMP.CNT = 0
MATREAD COMP.REC FROM COMPANY,CONO ELSE MAT COMP.REC = ""

MATREAD EST.REC FROM F.EST,CONO:JOB.EST ELSE
	MAT EST.REC = ''
	*ERRMSG = "INVALID ESTIMATE ID TRY AGAIN!"
	*GOTO 99999
END

MATREAD EST.RL.REC FROM ESTIMATE.RES, CONO:JOB.EST THEN
	ROLL.LABEL = 'Y'
END ELSE
       ROLL.LABEL = ''
END

LOCATE EST.PAR.QTY IN EST.QTY<1>,1 SETTING QP ELSE QP = 0
IF QP > 0 THEN
	JOB.PRICE.PER.THOU = EST.PRICE.THOU<1,QP>  ;*RETURN VALUE
END

GOSUB 30100 ;* IMPLEMENTED AT LAST - GET CUSTOMER DATA

2000*

JOB.TRACK.DATE<1,1> = OCONV(EST.DATE.ENTERED,"D4/") ;*ADDED
*JOB.EST = JOB.EST ;*ADDED
JOB.EST.TYPE = EST.TYPE ;*ADDED
*T430 JOB.QTY<1,1> = EST.PAR.QTY ;*ADDED
*JOB.QTY<1,1> = EST.PAR.QTY ;*ADDED

IF JOB.MASTER = "" THEN JOB.MASTER = EST.JOB ;* RETURN VALUE
IF JOB.MASTER = "" THEN JOB.MASTER = JOBNO ;* RETURN VALUE
*T430 LOCATE EST.PAR.QTY IN EST.QTY<1>,1 SETTING QP ELSE QP = 0
*T430 IF QP > 0 THEN
*T430 JOB.PRICE.PER.THOU = EST.PRICE.THOU<1,QP>
*LOCATE EST.PAR.QTY IN EST.QTY<1>,1 SETTING QP ELSE QP = 0
*IF QP > 0 THEN
 * JOB.PRICE.PER.THOU = EST.PRICE.THOU<1,QP>

*END

JOB.EST.COST = ""
JOB.EST.SALE = ""
DEFAULT_WHSE_PROD = ""

DC.CNT = COUNT(EST.DEPT.COMP,VM) + (EST.DEPT.COMP # "")
TOTAL.VSALE=0;*T21961
COMP = ''

FOR LN = 1 TO DC.CNT
	COMP = FIELD(EST.DEPT.COMP<1,LN>,"!",2)
	LOCATE COMP IN EST.PAR.COMP,1 SETTING CMATCH ELSE CMATCH = 0
	IF EST.PAR.COMP = "ALL" OR CMATCH > 0 THEN
       	IF EST.PAR.QTY = FIELD(EST.DEPT.COMP<1,LN>,"!",3) THEN
            		JOB.EST.COST = JOB.EST.COST + EST.DEPT.COMP.COST<1,LN> ;*RETURN VALUE
            		JOB.EST.SALE = JOB.EST.SALE + EST.DEPT.COMP.TSALE<1,LN> ;*RETURN VALUE
            		TOTAL.VSALE=TOTAL.VSALE+EST.DEPT.COMP.VSALE<1,LN> ;*RETURN VALUE
         	END
      END
NEXT LN

JOB.EST.SALE = JOB.EST.SALE + (INT(OCONV(JOB.EST.SALE,'MD2') * OCONV(EST.OM.PCT<1,QP>,'MD4') + .005 / 100)) ;*RETURN VALUE
CPT = 0
TOTAL.VSALE = TOTAL.VSALE + (INT(OCONV(TOTAL.VSALE,'MD2') * OCONV(EST.OM.PCT<1,QP>,'MD4') + .005 / 100)) ;*RETURN VALUE

IF EST.PAR.COMP # 'ALL' THEN
	JOB.PRICE.PER.THOU = INT(TOTAL.VSALE / (EST.PAR.QTY/1000) + .5) ;*RETURN VALUE
END

DPT = 0
CCNT1 = COUNT(EST.COMMENT.TYPE,VM) + 1
CCNT2 = COUNT(EST.COMMENTS,VM) + 1

IF CCNT2 > CCNT1 THEN CCNT = CCNT2 ELSE CCNT = CCNT1
FOR CP = 1 TO CCNT
	IF EST.COMMENT.TYPE<1,CP> # "I" THEN
      		IF EST.COMMENT.TYPE<1,CP> = "" OR EST.PAR.COMP = "ALL" THEN
      			DPT = DPT + 1
      			JOB.DESC<1,DPT> = EST.COMMENTS<1,CP> ;*RETURN VALUE
      		END ELSE
      			LOCATE EST.COMMENT.TYPE<1,CP> IN EST.PAR.COMP,1 SETTING FND2 ELSE FND2 = 0
      			IF FND2 THEN
            			DPT = DPT + 1
             			JOB.DESC<1,DPT> = EST.COMMENTS<1,CP> ;*RETURN VALUE
      			END
      		END
	END
NEXT CP
JOB.CONF.AMT = JOB.EST.SALE  ;*RETURN VALUE
*GOTO 100000

*
*---- GET RESERVE PRODUCTS FROM ESTIMATE
*
IF EST.MATL THEN
	MATREAD EST.RL.REC FROM ESTIMATE.RES, CONO:JOB.EST THEN
      		ROLL.LABEL = 'Y'
    	END ELSE
       	ROLL.LABEL = ''
     	END
      	JRM.CNT = COUNT(JOB.RESV.MATL,VM) + (JOB.RESV.MATL # "")
      	FOR JM = 1 TO JRM.CNT
       	IF SAVE.INV.JS.REC<JM> = '' THEN
            		MATREAD WHSE.REC FROM WAREHOUSE,CONO:JOB.RESV.WHSE<1,JM> ELSE MAT WHSE.REC = ''
            		IF WHS.DIV = JOB.DIV OR WHS.DIV = "00" THEN
               		JSTAT.ID = JOB.RESV.MATL<1,JM>:"!":JOB.RESV.WHSE<1,JM>:"!":JOBNO
               		MATREAD INV.JS.REC FROM INV.JOB.STATS,CONO:JSTAT.ID ELSE
                  			MAT INV.JS.REC = ''
               		END
               		SAVE.INV.JS.REC<JM,1> = IJS.REQ.DATE
               		SAVE.INV.JS.REC<JM,2> = IJS.REQ.AMT
               		SAVE.INV.JS.REC<JM,3> = IJS.REQ.QTY
            		END
         	END
      	NEXT JM
 	EST.PRODS = ""
      	EST.QTYS = ""
      	IF EST.PAR.COMP = "ALL" THEN
       	COMP.CNT =EST.COMPONENT.CNT
      	END ELSE
       	COMP.CNT = DCOUNT(EST.PAR.COMP,VM) ;*SAVE.COMP.CNT
      	END
	FOR CP = 1 TO COMP.CNT
       	IF EST.PAR.COMP = "ALL" THEN COMP = CP ELSE COMP = EST.PAR.COMP<1,CP>
         	WEB.CNT = COUNT(EST.PROD.OS.PROD<1,COMP>,SM) + 1
         	FOR WB = 1 TO WEB.CNT
            		IF EST.PROD.INV.ID<1,COMP,WB> # "" THEN
               		PROD = EST.PROD.INV.ID<1,COMP,WB>
               		IF ROLL.LABEL THEN
                  			QTY = FIELD(EST.RL.PAP.MSI<1,COMP,WB>,"!",QP)
                  			WIDTH = EST.PROD.OS.WIDTH<1,COMP,WB>
                  			GOSUB 70000
               		END ELSE
                  			QTY = FIELD(EST.PROD.PQTY<1,COMP,WB>,"!",QP)
               		END
              		LOCATE PROD IN EST.PRODS<1>,1 SETTING X ELSE NULL
              		EST.PRODS<1,X> = PROD
              		EST.QTYS<1,X> = EST.QTYS<1,X> + QTY
            		END
         	NEXT WB
      	NEXT CP	
	IF ROLL.LABEL THEN
      	END
      	PROD.CNT = COUNT(EST.PRODS,VM) + (EST.PRODS # "")
	CV = 1
	FOR I = 1 TO PROD.CNT
		MATREAD INV.REC FROM INVENTORY,CONO:EST.PRODS<1,I> ELSE MAT INV.REC = ''
	     	GOSUB 80000
        	IF CASE1.FLAG THEN EST.QTYS<1,I> = EST.QTYS<1,I> * 100
       	MATREAD CATG.REC FROM CATEGORY,CONO:INV.LINE ELSE MAT CATG.REC = ''
	      	WCNT = DCOUNT(INV.WHSE.CODE,VM)
        	DVCNT=0;WPTR=0
       	GNCNT=0;GPTR=0
	      	HMSG='Warehouse - '
	   	GMSG=''
		FOR W = 1 TO WCNT
			VALDAT = ""
            		MATREAD WHSE.REC FROM WAREHOUSE,CONO:INV.WHSE.CODE<1,W> THEN
               		IF WHS.DIV = JOB.DIV THEN
                  			DVCNT += 1
                  			IF WPTR = 0 THEN WPTR = W
                  			HMSG=HMSG:INV.WHSE.CODE<1,W>:', '
                  			VALDAT=VALDAT:INV.WHSE.CODE<1,W>:VM
				END
               		IF WHS.DIV = '00' THEN
                  			GMSG=GMSG:INV.WHSE.CODE<1,W>:', '
                  			VALDAT=VALDAT:INV.WHSE.CODE<1,W>:VM
                  			GNCNT += 1
                  			IF GPTR = 0 THEN GPTR = W
               		END
            		END
         	NEXT W	
		IF GMSG # '' THEN HMSG=HMSG:GMSG
         	IF HMSG[LEN(HMSG)-1,2]=', ' THEN HMSG=HMSG[1,LEN(HMSG)-2]
         	IF VALDAT[LEN(VALDAT),1]=VM THEN VALDAT=VALDAT[1,LEN(VALDAT)-1]
         	BEGIN CASE
            		CASE DVCNT = 1
               		WHSE = INV.WHSE.CODE<1,WPTR>
            		CASE GNCNT = 1 AND DVCNT = 0
               		WHSE = INV.WHSE.CODE<1,GPTR>
            		CASE 1
				IF NOT(WPTR) AND NOT(GPTR) THEN
					NEW.EST = '';MAT EST.REC = '';JOB.EST = '';ESTAT = 1
				END
				*USER.WHSE.CODE<1,K,1> - Product ID
				WHSE = USER.WHSE.CODE<1,CV,2> ;* - Warehouse ID
				CV += 1
		END CASE
		IF WHSE # "" AND CATG.REQ.BOOK = "Y" THEN
            		IWH.ID=CONO:EST.PRODS<1,I>:"!":WHSE
            		GOSUB GET.UNIT.PR
           	 	JRM.CNT = COUNT(JOB.RESV.MATL,VM) + (JOB.RESV.MATL # "")
            		FND = 0
            		FOR JM = 1 TO JRM.CNT UNTIL FND
               		IF JOB.RESV.MATL<1,JM> = EST.PRODS<1,I> AND JOB.RESV.WHSE<1,JM> = WHSE THEN
                  			SAVE.INV.JS.REC<JM,2> = UNIT.PR
                  			YEOW.QTY = INT(((EST.QTYS<1,I>/ICR.MT1)*ICR.DV1)*ICR.DV2 + .5)
                  			SAVE.INV.JS.REC<JM,3> = SAVE.INV.JS.REC<JM,3> + YEOW.QTY
                  			FND = 1
               		END
            		NEXT JM
            		IF NOT(FND) THEN
               		JRM.CNT = JRM.CNT + 1
               		JOB.RESV.MATL<1,JRM.CNT> = EST.PRODS<1,I>
               		JOB.RESV.WHSE<1,JRM.CNT> = WHSE
               		JOB.ALOC.QTY<1,JRM.CNT> = 0
               		JOB.RESV.QTY<1,JRM.CNT> = 0
               		JOB.USED.QTY<1,JRM.CNT> = 0
              		JOB.ALOC.AMT<1,JRM.CNT> = 0
               		JOB.RESV.AMT<1,JRM.CNT> = 0
               		JOB.USED.AMT<1,JRM.CNT> = 0
*             SAVE.INV.JS.REC<JRM.CNT,1> = TODAY + 1 ;* T24675
               		SAVE.INV.JS.REC<JRM.CNT,2> = UNIT.PR
              		SAVE.INV.JS.REC<JRM.CNT,3> = INT(((EST.QTYS<1,I>/ICR.MT1)*ICR.DV1)*ICR.DV2 + .5)
            		END
         	END
      NEXT I
END

******************SET PROPERTIES HERE***************************
100000*
IF DEFAULT_WHSE_PROD # "" THEN
	VAL = RBO.setProperty('','DEFAULT_WHSE_PROD',DEFAULT_WHSE_PROD)
END ELSE
	VAL = RBO.setProperty('','DEFAULT_WHSE_PROD','')
	VAL = RBO.setProperty('','JOB_PRICE_PER_THOU',OCONV(JOB.PRICE.PER.THOU,"MD2"))
	VAL = RBO.setProperty('','JOB_EST_COST',OCONV(JOB.EST.COST,"MD2"))
	VAL = RBO.setProperty('','JOB_CONF_AMT',OCONV(JOB.CONF.AMT,"MD2"))
	VAL = RBO.setProperty('','JOB_EST_SALE',OCONV(JOB.EST.SALE,"MD2")) ;* SAME AS JOB.CONF.AMT
	VAL = RBO.setProperty('','JOB_TOTAL_VSALE',OCONV(TOTAL.VSALE,"MD2"))
	VAL = RBO.setProperty('','JOB_DESC',JOB.DESC)
	VAL = RBO.setProperty('','JOB_MASTER',JOB.MASTER)
	VAL = RBO.setProperty('','JOB_QTY',JOB.QTY)
	VAL = RBO.setProperty('','JOB_TRACK_DATE',JOB.TRACK.DATE)
	SAVE.INV.JS.REC = LOWER(SAVE.INV.JS.REC)
	VAL = RBO.setProperty('','SAVE_INV_JS_REC',SAVE.INV.JS.REC)
END
RETURN
****************************************************************


30100*
MATREAD CUST.REC FROM F.CUST,CONO:JOB.CUST ELSE
	MAT CUST.REC = ''
	*ERRMSG = "CANNOT LOCATE CUSTOMER - ":JOB.CUST
      	*GOSUB 99999
END
*GOSUB 1250

*30200*
*GOSUB 40000
30500 *
IF JFS.PROD # "" THEN
	JOB.QTY<1,1> = SUM(JFS.M.QTY) / 1000 ; * ORDERED - RETURN VALUE
END ELSE
	JOB.QTY<1,1> = EST.PAR.QTY ; * ORDERED - RETURN VALUE
END

1250*
CUR.JOB.BAL = SUM(CUST.JOB.BAL)
LOCATE JOBNO IN CUST.JOB<1>,1 SETTING JFND THEN
	CUR.JOB.BAL = CUR.JOB.BAL - CUST.JOB.BAL<1,JFND>
END
CUR.ORD.BAL = SUM(CUST.ORD.BAL)
IF ORIG.CUST = '' THEN ORIG.CUST = JOB.CUST
*IF ORIG.CUST # JOB.CUST THEN GOSUB 3100 - NOT IMPLEMENTED
1299 RETURN

*---- CONVERT ROLL LABEL MSI TO STOCKING UNIT
*
70000 *
MATREAD INV.REC FROM INVENTORY,CONO:PROD ELSE MAT INV.REC = ''
GOSUB 80000
NQTY = QTY
***************   NEED TO USE EST WIDTH FROM PROD DEF SCREEN   ***************
*
BEGIN CASE
	CASE INV.UNIT<1,2> = "MSI"
      	CASE INV.UNIT<1,2> = "FT"
       	IF WIDTH + 0 # 0 THEN
            		NQTY = (NQTY * 1000) / (12 * OCONV(WIDTH,"MD4"))
         	END ELSE
            		NQTY = 0
         	END
      	CASE INV.UNIT<1,2> = "PC"
       	IF WIDTH + 0 # 0 THEN
            		NQTY = (NQTY * 1000) / (10 * OCONV(WIDTH,"MD4"))
         	END ELSE
            		NQTY = 0
         	END
END CASE
QTY = NQTY
RETURN

80000 *
CASE1.FLAG = ""
	BEGIN CASE
      		CASE INV.UNIT<1,2> = 'SHT' AND INV.UNIT<1,3> = 'LBS'
         		ICR.DV1 = INV.M.WT
         		ICR.MT1 = 1
         		ICR.DV2 = 1
         		ICR.CNV = "MD0"
      		CASE INV.UNIT<1,2> = 'PC' AND INV.UNIT<1,3> = 'MSI'
         		ICR.DV1 = INV.PAP.WIDTH/100
         		ICR.MT1 = 10
         		ICR.DV2 = 1
        		ICR.CNV = "MD0"
      		CASE INV.UNIT<1,2> = 'FT' AND INV.UNIT<1,3> = 'MSI'
         		ICR.DV1 = INV.PAP.WIDTH/100
         		ICR.MT1 = 100
         		ICR.DV2 = 12
         		ICR.CNV = "MD0"
      		CASE 1
         		ICR.DV1 = 10
         		ICR.MT1 = 1
         		ICR.DV2 = 1
         		ICR.CNV = "MD2"
         		CASE1.FLAG = "Y"
   	END CASE
RETURN

*****************
GET.UNIT.PR: 
*****************
*
   MATREAD IWH.REC FROM INV.WHSE,IWH.ID ELSE  MAT IWH.REC=''
   BEGIN CASE
      CASE CO.JES.PARAM<1,11> = 'R'
         DIV.POS='';FISCAL.FLAG='JC';TRAN.PERIOD=''
         ERR.FLG='';ERRMSG=''
         CALL GET.LAST.COST (IWH.ID,MAT IWH.REC,WAREHOUSE,CONTROL,ERR.FLG,ERRMSG,DIV.POS,FISCAL.FLAG,TRAN.PERIOD,LAST.PRICE)
         IF ERR.FLG='' THEN
            UNIT.PR=LAST.PRICE
         END ELSE
            UNIT.PR = 0
         END
      CASE CO.JES.PARAM<1,11> = 'S'
         UNIT.PR = IWH.STD.COST
      CASE CO.JES.PARAM<1,11> = 'A'
         UNIT.PR = IWH.AVG.COST
      CASE CO.JES.PARAM<1,11> = 'L'
         UNIT.PR = IWH.LIST.COST
      CASE 1
         UNIT.PR = 0
   END CASE
   RETURN




*******************************COMMENTED***************************************
*
99001 *
   ESTAT = 1 ;* RETURN VALUE
   GOTO 99999


99999
  IF (TRIM(ERRMSG) # "") THEN
*T430	STATUS = RBO.setProperty('','ServerStatus','E')
       STATUS = RBO.setProperty('','ServerStatus','1')
       STATUS = RBO.setProperty('','ServerMessage',ERRMSG)
  END ELSE
       STATUS = RBO.setProperty('','ServerStatus','')
       STATUS = RBO.setProperty('','ServerMessage','')
  END 
END
