SUBROUTINE COAM_Balances_Sub
********************************************************************************
*   Program name :- COAM_Balances_Sub
*   Created:- 1/16/2003
*------------------------------------------------------------------------------
*
*
* In Properties:
* --------------
*
*
* Out Properties:
* ---------------
*  
********************************************************************************
$INCLUDE WWINSERT RBO.H

* Insert method code here
$INCLUDE PMC.CPYLIB COA
$INCLUDE GLS.CPYLIB COA.BAL
$INCLUDE PMC.CPYLIB DIVISION
$INCLUDE PMC.CPYLIB DEPARTMENT
$INCLUDE PMC.CPYLIB COST.CNTR
$INCLUDE PMC.CPYLIB COMPANY
$INCLUDE CPYLIB CHAR

* Open files
ERRMSG = ''
OPEN 'COMPANY' TO COMPANY ELSE ERRMSG = 'CANNOT OPEN COMPANY FILE'
OPEN 'CONTROL' TO CONTROL ELSE ERRMSG = 'CANNOT OPEN CONTROL FILE'
OPEN 'DIVISION' TO DIVISION ELSE ERRMSG = 'CANNOT OPEN DIVISION FILE'
OPEN 'DEPARTMENT' TO DEPARTMENT ELSE ERRMSG = 'CANNOT OPEN DEPARTMENT FILE'
OPEN 'COST.CNTR' TO COST.CNTR ELSE ERRMSG = 'CANNOT OPEN COST.CNTR FILE'
OPEN 'COA' TO COA ELSE ERRMSG = 'CANNOT OPEN COA FILE'
OPEN 'CO.COA.BAL' TO CO.COA.BAL ELSE ERRMSG = 'CANNOT OPEN CO.COA.BAL FILE'
OPEN 'DP.COA.BAL' TO DP.COA.BAL ELSE ERRMSG = 'CANNOT OPEN DP.COA.BAL FILE'
OPEN 'DV.COA.BAL' TO DV.COA.BAL ELSE ERRMSG = 'CANNOT OPEN DV.COA.BAL FILE'
OPEN 'CC.COA.BAL' TO CC.COA.BAL ELSE ERRMSG = 'CANNOT OPEN CC.COA.BAL FILE'
EQV.FLG = 1
OPEN 'COA.EQUIV' TO COA.EQUIV ELSE EQV.FLG = 0
IF ERRMSG THEN
  CALL RBO_ERROR_SUB(ERRMSG)
  RETURN
END

* Get properties
STATUS = RBO.getProperty('','ID',ID)
STATUS = RBO.getProperty('','Account',ACCT.NO)
STATUS = RBO.getProperty('','Div',Div)
STATUS = RBO.getProperty('','Dept',Dept)
STATUS = RBO.getProperty('','CCtr',CCtr)

* Get CONO
CONO = ID[1,3]
MATREAD COMP.REC FROM COMPANY, CONO ELSE
  ERRMSG = 'Invalid Company ID (':CONO:').'
  CALL RBO_ERROR_SUB(ERRMSG); RETURN
END

* Get Acct
MATREAD COA.REC FROM COA, CONO : ACCT.NO ELSE
  ERRMSG = 'Cannot locate account - ' : ACCT.NO CO.ACCT.MASK
  CALL RBO_ERROR_SUB(ERRMSG); RETURN
END

READ REC FROM CONTROL, CONO:"FISCAL" ELSE
  ERRMSG = "CONTROL FISCAL IS NOT ON FILE"
  CALL RBO_ERROR_SUB(ERRMSG); RETURN
END
YEAR = REC<1>[1,4]
CURR = REC<1>[5,2]
TAPE.FLG = "Y"
READ REC FROM CONTROL, CONO:(YEAR-1):"GLS.TAPE" ELSE TAPE.FLG = "N"

* Initialize and read values
DIM OLD.CB(300)
DIM NEW.CB(300)
DIM OCOA.REC(20)
ERRMSG = ""
READ PER.DATES FROM CONTROL, CONO:"OPENDATES" ELSE
  ERRMSG = "CONTROL RECORD OPENDATES IS MISSING"
  CALL RBO_ERROR_SUB(ERRMSG); RETURN
END
READ PERIOD.REC FROM CONTROL, CONO:"ACCT.PERIODS" ELSE
  PERIOD.REC = 12
END
NUM.PERIODS = PERIOD.REC<1>

IN.ACCT.LEN = LEN(CO.ACCT.PIC)
GEN.DIV = "00"
GEN.DEPT = "00"
GEN.CCTR = "000"
ACCT.NUM = ACCT.NO
MAT OCOA.REC = MAT COA.REC
READV ALL.DIV FROM CONTROL, CONO:"DIVISIONS", 1 ELSE ALL.DIV = "01"
DIV.CNT = DCOUNT(ALL.DIV,VM)
DIVSN.CODE = ''

* Set output values
OpenBalDate = ''
ThisYearPrNo = ''
ThisYearOpenBal = ''
LastYearPrNo = ''
LastYearOpenBal = ''
BudgetPrNo = ''
BudgetOpenBal = ''

NUM.PERIODS = PERIOD.REC<1> + 1
REF.CNT = NUM.PERIODS + 1
FOR IDX = 1 TO NUM.PERIODS
  OpenBalDate<1,IDX> = OCONV(PER.DATES<IDX>,"D2/")
  IF IDX = NUM.PERIODS  THEN
    ThisYearPrNo<1,IDX> = "YE"
    LastYearPrNo<1,IDX> = "YE"
    BudgetPrNo<1,IDX>   = "YE"
  END ELSE
    ThisYearPrNo<1,IDX> = IDX
    LastYearPrNo<1,IDX> = IDX
    BudgetPrNo<1,IDX>   = IDX
  END
NEXT IDX

MAT CB.REC = ""
MAT OLD.CB = ""
MAT NEW.CB = ""
GOSUB CHECK.DIV.DEPT.CCTR
GOSUB READ.COA.BAL

MATBUILD COAM_Old_Balances_Rec FROM OLD.CB
MATBUILD COAM_Balances_Rec FROM CB.REC
COAM_Old_Balances_Rec = LOWER(COAM_Old_Balances_Rec)
COAM_Balances_Rec = LOWER(COAM_Balances_Rec)

* Set output properties
STATUS = RBO.setProperty('','Div',Div)
STATUS = RBO.setProperty('','Dept',Dept)
STATUS = RBO.setProperty('','CCtr',CCtr)
STATUS = RBO.setProperty('','OpenBalDate',OpenBalDate)
STATUS = RBO.setProperty('','ThisYearPrNo',ThisYearPrNo)
STATUS = RBO.setProperty('','ThisYearOpenBal',ThisYearOpenBal)
STATUS = RBO.setProperty('','LastYearPrNo',LastYearPrNo)
STATUS = RBO.setProperty('','LastYearOpenBal',LastYearOpenBal)
STATUS = RBO.setProperty('','BudgetPrNo',BudgetPrNo)
STATUS = RBO.setProperty('','BudgetOpenBal',BudgetOpenBal)
STATUS = RBO.setProperty('','COAM_Balances_Rec',COAM_Balances_Rec)
STATUS = RBO.setProperty('','COAM_Old_Balances_Rec',COAM_Old_Balances_Rec)

* End of method code
RETURN

CHECK.DIV.DEPT.CCTR: 
* Check division
IF COA.LEVEL = 0 THEN
  DIVSN.CODE = GEN.DIV
  DEPT.CODE  = GEN.DEPT
  CCTR.CODE  = GEN.CCTR
  RETURN
END
IF Div = "S" THEN
  DIVSN.CODE = "S"
  RETURN
END
IF Div = GEN.DIV THEN
  DIV.CODE = Div; USER.ID = UPCASE(@LOGNAME); ERRMSG = ''
  CALL CK.DIV.SEC.SUB(CONO,DIV.CODE,USER.ID,ERRMSG)
  IF ERRMSG # '' THEN
    CALL RBO_ERROR_SUB(ERRMSG); RETURN
  END
  DIVSN.CODE = GEN.DIV
  DEPT.CODE  = GEN.DEPT
  CCTR.CODE  = GEN.CCTR
  RETURN
END
MATREAD DIV.REC FROM DIVISION, CONO:Div ELSE
  ERRMSG = "DIVISION ":Div:" IS NOT ON FILE"
  CALL RBO_ERROR_SUB(ERRMSG); RETURN
END
DIV.CODE = Div; USER.ID = UPCASE(@LOGNAME)
CALL CK.DIV.SEC.SUB(CONO,DIV.CODE,USER.ID,ERRMSG)
IF ERRMSG # '' THEN
  CALL RBO_ERROR_SUB(ERRMSG); RETURN
END
DIVSN.CODE = Div

* Check department
IF COA.LEVEL = 1 THEN
  DEPT.CODE = GEN.DEPT
  CCTR.CODE = GEN.CCTR
  RETURN
END
IF Dept = "S" THEN
  DEPT.CODE = Dept
  RETURN
END
IF Dept = GEN.DEPT THEN
  DEPT.CODE = GEN.DEPT
  CCTR.CODE = GEN.CCTR
  RETURN
END
LOCATE Dept IN DIV.DEPT<1>,1 SETTING FND ELSE
  ERRMSG = "DEPARTMENT ":Dept:" IS NOT FOR THIS DIVISION"
  CALL RBO_ERROR_SUB(ERRMSG); RETURN
END
MATREAD DEPT.REC FROM DEPARTMENT, CONO:Dept ELSE
  ERRMSG = "DEPARTMENT ":Dept:" IS NOT ON FILE"
  CALL RBO_ERROR_SUB(ERRMSG); RETURN
END
DEPT.CODE = Dept

* Check cost center
IF COA.LEVEL = 2 THEN
  CCTR.CODE = GEN.CCTR
  RETURN
END
IF CCtr = "S" THEN
  CCTR.CODE = CCtr
  RETURN
END
IF CCtr = GEN.CCTR THEN
  CCTR.CODE = GEN.CCTR
  RETURN
END
LOCATE CCtr IN DEPT.CCTRS<1>,1 SETTING FND ELSE
  ERRMSG = "COST CENTER ":CCtr:" IS NOT FOR THIS DEPARTMENT"
  CALL RBO_ERROR_SUB(ERRMSG); RETURN
END
MATREAD CCTR.REC FROM COST.CNTR, CONO:CCtr ELSE
  ERRMSG = "COST CENTER ":CCtr:" IS NOT ON FILE"
  CALL RBO_ERROR_SUB(ERRMSG); RETURN
END
CCTR.CODE = CCtr
RETURN

READ.COA.BAL: 
NEW.REC = 0
BEGIN CASE
  CASE DIVSN.CODE = "S"
    MATREAD CB.REC FROM CO.COA.BAL, CONO:ACCT.NUM ELSE MAT CB.REC = ""
    DIVSN.CODE = ""
    DEPT.CODE = ""
    CCTR.CODE = ""
  CASE DEPT.CODE = "S"
    MATREAD CB.REC FROM DV.COA.BAL, CONO:DIVSN.CODE:ACCT.NUM ELSE MAT CB.REC = ""
    DEPT.CODE = ""
    CCTR.CODE = ""
  CASE CCTR.CODE = "S"
    MATREAD CB.REC FROM DP.COA.BAL, CONO:DIVSN.CODE:DEPT.CODE:ACCT.NUM ELSE MAT CB.REC = ""
    CCTR.CODE = ""
  CASE 1
    IF EQV.FLG THEN
      READ ACCT.NUM FROM COA.EQUIV, CONO:DIVSN.CODE:DEPT.CODE:CCTR.CODE:ACCT.NUM ELSE
        ACCT.NUM = ACCT.NO
      END
      IF ACCT.NUM # ACCT.NO THEN
        MATREAD COA.REC FROM COA, CONO : ACCT.NUM[11,IN.ACCT.LEN] ELSE
          ACCT.NUM = ACCT.NO
          MAT COA.REC = MAT OCOA.REC
        END
        IF ACCT.NUM # ACCT.NO THEN
          DIVSN.CODE = ACCT.NUM[4,2]
          DEPT.CODE = ACCT.NUM[6,2]
          CCTR.CODE = ACCT.NUM[8,3]
          ACCT.NUM = ACCT.NUM[11,IN.ACCT.LEN]
        END
      END
      Account = ACCT.NUM
    END
    MATREAD CB.REC FROM CC.COA.BAL, CONO:DIVSN.CODE:DEPT.CODE:CCTR.CODE:ACCT.NUM ELSE NEW.REC = 1
END CASE
Div = DIVSN.CODE
Dept = DEPT.CODE
CCtr = CCTR.CODE
IF NEW.REC THEN
  MAT CB.REC = ""
  MAT OLD.CB = ""
  IF TAPE.FLG = "N" AND CURR = "01" THEN
    PR.LN = 1
    IF ThisYearOpenBal<1,PR.LN> = '' THEN
      ERRMSG = "Please enter this year's beginning open balance."
      CALL RBO_ERROR_SUB(ERRMSG); RETURN
    END
    GOSUB GET.THIS.YEAR.OPEN.BAL
  END
END ELSE
  MAT OLD.CB = MAT CB.REC
  FOR PR.LN = 1 TO NUM.PERIODS
    TEMP = CB.REC(CB.OPN+PR.LN) + 0
    IF PR.LN = (PERIOD.REC<1> + 1) THEN
      TEMP = CB.REC(55) + 0
    END
    IF TEMP <> 0 THEN
      IF COA.NORM = "CR" THEN TEMP = TEMP * (-1)
      ThisYearOpenBal<1,PR.LN> = TEMP
    END ELSE
      ThisYearOpenBal<1,PR.LN> = ""
    END
  NEXT PR.LN
  FOR PR.LN = 1 TO NUM.PERIODS
    TEMP = CB.REC(CB.LYR+PR.LN) + 0
    IF PR.LN = (PERIOD.REC<1> + 1) THEN
      TEMP = CB.REC(108) + 0
    END
    IF TEMP <> 0 THEN
      IF COA.NORM = "CR" THEN TEMP = TEMP * (-1)
      LastYearOpenBal<1,PR.LN> = TEMP
    END ELSE
      LastYearOpenBal<1,PR.LN> = ""
    END
  NEXT PR.LN
  FOR PR.LN = 1 TO NUM.PERIODS
    TEMP = CB.REC(CB.BUD+PR.LN) + 0
    IF PR.LN = (PERIOD.REC<1> + 1) THEN
      TEMP = CB.REC(161) + 0
    END
    IF TEMP <> 0 THEN
      IF COA.NORM = "CR" THEN TEMP = TEMP * (-1)
      BudgetOpenBal<1,PR.LN> = TEMP
    END ELSE
      BudgetOpenBal<1,PR.LN> = ""
    END
  NEXT PR.LN
END
RETURN

GET.THIS.YEAR.OPEN.BAL: 
IF ThisYearOpenBal<1,PR.LN> + 0 <> 0 THEN
  IF COA.NORM = "CR" THEN ThisYearOpenBal<1,PR.LN> = ThisYearOpenBal<1,PR.LN> * (-1)
END ELSE
  ThisYearOpenBal<1,PR.LN> = ""
END
CB.REC(CB.OPN+PR.LN) = ThisYearOpenBal<1,PR.LN>
RETURN

