SUBROUTINE ORDM_REL_SAVE_DATA
********************************************************************************
*   Program name :- ORDM_REL_SAVE_DATA
*   Created:- 4/5/2006
*   Programmer :- Suhail Hussain S
********************************************************************************
$INCLUDE WWINSERT RBO.H

$INCLUDE CPYLIB COMMON1
$INCLUDE JCS.CPYLIB COM.JCS.LINK
$INCLUDE ICS.CPYLIB COM.INV.MAIN
$INCLUDE ICS.CPYLIB COM.INV.SERIAL
$INCLUDE JCS.CPYLIB COM.INV.STATS
$INCLUDE PMC.CPYLIB COM.CUST
$INCLUDE OPS.CPYLIB COM.ORDER

$DEFINE INVENTORY
$DEFINE ORDER
$DEFINE ORDERDETAILINQ
$DEFINE CUSTOMER
$DEFINE CATEGORY
$DEFINE INVWHSE
$DEFINE FNGDSTATS
$DEFINE FNGDORDERSTATS
$DEFINE JOB
$DEFINE FILEVARS
$DEFINE COMPOPS

$INCLUDE PMC.CPYLIB COMP.OPS
$INCLUDE PMC.CPYLIB CUSTOMER
$INCLUDE OPS.CPYLIB ORDER
$INCLUDE OPS.CPYLIB ORDER.JOB
$INCLUDE OPS.CPYLIB ORDER.DETAIL
$INCLUDE OPS.CPYLIB ORDER.DETAIL.INQ
$INCLUDE OPS.CPYLIB ORDER.RELEASE
$INCLUDE ICS.CPYLIB INVENTORY
$INCLUDE ICS.CPYLIB CATEGORY
$INCLUDE ICS.CPYLIB INV.WHSE
$INCLUDE ICS.CPYLIB INV.FNGD
$INCLUDE ICS.CPYLIB INV.CNV
$INCLUDE ICS.CPYLIB FNGD.BOM
$INCLUDE ICS.CPYLIB FNGD.STATS
$INCLUDE ICS.CPYLIB FNGD.ORDER.STATS
$INCLUDE ICS.CPYLIB FNGD.JOB.STATS
$INCLUDE JCS.CPYLIB JOB
$INCLUDE PMC.CPYLIB SHIP.TO
$INCLUDE CPYLIB FILE.VARS
$INCLUDE CPYLIB CHAR

   OPEN "","CUSTOMER" TO CUSTOMER ELSE ERRMSG = "CANNOT OPEN CUSTOMER FILE";GOTO 91000
   OPEN "","ORDER" TO ORDER ELSE ERRMSG = "CANNOT OPEN ORDER FILE";GOTO 91000
   OPEN "","ORDER.DETAIL" TO ORDER.DETAIL ELSE ERRMSG = "CANNOT OPEN ORDER.DETAIL FILE";GOTO 91000
   OPEN "","ORDER.RELEASE" TO ORDER.RELEASE ELSE ERRMSG = "CANNOT OPEN ORDER.RELEASE FILE";GOTO 91000
   OPEN "","INVENTORY" TO INVENTORY ELSE ERRMSG = "CANNOT OPEN INVENTORY FILE";GOTO 91000
   OPEN "","CATEGORY" TO CATEGORY ELSE ERRMSG = "CANNOT OPEN CATEGORY FILE";GOTO 91000
   OPEN "","INV.WHSE" TO INV.WHSE ELSE ERRMSG = "CANNOT OPEN INV.WHSE FILE";GOTO 91000
   OPEN "","INV.FNGD" TO INV.FNGD ELSE ERRMSG = "CANNOT OPEN INV.FNGD FILE";GOTO 91000
   OPEN "","FNGD.BOM" TO FNGD.BOM ELSE ERRMSG = "CANNOT OPEN FNGD.BOM FILE";GOTO 91000
   OPEN "","FNGD.STATS" TO FNGD.STATS ELSE ERRMSG = "CANNOT OPEN FNGD.STATS FILE";GOTO 91000
   OPEN "","FNGD.ORDER.STATS" TO FNGD.ORDER.STATS ELSE ERRMSG = "CANNOT OPEN  FILE";GOTO 91000
   OPEN "","FNGD.JOB.STATS" TO FNGD.JOB.STATS ELSE ERRMSG = "CANNOT OPEN FNGD.JOB.STATS FILE";GOTO 91000
   OPEN "","PRICE.TABLE" TO PRICE.TABLE ELSE ERRMSG = "CANNOT OPEN PRICE.TABLE FILE";GOTO 91000
   OPEN "","WAREHOUSE" TO WAREHOUSE ELSE ERRMSG = "CANNOT OPEN WAREHOUSE FILE";GOTO 91000
   OPEN "","ESTIMATE" TO ESTIMATE ELSE ERRMSG = "CANNOT OPEN ESTIMATE FILE";GOTO 91000
   OPEN "","JOB" TO JOB ELSE ERRMSG = "CANNOT OPEN JOB FILE";GOTO 91000
   OPEN "","CONTROL" TO CONTROL ELSE ERRMSG = "CANNOT OPEN CONTROL FILE";GOTO 91000
   OPEN "","SHIP.TO" TO SHIP.TO ELSE ERRMSG = "CANNOT OPEN SHIP.TO FILE";GOTO 91000
   OPEN "","PICK.TICKET.PRT" TO PICK.TICKET.PRT ELSE ERRMSG = "Cannot locate the PICK.TICKET.PRT file";GOTO 91000

  STATUS = RBO.getProperty("","PMCProperty",PMCProperty)
  STATUS = RBO.getProperty("","INARR",INARR)
  STATUS = RBO.getProperty("","RETARR",OSDARRAY)
  STATUS = RBO.getProperty("","GRIDARR",OSD_FULL_ARR)

  CONO = PMCProperty<1,4>
  RELNO = INARR<1,1>
  ORDNO = INARR<1,2>
  ORD_PRINT = INARR<1,3>
  ORD_SHIP_TO = INARR<1,4>
  ORR_REC = INARR<1,5>
  PROMPT_NO = INARR<1,6>
  PROMPT_VALUE = INARR<1,7>
  ORD_REC = INARR<1,8>


  MAT ORD.DET.SUM = ""
  MAT ORD.DET.INQ = ""
  ORD_JOB = ""
  ORD_JOB = ORD_REC<1,7>
  SWAP "ð" WITH VM IN ORR_REC
  SWAP "ð" WITH VM IN ORD_REC
  SWAP "#" WITH VM IN ORD_SHIP_TO
  SWAP "#" WITH VM IN ORD_JOB
  ORR_QTY = ""
  ORR_QTY = ORR_REC<1,5>

  SWAP "ü" WITH VM IN ORR_QTY
  MATREAD ORD.REC FROM ORDER, CONO : ORDNO ELSE MAT ORD.REC = ""
  ORD.SHIP.TO    = ORD_SHIP_TO
  ORD.PRINT      = ORD_PRINT
  ORD.STATUS     = ORD_REC<1,1> 
  ORD.PO         = ORD_REC<1,2> 
  ORD.DATE       = ORD_REC<1,3> 
  ORD.RCV.DATE   = ORD_REC<1,4> 
  ORD.REQ.DATE   = ORD_REC<1,5> 
  ORD.DUE        = ORD_REC<1,6> 
  ORD.JOB        = ORD_JOB
  ORD.CUST       = ORD_REC<1,8> 
  ORD.DIV        = ORD_REC<1,9> 
  ORD.CSR.CODE   = ORD_REC<1,10>
  ORD.SLSMN      = ORD_REC<1,11>
  TEMP_D = ""

  O_INDX = ""
  MATREAD ORR.REC FROM ORDER.RELEASE,CONO:RELNO ELSE MAT ORR.REC = ""

  FOR X = 1 TO DCOUNT(ORD.SHIP.TO,VM)
    TEMPORD_REC = FIELD(OSD_FULL_ARR,"¥",X,1)
    IF ORD.SHIP.TO<1,X> = ORR.SHIP.TO THEN TEMPORD_REC = OSDARRAY;O_INDX = X
    MATPARSE ORD.DET.REC FROM TEMPORD_REC,"ð"
    FOR P = 1 TO ORD.DET.REC.SIZE
      ORD.DET.SUM(P,X) = ORD.DET.REC(P)
    NEXT P
  NEXT X

  FOR X = 1 TO DCOUNT(ORD.SHIP.TO,VM)
      FOR P = 1 TO ORD.DET.REC.SIZE
        ORD.DET.REC(P) = ORD.DET.SUM(P,X) 
      NEXT P
      STATUS = "L";SHPNO = ORD.SHIP.TO<1,X>  
      CALL ORDM_REL_ORD_LINE_UPD(CONO,ORDNO,SHPNO,STATUS)
  NEXT X
  IF O_INDX # "" THEN
     FOR P = 1 TO ORD.DET.REC.SIZE
        ORD.DET.REC(P) = ORD.DET.SUM(P,O_INDX)
     NEXT P
  END

  IF ORR_REC<1,1> # "" THEN
     TEMP_D = OCONV(ORR_REC<1,1>,"D2/")
     ORR.DATE = ICONV(TEMP_D,"D2/")
  END
  IF ORR_REC<1,2> # "" THEN ORR.CUST.REL = ORR_REC<1,2>
  IF ORR_REC<1,3> # "" THEN 
     TEMP_D = OCONV(ORR_REC<1,3>,"D2/")
     ORR.REQ.DATE = ICONV(TEMP_D,"D2/")
  END
  IF ORR_REC<1,4> # "" THEN
     TEMP_D = OCONV(ORR_REC<1,4>,"D2/")
     ORR.DUE.DATE = ICONV(TEMP_D,"D2/")
  END

  *MATPARSE ORD.DET.REC FROM OSDARRAY,"ð"

  LINES = DCOUNT(OSD.PROD,VM)

  FOR R = 1 TO LINES
     PD_ID = OSD.PROD<1,R>
     MATREAD INV.REC FROM INVENTORY,CONO:PD_ID ELSE MAT INV.REC = ""
     $INCLUDE ICSBP INV.UM.CNV
     ORR_QTY<1,R> = INT(((ORR_QTY<1,R>/ICR.MT1) * ICR.DV1) * ICR.DV2 + .5)
     IF ORR_QTY<1,R> # "" THEN ORR.QTY<1,R> = ORR_QTY<1,R>
  NEXT R

  LOCATE ORR.SHIP.TO IN ORD.SHIP.TO<1> SETTING SPTR ELSE SPTR = 0  
  LOCATE RELNO IN ORD.REL.NO<1>,1 SETTING FND ELSE
    ORD.REL.NO<1,FND> = RELNO
  END
  SHPNO = ORR.SHIP.TO
*  STATUS = "L"
*  CALL ORDM_REL_ORD_LINE_UPD(CONO,ORDNO,SHPNO,STATUS)
  STATUS = "U"; SHPNO = ""
  CALL ORDM_REL_ORD_LINE_UPD(CONO,ORDNO,SHPNO,STATUS)
  MATWRITE ORR.REC ON ORDER.RELEASE, CONO:RELNO
  MATREAD OPCO.REC FROM CONTROL, CONO:"OPS" ELSE
    MAT OPCO.REC = ""
  END
  IF ORD.PRINT # "N" AND OPCO.SHP.FRM # "O" THEN
    SHPWHS = ""
    FOR P = 1 TO LINES
      R = 1
      PICK.QTY = 0
      LOOP
        LOCATE RELNO IN OSD.REL.NO<1,P>,R SETTING RLOC ELSE RLOC = 0
      WHILE RLOC DO
        PICK.QTY = PICK.QTY + (OSD.REL.QTY<1,P,RLOC> - OSD.P.QTY<1,P,RLOC>)
        R = RLOC + 1
      REPEAT
      IF PICK.QTY > 0 THEN
        SHPWH = ORR.SHIP.TO:"!":OSD.WHSE<1,P>
        LOCATE SHPWH IN SHPWHS,1 SETTING FND ELSE
          PKT.ID = CONO:ORDNO:"!":SHPWH
          READ REC FROM PICK.TICKET.PRT, PKT.ID THEN
            LOCATE RELNO IN REC,1 SETTING PTR ELSE SHPWHS<FND> = SHPWH
          END ELSE
            SHPWHS<FND> = SHPWH
          END
        END
      END
    NEXT P
    SHPWHSCNT = DCOUNT(SHPWHS,AM)
    IF SHPWHSCNT THEN
      PMPT_NO = 1
      IF PROMPT_NO # 1 THEN GOTO 93000
      ECD.RET.VALUE = PROMPT_VALUE
      IF ECD.RET.VALUE = "Y" THEN
        FOR T = 1 TO SHPWHSCNT
          SHPWH = SHPWHS<T>
          PKT.ID = CONO:ORDNO:"!":SHPWH
          READU REC FROM PICK.TICKET.PRT, PKT.ID THEN
            LOCATE RELNO IN REC,1 SETTING PTR ELSE REC<PTR> = RELNO
          END ELSE
            REC = RELNO
          END
          WRITE REC ON PICK.TICKET.PRT, PKT.ID
        NEXT T
      END
    END
  END
  FOR P = 1 TO ORD.DET.REC.SIZE
    ORD.DET.SUM(P,SPTR) = ORD.DET.REC(P)
  NEXT P
  STATUS = "L"; SHPNO = "ALL"
  CALL ORDM_REL_ORD_LINE_UPD(CONO,ORDNO,SHPNO,STATUS)
  RETARR = ""
  FOR X = 1 TO DCOUNT(ORD.SHIP.TO,VM) 
    FOR P = 1 TO ORD.DET.REC.SIZE
      RETARR := ORD.DET.SUM(P,X) : "ð"
    NEXT P
    IF X # DCOUNT(ORD.SHIP.TO,VM) THEN RETARR := "¥"
  NEXT X
  STATUS = RBO.setProperty("","WARNINGARR","")
  STATUS = RBO.setProperty("","DISPARR",RETARR)
  STATUS = RBO.setProperty("","ServerStatus","")
  STATUS = RBO.setProperty("","ServerMessage","")
RETURN

93000
  STATUS = RBO.setProperty("","ServerStatus","")
  STATUS = RBO.setProperty("","WARNINGARR",1)
RETURN

91000*
   STATUS = RBO.setProperty("","ServerStatus",1)
   STATUS = RBO.setProperty("","ServerMessage",ERRMSG)
   RELEASE
RETURN
