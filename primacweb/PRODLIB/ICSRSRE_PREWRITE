SUBROUTINE ICSRSRE_PREWRITE
*********************************************************************
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - EPRIMAC
* PROGRAM     - ICSRSRE_PREWRITE
* BY          - KHAJA ZIAUDDIN
* DATE        - 06/25/2003  (mm/dd/yyyy)
* DESCRIPTION   
*		   
*ENDDOC
*************************************************************


$INCLUDE WWINSERT RBO.H
$INCLUDE ICS.CPYLIB INVENTORY
$INCLUDE ICS.CPYLIB INV_SERIAL
$INCLUDE ICS.CPYLIB INV.CNV
$INCLUDE CPYLIB CHAR
DIM HOLD.ISTK.REC(ISTK.REC.SIZE) ; MAT HOLD.ISTK.REC=""
DIM S.REC(25)
EQU S.SERIAL          TO S.REC(1);*
EQU S.PO.LINE.NO    TO S.REC(2)
EQU S.QTY           TO S.REC(3);*
EQU S.LOC           TO S.REC(4);*
EQU S.MILL.ID       TO S.REC(5);*
EQU S.QTY.ENTERED   TO S.REC(6)
EQU S.WHSE          TO S.REC(7);*
EQU S.PROD.NO       TO S.REC(9)
EQU S.INV.FULL.DESC TO S.REC(10);*
EQU S.INV.PAP.TYPE  TO S.REC(11)
EQU S.TOT.WEIGHT    TO S.REC(12)
EQU S.UNIT          TO S.REC(13) ; *UOM
EQU S.INV.UNIT      TO S.REC(14)
EQU S.INV.M.WT      TO S.REC(15)
EQU S.STK.QTY       TO S.REC(16)
EQU S.INV.PAP.WIDTH TO S.REC(17)
EQU S.POST.DATE     TO S.REC(19);*
EQU S.STATUS        TO S.REC(20)
EQU S.EDIT.DATE     TO S.REC(21)
EQU S.UN.PRICE      TO S.REC(24)
*
DEFFUN CALC_STK_QTY(COST.QTY,MAT INV.CNV.REC,ROND,LN)
DEFFUN CALC_COST_QTY(STK.QTY,MAT INV.CNV.REC,ROND,LN)
DEFFUN CALC_DIAM(COST.QTY,STK.QTY,MAT INV.REC)
MAT S.REC = ''
ICR.CNV = ""
DIFF.UM = ""
ICR.DV1 = ""
ICR.DV2 = ""
ICR.MT1 = ""
DSR.DIAM = ''
S$VALUE = ''
MAT INV.REC = ''

OPEN '','INVENTORY' TO INVENTORY ELSE
   ERRMSG = 'INVENTORY FILE IS MISSING'
   GOTO 93000
END
OPEN '','CONTROL' TO CONTROL ELSE
   ERRMSG = 'CONTROL FILE IS MISSING'
   GOTO 93000
END
STATUS = RBO.getProperty('','PMCProperty',PMCPROPERTY)
STATUS = RBO.getDBVals('ID',ID2)
STATUS = RBO.getDBVals('DSR_PROD',DSR.PROD)
STATUS = RBO.getDBVals('DSR_SERIAL',SERIAL)
STATUS = RBO.getDBVals('DSR_UOM',S.UNIT)
STATUS = RBO.getDBVals('DSR_QTY',DSR.QTY)
STATUS=  RBO.getDBVals('DSR_PO_LINE',POLINE)

POLINEARR=""
PRODARR=""
SERIALARR=""
UMARR=""
QTYARR=""


*STATUS = RBO.getProperty('','Prod',Prod)
*STATUS = RBO.getProperty('','Qty',Qty)
STATUS=RBO.setProperty('','temp',"outside")
CONO = PMCPROPERTY<1,4>
INV.PRESENT = 0
S.CNT = DCOUNT(SERIAL,@VM)
SV.CNT=0

*QTY_C=Qty
*$INCLUDE ICSBP INV.UM.CNV
*BEFORE WRITING TO THE DATABASE

*FOR I=1 TO DCOUNT(Prod,@VM)
*     TQTY<1,I> = ICONV(QTY_C<1,I>,ICR.CNV)
*     GETQTY<1,I> = CALC_COST_QTY(TQTY<1,I>,MAT INV.CNV.REC,ROND,'')
*NEXT I

FOR SS=1 TO S.CNT
  *FOR Y = 1 TO DCOUNT(SERIAL<SS>,@SM)

    MATREAD INV.REC FROM INVENTORY,CONO:DSR.PROD<1,SS> THEN
      INV.PRESENT = 1
      S.INV.M.WT = INV.M.WT
      S.INV.PAP.WIDTH<1,SS> = INV.PAP.WIDTH 
      FOR I = 1 TO 4                          
        S.INV.UNIT<1,SS,-1>=INV.UNIT<1,I>
      NEXT I  
      S$VALUE = DSR.QTY<1,SS>        
    *  S$VALUE = DSR.QTY<1,SS,Y>                                
      GOSUB GET.CONV

** START OF CALC S.QTY AND S.STK.QTY
      IF DIFF.UM<SS> = "Y" THEN
	 TEMP.ROLL.WEIGHT = S$VALUE
        IF ICR.CNV<SS,2> = "MD0" THEN
          S$VALUE = INT(((S$VALUE/ICR.MT1<SS,2>)*ICR.DV1<SS,2>)*ICR.DV2<SS,2> + .5)
        END
       IF ICR.CNV<SS,1> = "MD0" THEN
          IF ICR.CNV<SS,2> # "MD0" THEN
            S$VALUE = S$VALUE * 10
          END
          S$VALUE = INT(((S$VALUE/ICR.DV1<SS,1>)*ICR.MT1<SS,1>)/ICR.DV2<SS,1> + .5)
          TEMP.STK.QTY = S$VALUE
          S$VALUE = INT(((S$VALUE/ICR.MT1<SS,1>)*ICR.DV1<SS,1>)*ICR.DV2<SS,1> + .5)
        END ELSE
          S$VALUE = S$VALUE * ICR.MT1<SS,1> * 10
          TEMP.STK.QTY = ""
        END
      END ELSE

        IF ICR.CNV<SS,1> = "MD0" THEN
          TEMP.STK.QTY = S$VALUE
          S$VALUE = INT(((S$VALUE/ICR.MT1<SS,1>)*ICR.DV1<SS,1>)*ICR.DV2<SS,1> + .5)
        END ELSE
          S$VALUE = S$VALUE * 10
          TEMP.STK.QTY = ""
        END
      END
     TEMP.ROLL.WEIGHT = S$VALUE
     DSR.QTY<1,SS> = TEMP.ROLL.WEIGHT
     S.STK.QTY<1,SS> = TEMP.STK.QTY

** END OF S.QTY AND S.STK.QTY
	*DSR.DIAM<1,SS> = CALC_DIAM(S.QTY<1,SS>,S.STK.QTY<1,SS>, MAT INV.REC)
    END ELSE
      MAT INV.REC=''
    END
   *NEXT Y


DSR.DIAM<1,SS> = CALC_DIAM(DSR.QTY<1,SS>,S.STK.QTY<1,SS>, MAT INV.REC)

NEXT SS
WRITE ID2 ON CONTROL , "HELOO"
*STATUS=RBO.setProperty('','temp','PREWRITE')
STATUS = RBO.setProperty('','DSR_QTY',DSR.QTY)
STATUS = RBO.setDBVals('DSR_DIAM',DSR.DIAM)
RETURN


***********
GET.CONV: 
***********
*
IF NOT(INV.PRESENT) THEN
  RETURN
END
BEGIN CASE
  CASE S.INV.UNIT<1,SS,2> = "SHT" AND S.INV.UNIT<1,SS,3> = "LBS"
    ICR.CNV<SS,1> = "MD0"; ICR.DV2<SS,1> = 1
    ICR.DV1<SS,1> = S.INV.M.WT<1,SS>; ICR.MT1<SS,1> = 1
  CASE S.INV.UNIT<1,SS,2> = "PC" AND S.INV.UNIT<1,SS,3> = "MSI"
    ICR.CNV<SS,1> = "MD0"; ICR.DV2<SS,1> = 1
    ICR.DV1<SS,1>=S.INV.PAP.WIDTH<1,SS>/100;ICR.MT1<SS,1>=10
  CASE S.INV.UNIT<1,SS,2> = "FT" AND S.INV.UNIT<1,SS,3> = "MSI"
    ICR.CNV<SS,1> = "MD0"; ICR.DV2<SS,1> = 12
    ICR.DV1<SS,1>=S.INV.PAP.WIDTH<1,SS>/100;ICR.MT1<SS,1>=100
  CASE 1
    ICR.CNV<SS,1> = "MD2"; ICR.DV2<SS,1> = 1
    ICR.DV1<SS,1> = 10; ICR.MT1<SS,1> = INV.SBR
END CASE
BEGIN CASE
  CASE S.UNIT<1,SS>="SHT" AND S.INV.UNIT<1,SS,3>="LBS"
    ICR.CNV<SS,2> = "MD0"; ICR.DV2<SS,2> = 1
    ICR.DV1<SS,2> = S.INV.M.WT<1,SS>; ICR.MT1<SS,2> = 1
  CASE S.UNIT<1,SS>="PC" AND S.INV.UNIT<1,SS,3>="MSI"
    ICR.CNV<SS,2> = "MD0"; ICR.DV2<SS,2> = 1
    ICR.DV1<SS,2>=S.INV.PAP.WIDTH<1,SS>/100;ICR.MT1<SS,2>=10
  CASE S.UNIT<1,SS>="FT" AND S.INV.UNIT<1,SS,3>="MSI"
    ICR.CNV<SS,2> = "MD0"; ICR.DV2<SS,2> = 12
    ICR.DV1<SS,2>=S.INV.PAP.WIDTH<1,SS>/100;ICR.MT1<SS,2>=100
  CASE 1
    ICR.CNV<SS,2> = "MD2"; ICR.DV2<SS,2> = 1
    ICR.DV1<SS,2> = 10; ICR.MT1<SS,2> = 1
END CASE
IF S.UNIT<1,SS> # S.INV.UNIT<1,SS,2> THEN 
  DIFF.UM<SS> = "Y" 
END ELSE
  DIFF.UM<SS> = "N"
END
*
RETURN

93000
STATUS = RBO.setProperty('','ServerStatus',1)
STATUS = RBO.setProperty('','ServerMessage',ERRMSG)
RETURN
