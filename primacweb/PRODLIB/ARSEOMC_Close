*********************************************************************
* REVISION    - [12.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - ARSBP
* PROGRAM     - ARS.EOM.CLOSE
* BY          - ZIAD YAMOUT, C.B.A
* DATE        - 02/28/87
*MODIFIED	- (01/06/06) BY ZAHOOR AHMED
*		   FOR printflag and EOD.ERROR flag
* DESCRIPTION -
*ENDDOC
*********************************************************************
*
***** INSERT FILE EQUATE
*
$INCLUDE WWINSERT RBO.H
$INCLUDE PMC.CPYLIB COMPANY
$INCLUDE PMC.CPYLIB SALESDATES
$INCLUDE PMC.CPYLIB FISCAL
$INCLUDE PMC.CPYLIB EOM.TRANS
$INCLUDE PMC.CPYLIB EOM.TRANS.HIST              ; * T25975
$INCLUDE PMC.CPYLIB CUSTOMER
$INCLUDE ARS.CPYLIB MANUAL.INVOICE
$INCLUDE PMC.CPYLIB TAX
$INCLUDE PMC.CPYLIB SHIP.VIA
$INCLUDE ARS.CPYLIB OPEN.RECV
$INCLUDE ARS.CPYLIB PURGED.OPEN.RECV
$INCLUDE GLS.CPYLIB GLA
$INCLUDE PMC.CPYLIB COA
$INCLUDE GLS.CPYLIB COA.SYS
$INCLUDE PMC.CPYLIB POST.REJECTS
$INCLUDE CPYLIB CHAR
*
***** SETUP ERRMSG ROUTINE
*
ERRMSG=''
REJECT.RPT.PRT=''
*
* ERROR.FLAG is for any error from EOD_CLOSE_PreProcess & Printfalg is view/mail/print/file
ERROR.FLAG = ''
Printfalg = ''
EMAIL_ADDR = ''
*
STATUS = RBO.getProperty('','ID',ID)
STATUS = RBO.getProperty('','PMCProperty',PMCProperty)
STATUS = RBO.getProperty('','PRINT_FLAG',PRINT.FLAG)
STATUS = RBO.getProperty('','ERR_FLAG',ERROR.FLAG)
STATUS = RBO.getProperty('','EmailAddress',EMAIL_ADDR)
CONO = ID[1,3]
STATUS = RBO.getProperty('','DM_Flag',D.M.FLG)
STATUS = RBO.getProperty('','FR_CURR_PER',FR.CURR.PER)
STATUS = RBO.getProperty('','FR_CURR_DATE',FR.CURR.DATE)
STATUS = RBO.getProperty('','FR_NEXT_PER',FR.NEXT.PER)
STATUS = RBO.getProperty('','FR_NEXT_DATE',FR.NEXT.DATE)
STATUS = RBO.getProperty('','FR_PRINT',FR.PRINT)
STATUS = RBO.getProperty('','FR_CLOSE_DATE',FR.CLOSE.DATE)
STATUS = RBO.getProperty('','FR_D_M_FLG',FR.D.M.FLG)
STATUS = RBO.getProperty('','DivPos',POS)
STATUS = RBO.getProperty('','AllDivsCount',ALL.DIVS.COUNT)
FOR P = 1 TO DCOUNT(FR.CURR.PER,VM)
   IF INDEX(FR.CURR.DATE<1,P>,'/',1) > 0 THEN FR.CURR.DATE<1,P> = ICONV(FR.CURR.DATE<1,P>,'D2/')
   IF INDEX(FR.NEXT.DATE<1,P>,'/',1) > 0 THEN FR.NEXT.DATE<1,P> = ICONV(FR.NEXT.DATE<1,P>,'D2/')
   IF INDEX(FR.CLOSE.DATE<1,P>,'/',1) > 0 THEN FR.CLOSE.DATE<1,P> = ICONV(FR.CLOSE.DATE<1,P>,'D2/')
NEXT P
STATUS = RBO.getProperty('','DivCode',DIV.CODE)
IF DIV.CODE = '' THEN DIV.CODE = 'ALL'
IF D.M.FLG = "PERIOD" THEN
   RPT.PER = "PERIOD"
   EOY = 1
   FOR I = 1 TO ALL.DIVS.COUNT UNTIL NOT(EOY)
     IF I # POS THEN
       IF FR.CURR.PER<1,I>[5,2] # '01' THEN EOY = 0
     END ELSE
       IF FR.NEXT.PER<1,I>[5,2] # '01' THEN EOY = 0
     END
   NEXT I
END ELSE
   RPT.PER = "DAY"
   EOY = 0
END
*
*Get the printflag view/Email/File/Print
*
BEGIN CASE
   CASE PRINT.FLAG = 'PrintData'
	Printfalg = 'View'
   CASE PRINT.FLAG = 'EmailData'
	Printfalg = 'Email'
   CASE PRINT.FLAG = 'File'
	Printfalg = 'Print'
   CASE 1
	Printfalg = 'Print'
END CASE
*
**** INTITIALIZATION
*
TODAY = DATE()
UNKNOWN = "NOT ON FILE"
SYS.FISCAL = "ARSFISCAL"
PROG.ID = @TTY:"!":CONO:"!ARS.EOM"
NORETURN=0
*
***** OPEN FILES
*
TRANFILE='ARC.EOM.TRANS':CONO:DIV.CODE
REJECTFILE='ARC.POST.REJECTS':CONO:DIV.CODE
OPEN "","CONTROL" TO CONTROL ELSE
   ERRMSG="CONTROL FILE MISSING"
   GOTO 93000
END
OPEN "",TRANFILE TO EOM.TRANS ELSE
   ERRMSG = "YOU NEED TO RUN END OF ":RPT.PER:" POSTING BEFORE YOU CLOSE THE PERIOD"
   GOTO 93000
END
OPEN "",REJECTFILE TO POST.REJECTS ELSE
   ERRMSG = "YOU NEED TO RUN END OF ":RPT.PER:" POSTING BEFORE YOU CLOSE THE PERIOD"
   GOTO 93000
END
OPEN "","COMPANY" TO COMPANY ELSE ERRMSG="COMPANY FILE MISSING";GOTO 93000
OPEN "","SECURITY" TO SECURITY ELSE ERRMSG="SECURITY FILE MISSING";GOTO 93000
OPEN "","CUSTOMER" TO CUSTOMER ELSE ERRMSG="CUSTOMER FILE IS MISSING";GOTO 93000
OPEN "","OPEN.RECV" TO OPEN.RECV ELSE ERRMSG="OPEN.RECV FILE IS MISSING";GOTO 93000
OPEN "","PURGED.OPEN.RECV" TO PURGED.OPEN.RECV ELSE ERRMSG = "PURGED.OPEN.RECV FILE IS MISSING";GOTO 93000
OPEN "","PURGED.OR.XREF" TO PURGED.OR.XREF ELSE ERRMSG = "PURGED.OR.XREF FILE IS MISSING";GOTO 93000
OPEN "","INVOICE" TO INVOICE ELSE ERRMSG = "INVOICE FILE IS MISSING";GOTO 93000
OPEN "","MANUAL.INVOICE" TO MANUAL.INVOICE ELSE ERRMSG="MANUAL.INVOICE FILE IS MISSING";GOTO 93000
OPEN "","MANUAL.INVOICE.TAG" TO MANUAL.INVOICE.TAG ELSE ERRMSG="MANUAL.INVOICE.TAG FILE IS MISSING";GOTO 93000
OPEN "","SHIP.VIA" TO SHIP.VIA ELSE ERRMSG="SHIP.VIA FILE IS MISSING";GOTO 93000
OPEN "","TAX" TO TAX ELSE ERRMSG="TAX FILE IS MISSING";GOTO 93000
OPEN "","EOD.HIST" TO EOD.HIST ELSE ERRMSG="EOD.HIST FILE IS MISSING";GOTO 93000
OPEN "","ARS.EOM.TRANS.HIST" TO ARS.EOM.TRANS.HIST ELSE ERRMSG="ARS.EOM.TRANS.HIST FILE IS MISSING";GOTO 93000
**
*If ERROR.FLAG = 1 from EOD_CLOSE_PreProcess then call Generatereport_Sub
*
IF ERROR.FLAG = 1 THEN
 GOTO 90000
END
*
*
MATREAD COMP.REC FROM COMPANY,CONO ELSE
   ERRMSG = "CANNOT LOCATE COMPANY # ":CONO; GOTO 93000
END
IN.ACCT.LEN = LEN(CO.ACCT.PIC)
ACCT.LEN = IN.ACCT.LEN + 10
EQV.FLG=''
IF CO.GLS # "N" THEN
   IF CO.GL.LINK<1,1> = "Y" THEN
      OPEN "","GLA" TO GLA ELSE ERRMSG="GLA FILE IS MISSING";GOTO 93000
   END
   OPEN "","COA" TO COA ELSE ERRMSG="COA FILE IS MISSING";GOTO 93000
   EQV.FLG = 1
   OPEN "","COA.EQUIV" TO COA.EQUIV ELSE EQV.FLG = 0
END
READ PERIOD.REC FROM CONTROL, CONO:"ACCT.PERIODS" ELSE
   PERIOD.REC = 12
END
NUM.PERIODS = PERIOD.REC
READ SECURITY.REC FROM CONTROL, CONO:'DIV.SECURITY' ELSE
   SECURITY.REC = 'N'; SECURITY.REC<2> = 'N'
END
CLEARFILE POST.REJECTS
PRR.SEQ = 10000
READ CUTOFF.PER FROM CONTROL, CONO:"MANUAL.INVOICE.PURGE" ELSE CUTOFF.PER = 3
IF NOT(NUM(CUTOFF.PER)) THEN CUTOFF.PER = 3
IF CUTOFF.PER > NUM.PERIODS THEN
   YY = INT(CUTOFF.PER / NUM.PERIODS)
   MM = MOD(CUTOFF.PER,NUM.PERIODS)
END ELSE
   YY = 0
   MM = CUTOFF.PER
END
IF FR.CURR.PER<1,POS>[5,2] > MM THEN
   CUTOFF.PER = FR.CURR.PER<1,POS> - MM
   CUTOFF.PER = (FR.CURR.PER<1,POS>[1,4] - YY) : CUTOFF.PER[5,2]
END ELSE
   YY = YY + 1
   CUTOFF.PER = (FR.CURR.PER<1,POS>[5,2] + NUM.PERIODS) - MM
   CUTOFF.PER = STR("0",2-LEN(CUTOFF.PER)) : CUTOFF.PER
   CUTOFF.PER = (FR.CURR.PER<1,POS>[1,4] - YY) : CUTOFF.PER
END
*
**** MANUAL.INVOICE ****
*
1000 *
WRITE "MANUAL.INVOICE" ON CONTROL , PROG.ID
IF D.M.FLG = "PERIOD" THEN GOTO 1800
SELECT MANUAL.INVOICE.TAG
DATA = 1
LOOP
   READNEXT MIV.ID ELSE DATA = 0
WHILE DATA DO
   IF CONO # MIV.ID[1,3] THEN GOTO 1500
   MATREADU MIV.REC FROM MANUAL.INVOICE, MIV.ID ELSE
      RELEASE MANUAL.INVOICE, MIV.ID
      GOTO 1500
   END
   IF MIV.GLA.DATE = "" THEN
      RELEASE MANUAL.INVOICE, MIV.ID
      GOTO 1500
   END
   IF MIV.DIV # DIV.CODE AND DIV.CODE # "ALL" THEN 
      RELEASE MANUAL.INVOICE, MIV.ID
      GOTO 1500
   END
   IF MIV.PROC.MON <> FR.CURR.PER<1,POS> THEN
      RELEASE MANUAL.INVOICE, MIV.ID
      GOTO 1500
   END
   MIV.GLA.DATE = TODAY
   MATWRITE MIV.REC ON MANUAL.INVOICE, MIV.ID
   DELETE MANUAL.INVOICE.TAG, MIV.ID
1500 *
REPEAT
GOTO 7000
1800 SELECT MANUAL.INVOICE
DATA = 1
LOOP
   READNEXT MIV.ID ELSE DATA = 0
WHILE DATA DO
   IF CONO # MIV.ID[1,3] THEN GOTO 1999
   MATREADU MIV.REC FROM MANUAL.INVOICE, MIV.ID ELSE
      RELEASE MANUAL.INVOICE, MIV.ID
      GOTO 1999
   END
   IF MIV.GLA.DATE = "" THEN
      RELEASE MANUAL.INVOICE, MIV.ID
      GOTO 1999
   END
   IF MIV.DIV # DIV.CODE AND DIV.CODE # "ALL" THEN 
      RELEASE MANUAL.INVOICE, MIV.ID
      GOTO 1999
   END
   IF MIV.PROC.MON <= FR.CURR.PER<1,POS> THEN
      DELETE MANUAL.INVOICE.TAG, MIV.ID
   END
   READ DUMMY FROM OPEN.RECV, MIV.ID ELSE GOTO 1900
   RELEASE MANUAL.INVOICE, MIV.ID
   GOTO 1999
1900 IF MIV.PROC.MON < CUTOFF.PER THEN
      DELETE MANUAL.INVOICE, MIV.ID
   END ELSE
      RELEASE MANUAL.INVOICE, MIV.ID
   END
1999 *
REPEAT
**** OPEN.RECV ****
WRITE "OPEN.RECV" ON CONTROL , PROG.ID
READ ARCFISCAL FROM CONTROL, CONO : "ARSFISCAL" ELSE ARCFISCAL = ""
CUR.DATE=OCONV(ARCFISCAL<2,POS>,'D4/')
MM = CUR.DATE[1,2]
DD = CUR.DATE[4,2]
YY = CUR.DATE[7,4]
IF DD LE 4 THEN
   MM = MM - 1
   IF MM = 0 THEN MM = 12;YY = YY - 1
END
ARCFISCAL<6,POS>=ICONV(MM'R%2':'/01/':YY,'D4/') - 1
*
SELECT OPEN.RECV
DATA = 1
LOOP
   READNEXT OR.ID ELSE DATA = 0
WHILE DATA DO
   IF OR.ID[1,3] # CONO THEN GOTO 2999
   MATREADU OR.REC FROM OPEN.RECV, OR.ID ELSE
      RELEASE OPEN.RECV, OR.ID
      GOTO 2999
   END
   IF DIV.CODE # "ALL" THEN
      LOCATE DIV.CODE IN OR.DIV<1>,1 SETTING DFND ELSE
         RELEASE OPEN.RECV, OR.ID
         GOTO 2999
      END
   END
   IF OR.BAL + 0 <> 0 THEN
      RELEASE OPEN.RECV, OR.ID
      GOTO 2999
   END
   BLK = 0
   TR.CNT = COUNT(OR.TYPE,VM) + (OR.TYPE # "")
   FOR TR = TR.CNT TO 1 STEP - 1 UNTIL BLK
      IF OR.TR.DATE<1,TR> > ARCFISCAL<6,POS> THEN BLK = 1 ;* T23278
   NEXT TR
   IF BLK THEN
      RELEASE OPEN.RECV, OR.ID
      GOTO 2999
   END
   MAT POR.REC = ""
   FOR INDEX.COUNT = 1 TO OR.REC.SIZE
      POR.REC(INDEX.COUNT) = OR.REC(INDEX.COUNT)
   NEXT INDEX.COUNT
   READV INVOICE.DESC FROM INVOICE,OR.ID,12 THEN
      POR.INV.DESC = INVOICE.DESC<1,1>
   END ELSE
      READV INVOICE.DESC FROM MANUAL.INVOICE,OR.ID,12 THEN
         POR.INV.DESC = INVOICE.DESC<1.1>
      END ELSE
         POR.INV.DESC = ""
      END
   END
   MATWRITE POR.REC ON PURGED.OPEN.RECV, OR.ID
   READ PURGED.XREF.REC FROM PURGED.OR.XREF, CONO:OR.CUST ELSE PURGED.XREF.REC = ""
   PURGED.XREF.REC<-1,0,0> = OR.ID
   WRITE PURGED.XREF.REC ON PURGED.OR.XREF, CONO:OR.CUST
   DELETE OPEN.RECV, OR.ID
   FND = 1
   MATREADU CUST.REC FROM CUSTOMER, CONO:OR.CUST ELSE FND = 0
   IF FND THEN
      LOCATE OR.ID[4,99] IN CUST.INVOICE<1>,1 SETTING FND ELSE FND = 0
      IF FND THEN
         CUST.INVOICE = DELETE(CUST.INVOICE,1,FND,0)
         MATWRITE CUST.REC ON CUSTOMER, CONO:OR.CUST
      END ELSE
         RELEASE CUSTOMER, CONO:OR.CUST
      END
   END ELSE
      RELEASE CUSTOMER, CONO:OR.CUST
   END
2999 *
REPEAT
IF EOY = 0 THEN GOTO 7000
READ JCFISCAL FROM CONTROL, CONO : "JCFISCAL" ELSE
   JCFISCAL = FR.CURR.PER<1,POS>
END
YEAR = FR.CURR.PER<1,POS>[1,4]
IF YEAR > JCFISCAL<1>[1,4] THEN
   YEAR = JCFISCAL<1>[1,4]
END
YEAR = YEAR - 2
**** CUSTOMER ****
SELECT CUSTOMER
WRITE "CUSTOMER" ON CONTROL , PROG.ID
DATA = 1
LOOP
   READNEXT CUST.ID ELSE DATA = 0
WHILE DATA DO
   IF CUST.ID[1,3] # CONO THEN GOTO 3999
   MATREADU CUST.REC FROM CUSTOMER,CUST.ID ELSE
      RELEASE CUSTOMER, CUST.ID
      GOTO 3999
   END
   FND = 0
   FOR I = 1 TO NUM.PERIODS WHILE FND = 0
      PERIOD = YEAR : STR("0",2-LEN(I)) : I
      LOCATE PERIOD IN CUST.SALES.PER<1>,1 SETTING FND ELSE
         FND = 0
      END
   NEXT I
   IF FND THEN
      CNT = COUNT(CUST.SALES.PER,VM) + 1
      FOR I = CNT TO FND STEP -1
         IF YEAR = CUST.SALES.PER<1,I>[1,4] THEN
            CUST.SALES.PER = DELETE(CUST.SALES.PER,1,I,0)
            CUST.SALES = DELETE(CUST.SALES,1,I,0)
         END
      NEXT I
   END
   MATWRITE CUST.REC ON CUSTOMER,CUST.ID
3999 *
REPEAT
**** SHIP.VIA ****
SELECT SHIP.VIA
WRITE "SHIP.VIA" ON CONTROL , PROG.ID
DATA = 1
LOOP
   READNEXT SHPV.ID ELSE DATA = 0
WHILE DATA DO
   IF CONO # SHPV.ID[1,3] THEN GOTO 4999
   MATREADU SHIP.VIA.REC FROM SHIP.VIA, SHPV.ID ELSE
      RELEASE SHIP.VIA, SHPV.ID
      GOTO 4999
   END
   FND = 0
   FOR I = 1 TO NUM.PERIODS WHILE FND = 0
      PERIOD = YEAR : STR("0",2-LEN(I)) : I
      LOCATE PERIOD IN SHPV.PERIOD<1>,1 SETTING FND ELSE
         FND = 0
      END
   NEXT I
   IF FND THEN
      CNT = COUNT(SHPV.PERIOD,VM) + 1
      FOR I = CNT TO FND STEP -1
         IF YEAR = SHPV.PERIOD<1,I>[1,4] THEN
            SHPV.PERIOD = DELETE(SHPV.PERIOD,1,I,0)
            SHPV.SHPMT = DELETE(SHPV.SHPMT,1,I,0)
            SHPV.COST = DELETE(SHPV.COST,1,I,0)
            SHPV.SALE = DELETE(SHPV.SALE,1,I,0)
         END
      NEXT I
   END
   MATWRITE SHIP.VIA.REC ON SHIP.VIA, SHPV.ID
4999 *
REPEAT
**** TAX ****
SELECT TAX
WRITE "TAX" ON CONTROL , PROG.ID
DATA = 1
LOOP
   READNEXT TAX.ID ELSE DATA = 0
WHILE DATA DO
   IF CONO # TAX.ID[1,3] THEN GOTO 5999
   MATREADU TAX.REC FROM TAX, TAX.ID ELSE
      RELEASE TAX, TAX.ID
      GOTO 5999
   END
   FND = 0
   FOR I = 1 TO NUM.PERIODS WHILE FND = 0
      PERIOD = YEAR : STR("0",2-LEN(I)) : I
      LOCATE PERIOD IN TAX.PERIOD<1>,1 SETTING FND ELSE
         FND = 0
      END
   NEXT I
   IF FND THEN
      CNT = COUNT(TAX.PERIOD,VM) + 1
      FOR I = CNT TO FND STEP -1
         IF YEAR = TAX.PERIOD<1,I>[1,4] THEN
            TAX.PERIOD = DELETE(TAX.PERIOD,1,I,0)
            TAX.TAXABLE = DELETE(TAX.TAXABLE,1,I,0)
            TAX.CHARGED = DELETE(TAX.CHARGED,1,I,0)
         END
      NEXT I
   END
   MATWRITE TAX.REC ON TAX, TAX.ID
5999 *
REPEAT
7000 IF CO.GLS = "N" THEN GOTO 8000
IF CO.GL.LINK<1,1> # "Y" THEN GOTO 8000
**** EOM.TRANS (1) ****
ACCOUNTS = ""; AMOUNTS = ""
SELECT EOM.TRANS
WRITE "EOM.TRANS (1)" ON CONTROL , PROG.ID
MATREAD CSY.REC FROM CONTROL, CONO : "COA.SYS" ELSE MAT CSY.REC = ""
LOCATE "MJ" IN CSY.SOURCE<1>,1 SETTING FND ELSE NULL
L.GLA = CSY.LEVEL<1,FND>
MAT GLA.REC = ""
GLA.DATE = TODAY
GLA.SRC = "MJ"
GLA.MON = FR.CURR.PER<1,POS>
ODATE = " " : OCONV(FR.CURR.DATE<1,POS>,"D2/")
READU COUNTER FROM CONTROL, CONO : "GLACOUNTER" ELSE COUNTER = 1
WRITE "GLA ":COUNTER ON CONTROL, PROG.ID
DATA = 1
BEGIN CASE
   CASE L.GLA = "R"
      LOOP
         READNEXT ETR.ID ELSE DATA = 0
      WHILE DATA DO
         IF ETR.ID[1,3] # CONO THEN GOTO 7200
         MATREADU ETR.REC FROM EOM.TRANS, ETR.ID ELSE GOTO 7100
         TYPE = FIELD(FIELD(ETR.ID,"!",2),"*",1)
         ACCT = ETR.ID[1,ACCT.LEN]
         CUST.NO = FIELD(ETR.ID,"!",1)[ACCT.LEN+1,99]
         IF EQV.FLG = 1 THEN
            READ N.ACCT FROM COA.EQUIV, ACCT ELSE N.ACCT = ACCT
            ACCT = N.ACCT
         END
         COA.ID = ACCT[11,IN.ACCT.LEN]
         MATREAD COA.REC FROM COA, CONO : COA.ID ELSE
            MAT COA.REC = ""
            COA.DESC = UNKNOWN
         END
         BEGIN CASE
            CASE COA.DETAIL = "R" OR COA.DETAIL = "D"
               LOOP
                  COUNTER = COUNTER + 1
                  IF COUNTER > 999998 THEN COUNTER = 1
                  GLA.ID = ACCT : STR("0",6-LEN(COUNTER)) : COUNTER
                  READ DUMMY FROM GLA, GLA.ID ELSE DUMMY = ""
               WHILE DUMMY # "" DO REPEAT
               GLA.DESC = COA.DESC "L#25" : ODATE
               GLA.AMT = ETR.AMT
               GLA.REF = CUST.NO
               MATWRITE GLA.REC ON GLA, GLA.ID
            CASE 1
               LOCATE ACCT IN ACCOUNTS,1 SETTING AFND ELSE
                  ACCOUNTS<AFND> = ACCT
                  AMOUNTS<AFND> = ""
               END
               IF TYPE = "D" THEN
                  AMOUNTS<AFND,1> = AMOUNTS<AFND,1> + ETR.AMT
               END ELSE
                  AMOUNTS<AFND,2> = AMOUNTS<AFND,2> + ETR.AMT
               END
         END CASE
7100     RELEASE EOM.TRANS, ETR.ID
7200  REPEAT
   CASE L.GLA = "D"
      LOOP
         READNEXT ETR.ID ELSE DATA = 0
      WHILE DATA DO
         IF ETR.ID[1,3] # CONO THEN GOTO 7400
         MATREADU ETR.REC FROM EOM.TRANS, ETR.ID ELSE GOTO 7300
         ACCT = ETR.ID[1,ACCT.LEN]
         CUST.NO = FIELD(ETR.ID,"!",1)[ACCT.LEN+1,99]
         TYPE = FIELD(FIELD(ETR.ID,"!",2),"*",1)
         IF EQV.FLG = 1 THEN
            READ N.ACCT FROM COA.EQUIV, ACCT ELSE N.ACCT = ACCT
            ACCT = N.ACCT
         END
         COA.ID = ACCT[11,IN.ACCT.LEN]
         MATREAD COA.REC FROM COA, CONO : COA.ID ELSE
            MAT COA.REC = ""
            COA.DESC = UNKNOWN
         END
         BEGIN CASE
            CASE COA.DETAIL = "D"
               TCNT = COUNT(ETR.TRAN,VM) + (ETR.TRAN # "")
               FOR I = 1 TO TCNT
                  LOOP
                     COUNTER = COUNTER + 1
                     IF COUNTER > 999998 THEN COUNTER = 1
                     GLA.ID = ACCT : STR("0",6-LEN(COUNTER)) : COUNTER
                     READ DUMMY FROM GLA, GLA.ID ELSE DUMMY = ""
                  WHILE DUMMY # "" DO REPEAT
                  GLA.DESC = ETR.RDATE<1,I> "L#8" : ETR.TRAN<1,I> : "-" : ETR.REF<1,I>
                  GLA.DESC = GLA.DESC "L#25" : " " : OCONV(ETR.DATE<1,I>,"D2/")
                  GLA.AMT = ETR.TAMT<1,I>
                  GLA.REF = CUST.NO
                  MATWRITE GLA.REC ON GLA, GLA.ID
               NEXT I
            CASE COA.DETAIL = "R"
               LOOP
                  COUNTER = COUNTER + 1
                  IF COUNTER > 999998 THEN COUNTER = 1
                  GLA.ID = ACCT : STR("0",6-LEN(COUNTER)) : COUNTER
                  READ DUMMY FROM GLA, GLA.ID ELSE DUMMY = ""
               WHILE DUMMY # "" DO REPEAT
               GLA.DESC = COA.DESC "L#25" : ODATE
               GLA.AMT = ETR.AMT
               GLA.REF = CUST.NO
               MATWRITE GLA.REC ON GLA, GLA.ID
            CASE 1
               LOCATE ACCT IN ACCOUNTS,1 SETTING AFND ELSE
                  ACCOUNTS<AFND> = ACCT
                  AMOUNTS<AFND> = ""
               END
               IF TYPE = "D" THEN
                  AMOUNTS<AFND,1> = AMOUNTS<AFND,1> + ETR.AMT
               END ELSE
                  AMOUNTS<AFND,2> = AMOUNTS<AFND,2> + ETR.AMT
               END
         END CASE
7300     RELEASE EOM.TRANS, ETR.ID
7400  REPEAT
   CASE 1
      LOOP
         READNEXT ETR.ID ELSE DATA = 0
      WHILE DATA DO
         IF ETR.ID[1,3] # CONO THEN GOTO 7600
         MATREADU ETR.REC FROM EOM.TRANS, ETR.ID ELSE GOTO 7500
         ACCT = ETR.ID[1,ACCT.LEN]
         TYPE = FIELD(FIELD(ETR.ID,"!",2),"*",1)
         IF EQV.FLG = 1 THEN
            READ N.ACCT FROM COA.EQUIV, ACCT ELSE N.ACCT = ACCT
            ACCT = N.ACCT
         END
         LOCATE ACCT IN ACCOUNTS,1 SETTING FND ELSE
            ACCOUNTS<FND> = ACCT
            AMOUNTS<FND> = ""
         END
         IF TYPE = "D" THEN
            AMOUNTS<FND,1> = AMOUNTS<FND,1> + ETR.AMT
         END ELSE
            AMOUNTS<FND,2> = AMOUNTS<FND,2> + ETR.AMT
         END
7500     RELEASE EOM.TRANS, ETR.ID
7600  REPEAT
END CASE
GLA.REF = ""
ACNT = COUNT(ACCOUNTS,AM)+(ACCOUNTS # "")
FOR I = 1 TO ACNT
   ACCT = ACCOUNTS<I>
   COA.ID = CONO : ACCT[11,IN.ACCT.LEN]
   MATREAD COA.REC FROM COA, COA.ID ELSE COA.DESC = UNKNOWN
   GLA.DESC = COA.DESC "L#25" : ODATE
   FOR J = 1 TO 2
      IF AMOUNTS<I,J> = "" THEN GOTO 7900
      LOOP
         COUNTER = COUNTER + 1
         IF COUNTER > 999998 THEN COUNTER = 1
         GLA.ID = ACCT : STR("0",6-LEN(COUNTER)) : COUNTER
         READ DUMMY FROM GLA, GLA.ID ELSE DUMMY = ""
      WHILE DUMMY # "" DO REPEAT
      GLA.AMT = AMOUNTS<I,J>
      MATWRITE GLA.REC ON GLA, GLA.ID
7900 NEXT J
NEXT I
WRITE COUNTER ON CONTROL, CONO : "GLACOUNTER"
ACCOUNTS = ""
AMOUNTS = ""
**** EOM.TRANS (2) ****
8000 *
SELECT EOM.TRANS
WRITE "EOM.TRANS (2)" ON CONTROL , PROG.ID
DATA = 1
LOOP
   READNEXT ETR.ID ELSE DATA = 0
WHILE DATA DO
   IF ETR.ID[1,3] # CONO THEN GOTO 8999
   MATREADU ETR.REC FROM EOM.TRANS, ETR.ID ELSE
      RELEASE EOM.TRANS, ETR.ID
      GOTO 8999
   END
   CURR.PER = FR.CURR.PER<1,POS>
   MAT ETH.REC = MAT ETR.REC
   DONE = 0
   SEQ = 0
   ETH.ID = FIELD(ETR.ID,"*",1):"*":CURR.PER
   LOOP UNTIL DONE = 1 DO
      SEQ = SEQ + 1
      ETH.KEY = ETH.ID:"*":SEQ
      READ CHECKIT FROM ARS.EOM.TRANS.HIST, ETH.KEY ELSE DONE = 1
   REPEAT
   MATWRITE ETH.REC ON ARS.EOM.TRANS.HIST, ETH.KEY
   DELETE EOM.TRANS, ETR.ID
8999 *
REPEAT
WRITE "EOM.TRANS (3)" ON CONTROL, PROG.ID
IF SECURITY.REC<2> = 'Y' THEN EOD.HID = '!':DIV.CODE ELSE EOD.HID = ''
READU EOD.HIST.REC FROM EOD.HIST, CONO:SYS.FISCAL:FR.CURR.PER<1,POS>:EOD.HID ELSE;* T23278
   EOD.HIST.REC = ""
END
EOD.HIST.REC = INSERT(EOD.HIST.REC,-1,0,0,TODAY)
WRITE EOD.HIST.REC ON EOD.HIST,CONO:SYS.FISCAL:FR.CURR.PER<1,POS>:EOD.HID
SELECT EOM.TRANS
READNEXT ETR.ID ELSE
   IF D.M.FLG = "PERIOD" THEN
      IF FR.NEXT.PER<1,POS> = "" THEN
*	  NEXT.PER1=ARCFISCAL<3>[1,4]
*         NEXT.PER = NEXT.PER1:"0":ARCFISCAL<3>[5,1]
*         FR.NEXT.PER<1,POS> = NEXT.PER
	   FR.NEXT.PER<1,POS> = ARCFISCAL<3>
      END
      IF FR.NEXT.DATE<1,POS> = "" THEN
	  FR.NEXT.DATE<1,POS> = ARCFISCAL<4>
      END
      FR.CURR.PER<1,POS> = FR.NEXT.PER<1,POS>
      FR.CURR.DATE<1,POS> = FR.NEXT.DATE<1,POS>
      FR.CLOSE.DATE<1,POS> = TODAY
      STATUS = RBO.setProperty('','FR_CURR_PER',FR.CURR.PER)
      STATUS = RBO.setProperty('','FR_CURR_DATE',FR.CURR.DATE)
      STATUS = RBO.setProperty('','FR_CLOSE_DATE',FR.CLOSE.DATE)
   END
   FR.NEXT.PER<1,POS> = ""; FR.NEXT.DATE<1,POS> = ""
   FR.PRINT<1,POS> = ""; FR.D.M.FLG<1,POS> = ""
   STATUS = RBO.setProperty('','FR_NEXT_PER',FR.NEXT.PER)
   STATUS = RBO.setProperty('','FR_NEXT_DATE',FR.NEXT.DATE)
   STATUS = RBO.setProperty('','FR_PRINT',FR.PRINT)
   STATUS = RBO.setProperty('','FR_D_M_FLG',FR.D.M.FLG)
   DELETE CONTROL, PROG.ID
   GOSUB 90000
   CMD='DELETE.FILE ': TRANFILE :' FORCE'
   UDTEXECUTE CMD CAPTURING JUNK
   IF REJECT.RPT.PRT='' THEN
      CMD='DELETE.FILE ': REJECTFILE : ' FORCE'
      UDTEXECUTE CMD CAPTURING JUNK
   END
   IF ERRMSG # '' THEN GOTO 93000
   GOTO 99999
END
NORETURN=1
90000 
READ JUNK FROM POST.REJECTS,'10001' THEN
   UserID = PMCProperty<1,3>
   IF D.M.FLG = 'DAY' THEN RPTID = 'AR309' ELSE RPTID = 'AR311'
*   IN_PARAM = UserID:"!ARSEOMC!111!":RPTID:"!":CONO:"!Print"
   IN_PARAM = UserID:"!ARSEOMC!111!":RPTID:"!":CONO:"!":Printfalg
   IN_PARAM<2> = ''
   IN_PARAM<3> = 'EOD.REJECT.LISTING'
   IN_PARAM<4> = 'P'
   IN_PARAM<5> = 'PMCPROCS'
   IN_PARAM<6> = REJECTFILE
   IN_PARAM<7> = 'REJECTS'
   OUT_PARAM=''
   UDTEXECUTE 'SSELECT ':REJECTFILE CAPTURING JUNK
   CALL GenerateReport_Sub(ERRMSG,IN_PARAM,OUT_PARAM)
   REJECT.RPT.PRT='WARNING !!! MAKE SURE TO PICKUP CLOSING REJECTS REPORT FROM PRINTER'
   STATUS=RBO.setProperty('','RejectRptPrinted',REJECT.RPT.PRT)
   STATUS=RBO.setProperty('','ReportImage',OUT_PARAM<2>)
END ELSE
	IF Printfalg # "Print" THEN	ERRMSG  = "There is no data to ":Printfalg
	*GOTO 93000
END
IF NOT(NORETURN) THEN RETURN
FR.PRINT<1,POS> = "X";* T23278
STATUS = RBO.setProperty('','FR_PRINT',FR.PRINT)
ERRMSG = "E R R O R !!! CANNOT LOCATE ALL TRANSACTIONS"
93000 WRITEV ERRMSG ON CONTROL, PROG.ID,2
STATUS = RBO.setProperty('','ServerStatus',1)
STATUS = RBO.setProperty('','ServerMessage',ERRMSG)
*** END OF JOB ***
99999 
MATWRITE FISCAL.REC ON CONTROL, CONO:SYS.FISCAL
END
