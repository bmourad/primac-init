SUBROUTINE BOLM_OPTIONS
********************************************************************************
*   Program name :- BOLM_OPTIONS
*   Created:- 12/27/2002
*   Modified:- 08/19/2003
*   Authors :- Mohammed Abdul Malik & L. Ross 
*
* Valid Options are: 'RO' - Review Order from shipment definition screen.
*                 From main screen:
*                    'F'ile
*                    'D'elete
*                    'P'rint
*                    'U'pdate
* Use this method in lieu of WRITE to DAILY.BOL file.


*-------------------------------------------------------------------------*
*

* In Properties:
* --------------
*  
*
* Out Properties:
* ---------------
*  
***************************************************************************
$INCLUDE WWINSERT RBO.H
$INCLUDE ICS.CPYLIB FNGD.BOM
$INCLUDE OPS.CPYLIB ORDER.DETAIL
$INCLUDE OPS.CPYLIB ORDER.DETAIL.INQ
$INCLUDE OPS.CPYLIB BOL
$INCLUDE OPS.CPYLIB PICK.TICKET
$INCLUDE OPS.CPYLIB ORDER.RELEASE
$INCLUDE PMC.CPYLIB CUSTOMER
$INCLUDE PMC.CPYLIB SHIP.VIA
$INCLUDE PMC.CPYLIB FOB
$INCLUDE ICS.CPYLIB INVENTORY
$INCLUDE ICS.CPYLIB INV.CNV
$INCLUDE ICS.CPYLIB ICS.ID
$INCLUDE CPYLIB CHAR
DIM ORD.DET.SUM(50,500)
*----
MAT ORR.REC = ''
MAT PKT.REC = ''
MAT ORD.DET.SUM = ''
MAT BOL.REC = ''

IF FILEINFO(CONTROL,0)=0 THEN
  OPEN '','CONTROL' TO CONTROL ELSE
    ERRMSG='CONTROL file is missing!'
    GOTO 93000
  END
END
OPEN "","DAILY.BOL" TO DAILY.BOL ELSE
  ERRMSG = "Cannot locate the DAILY.BOL file"; GOTO 93000
END
OPEN "","BOL" TO BOL ELSE
  ERRMSG = "Cannot locate the BOL file"; GOTO 93000
END
OPEN "","BOL_TAG" TO BOL_TAG ELSE
  ERRMSG = "Cannot locate the BOL_TAG file"; GOTO 93000
END
OPEN "","PICK.TICKET" TO PICK.TICKET ELSE
  ERRMSG = "Cannot locate the PICK.TICKET file"; GOTO 93000
END
OPEN "","FNGD.BOM" TO FNGD.BOM ELSE
  ERRMSG = "Cannot locate the FNGD.BOM file"; GOTO 93000
END
OPEN "","ORDER.DETAIL" TO ORDER.DETAIL ELSE
  ERRMSG = "Cannot locate the ORDER.DETAIL file"; GOTO 93000
END
OPEN "","ORDER.RELEASE" TO ORDER.RELEASE ELSE
  ERRMSG = "Cannot locate the ORDER.RELEASE file"; GOTO 93000
END
OPEN "","SECURITY" TO SECURITY ELSE ERRMSG = "SECURITY FILE MISSING"; GOTO 93000
OPEN "","CUSTOMER" TO CUSTOMER ELSE ERRMSG = "CUSTOMER FILE MISSING"; GOTO 93000
OPEN "","SHIP.VIA" TO SHIP.VIA ELSE ERRMSG = "SHIP.VIA FILE MISSING"; GOTO 93000
OPEN "","FOB" TO FOB ELSE ERRMSG = "FOB FILE MISSING"; GOTO 93000
OPEN "","INVENTORY" TO INVENTORY ELSE ERRMSG = "INVENTORY FILE MISSING"; GOTO 93000
*
DEFFUN CalcStkQty(COST.QTY,MAT INV.CNV.REC,ROND,LN)
*
STATUS=RBO.getProperty('','ID',ID)
CONO=ID[1,3]
STATUS=RBO.getProperty('','BOL_PKTKT',BOL.PKTKT)
STATUS=RBO.getProperty('','BOL_RELEASE',BOL.RELEASE)
STATUS=RBO.getProperty('','BOL_ORDER',BOL.ORDER)
STATUS=RBO.getProperty('','BOL_CUST',BOL.CUST)
STATUS=RBO.getProperty('','BOL_SHIP_TO',BOL.SHIP.TO)
STATUS=RBO.getProperty('','BOL_SHIP_VIA',BOL.SHIP.VIA)
STATUS=RBO.getProperty('','BOL_SHP_DATE',BOL.SHP.DATE)
STATUS=RBO.getProperty('','BOL_FOB',BOL.FOB)
STATUS=RBO.getProperty('','BOL_FREIGHT',BOL.FREIGHT)
STATUS=RBO.getProperty('','BOL_PERIOD',BOL.PERIOD)
STATUS=RBO.getProperty('','BOL_TAX_JUR',BOL.TAX.JUR)
STATUS=RBO.getProperty('','BOL_INST',BOL.INST)
STATUS=RBO.getProperty('','BOL_TYPE',BOL.TYPE)
STATUS=RBO.getProperty('','BOL_PROD',BOL.PROD)
STATUS=RBO.getProperty('','BOL_WHSE',BOL.WHSE)
STATUS=RBO.getProperty('','BOL_LOC',BOL.LOC)
STATUS=RBO.getProperty('','BOL_KIT',BOL.KIT)
STATUS=RBO.getProperty('','BOL_SEQ',BOL.SEQ)
STATUS=RBO.getProperty('','BOL_BOM_NUM',BOL.BOM.NUM)
STATUS=RBO.getProperty('','BOL_RECP_NO',BOL.RECP.NO)
STATUS=RBO.getProperty('','BOL_QTY',BOL.QTY)
STATUS=RBO.getProperty('','BOL_STATUS',BOL.STATUS)
STATUS=RBO.getProperty('','BOL_POST_FLAG',BOL.POST.FLAG)
STATUS=RBO.getProperty('','BOL_SHP_TERMS',BOL.SHP.TERMS)
STATUS=RBO.getProperty('','BOL_FRT_PAY',BOL.FRT.PAY)
STATUS=RBO.getProperty('','BOL_SHP_WT',BOL.SHP.WT)
STATUS=RBO.getProperty('','BOL_CRTN_CNT',BOL.CRTN.CNT)
STATUS=RBO.getProperty('','BOL_SHP_AMT',BOL.SHP.AMT)
STATUS=RBO.getProperty('','BOL_SKD_CNT',BOL.SKD.CNT)
STATUS=RBO.getProperty('','BOL_PRT_DATE',BOL.PRT.DATE)
STATUS=RBO.getProperty('','BOL_GLA_DATE',BOL.GLA.DATE)
STATUS=RBO.getProperty('','OPTION',OPTION)
STATUS=RBO.getProperty('','DELETE_FLAG',DELETE.FLAG)
STATUS=RBO.getProperty('','OLD_RELNO',OLD.RELNO)
STATUS=RBO.getProperty('','OLD_PKTKT',OLD.PKTKT)
STATUS=RBO.getProperty('','BOL_SHPV_DESC',SHPV.DESC)
STATUS=RBO.getProperty('','BOL_FOB_DESC',FOB.DESC)
BOLNO=ID[4,7]
CUSTNO=BOL.CUST
ORDNO=BOL.ORDER<1,1>
SHPNO=BOL.SHIP.TO
PKTKTNO=BOL.PKTKT<1,1>
RELNO=BOL.RELEASE<1,1>
IF INDEX(BOL.SHP.DATE,'/',1) THEN BOL.SHP.DATE=ICONV(BOL.SHP.DATE,'D2/')
IF INDEX(BOL.PRT.DATE,'/',1) THEN BOL.PRT.DATE=ICONV(BOL.PRT.DATE,'D2/')
TODAY=DATE()
IF BOL.SHIP.VIA # "" AND SHPV.DESC = '' THEN
  MATREAD SHIP.VIA.REC FROM SHIP.VIA,CONO:BOL.SHIP.VIA ELSE SHPV.DESC = ''
  IF SHPV.DESC # '' THEN
    STATUS=RBO.setProperty('','BOL_SHPV_DESC',SHPV.DESC)
  END
END
IF BOL.FOB # "" AND FOB.DESC = '' THEN
  MATREAD FOB.REC FROM FOB,CONO:BOL.FOB ELSE FOB.DESC = ''
  IF FOB.DESC # '' THEN
    STATUS=RBO.setProperty('','BOL_FOB_DESC',FOB.DESC)
  END
END
*
*
BOL.ORDER=''
BOL.PKTKT=''
BOL.RELEASE=''
FOR I = DCOUNT(BOL.PROD,VM) TO 1 STEP -1
  FOR J = DCOUNT(BOL.QTY<1,I>,SVM) TO 1 STEP -1
    BOL.QTY<1,I,J> = BOL.QTY<1,I,J> * 1000
  NEXT J
  BOL.ORDER<1,I>=ORDNO
  BOL.PKTKT<1,I>=PKTKTNO
  BOL.RELEASE<1,I>=RELNO
NEXT I
IF BOL.GLA.DATE # 'P' AND BOL.GLA.DATE <= 0 THEN BOL.GLA.DATE = ''
*
*---- Option
*
BEGIN CASE
  CASE OPTION = "END" OR OPTION = "E"
    IF BOLNO # "N" THEN
      RELEASE DAILY.BOL, CONO:BOLNO
    END
  CASE BOL.PROD = "" AND (OPTION="F" OR OPTION= "P" OR OPTION = "U")
    ERRMSG = "Invalid request. No detail data present."
    GOTO 93000
  CASE OPTION = "D" AND BOLNO # "N"
    IF DELETE.FLAG = "Y" THEN 
      RCNT = DCOUNT(OLD.RELNO,VM)
      FOR R = 1 TO RCNT
        LOCATE OLD.RELNO<1,R> IN BOL.RELEASE<1>,1 SETTING FND ELSE
          MATREADU ORR.REC FROM ORDER.RELEASE, CONO:OLD.RELNO<1,R> THEN
            IF ORR.STATUS<1,1> = "INPROCESS" THEN
              ORR.STATUS = DELETE(ORR.STATUS,1,1,0)
              ORR.STAT.DATE = DELETE(ORR.STAT.DATE,1,1,0)
              ORR.BOL = ""
              MATWRITE ORR.REC ON ORDER.RELEASE, CONO:OLD.RELNO<1,R>
            END
          END
          RELEASE ORDER.RELEASE, CONO:OLD.RELNO<1,R>
        END
      NEXT R
      RCNT = DCOUNT(BOL.RELEASE,VM)
      FOR R = 1 TO RCNT
        MATREADU ORR.REC FROM ORDER.RELEASE, CONO:BOL.RELEASE<1,R> THEN
          IF ORR.STATUS<1,1> = "INPROCESS" THEN
            ORR.STATUS = DELETE(ORR.STATUS,1,1,0)
            ORR.STAT.DATE = DELETE(ORR.STAT.DATE,1,1,0)
            ORR.BOL = ""
            MATWRITE ORR.REC ON ORDER.RELEASE, CONO:BOL.RELEASE<1,R>
          END
        END
        RELEASE ORDER.RELEASE, CONO:BOL.RELEASE<1,R>
      NEXT R
      PCNT = DCOUNT(OLD.PKTKT,VM)
      FOR P = 1 TO PCNT
        LOCATE OLD.PKTKT<1,P> IN BOL.PKTKT<1>,1 SETTING FND ELSE
          MATREADU PKT.REC FROM PICK.TICKET, CONO:OLD.PKTKT<1,P> THEN
            PKT.BOL = ""
            MATWRITE PKT.REC ON PICK.TICKET, CONO:OLD.PKTKT<1,P>
          END ELSE
            RELEASE PICK.TICKET, CONO:OLD.PKTKT<1,P>
          END
        END
      NEXT P
      PCNT = DCOUNT(BOL.PKTKT,VM)
      FOR P = 1 TO PCNT
        MATREADU PKT.REC FROM PICK.TICKET, CONO:BOL.PKTKT<1,P> THEN
          PKT.BOL = ""
          MATWRITE PKT.REC ON PICK.TICKET, CONO:BOL.PKTKT<1,P>
        END ELSE
          RELEASE PICK.TICKET, CONO:BOL.PKTKT<1,P>
        END
      NEXT P
      DELETE DAILY.BOL, CONO:BOLNO
    END
  CASE OPTION = "F"
    GOSUB 8000 ; * CHECK COMPONETS OF KITS
    IF KIT.ERROR = 1 THEN
      ERRMSG = "There is a problem with Kit Components not being equal"
      GOTO 93000
    END ELSE
      IF BOLNO = "N" THEN
      *** COMMENTED AND THE CODE PLACE IN GetNewBOLNO  GOSUB 8100
      END
      GOSUB 8200
      MATWRITE BOL.REC ON DAILY.BOL, CONO:BOLNO
    END
  CASE OPTION = "U"
    IF BOLNO = "N" OR BOL.PRT.DATE = "" THEN
      ERRMSG = "Must print the Bill Of Lading before posting"
      GOTO 93000
    END ELSE
      GOSUB 8000 ;* CHECK KIT COMPONETS
      IF KIT.ERROR = 1 THEN
        ERRMSG = "There is a problem with Kit Components not being equal"
        GOTO 93000
      END ELSE
        GOSUB 8200
        MATWRITEU BOL.REC ON DAILY.BOL, CONO:BOLNO
        PKT.ID = BOL.PKTKT<1,1>
        GOSUB 8700
      END
    END
  CASE OPTION = "P"
    GOSUB 8000 ;* CHECK KIT COMPONENTS
    IF KIT.ERROR = 1 THEN
      ERRMSG = "There is a problem with Kit Components not being equal"
      GOTO 93000
    END
    IF BOLNO = "N" THEN
      *** COMMENTED AND THE CODE PLACE IN GetNewBOLNO GOSUB 8100
    END
    GOSUB 8200
*   MATWRITE BOL.REC ON DAILY.BOL, CONO:BOLNO
    BOLNUM = BOLNO
    LASER.FLAG = ''
    SEC.USER = OCONV(@LOGNAME,"MCU")
    SEC.KEY = CONO:SEC.USER:"!LASER"
    READ SEC.REC FROM SECURITY,SEC.KEY THEN
      LASER.FLAG = 1
    END
    CALL BOLM_PRINT_SUB(CONO,BOLNUM,"",MAT BOL.REC,LASER.FLAG)
    IF BOLNUM = BOLNO THEN
      BOL.PRT.DATE = TODAY
    END
    MATWRITE BOL.REC ON DAILY.BOL, CONO:BOLNO
    STATUS=RBO.setProperty('','BOL_PRT_DATE',BOL.PRT.DATE)
  CASE OPTION = 'RO'
    MATREAD ORD.DET.REC FROM ORDER.DETAIL, CONO:ORDNO:"!":SHPNO ELSE
      MAT ORD.DET.REC = ""
    END
    PROD.DESCS=''
    UNIT.OF.MEAS=''
    FOR N = 1 TO DCOUNT(OSD.PROD,VM)
      MATREAD INV.REC FROM INVENTORY, CONO:OSD.PROD<1,N> ELSE
        MAT INV.REC = ""; INV.FULL.DESC = "Unknown"
      END
      PROD.DESCS<1,N> = INV.FULL.DESC
      UNIT.OF.MEAS<1,N> = INV.UNIT<1,3>
      $INCLUDE ICSBP INV.UM.CNV
      OSD.G.QTY<1,N> = CalcStkQty(OSD.G.QTY<1,N>,MAT INV.CNV.REC,'','')
      OSD.G.QTY<1,N> = OCONV(OSD.G.QTY<1,N>,ICR.CNV1)'R#10'
      OSD.R.QTY<1,N> = CalcStkQty(OSD.R.QTY<1,N>,MAT INV.CNV.REC,'','')
      OSD.R.QTY<1,N> = OCONV(OSD.R.QTY<1,N>,ICR.CNV1)'R#10'
      OSD.S.QTY<1,N> = CalcStkQty(OSD.S.QTY<1,N>,MAT INV.CNV.REC,'','')
      OSD.S.QTY<1,N> = OCONV(OSD.S.QTY<1,N>,ICR.CNV1)'R#10'
      IF OSD.JOB<1,N,2> # "" THEN
        OSD.JOB<1,N> = 'MULTI'
      END
    NEXT N

    STATUS=RBO.setProperty('','OSD_PO',OSD.PO)
    STATUS=RBO.setProperty('','OSD_PROD',OSD.PROD)
    STATUS=RBO.setProperty('','ProdDescs',PROD.DESCS)
    STATUS=RBO.setProperty('','OSD_WHSE',OSD.WHSE)
    STATUS=RBO.setProperty('','Ums',UNIT.OF.MEAS)
    STATUS=RBO.setProperty('','OSD_G_QTY',OSD.G.QTY)
    STATUS=RBO.setProperty('','OSD_R_QTY',OSD.R.QTY)
    STATUS=RBO.setProperty('','OSD_S_QTY',OSD.S.QTY)
  CASE 1
    ERRMSG = "Invalid entry, please re-enter"
    GOTO 93000
END CASE
RETURN
*
*Subroutines
*
8000*
KIT.ERROR = 0
NUM.PRODS = DCOUNT(BOL.PROD,VM)
FOR P = 1 TO NUM.PRODS
  IF BOL.KIT<1,P> = "K" THEN
    ACTUAL.SHIP = 0
    PROD.STR = ""
    SHIP.AMT = ""
    RATIO.AMT = ""
    BILL.NUM = BOL.BOM.NUM<1,P>
    MATREAD BOM.REC FROM FNGD.BOM, CONO:BILL.NUM ELSE
      MAT BOM.REC = ""
    END
    FOR P2 = P+1 TO NUM.PRODS
      IF BOL.KIT<1,P2> = "M" THEN
        IF BOL.BOM.NUM<1,P2> = BILL.NUM THEN
*
* LOGIC FOR KITTING RATIOS
*
          TMP.RATIO = 1
          IF BOL.KIT<1,P2> = "M" THEN
            LOCATE BOL.PROD<1,P2> IN BOM.PROD<1>,1 SETTING BOM.FND THEN
              TMP.RATIO = BOM.Q.RATIO<1,BOM.FND> / 10000
            END ELSE
              TMP.RATIO = 1
            END
          END
          LOCATE BOL.PROD<1,P2> IN PROD.STR<1>,1 SETTING INDX THEN
            SHIP.AMT<1,INDX> += SUM(BOL.QTY<1,P2>)
          END ELSE
            PROD.STR = INSERT(PROD.STR,1,INDX,0,BOL.PROD<1,P2>)
            RATIO.AMT = INSERT(RATIO.AMT,1,INDX,0,TMP.RATIO)
            SHIP.AMT = INSERT(SHIP.AMT,1,INDX,0,SUM(BOL.QTY<1,P2>))
          END
*
8050      
*
        END
      END
    NEXT P2
    NUM.KIT = DCOUNT(PROD.STR,VM)
    KITS.SHIP = 0
    FOR K = 1 TO NUM.KIT
      KITS.SHIP = SHIP.AMT<1,K> / RATIO.AMT<1,K>
      IF ACTUAL.SHIP = 0 THEN
        ACTUAL.SHIP = KITS.SHIP
      END ELSE
        IF ACTUAL.SHIP # KITS.SHIP THEN
          KIT.ERROR = 1
          RETURN
        END
      END
    NEXT K
  END
NEXT P
RETURN
8100*
READU BOLNO FROM CONTROL, CONO:"DAILY.BOL" ELSE
  BOLNO = 1
END
ONFILE = 1
LOOP
  BOLNO = BOLNO "R%7"
  READU DUMMY FROM DAILY.BOL, CONO:BOLNO THEN
    RELEASE DAILY.BOL, CONO:BOLNO
  END ELSE
    READU DUMMY FROM BOL, CONO:BOLNO THEN
      RELEASE BOL, CONO:BOLNO
    END ELSE
      ONFILE = 0
    END
  END
WHILE ONFILE DO
  BOLNO = BOLNO + 1
REPEAT
WRITE (BOLNO + 1) ON CONTROL, CONO:"DAILY.BOL"
STATUS=RBO.setProperty('','ID',CONO:BOLNO)
STATUS=RBO.setProperty('','BOL_NO',BOLNO)
MESG = 'Please note down the new Bill Of Lading Number ':BOLNO
STATUS = RBO.setProperty('','NewMessage',MESG)
RETURN
8200 *
RCNT = DCOUNT(OLD.RELNO,VM)
FOR R = 1 TO RCNT
  LOCATE OLD.RELNO<1,R> IN BOL.RELEASE<1>,1 SETTING FND ELSE
    MATREADU ORR.REC FROM ORDER.RELEASE, CONO:OLD.RELNO<1,R> THEN
      IF ORR.STATUS<1,1> = "INPROCESS" THEN
        ORR.STATUS = DELETE(ORR.STATUS,1,1,0)
        ORR.STAT.DATE = DELETE(ORR.STAT.DATE,1,1,0)
        ORR.BOL = ""
        MATWRITE ORR.REC ON ORDER.RELEASE, CONO:OLD.RELNO<1,R>
      END
    END
    RELEASE ORDER.RELEASE, CONO:OLD.RELNO<1,R>
  END
NEXT R
RCNT = DCOUNT(BOL.RELEASE,VM)
FOR R = 1 TO RCNT
  MATREADU ORR.REC FROM ORDER.RELEASE, CONO:BOL.RELEASE<1,R> THEN
    IF ORR.STATUS<1,1> # "INPROCESS" THEN
      ORR.STATUS = INSERT(ORR.STATUS,1,1,0,"INPROCESS")
      ORR.STAT.DATE = INSERT(ORR.STAT.DATE,1,1,0,TODAY)
      ORR.BOL = BOLNO
      MATWRITE ORR.REC ON ORDER.RELEASE, CONO:BOL.RELEASE<1,R>
    END
  END
  RELEASE ORDER.RELEASE, CONO:BOL.RELEASE<1,R>
NEXT R
PCNT = DCOUNT(OLD.PKTKT,VM)
FOR P = 1 TO PCNT
  LOCATE OLD.PKTKT<1,P> IN BOL.PKTKT<1>,1 SETTING FND ELSE
    MATREADU PKT.REC FROM PICK.TICKET, CONO:OLD.PKTKT<1,P> THEN
      PKT.BOL = ""
      MATWRITE PKT.REC ON PICK.TICKET, CONO:OLD.PKTKT<1,P>
    END ELSE
      RELEASE PICK.TICKET, CONO:OLD.PKTKT<1,P>
    END
  END
NEXT P
PCNT = DCOUNT(BOL.PKTKT,VM)
FOR P = 1 TO PCNT
  MATREADU PKT.REC FROM PICK.TICKET, CONO:BOL.PKTKT<1,P> THEN
    PKT.BOL = BOLNO
    MATWRITE PKT.REC ON PICK.TICKET, CONO:BOL.PKTKT<1,P>
  END ELSE
    RELEASE PICK.TICKET, CONO:BOL.PKTKT<1,P>
  END
NEXT P
RETURN
*
*---- POST BOL
*
8700*
REC.LOCK=''
MATREADU CUST.REC FROM CUSTOMER, CONO:BOL.CUST LOCKED REC.LOCK=1 ELSE
  RELEASE CUSTOMER, CONO:BOL.CUST
  ERRMSG='Cannot locate Customer ':CONO:BOL.CUST:' record!'; GOTO 93000
END
IF REC.LOCK THEN
  ERRMSG='Customer record ':CONO:BOL.CUST:' is locked by user '
  GOTO 93000
END
READU DUMMY FROM BOL, CONO:BOLNO THEN
  BOL.STATUS = "Bill Of Lading already posted"
  RELEASE BOL, CONO:BOLNO
  MATWRITE BOL.REC ON DAILY.BOL, CONO:BOLNO
  ERRMSG=BOL.STATUS
  STATUS=RBO.setProperty('','BOL_STATUS',BOL.STATUS)
  GOTO 93000
END ELSE
  BOLNUM = BOLNO
  CALL BOLM_POST_SUB(CONO,BOLNUM,MAT BOL.REC)
  IF BOL.STATUS = "" THEN
    RELNOS = ""
    RCNT = DCOUNT(BOL.RELEASE,VM)
    FOR R = 1 TO RCNT
      IF BOL.RELEASE<1,R> # "" THEN
        LOCATE BOL.RELEASE<1,R> IN RELNOS,1 SETTING FND ELSE
          CALL BOLM_REL_UNRESV_SUB(CONO,"B",BOL.RELEASE<1,R>,'')
          RELNOS<-1> = BOL.RELEASE<1,R>
        END
      END
    NEXT R
    MATWRITE BOL.REC ON BOL, CONO:BOLNO
    WRITE "" ON BOL_TAG, CONO:BOLNO
    DELETE DAILY.BOL, CONO:BOLNO
    XSTATUS = "L"; SHPNO = "ALL"
    CALL BOLM_ORDLIN_UPD(CONO,ORDNO,SHPNO,XSTATUS,PKT.ID,MAT ORD.DET.INQ,MAT ORD.DET.SUM)
    XSTATUS = "U"; SHPNO = ""
    CALL BOLM_ORDLIN_UPD(CONO,ORDNO,SHPNO,XSTATUS,PKT.ID,MAT ORD.DET.INQ,MAT ORD.DET.SUM)
  END ELSE
    RELEASE BOL, CONO:BOLNO
    MATWRITEU BOL.REC ON DAILY.BOL, CONO:BOLNO
    ERRMSG=BOL.STATUS
    STATUS=RBO.setProperty('','BOL_STATUS',BOL.STATUS)
    GOTO 93000
  END
END
RETURN
*
*---- Error
*
93000
STATUS = RBO.setProperty('','ServerStatus',1)        
STATUS = RBO.setProperty('','ServerMessage',ERRMSG) 

RETURN
