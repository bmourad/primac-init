SUBROUTINE InvFullDescSub(ERRMSG,IN_PARAM,OUT_PARAM,CONTROL,MAT INV.REC)
*************************************************************************
*                                                                     
* REVISION - [12.0]                                                   
*                                                                     
* PROGRAM  - InvFullDescSub
*                                                                     
* AUTHOR   - EDVARD PITKA
*                                                                     
* DATE     - 11/07/2002
*                                                                     
* DESCRIPTION                                                         
*                                                                     
*IN_PAPRAM:
*OUT_PAPRAM
*T28387 thompson 01/06/2005 * Correct field that should be fixed on
*screen.
* T28387 -Added by Lakshmi Prasanna on 22/03/05.
*  T070207 By Abdul Gafoor : To fix the description display length problem on 07/01/07
*************************************************************************
*
$INCLUDE WWINSERT RBO.H
$INCLUDE ICS.CPYLIB INVENTORY
$INCLUDE ICS.CPYLIB INV.FULL.DESC
$INCLUDE CPYLIB CHAR
ERRMSG=''
CONO=IN_PARAM<1>
*T070207 vvv
PROD_ID=IN_PARAM<2>

OPEN "","CONTROL"  TO CONTROL ELSE ERRMSG="ERROR IN OPENING CONTROL FILE "
OPEN "","INVENTORY" TO INVENTORY ELSE ERRMSG="ERROR IN OPENING INVENTORY"; GOTO 99999
MATREAD INV.REC FROM INVENTORY, CONO:PROD_ID ELSE
	ERRMSG = 'ERROR WHILE READING INVENTORY FOR PRODUCT ':CONO:PROD_ID
	GOTO 99999
END
*T070207 ^^^
MATREAD IFD.REC FROM CONTROL, CONO:INV.M.LINE:'*INV.FULL.DESC' ELSE
  MAT IFD.REC = ''
  IFD.NO = '1' : VM : '2' : VM : '3' : VM : '6' : VM : '4'
  IFD.LEN = '0' : VM : '0' : VM : '0' : VM : '0' : VM : '0'
  IFD.FIX = 'N' : VM : 'Y' : VM : 'Y' : VM : 'N' : VM : 'N'
  IFD.FILL = '' : VM : 'X' : VM : '' : VM : '' : VM : ''
  IFD.FILL.LEN = '1' : VM : '1' : VM : '1' : VM : '1' : VM : '1'
  IFD.SCALER = '0' : VM : '4' : VM : '4' : VM : '0' : VM : '2'
  IFD.JUSTIFY = 'L' : VM : 'R' : VM : 'L' : VM : 'L' : VM : 'R'
END
INV.FULL.DESC = ''; DESC.PTR = 0
CNT=DCOUNT(IFD.NO,VM)
FOR I = 1 TO CNT
  ON IFD.NO<1,I> GOSUB 100,200,300,400,500,600,700,800,900,1000
NEXT I
FULL.LEN = LEN(INV.FULL.DESC)
INV.FULL.DESC = INV.FULL.DESC[1,45]
STATUS=RBO.setProperty('','INV_FULL_DESC',INV.FULL.DESC)

GOTO 99999

**************************************************************************
100
  IN.FLD = INV.DESC
  GOSUB 7000
  DESC.PTR = LEN(INV.FULL.DESC)
RETURN
200
  IN.FLD = INV.PAP.WIDTH
  GOSUB 8500
RETURN
300
  IN.FLD = INV.PAP.LEN
  GOSUB 8500
RETURN
400
  IN.FLD = INV.BAS.WT
  GOSUB 8000
RETURN
500
  IN.FLD = INV.M.WT
  GOSUB 7000
RETURN
600
  IN.FLD = INV.COLOR
  GOSUB 7000
RETURN
700
  IN.FLD = INV.PAP.FINSH
  GOSUB 7000
RETURN
800
  IN.FLD = INV.BRIGHT
  GOSUB 8000
RETURN
900
  IN.FLD = INV.SHADE
  GOSUB 7000
RETURN
1000
  IN.FLD = INV.PPI
  GOSUB 7000
RETURN
7000 
IF IN.FLD = '' THEN
  IF IFD.FIX<1,I> = 'Y' THEN
    IF IFD.LEN<1,I> > 0 THEN
      OUT.FLD = SPACE(IFD.LEN<1,I>)
    END ELSE
      OUT.FLD = ' '
    END
*T28387 v

  *  INV.FULL.DESC = INV.FULL.DESC : IN.FLD
     INV.FULL.DESC = INV.FULL.DESC : OUT.FLD

* T28387 v
    GOSUB 9000
  END
END ELSE
  IF IFD.FIX<1,I> = "Y" THEN
    IF IFD.LEN<1,I> > 0 THEN
      FMT = IFD.JUSTIFY<1,I> : '#' : IFD.LEN<1,I>
      INV.FULL.DESC = INV.FULL.DESC : IN.FLD FMT
    END ELSE
      INV.FULL.DESC = INV.FULL.DESC : IN.FLD
    END
  END ELSE

     INV.FULL.DESC = INV.FULL.DESC : IN.FLD
  END
  GOSUB 9000
END
RETURN
8000 IF IFD.LEN<1,I> > 0 THEN
  FMT = IFD.JUSTIFY<1,I> : '#' : IFD.LEN<1,I>
END ELSE
  FMT = ''
END
IF IN.FLD > 0 THEN
  BEGIN CASE
    CASE IFD.SCALER<1,I> = 0 AND NUM(IN.FLD)
      OUT.FLD = INT(IN.FLD / 100) * 100
    CASE IFD.SCALER<1,I> = 1 AND NUM(IN.FLD)
      OUT.FLD = INT(IN.FLD / 10) * 10
    CASE 1
      OUT.FLD = IN.FLD
  END CASE
  IF NUM(OUT.FLD) THEN OUT.FLD = OCONV(OUT.FLD,"MD2")
  DEC = FIELD(OUT.FLD,'.',2)
  BEGIN CASE
    CASE DEC[1,1] = 0
      OUT.FLD = FIELD(OUT.FLD,'.',1)
    CASE DEC[2,1] = 0
      OUT.FLD = OUT.FLD[1,LEN(OUT.FLD)-1]
  END CASE
  IF IFD.FIX<1,I> = 'Y' THEN
    IF FMT # '' THEN
      OUT.FLD = OUT.FLD FMT
    END
  END
  INV.FULL.DESC = INV.FULL.DESC : OUT.FLD
  GOSUB 9000
END ELSE
  IF IFD.FIX<1,I> = 'Y' THEN
    IF FMT # '' THEN
      OUT.FLD = '0' FMT
    END ELSE
      OUT.FLD = 0
    END
    INV.FULL.DESC = INV.FULL.DESC : OUT.FLD
    GOSUB 9000
  END
END
RETURN
8500 IF IFD.LEN<1,I> > 0 THEN
  FMT = IFD.JUSTIFY<1,I> : '#' : IFD.LEN<1,I>
END ELSE
  FMT = ''
END
IF IN.FLD > 0 THEN
  BEGIN CASE
    CASE IFD.SCALER<1,I> = 0 AND NUM(IN.FLD)
      OUT.FLD = INT(IN.FLD / 10000) * 10000
    CASE IFD.SCALER<1,I> = 1 AND NUM(IN.FLD)
      OUT.FLD = INT(IN.FLD / 1000) * 1000
    CASE IFD.SCALER<1,I> = 2 AND NUM(IN.FLD)
      OUT.FLD = INT(IN.FLD / 100) * 100
    CASE IFD.SCALER<1,I> = 3 AND NUM(IN.FLD)
      OUT.FLD = INT(IN.FLD / 10) * 10
    CASE 1
      OUT.FLD = IN.FLD
  END CASE
  OUT.FLD = OCONV(OUT.FLD,"MD4")
  DEC = FIELD(OUT.FLD,'.',2)
  BEGIN CASE
    CASE DEC = 0
      OUT.FLD = FIELD(OUT.FLD,'.',1)
    CASE DEC[2,3] = 0
      OUT.FLD = OUT.FLD[1,LEN(OUT.FLD)-3]
    CASE DEC[3,2] = 0
      OUT.FLD = OUT.FLD[1,LEN(OUT.FLD)-2]
    CASE DEC[4,1] = 0
      OUT.FLD = OUT.FLD[1,LEN(OUT.FLD)-1]
  END CASE
  IF IFD.FIX<1,I> = 'Y' THEN
    IF FMT # '' THEN
      OUT.FLD = OUT.FLD FMT
    END
  END
  INV.FULL.DESC = INV.FULL.DESC : OUT.FLD
  GOSUB 9000
END ELSE
  IF IFD.FIX<1,I> = 'Y' THEN
    IF FMT # '' THEN
      OUT.FLD = '0' FMT
    END ELSE
      OUT.FLD = 0
    END
    INV.FULL.DESC = INV.FULL.DESC : OUT.FLD
    GOSUB 9000
  END
END
RETURN
9000 IF IFD.FILL<1,I> = '' THEN
  OUT.FLD = SPACE(IFD.FILL.LEN<1,I>)
END ELSE
  OUT.FLD = STR(IFD.FILL<1,I>,IFD.FILL.LEN<1,I>)
END
INV.FULL.DESC = INV.FULL.DESC : OUT.FLD
RETURN
99999 
RETURN
