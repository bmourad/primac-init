SUBROUTINE GET_GLH_INQ_SUB(ERRMSG,IN_PARAM,OUT_PARAM,MAT FILE.VARS,MAT COA.FILE.VARS,MAT COA.REC,GLHX,GLH)
*********************************************************************
*
* REVISION - [12.0]
*
* PROGRAM  - GET_GLH_INQ_SUB
*
* AUTHOR   - CHRIS MYKLEBUST, PRIMAC SYSTEMS
*
* DATE     - 10/07/2002
*
* DESCRIPTION
*
* This program gets the data for the G/L history inquiry.
*
*********************************************************************
*
*---- FILE COPY STATEMENTS
*
   $INCLUDE WWINSERT RBO.H
   $INCLUDE PMC.CPYLIB COMPANY
   $INCLUDE PMC.CPYLIB COA
   $INCLUDE PMC.CPYLIB COA.FILE.VARS
   $INCLUDE GLS.CPYLIB GLM
  $INCLUDE GLS.CPYLIB COA.BAL
  * $INCLUDE GLS.CPYLIB CO.COA.BAL

   $INCLUDE CPYLIB FILE.VARS
   $INCLUDE CPYLIB CHAR
  

*
*---- INITIALIZATION
*
ERRMSG = ""
LCNT =''
LINE.ID=''
OPEN '','CONTROL' TO CONTROL ELSE 
	ERRMSG = 'CONTROL FILE IS MISSING'
	RETURN
END
OPEN '','CO.COA.BAL' TO CO.COA.BAL ELSE
 	ERRMSG = 'CO.COA.BAL FILE IS MISSING'
	RETURN
END


   CONO = IN_PARAM<1>
   PER = IN_PARAM<2>
   ACCT.NO = IN_PARAM<3>
   DIV.CODE = IN_PARAM<4>
   DEPT.CODE = IN_PARAM<5>
   CCTR.CODE = IN_PARAM<6>
   UNKNOWN = 'Unknown'
   MATREAD COMP.REC FROM COMPANY, CONO ELSE MAT COMP.REC = ""
   READ FISCAL.REC FROM CONTROL, CONO:"FISCAL" ELSE FISCAL.REC = ""
   READ PERIOD.REC FROM CONTROL, CONO:"ACCT.PERIODS" ELSE PERIOD.REC=12
   NUM.PERIODS = PERIOD.REC<1>
   CURR.PERIOD = FISCAL.REC<1>[5,2] + 0

   IF CURR.PERIOD LT 1 OR CURR.PERIOD GT NUM.PERIODS THEN
      ERRMSG = "INVALID CURRENT PERIOD ":CURR.PERIOD
      RETURN
   END
   CURR.PERIOD = FISCAL.REC<1>
   CURR.YEAR = CURR.PERIOD[1,4]
   YEAR = PER[1,4]
*WRITE CURR.PERIOD:"~":CURR.YEAR:"~":YEAR ON CONTROL,"001CP"
 *  BEGIN CASE
  *    CASE PER GE CURR.PERIOD
   *      ERRMSG = "Cannot use period the same or greater than the current period"
   *      RETURN
   *   CASE PER[1,4] LT (CURR.YEAR - 2)
   *      ERRMSG = "Cannot go back more than 2 years."
    *     RETURN
  * END CASE
*WRITE YEAR:"###":CURR.YEAR ON CONTROL,"001Y"
*WRITE "PERIOD IS :":PER ON CONTROL,"001Y"

*************************ADDED BY YAKUB
IF YEAR < CURR.YEAR THEN
*** TASK # 23450 ***
*      OPEN '','CO.COA':ECD.RET.VALUE TO CO.COA ELSE ERRMSG = 'CO.COA.BAL ':PER:' FILE IS MISSING'; GOSUB 91000; ECD.ACTION = 99 ; CALL SCRN.EDIT ; GOTO 999999
      OPEN '','CO.COA':PER TO CO.COA.BAL ELSE 
        ERRMSG = 'CO.COA.BAL ':PER:' FILE IS MISSING'
	 RETURN 
	END
*** TASK # 23450 ***
       OPEN 'DV.COA':PER TO DV.COA.BAL ELSE
         ERRMSG = 'DV.COA.BAL':PER:' FILE IS MISSING'
         RETURN
      END
      OPEN 'DP.COA':PER TO DP.COA.BAL ELSE
         ERRMSG = 'DP.COA.BAL':PER:' FILE IS MISSING'
         RETURN
      END
      OPEN 'CC.COA':PER TO CC.COA.BAL ELSE
         ERRMSG = 'CC.COA.BAL':PER:' FILE IS MISSING'
         RETURN
      END
END
*STATUS = RBO.setProperty('','TEST',ERRMSG)
*RETURN

***************  

* IF YEAR LT CURR.YEAR THEN
*      OPEN 'CO.COA':PER TO CO.COA.BAL ELSE
*         ERRMSG = 'CO.COA.BAL':PER:' FILE IS MISSING'
*         RETURN
*      END
*      OPEN 'DV.COA':PER TO DV.COA.BAL ELSE
*         ERRMSG = 'DV.COA.BAL':PER:' FILE IS MISSING'
*         RETURN
*      END
*      OPEN 'DP.COA':PER TO DP.COA.BAL ELSE
*         ERRMSG = 'DP.COA.BAL':PER:' FILE IS MISSING'
*         RETURN
*      END
*      OPEN 'CC.COA':PER TO CC.COA.BAL ELSE
*         ERRMSG = 'CC.COA.BAL':PER:' FILE IS MISSING'
*         RETURN
 *     END
*   END ELSE
*      OPEN 'CO.COA.BAL' TO CO.COA.BAL ELSE
*         ERRMSG = 'CO.COA.BAL FILE IS MISSING'
 *        RETURN
*      END
*      OPEN 'DV.COA.BAL' TO DV.COA.BAL ELSE
*         ERRMSG = 'DV.COA.BAL FILE IS MISSING'
*         RETURN
*      END
*      OPEN 'DP.COA.BAL' TO DP.COA.BAL ELSE
*         ERRMSG = 'DP.COA.BAL FILE IS MISSING'
*         RETURN
*      END
*      OPEN 'CC.COA.BAL' TO CC.COA.BAL ELSE
*         ERRMSG = 'CC.COA.BAL FILE IS MISSING'
*         RETURN
*      END
*   END
PER = IN_PARAM<2>
*WRITE "HEEEE :":PER:"&&":PER[5,2] ON CONTROL,"001Y"

   OPN = CB.OPN + PER[5,2] 
   IF PER = NUM.PERIODS THEN
      OPNVAL = 55
   END ELSE
      OPNVAL = OPN + 1
   END
*WRITE "VALUE  ARE    :":OPN:"-":CB.OPN:"~":PER[5,2] ON CONTROL,"001P"


   *** GET DETAIL DATA AND LOAD INTO DETAIL RECORDS ***
   DV.OPEN.BAL = "" ; DV.DEBIT = "" ; DV.CREDIT = "" ; DV.END.BAL = ""
   DP.OPEN.BAL = "" ; DP.DEBIT = "" ; DP.CREDIT = "" ; DP.END.BAL = ""
   CC.OPEN.BAL = "" ; CC.DEBIT = "" ; CC.CREDIT = "" ; CC.END.BAL = ""
   MATREAD CB.REC FROM CO.COA.BAL, CONO:ACCT.NO ELSE MAT CB.REC = ""
   READ ALL.DIV FROM GLHX, CONO:ACCT.NO:PER ELSE ALL.DIV = ""
   READ ALL.DEPT FROM GLHX, CONO:DIV.CODE:ACCT.NO:PER ELSE ALL.DEPT = ""
   READ ALL.CCTR FROM GLHX, CONO:DIV.CODE:DEPT.CODE:ACCT.NO:PER ELSE ALL.CCTR = ""
   READ LINE.CODE FROM GLHX, CONO:DIV.CODE:DEPT.CODE:CCTR.CODE:ACCT.NO:PER ELSE LINE.CODE = ""
   ACCT.OPEN.BAL= OCONV(CB.REC(OPN),"MD2Z,<")
   ACCT.DEBIT	= OCONV(ALL.DIV<1>,"MD2Z,")
   ACCT.CREDIT = OCONV(ALL.DIV<2>,"MD2Z,")
   ACCT.END.BAL = OCONV(CB.REC(OPNVAL),"MD2Z,<")
*WRITE "ACCT VALUES  :":"~~":ACCT.OPEN.BAL:"~~":ACCT.DEBIT:"~~":ACCT.CREDIT:"~~":ACCT.END.BAL ON CONTROL,"001ACCT"
   BEGIN CASE
      CASE DIV.CODE = "S"
         LN = 0
         DVCNT = DCOUNT(ALL.DIV,AM)
         FOR DV = 3 TO DVCNT
            DIV = ALL.DIV<DV>
            READ ALL.DEPT FROM GLHX, CONO : DIV : ACCT.NO : PER ELSE ALL.DEPT = "" 
            DPCNT = DCOUNT(ALL.DEPT,AM)
            FOR DP = 3 TO DPCNT
               DEPT = ALL.DEPT<DP>
		 READ ALL.CCTR FROM GLHX, CONO:DIV:DEPT:ACCT.NO:PER ELSE ALL.CCTR = ""
               CCNT = DCOUNT(ALL.CCTR,AM)
               FOR CC = 3 TO CCNT
                  CCTR = ALL.CCTR<CC>
                  READ LINE.CODE FROM GLHX, CONO:DIV:DEPT:CCTR:ACCT.NO:PER ELSE LINE.CODE = ""
                  SSCNT = DCOUNT(LINE.CODE,AM)
                  FOR SS = 3 TO SSCNT
                     LN = LN + 1
                     LINE.ID<LN> = DIV:DEPT:CCTR:ACCT.NO:LINE.CODE<SS>
                  NEXT SS
               NEXT CC
            NEXT DP
         NEXT DV
         LINES = LN
      CASE DEPT.CODE = "S"
         DIV = DIV.CODE
         LN = 0
         MATREAD CB.REC FROM DV.COA.BAL,CONO:DIV:ACCT.NO ELSE MAT CB.REC=""
         DV.OPEN.BAL = OCONV(CB.REC(OPN), "MD2Z,<")
         DV.DEBIT = OCONV(ALL.DEPT<1>, "MD2Z,")
         DV.CREDIT = OCONV(ALL.DEPT<2>, "MD2Z,")
         DV.END.BAL = OCONV(CB.REC(OPNVAL), "MD2Z,<")
         DPCNT = DCOUNT(ALL.DEPT,AM)
         FOR DP = 3 TO DPCNT
            DEPT = ALL.DEPT<DP>
            READ ALL.CCTR FROM GLHX, CONO:DIV:DEPT:ACCT.NO:PER ELSE ALL.CCTR = ""
            CCCNT = DCOUNT(ALL.CCTR,AM)
            FOR CC = 3 TO CCCNT
               CCTR = ALL.CCTR<CC>
               READ LINE.CODE FROM GLHX, CONO:DIV:DEPT:CCTR:ACCT.NO:PER ELSE LINE.CODE = "" 
               SSCNT = DCOUNT(LINE.CODE,AM)
               FOR SS = 3 TO SSCNT
                  LN = LN + 1
                  LINE.ID<LN> = DIV:DEPT:CCTR:ACCT.NO:LINE.CODE<SS>
               NEXT SS
            NEXT CC
         NEXT DP
         LINES = LN
      CASE CCTR.CODE = "S"
         DIV = DIV.CODE
         DEPT = DEPT.CODE
         LN = 0
         MATREAD CB.REC FROM DV.COA.BAL,CONO:DIV:ACCT.NO ELSE MAT CB.REC=""
         DV.OPEN.BAL = OCONV(CB.REC(OPN), "MD2Z,<")
         DV.DEBIT = OCONV(ALL.DEPT<1>, "MD2Z,")
         DV.CREDIT = OCONV(ALL.DEPT<2>, "MD2Z,")
         DV.END.BAL = OCONV(CB.REC(OPNVAL), "MD2Z,<")
         MATREAD CB.REC FROM DP.COA.BAL,CONO:DIV:DEPT:ACCT.NO ELSE MAT CB.REC = ""
         DP.OPEN.BAL = CB.REC(OPN)
         DP.DEBIT = ALL.DEPT<1>
         DP.CREDIT = ALL.DEPT<2>
         DP.END.BAL = CB.REC(OPNVAL)
         CCCNT = DCOUNT(ALL.CCTR,AM)
         FOR CC = 3 TO CCCNT
            CCTR = ALL.CCTR<CC>
            READ LINE.CODE FROM GLHX, CONO:DIV:DEPT:CCTR:ACCT.NO:PER ELSE LINE.CODE = ""  
            SSCNT = DCOUNT(LINE.CODE,AM)
            FOR SS = 3 TO SSCNT
               LN = LN + 1
               LINE.ID<LN> = DIV:DEPT:CCTR:ACCT.NO:LINE.CODE<SS>
            NEXT SS
         NEXT CC
         LINES = LN
      CASE 1
         MATREAD CB.REC FROM DV.COA.BAL,CONO:DIV.CODE:ACCT.NO ELSE MAT CB.REC=""
  	  DV.OPEN.BAL = OCONV(CB.REC(OPN), "MD2Z,<")
         DV.DEBIT 	= OCONV(ALL.DEPT<1>, "MD2Z,")
         DV.CREDIT 	= OCONV(ALL.DEPT<2>, "MD2Z,")
	  DV.END.BAL 	= OCONV(CB.REC(OPNVAL), "MD2Z,<")
      
         MATREAD CB.REC FROM DP.COA.BAL,CONO:DIV.CODE:DEPT.CODE:ACCT.NO ELSE MAT CB.REC = ""
         DP.OPEN.BAL	=  OCONV(CB.REC(OPN), "MD2Z,<")
*        DP.DEBIT 	= ALL.DEPT<1>
*        DP.CREDIT = ALL.DEPT<2>
	  DP.DEBIT 	= OCONV(ALL.CCTR<1>, "MD2Z,")
         DP.CREDIT 	= OCONV(ALL.CCTR<2>, "MD2Z,")
         DP.END.BAL 	= OCONV(CB.REC(OPNVAL), "MD2Z,<")

         MATREAD CB.REC FROM CC.COA.BAL,CONO:DIV.CODE:DEPT.CODE:CCTR.CODE:ACCT.NO ELSE MAT CB.REC = ""
         CC.OPEN.BAL = OCONV(CB.REC(OPN), "MD2Z,<")
         CC.DEBIT = OCONV(LINE.CODE<1>, "MD2Z,")
         CC.CREDIT = OCONV(LINE.CODE<2>, "MD2Z,")
         CC.END.BAL = OCONV(CB.REC(OPNVAL), "MD2Z,<")
         LINES = DCOUNT(LINE.CODE,AM)
         LINE.ID = ""
         LN = 0
         FOR XLN = 3 TO LINES
            LN = LN + 1
            LINE.ID<LN> = DIV.CODE:DEPT.CODE:CCTR.CODE:ACCT.NO:LINE.CODE<XLN>
         NEXT XLN
         LINES = LN
   END CASE
   DETAIL.DESC = ""
   DETAIL.DATE = ""
   DETAIL.SRC = ""
   DETAIL.REF = ""
   DETAIL.AMT = ""
   LCNT = DCOUNT(LINE.ID,AM)
   FOR L = 1 TO LCNT
      MATREAD GLM.REC FROM GLH, CONO:LINE.ID<L> ELSE
         MAT GLM.REC = ""
         GLM.DESC = LINE.ID<L>
      END
      DETAIL.DESC<1,L> = GLM.DESC
      DETAIL.DATE<1,L> = OCONV(GLM.DATE, "D2/")
      DETAIL.SRC<1,L> = GLM.SRC
      DETAIL.REF<1,L> = GLM.REF
      DETAIL.AMT<1,L> = OCONV(GLM.AMT, "MD2Z,<")
   NEXT L
   *** BUILD RBO RECORDS ***
*
   *STATUS = RBO.setProperty('','TEST',CONO:"~":LINE.ID<1,1>:"~":LCNT:"~":LINES);*TESTING
 * STATUS = RBO.setProperty('','TEST',DIV.CODE:"~":DEPT.CODE:"~":CCTR.CODE:"~":CCCNT:"~":LINE.CODE)

   STATUS = RBO.setProperty('','ACCT_OPEN_BAL',ACCT.OPEN.BAL)
   STATUS = RBO.setProperty('','ACCT_DEBIT',ACCT.DEBIT)
   STATUS = RBO.setProperty('','ACCT_CREDIT',ACCT.CREDIT)
   STATUS = RBO.setProperty('','ACCT_END_BAL',ACCT.END.BAL)
   STATUS = RBO.setProperty('','DV_OPEN_BAL',DV.OPEN.BAL)
   STATUS = RBO.setProperty('','DV_DEBIT',DV.DEBIT)
   STATUS = RBO.setProperty('','DV_CREDIT',DV.CREDIT)
   STATUS = RBO.setProperty('','DV_END_BAL',DV.END.BAL)
   STATUS = RBO.setProperty('','DP_OPEN_BAL',DP.OPEN.BAL)
   STATUS = RBO.setProperty('','DP_DEBIT',DP.DEBIT)
   STATUS = RBO.setProperty('','DP_CREDIT',DP.CREDIT)
   STATUS = RBO.setProperty('','DP_END_BAL',DP.END.BAL)
   STATUS = RBO.setProperty('','CC_OPEN_BAL',CC.OPEN.BAL)
   STATUS = RBO.setProperty('','CC_DEBIT',CC.DEBIT)
   STATUS = RBO.setProperty('','CC_CREDIT',CC.CREDIT)
   STATUS = RBO.setProperty('','CC_END_BAL',CC.END.BAL)
   STATUS = RBO.setProperty('','DETAIL_DESC',DETAIL.DESC)
   STATUS = RBO.setProperty('','DETAIL_DATE',DETAIL.DATE)
   STATUS = RBO.setProperty('','DETAIL_SRC',DETAIL.SRC)
   STATUS = RBO.setProperty('','DETAIL_REF',DETAIL.REF)
   STATUS = RBO.setProperty('','DETAIL_AMT',DETAIL.AMT)
   RETURN

