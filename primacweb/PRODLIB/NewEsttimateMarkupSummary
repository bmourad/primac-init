SUBROUTINE NewEsttimateMarkupSummary
********************************************************************************
*   Program name :- NewEsttimateMarkupSummary
*   Created:- 3/16/2006
*------------------------------------------------------------------------------*
*

* In Properties:
* --------------
*  
*
* Out Properties:
* ---------------
*  
********************************************************************************
   $INCLUDE WWINSERT RBO.H
   $INCLUDE JES.CPYLIB SCOMMON.ESTIMATE

   $DEFINE  ESTIMATETEMP
   $INCLUDE JES.CPYLIB ESTIMATE.TEMP
   $INCLUDE JES.CPYLIB ESTIMATE.PAPER.GROUP
   $DEFINE EQUIPMENT
   $INCLUDE JES.CPYLIB EQUIPMENT
   $DEFINE JESFILEVARS
   $INCLUDE JES.CPYLIB JES.FILE.VARS
   $DEFINE FILEVARS
   $INCLUDE CPYLIB FILE.VARS
   $DEFINE ESTIMATE
   $INCLUDE JES.CPYLIB ESTIMATE
   $DEFINE ESTIMATEDEPT
   $INCLUDE JES.CPYLIB ESTIMATE.DEPT
   $INCLUDE JES.CPYLIB EST.COST.TYPE.SUM
   $INCLUDE CPYLIB CHAR

*
*---- OPEN ALL FILES
*
   IN_PARAM = "" ; OUT_PARAM = ""
   MARKPSTR = ""
   FINALPRICE = ""
   ERRMSG = "CALL openEstimateFiles PROBLEM"
   CALL openEstimateFiles(ERRMSG,IN_PARAM,OUT_PARAM,MAT FILE.VARS, MAT JES.FILE.VARS)
   IF ERRMSG # "" THEN GOTO 90000

  * CONO = ESTIMATE.ID[1,3]
  * EST.ID = TRIM(ESTIMATE.ID[4,99])
   EST.QTY<1,QPTR>=''
   NewEstPriceM=''
   FINALP2=''
   FINALP3=''
   DEFAULT='0'
   
   STATUS = RBO.getProperty('','ID',ESTIMATE.ID)
   STATUS = RBO.getProperty('','PRICE_M',PRICE_M)
   STATUS = RBO.getProperty('','QTYNO',QPTR)
   STATUS = RBO.getProperty('','TOTAL_SALE',TOTAL.SALE)
   STATUS = RBO.getProperty('','ESTQTTY',EST.QTY)
   EST.QTY<1,QPTR>=EST.QTY
 
  * STATUS = RBO.setProperty('','Markup',ESTIMATE.ID:"-AND-":PRICE_M ) 
  * RETURN


 * MATREAD EST.REC FROM ESTIMATE, ESTIMATE.ID ELSE
  *    ERRMSG = 'Estimate not on file. Try again!':ESTIMATE.ID
  *    GOTO 90000
  * END

* Insert method code here
*---- New Estimate
*
  
   GOSUB 10200

* End of method code
RETURN

*---- Price Per Thousand Override
*
10200 *
   BEGIN CASE
      CASE MOD(QPTR + 3,"3") = 1
         IF EST.OM.PRICE.M<1,QPTR> = '' THEN
            DEFAULT = INT(EST.FINAL.PRICE<1,QPTR> / EST.QTY<1,QPTR> * 1000)
            EST.OM.PRICE.M<1,QPTR> = DEFAULT
         END ELSE
	     DEFAULT = EST.OM.PRICE.M<1,QPTR>
         END
	 
         IF EST.OM.PRICE.M<1,QPTR> # PRICE_M AND PRICE_M # 0 THEN
            EST.OM.PRICE.M<1,QPTR> = PRICE_M
	     GOSUB 20100
         END
         EST.OM.PRICE.M<1,QPTR> = PRICE_M
      CASE MOD(QPTR + 3,"3") = 2
         IF EST.OM.PRICE.M<1,QPTR> = '' THEN
            DEFAULT = INT(EST.FINAL.PRICE<1,QPTR> / EST.QTY<1,QPTR> * 1000)
            EST.OM.PRICE.M<1,QPTR> = DEFAULT
         END ELSE
            DEFAULT = EST.OM.PRICE.M<1,QPTR>
         END
         IF EST.OM.PRICE.M<1,QPTR> # PRICE_M AND PRICE_M # 0 THEN
            EST.OM.PRICE.M<1,QPTR> = PRICE_M
            GOSUB 20100
          
         END
         EST.OM.PRICE.M<1,QPTR> = PRICE_M
      CASE MOD(QPTR + 3,"3") = 0
         IF EST.OM.PRICE.M<1,QPTR> = '' THEN
            DEFAULT = INT(EST.FINAL.PRICE<1,QPTR> / EST.QTY<1,QPTR> * 1000)
	    EST.OM.PRICE.M<1,QPTR> = DEFAULT
         END ELSE
            DEFAULT = EST.OM.PRICE.M<1,QPTR>
         END
         IF EST.OM.PRICE.M<1,QPTR> # PRICE_M AND PRICE_M # 0 THEN
            EST.OM.PRICE.M<1,QPTR> = PRICE_M
            GOSUB 20100
         END
         EST.OM.PRICE.M<1,QPTR> = PRICE_M
   END CASE
   RETURN

*---- Calculate Markup Percent
*
20100 *
   BEGIN CASE
      CASE MOD(QPTR + 3,"3") = 1
         EST.FINAL.PRICE<1,QPTR> = INT(EST.OM.PRICE.M<1,QPTR> * EST.QTY<1,QPTR> / 1000)
	  IF TOTAL.SALE<1,QPTR>+0 # 0 THEN
            EST.OM.PCT<1,QPTR> = INT(((EST.FINAL.PRICE<1,QPTR> - TOTAL.SALE<1,QPTR>) / TOTAL.SALE<1,QPTR>) * 1000000 + .5)
	  END ELSE
            EST.OM.PCT<1,QPTR> = 0
         END
	  Markup = EST.OM.PCT<1,QPTR>
         NewEstPriceM  = OCONV(EST.FINAL.PRICE<1,QPTR>,'MD2,')
	  STATUS=RBO.setProperty('','Markup',Markup)
	  STATUS=RBO.setProperty('','NewEstPriceM',NewEstPriceM)
         GOSUB 20400
         GOSUB 20410
      CASE MOD(QPTR + 3,"3") = 2
         EST.FINAL.PRICE<1,QPTR> = EST.OM.PRICE.M<1,QPTR> * EST.QTY<1,QPTR> / 1000
         IF TOTAL.SALE<1,QPTR>+0 # 0 THEN
            EST.OM.PCT<1,QPTR> = INT(((EST.FINAL.PRICE<1,QPTR> - TOTAL.SALE<1,QPTR>) / TOTAL.SALE<1,QPTR>) * 1000000 + .5)
         END ELSE
            EST.OM.PCT<1,QPTR> = 0
         END
         Markup = EST.OM.PCT<1,QPTR>
         NewEstPriceM  = OCONV(EST.FINAL.PRICE<1,QPTR>,'MD2,')
	  STATUS=RBO.setProperty('','Markup',Markup)
	  STATUS=RBO.setProperty('','NewEstPriceM',NewEstPriceM)
         GOSUB 20400
         GOSUB 20410
      CASE MOD(QPTR + 3,"3") = 0
         EST.FINAL.PRICE<1,QPTR> = EST.OM.PRICE.M<1,QPTR> * EST.QTY<1,QPTR> / 1000
         IF TOTAL.SALE<1,QPTR>+0 # 0 THEN
            EST.OM.PCT<1,QPTR> = INT(((EST.FINAL.PRICE<1,QPTR> - TOTAL.SALE<1,QPTR>) / TOTAL.SALE<1,QPTR>) * 1000000 + .5)
         END ELSE
            EST.OM.PCT<1,QPTR> = 0
         END
         Markup = EST.OM.PCT<1,QPTR>
         NewEstPriceM  = OCONV(EST.FINAL.PRICE<1,QPTR>,'MD2,')
	  STATUS=RBO.setProperty('','Markup',Markup)
	  STATUS=RBO.setProperty('','NewEstPriceM',NewEstPriceM)
         GOSUB 20400
         GOSUB 20410
   END CASE
RETURN

*---- Calculate Additional Price per Thousand
*
20400 *
   TOTAL.VSALE=""
   TOTAL.VCOST=""
   DC=COUNT(EST.DEPT.COMP,VM)+(EST.DEPT.COMP#"")
   FOR DP=1 TO DC
      ESTD.ID=EST.DEPT.COMP<1,DP>
      QTY=FIELD(ESTD.ID,"!",3)
      LOCATE QTY IN EST.QTY<1>,1 SETTING P ELSE P=0
      IF P > 0 THEN
         TOTAL.VSALE<1,P>=TOTAL.VSALE<1,P>+EST.DEPT.COMP.VSALE<1,DP>
         TOTAL.VCOST<1,P>=TOTAL.VCOST<1,P>+EST.DEPT.COMP.VCOST<1,DP>
      END
   NEXT DP
   EST.COST.THOU<1,QPTR> = ''
   EST.PRICE.THOU<1,QPTR> = ''
   EP = QPTR
   PRICE.THOU.MKUP = TOTAL.VSALE<1,EP> + (INT(OCONV(TOTAL.VSALE<1,EP>,'MD2') * OCONV(EST.OM.PCT<1,EP>,'MD4') + .005 / 100))
   EST.PRICE.THOU<1,EP>=INT(PRICE.THOU.MKUP/(EST.QTY<1,EP>/1000)+0.5)
   EST.COST.THOU<1,EP>=INT(TOTAL.VCOST<1,EP>/(EST.QTY<1,EP>/1000)+0.5)
   
   RETURN
*
*---- Display Price Per Additional Thousand
*
20410 *
   BEGIN CASE
      CASE MOD(QPTR + 3,"3") = 1
         AddMarkup = EST.PRICE.THOU<1,QPTR>
 		  
      CASE MOD(QPTR + 3,"3") = 2
         AddMarkup = EST.PRICE.THOU<1,QPTR>
   
      CASE MOD(QPTR + 3,"3") = 0
         AddMarkup = EST.PRICE.THOU<1,QPTR>
   
   END CASE
	STATUS=RBO.setProperty('','AddMarkup',AddMarkup)
   RETURN
*

90000 *
   STATUS = RBO.setProperty('','ServerStatus',1)
   STATUS = RBO.setProperty('','ServerMessage',ERRMSG)
RETURN


