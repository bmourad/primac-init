SUBROUTINE EOD_POST_Process
********************************************************************************
*   Program name :- EOD_POST_Process
*   Created:- 4/27/2005
*------------------------------------------------------------------------------*
*

* In Properties:
* --------------
*  
*
* Out Properties:
* ---------------
*  
********************************************************************************
*
$INCLUDE WWINSERT RBO.H
$INCLUDE PMC.CPYLIB COMPANY
$INCLUDE PMC.CPYLIB GLTABLE
$INCLUDE PMC.CPYLIB SALESDATES
$INCLUDE PMC.CPYLIB FISCAL
$INCLUDE PMC.CPYLIB EOM.TRANS
$INCLUDE PMC.CPYLIB COA
$INCLUDE ARS.CPYLIB DAILY.CASH
$INCLUDE PMC.CPYLIB POST.REJECTS
$INCLUDE PMC.CPYLIB DIVISION ;* T23278
$INCLUDE CPYLIB CHAR
*
**** INTITIALIZATION
*
***** SETUP ERRMSG ROUTINE
*
ERRMSG=''
MAT FISCAL.REC = ''
*
STATUS = RBO.getProperty('','ID',ID)
STATUS = RBO.getProperty('','PMCProperty',PMCProperty)
CONO = ID[1,3]
MODULE=ID[4,3]
BEGIN CASE
   CASE MODULE[1,2] = 'AP'
   CASE MODULE[1,2] = 'AR'
   CASE 1
      MODULE = MODULE[1,2]
END CASE
FISCPFX=MODULE
STATUS = RBO.getProperty('','DivCode',DIV.CODE)
STATUS = RBO.getProperty('','DivPos',POS)
STATUS = RBO.getProperty('','FR_CURR_PER',FR.CURR.PER)
STATUS = RBO.getProperty('','FR_CURR_DATE',FR.CURR.DATE)
STATUS = RBO.getProperty('','FR_NEXT_PER',FR.NEXT.PER)
STATUS = RBO.getProperty('','FR_NEXT_DATE',FR.NEXT.DATE)
STATUS = RBO.getProperty('','FR_D_M_FLG',FR.D.M.FLG)
STATUS = RBO.getProperty('','FR_CLOSE_DATE',FR.CLOSE.DATE)
FOR P = 1 TO DCOUNT(FR.CURR.PER,VM)
   IF INDEX(FR.CURR.DATE<1,P>,'/',1) > 0 THEN FR.CURR.DATE<1,P> = ICONV(FR.CURR.DATE<1,P>,'D2/')
   IF INDEX(FR.NEXT.DATE<1,P>,'/',1) > 0 THEN FR.NEXT.DATE<1,P> = ICONV(FR.NEXT.DATE<1,P>,'D2/')
   IF INDEX(FR.CLOSE.DATE<1,P>,'/',1) > 0 THEN FR.CLOSE.DATE<1,P> = ICONV(FR.CLOSE.DATE<1,P>,'D2/')
NEXT P
*
STATUS = RBO.getProperty('','FngdFlag',FNGD.FLAG)
BEGIN CASE
   CASE MODULE = 'IC'
      IF FNGD.FLAG = 'F' THEN
         MODULE := 'F'
      END ELSE MODULE := 'S'
   CASE MODULE[1,2] = 'AP'
   CASE MODULE[1,2] = 'AR'
   CASE 1
      MODULE := 'S'
END CASE
*
TRANFILE=MODULE:".EOM.TRANS":CONO:DIV.CODE
REJECTFILE=MODULE:".POST.REJECTS":CONO:DIV.CODE
OPEN TRANFILE TO EOM.TRANS ELSE
   STMT='CREATE.FILE ':TRANFILE:' 1,1 101,1'
   UDTEXECUTE STMT CAPTURING JUNK
   STMT='COPY FROM DICT ':MODULE:'.EOM.TRANS TO DICT ':TRANFILE:' ALL'
   UDTEXECUTE STMT CAPTURING JUNK
END
OPEN REJECTFILE TO POST.REJECTS ELSE
   STMT='CREATE.FILE ':REJECTFILE:' 1,1 7,1'
   UDTEXECUTE STMT CAPTURING JUNK
   STMT='COPY FROM DICT ':MODULE:'.POST.REJECTS TO DICT ':REJECTFILE:' ALL'
   UDTEXECUTE STMT CAPTURING JUNK
END
***** OPEN FILES
*
OPEN '','COMPANY' TO COMPANY ELSE ERRMSG='COMPANY FILE MISSING';GOTO 93000
OPEN '','CONTROL' TO CONTROL ELSE ERRMSG='CONTROL FILE MISSING';GOTO 93000
OPEN '','DAILY.CASH' TO DAILY.CASH ELSE ERRMSG='DAILY.CASH FILE IS MISSING';GOTO 93000
OPEN '','COA' TO COA ELSE ERRMSG='COA FILE IS MISSING';GOTO 93000
OPEN '',TRANFILE TO EOM.TRANS ELSE ERRMSG=TRANFILE:' FILE MISSING';GOTO 93000
OPEN '',REJECTFILE TO POST.REJECTS ELSE ERRMSG=REJECTFILE:' FILE IS MISSING';GOTO 93000
*
MATREAD COMP.REC FROM COMPANY, CONO ELSE
   ERRMSG = "COMPANY RECORD IS MISSING"
   GOTO 93000
END
MATREAD GLTABLE.REC FROM CONTROL, CONO:'GLTABLE' ELSE
   RELEASE CONTROL, CONO:MODULE:"FISCAL"
   ERRMSG = 'CANNOT LOCATE CONTROL, GLTABLE'
   GOTO 93000
END
IN.ACCT.LEN=LEN(CO.ACCT.PIC)
GEN.DIV='00'; GEN.DEPT='00'; GEN.CCTR='000'
CLEARFILE EOM.TRANS
CLEARFILE POST.REJECTS
PRR.SEQ = 10000
OLD.CUST = "!@#$%^&*"
MATREAD COA.REC FROM COA, CONO : GLTB.CASH ELSE COA.LEVEL = 0
SA.CSH.ACCT = GLTB.CASH
SA.CSH.LEVEL = COA.LEVEL
MATREAD COA.REC FROM COA, CONO : GLTB.AR ELSE COA.LEVEL = 0
SA.INV.ACCT = GLTB.AR
SA.DSC.ACCT = STR("0",IN.ACCT.LEN)
SA.DSC.LEVEL = 0
SA.INV.LEVEL = COA.LEVEL
STMT = 'SSELECT DAILY.CASH.TAG BY CUST WITH CONO = "':CONO:'"'
UDTEXECUTE STMT CAPTURING JUNK
DATA = 1
LOOP
   READNEXT DC.ID ELSE DATA = 0
WHILE DATA DO
   IF CONO # DC.ID[1,3] THEN GOTO 999
   MATREADU DC.REC FROM DAILY.CASH, DC.ID ELSE
      MAT PRR.REC = ''
      PRR.FILE = 'DAILY.CASH'
      PRR.ERR = 'CANNOT LOCATE'
      PRR.ID = DC.ID[4,99]
      PRR.SEQ = PRR.SEQ + 1
      MATWRITE PRR.REC ON POST.REJECTS, PRR.SEQ
      RELEASE DAILY.CASH, DC.ID
      GOTO 999
   END
   DC.CUST = FIELD(DC.ID,"!",1)[4,20]
   DC.DATE = FIELD(DC.ID,"!",2)
   IF OLD.CUST # DC.CUST THEN
      OLD.CUST = DC.CUST
      NEW.REC = 0; NEW.PTR = 0
   END
   BEGIN CASE
      CASE DC.BANK.ACCT = SA.CSH.ACCT
      CASE DC.BANK.ACCT # ""
         DC.BANK.ACCT = DC.BANK.ACCT : STR("0",IN.ACCT.LEN-LEN(DC.BANK.ACCT))
         DC.BANK.ACCT = DC.BANK.ACCT[1,IN.ACCT.LEN]
         MATREAD COA.REC FROM COA, CONO : DC.BANK.ACCT ELSE COA.LEVEL = 0
         SA.CSH.ACCT = DC.BANK.ACCT
         SA.CSH.LEVEL = COA.LEVEL
      CASE GLTB.CASH = SA.CSH.ACCT
      CASE 1
         MATREAD COA.REC FROM COA, CONO : GLTB.CASH ELSE COA.LEVEL = 0
         SA.CSH.ACCT = GLTB.CASH
         SA.CSH.LEVEL = COA.LEVEL
   END CASE
   CNT = COUNT(DC.CASH.APPL,VM) + 1
   MCNT = DCOUNT(DC.AMT,VM)
   IF MCNT > CNT THEN CNT = MCNT
   FOR I = 1 TO CNT
      IF DC.CASH.APPL<1,I> # '' THEN
         JCNT = DCOUNT(DC.CASH.APPL<1,I>,SM)
      END ELSE
         JCNT = DCOUNT(DC.AMT<1,I>,SM)
      END
      FOR J = 1 TO JCNT
         IF DIV.CODE # 'ALL' AND DC.DIV<1,I,J> # DIV.CODE THEN GOTO 990
         IF DC.GLA.DATE<1,I,J> # "" AND DC.GLA.DATE<1,I,J> # "P" THEN GOTO 990
         BEGIN CASE
            CASE DC.DIV<1,I,J> = ""
               CASH.DIV = GEN.DIV
               CASH.DEPT = GEN.DEPT
               CASH.CCTR = GEN.CCTR
            CASE DC.DEPT<1,I,J> = ""
               CASH.DIV = DC.DIV<1,I,J>
               CASH.DEPT = GEN.DEPT
               CASH.CCTR = GEN.CCTR
            CASE DC.CCTR<1,I,J> = ""
               CASH.DIV = DC.DIV<1,I,J>
               CASH.DEPT = DC.DEPT<1,I,J>
               CASH.CCTR = GEN.CCTR
            CASE 1
               CASH.DIV = DC.DIV<1,I,J>
               CASH.DEPT = DC.DEPT<1,I,J>
               CASH.CCTR = DC.CCTR<1,I,J>
         END CASE
         CASH.AMT = DC.AMT<1,I,J> + 0
         IF CASH.AMT <> 0 THEN
            IF DC.ACCT<1,I,J> # SA.DSC.ACCT THEN
               DC.ACCT<1,I,J> = DC.ACCT<1,I,J> : STR("0",IN.ACCT.LEN-LEN(DC.ACCT<1,I,J>))
               DC.ACCT<1,I,J> = DC.ACCT<1,I,J>[1,IN.ACCT.LEN]
               MATREAD COA.REC FROM COA, CONO : DC.ACCT<1,I,J> ELSE COA.LEVEL = 0
               SA.DSC.ACCT = DC.ACCT<1,I,J>
               SA.DSC.LEVEL = COA.LEVEL
            END
            BEGIN CASE
               CASE SA.DSC.LEVEL < 1
                  T.ACCT = GEN.DIV : GEN.DEPT : GEN.CCTR : SA.DSC.ACCT
               CASE SA.DSC.LEVEL < 2
                  T.ACCT = CASH.DIV : GEN.DEPT : GEN.CCTR : SA.DSC.ACCT
               CASE SA.DSC.LEVEL < 3
                  T.ACCT = CASH.DIV : CASH.DEPT : GEN.CCTR : SA.DSC.ACCT
               CASE 1
                  T.ACCT = CASH.DIV : CASH.DEPT : CASH.CCTR : SA.DSC.ACCT
            END CASE
            IF OLD.CUST = "MISC" THEN
               CASH.AMT = 0 - CASH.AMT
               GOSUB 2000
            END ELSE
               GOSUB 1000
            END
         END
         CASH.AMT = DC.CASH.APPL<1,I,J> + 0
         IF CASH.AMT <> 0 THEN
            BEGIN CASE
               CASE SA.CSH.LEVEL < 1
                  T.ACCT = GEN.DIV : GEN.DEPT : GEN.CCTR : SA.CSH.ACCT
               CASE 1
                  T.ACCT = CASH.DIV : GEN.DEPT : GEN.CCTR : SA.CSH.ACCT
            END CASE
            GOSUB 1000
         END
         CASH.AMT = DC.CASH.APPL<1,I,J> + DC.AMT<1,I,J>
         IF CASH.AMT <> 0 THEN
            BEGIN CASE
               CASE SA.INV.LEVEL < 1
                  T.ACCT = GEN.DIV : GEN.DEPT : GEN.CCTR : SA.INV.ACCT
               CASE 1
                  T.ACCT = CASH.DIV : GEN.DEPT : GEN.CCTR : SA.INV.ACCT
            END CASE
            GOSUB 2000
         END
         IF NEW.PTR THEN
            NEW.REC = NEW.REC + 1
            NEW.PTR = 0
         END
         DC.GLA.DATE<1,I,J> = "P" ;* T23278
990*
      NEXT J
*
   NEXT I
   MATWRITE DC.REC ON DAILY.CASH, DC.ID
999 REPEAT
READ JUNK FROM POST.REJECTS,'10001' THEN
   UserID = PMCProperty<1,3>
   IN_PARAM = UserID:"!AREOMP!111!AR300!":CONO:"!Print"
   IN_PARAM<2> = ''
   IN_PARAM<3> = 'EOD.REJECT.LISTING'
   IN_PARAM<4> = 'P'
   IN_PARAM<5> = 'PMCPROCS'
   IN_PARAM<6> = REJECTFILE
   IN_PARAM<7> = 'REJECTS'
   OUT_PARAM=''
   UDTEXECUTE 'SSELECT ':REJECTFILE CAPTURING JUNK
   CALL GenerateReport_Sub(ERRMSG,IN_PARAM,OUT_PARAM)
   IF ERRMSG # "" THEN GOTO 93000
   REJECT.RPT.PRT='WARNING !!! MAKE SURE TO PICKUP POSTING REJECTS REPORT FROM PRINTER'
   STATUS=RBO.setProperty('','RejectRptPrinted',REJECT.RPT.PRT)
   STATUS=RBO.setProperty('','ReportImage',OUT_PARAM<2>)
END
STATUS = RBO.setProperty('','FR_CURR_DATE',FR.CURR.DATE)
STATUS = RBO.setProperty('','FR_NEXT_DATE',FR.NEXT.DATE)
STATUS = RBO.setProperty('','FR_CLOSE_DATE',FR.CLOSE.DATE)
MATWRITE FISCAL.REC ON CONTROL, CONO:FISCPFX:'FISCAL'
GOTO 99999
1000 BEGIN CASE
   CASE CASH.AMT > 0
      ETR.ID = CONO : T.ACCT : OLD.CUST : "!D*" : NEW.REC
   CASE CASH.AMT + 0 < 0
      ETR.ID = CONO : T.ACCT : OLD.CUST : "!C*" : NEW.REC
   CASE 1
      GOTO 1999
END CASE
MATREAD ETR.REC FROM EOM.TRANS, ETR.ID ELSE
   MAT ETR.REC = ""
END
ETR.AMT = ETR.AMT + CASH.AMT
LOCATE DC.DATE IN ETR.DATE<1>,1 BY "AR" SETTING PTR ELSE NULL
INS DC.CHECK BEFORE ETR.TRAN<1,PTR>
INS DC.DATE BEFORE ETR.DATE<1,PTR>
INS CASH.AMT BEFORE ETR.TAMT<1,PTR>
INS DC.INVOICE<1,I> BEFORE ETR.REF<1,PTR>
IF PTR > 99 THEN NEW.PTR = 1
ETR.DIV.OWNER = DC.DIV.OWNER
MATWRITE ETR.REC ON EOM.TRANS, ETR.ID
1999 RETURN
2000 BEGIN CASE
   CASE CASH.AMT > 0
      ETR.ID = CONO : T.ACCT : OLD.CUST : "!C*" : NEW.REC
   CASE CASH.AMT + 0 < 0
      ETR.ID = CONO : T.ACCT : OLD.CUST : "!D*" : NEW.REC
   CASE 1
      GOTO 2999
END CASE
MATREAD ETR.REC FROM EOM.TRANS, ETR.ID ELSE
   MAT ETR.REC = ""
END
ETR.AMT = ETR.AMT - CASH.AMT
LOCATE DC.DATE IN ETR.DATE<1>,1 BY "AR" SETTING PTR ELSE NULL
INS DC.CHECK BEFORE ETR.TRAN<1,PTR>
INS DC.DATE BEFORE ETR.DATE<1,PTR>
INS (0 - CASH.AMT) BEFORE ETR.TAMT<1,PTR>
INS DC.INVOICE<1,I> BEFORE ETR.REF<1,PTR>
IF PTR > 99 THEN NEW.PTR = 1
ETR.DIV.OWNER = DC.DIV.OWNER
MATWRITE ETR.REC ON EOM.TRANS, ETR.ID
2999 RETURN

93000 *
STATUS=RBO.setProperty('','ServerStatus',1)
STATUS=RBO.setProperty('','ServerMessage',ERRMSG)
CMD='DELETE.FILE ': TRANFILE :' FORCE'
UDTEXECUTE CMD CAPTURING JUNK
CMD='DELETE.FILE ': REJECTFILE :' FORCE'
UDTEXECUTE CMD CAPTURING JUNK
*** END OF JOB ***
99999 END
