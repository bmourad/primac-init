SUBROUTINE PrimacSecurity_PreWrite
********************************************************************************
*   Program name :- 
*   Created:- 12/19/2003
*------------------------------------------------------------------------------*
*
*  Server event triggered after the database image has been updated, but prio- *
*  r to the physical update occurring. Any changes to the database image at t- *
*  his point must be made via the API functions RBO.setDBVals() and RBO.getDB- *
*  Vals().
*  
*       - *

* In Properties:
* --------------
*  
*
* Out Properties:
* ---------------
*  
********************************************************************************
$INCLUDE WWINSERT RBO.H
$INCLUDE PMC.CPYLIB SECURITY
$INCLUDE CPYLIB CHAR

ERRMSG = ''
* Insert method code here
  OPEN "","SECURITY" TO SECURITY ELSE
    ERRMSG = "CANNOT OPEN SECURITY FILE"
    GOTO 93000
  END

UserID = ''
UserName = ''
UserPassword = ''
UserDivision = ''
UserEmail = ''
UserCompany = ''
CONO = ''
USER.ID = ''

STATUS=RBO.getProperty('','UserID',UserID)
STATUS=RBO.getProperty('','UserName',UserName)
STATUS=RBO.getProperty('','UserPassword',UserPassword)
STATUS=RBO.getProperty('','UserDivision',UserDivision)
STATUS=RBO.getProperty('','UserEmail',UserEmail)
STATUS=RBO.getProperty('','UserCompany',UserCompany)

USER.ID = UPCASE(UserID)
CONO = UserCompany

MATREAD SEC.REC FROM SECURITY, CONO:USER.ID ELSE
	ERRMSG = "USER ":USER.ID:" NOT ON FILE"
	*NOT RETURNING THE ERROR, COZ I'VE GOTTA WRITE THE RECORD TO THE SECURITY FILE
END
SEC.NAME = UserName
SEC.PASSWORD = UserPassword
SEC.DIVISION = UserDivision
SEC.ROLL.DATE = DATE()
SEC.EMAIL = UserEmail
*MATWRITE HERE
MATWRITE SEC.REC ON SECURITY, CONO:USER.ID
* End of method code
RETURN

93000:
	STATUS = RBO.setProperty('','ServerStatus',1)
	STATUS = RBO.setProperty('','ServerMessage',ERRMSG)
RETURN

