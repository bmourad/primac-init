SUBROUTINE JOBINQ_OS_DET_GetData
********************************************************************************
*   Program name :- JOBINQ_OS_DET_GetData
*   Created:- 12/17/2002
*   Author:- L. Ross
*   Gets info for Job Inquiry 'OS Detail' option.
*------------------------------------------------------------------------------*
*
*  

* In Properties:
* --------------
*  
IN_PARAM=''
*
* Out Properties:
* ---------------
*  
OUT_PARAM=''
********************************************************************************
$INCLUDE WWINSERT RBO.H
$INCLUDE PMC.CPYLIB DEPARTMENT
$INCLUDE PMC.CPYLIB COST.CNTR
$INCLUDE JCS.CPYLIB JOB
$INCLUDE JCS.CPYLIB JOB.OSP
$INCLUDE JCS.CPYLIB OPERATION
$INCLUDE PMC.CPYLIB VEND
$INCLUDE JCS.CPYLIB CATEGORY.OSP
$INCLUDE CPYLIB CHAR

;* open files

ERRMSG=''
IF FILEINFO(VEND,0)=0 THEN
   OPEN '','VEND' TO VEND ELSE
      ERRMSG<1,-1>='VEND FILE IS MISSING'
   END
END
IF FILEINFO(CATEGORY.OSP,0)=0 THEN
   OPEN '','CATEGORY.OSP' TO CATEGORY.OSP ELSE
      ERRMSG<1,-1>='CATEGORY.OSP FILE IS MISSING'
   END
END
IF FILEINFO(JOB,0)=0 THEN
   OPEN '','JOB' TO JOB ELSE
      ERRMSG<1,-1>='JOB FILE IS MISSING'
   END
END
IF FILEINFO(JOB.OSP,0)=0 THEN
   OPEN '','JOB.OSP' TO JOB.OSP ELSE
      ERRMSG<1,-1>='JOB.OSP FILE IS MISSING'
   END
END
IF FILEINFO(OPERATION,0)=0 THEN
   OPEN '','OPERATION' TO OPERATION ELSE
      ERRMSG<1,-1>='OPERATION FILE IS MISSING'
   END
END
IF FILEINFO(DEPARTMENT,0)=0 THEN
   OPEN '','DEPARTMENT' TO DEPARTMENT ELSE
      ERRMSG<1,-1>='DEPARTMENT FILE IS MISSING'
   END
END
IF FILEINFO(COST.CNTR,0)=0 THEN
   OPEN '','COST.CNTR' TO COST.CNTR ELSE
      ERRMSG<1,-1>='COST.CNTR FILE IS MISSING'
   END
END
IF ERRMSG#'' THEN GOTO 93000
DIM TRANS.REC(14)
EQU TRAN.VEND        TO TRANS.REC(1)
EQU TRAN.PO          TO TRANS.REC(2)
EQU TRAN.NO          TO TRANS.REC(3)
EQU TRAN.TYPE        TO TRANS.REC(4)
EQU TRAN.INV         TO TRANS.REC(5)
EQU TRAN.DATE        TO TRANS.REC(6)
EQU TRAN.QTY         TO TRANS.REC(7)
EQU TRAN.COST        TO TRANS.REC(8)
EQU TRAN.SALE        TO TRANS.REC(9)
EQU TRAN.JOB         TO TRANS.REC(10)
EQU TRAN.VEND.NAME   TO TRANS.REC(11)
EQU TRAN.OPER        TO TRANS.REC(12)
EQU TRAN.OPER.DESC   TO TRANS.REC(13)
EQU TRAN.PERIOD      TO TRANS.REC(14)
MAT TRANS.REC = ''
UNKNOWN = STR("?",20)
SAVE.INV.JS.REC=''

;* initialize


;* get ID

STATUS=RBO.getProperty('','ID',ID)
CONO=ID[1,3]
JOB_NO=ID[4,8]
STATUS=RBO.getProperty('','MAST_SUB_FLAG',MAST.SUB.FLAG)
STATUS=RBO.getProperty('','DEPT',DEPT)
STATUS=RBO.getProperty('','CCTR',CCTR)
STATUS=RBO.getProperty('','CATEG',CATEG)

;* get database values

MATREAD JOB.REC FROM JOB,ID ELSE
   ERRMSG='Cannot read JOB record ':ID
   GOTO 93000
END
IF MAST.SUB.FLAG THEN
   ITYPE='OS'
   CALL MasterSummarySub(CONO,JOB_NO,SAVE.INV.JS.REC,MAT JOB.REC,ITYPE)

*T28046
   STATUS = RBO.getProperty('','ERRMSG',ERRMSG) 
   IF ERRMSG # "" THEN GOTO 93000
*T28046


   SUB.CNT=DCOUNT(JOB.SUBS,VM)+1
END ELSE SUB.CNT = 1
PTR=1
LOOP
   LOCATE DEPT IN JOB.OS.DEPT<1>,PTR SETTING FND ELSE
      PTR = 0
   END
   IF PTR # 0 THEN
      IF CCTR = JOB.OS.CCTR<1,FND> AND CATEG = JOB.OS.PLINE<1,FND> THEN
         PTR = FND
         FND = 0
      END ELSE
         PTR = FND + 1
      END
   END
WHILE PTR AND FND DO
REPEAT
IF NOT(PTR) THEN
   ERRMSG='Cannot locate Dept/Cctr/Pline ':DEPT:' ':CCTR:' ':CATEG:' in Job record!'
   GOTO 93000
END
MATREAD DEPT.REC FROM DEPARTMENT,CONO:DEPT ELSE DEPT.DESC = UNKNOWN
MATREAD CCTR.REC FROM COST.CNTR,CONO:CCTR ELSE CCTR.DESC = UNKNOWN
MATREAD CAOS.REC FROM CATEGORY.OSP,CONO:CATEG ELSE CAOS.DESC = UNKNOWN

LN = 1; OLN = 1; LINES = JOB.OS.SEQ<1,PTR,1>
OS.ID = CONO:JOB_NO:"!":JOB.OS.DEPT<1,PTR>:"!":JOB.OS.CCTR<1,PTR>
OS.ID = OS.ID:"!":JOB.OS.PLINE<1,PTR>:"!"
GOSUB 100
FOR K = 2 TO SUB.CNT
   OS.ID = CONO:JOB.SUBS<1,K-1>:"!":JOB.OS.DEPT<1,PTR>:"!":JOB.OS.CCTR<1,PTR>
   OS.ID = OS.ID:"!":JOB.OS.PLINE<1,PTR>:"!"
   OLN = LINES + 1; LINES = LINES + JOB.OS.SEQ<1,PTR,K>
   GOSUB 100
NEXT K
STATUS=RBO.setProperty('','DEPT_DESC',DEPT.DESC)
STATUS=RBO.setProperty('','CCTR_DESC',CCTR.DESC)
STATUS=RBO.setProperty('','CAOS_DESC',CAOS.DESC)
STATUS=RBO.setProperty('','OPER',TRAN.OPER)
STATUS=RBO.setProperty('','OSP_TRAN',TRAN.NO)
STATUS=RBO.setProperty('','DATE',TRAN.DATE)
STATUS=RBO.setProperty('','PERIOD',TRAN.PERIOD)
STATUS=RBO.setProperty('','VEND',TRAN.VEND)
STATUS=RBO.setProperty('','TYPE',TRAN.TYPE)
STATUS=RBO.setProperty('','RCLS_JOB',TRAN.JOB)
STATUS=RBO.setProperty('','PO',TRAN.PO)
STATUS=RBO.setProperty('','COST',TRAN.COST)
STATUS=RBO.setProperty('','QTY',TRAN.QTY)
STATUS=RBO.setProperty('','INV',TRAN.INV)
STATUS=RBO.setProperty('','SALE',TRAN.SALE)
STATUS=RBO.setProperty('','OPER_NAME',TRAN.OPER.DESC)
STATUS=RBO.setProperty('','VEND_NAME',TRAN.VEND.NAME)
GOTO 99999

100*
FOR I = OLN TO LINES
   MATREAD JOS.REC FROM JOB.OSP, OS.ID:(I-OLN+1) ELSE MAT JOS.REC = ""
   MATREAD VEND.REC FROM VEND , CONO:JOS.VEND ELSE
      VEND.DESC = UNKNOWN
   END
   MATREAD OPER.REC FROM OPERATION, CONO:JOS.OPER ELSE
      OPER.DESC = UNKNOWN
   END
   TRAN.VEND<1,I> = JOS.VEND
   TRAN.PO<1,I> = JOS.PO
   TRAN.NO<1,I> = JOS.SEQ
   TRAN.TYPE<1,I> = JOS.TYPE
   TRAN.INV<1,I> = JOS.INV
   TRAN.DATE<1,I> = OCONV(JOS.DATE,'D2/')
   TRAN.QTY<1,I> = OCONV(JOS.QTY,'MD2,')
   TRAN.COST<1,I> = OCONV(JOS.COST,'MD2,')
   TRAN.SALE<1,I> = OCONV(JOS.SALE,'MD2,')
   TRAN.JOB<1,I> = JOS.RC.JOB
   TRAN.VEND.NAME<1,I> = VEND.DESC
   TRAN.OPER<1,I> = JOS.OPER
   TRAN.OPER.DESC<1,I> = OPER.DESC
   TRAN.PERIOD<1,I> = JOS.MON<1,1>
NEXT I
RETURN
93000 
STATUS = RBO.setProperty('','ServerStatus',1)        
STATUS = RBO.setProperty('','ServerMessage',ERRMSG)  

99999 
RETURN
