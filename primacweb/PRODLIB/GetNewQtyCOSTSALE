SUBROUTINE GetNewQtyCOSTSALE
********************************************************************************
*   Program name :- GetNewQtyCOSTSALE
*   Created:- 9/21/2003
*   AUTHOR :- IRFAN M SALEEM
********************************************************************************
*
*---- FILE COPY STATEMENTS
*
   $INCLUDE WWINSERT RBO.H
   $INCLUDE JES.CPYLIB SCOMMON.ESTIMATE
   $DEFINE JESFILEVARS
   $INCLUDE JES.CPYLIB JES.FILE.VARS
   $DEFINE FILEVARS
   $INCLUDE CPYLIB FILE.VARS
   $DEFINE ESTIMATE
   $INCLUDE JES.CPYLIB ESTIMATE
   $DEFINE ESTIMATEDEPT
  $INCLUDE JES.CPYLIB ESTIMATE.DEPT
   $INCLUDE CPYLIB CHAR
*
*---- OPEN ALL FILES
*
    IN_PARAM = "" ; OUT_PARAM = ""
   ERRMSG = "CALL openEstimateFiles PROBLEM"
   CALL openEstimateFiles(ERRMSG,IN_PARAM,OUT_PARAM,MAT FILE.VARS,MAT JES.FILE.VARS)
   IF ERRMSG # "" THEN GOTO 93000

OPEN '','ESTIMATE.DEPT.BU' TO ESTIMATE.DEPT ELSE
ERRMSG ="CAN NOT OPEN ESTIMATE.DEPT.BU FILE"
END

*
*
*---- INITIALIZATION
*
   ERRMSG = RBO.getProperty('','ID',ESTIMATE.ID)
   ERRMSG = RBO.getProperty('','COMP',CSEL)

   ERRMSG = RBO.getProperty('','ESTQTY',QSEL)
   ERRMSG = RBO.getProperty('','ESTFLAG',ESTFLAG)
   ERRMSG = RBO.getProperty('','QSEL',ALLQSEL)

   CALL EST_RES_QTY_GEN
   CONO = ESTIMATE.ID[1,3]
   EST.ID = TRIM(ESTIMATE.ID[4,99])
  

*
*---- DIMENSIONED VARIABLES
*
   DIM TOT.REC(12)
   EQU TOTAL.FCOST           TO TOT.REC(1)
   EQU TOTAL.VCOST           TO TOT.REC(2)
   EQU TOTAL.TCOST           TO TOT.REC(3)
   EQU TOTAL.FSALE           TO TOT.REC(6)
   EQU TOTAL.VSALE           TO TOT.REC(7)
   EQU TOTAL.TSALE           TO TOT.REC(8)
   EQU TOTAL.FSALE.MO        TO TOT.REC(9)
   EQU TOTAL.VSALE.MO        TO TOT.REC(10)
   EQU TOTAL.TSALE.MO        TO TOT.REC(11)
*
*---- INITIALIZATION
*
   ESTIMATE.ID = CONO:EST.ID
   MAT TOT.REC = ""
   EstCOSTSALEStr=""
*
*---- PROCESSING
*

   COMP = CSEL
   MAX.QC = DCOUNT(EST.QTY,VM)
   BEGIN CASE
      CASE MAX.QC = 1
         START.QC = 1
         END.QC = 1
      CASE MAX.QC LE 3
         START.QC = 1
         END.QC = MAX.QC
      CASE 1
         LOCATE QSEL IN EST.QTY<1>,1 SETTING START.QC ELSE START.QC = 1
         IF START.QC + 3 > MAX.QC THEN
            START.QC = MAX.QC - 2
         END
         END.QC = START.QC + 2
   END CASE

   DC = DCOUNT(EST.DEPT.COMP,VM)

TESTSTR= ""
TESTDP= ""
   FOR DP = 1 TO DC
      CNUM = FIELD(EST.DEPT.COMP<1,DP>,"!",2)
      IF COMP = "ALL" OR CNUM = COMP THEN
         EQTY = FIELD(EST.DEPT.COMP<1,DP>,"!",3)
         LOCATE EQTY IN EST.QTY<1>,1 SETTING EP THEN
	     TOTAL.TCOST<1,EP>= TOTAL.TCOST<1,EP> + EST.DEPT.COMP.COST<1,DP>
            TOTAL.VCOST<1,EP>=TOTAL.VCOST<1,EP> + EST.DEPT.COMP.VCOST<1,DP>
            TOTAL.FCOST<1,EP>=TOTAL.TCOST<1,EP> - TOTAL.VCOST<1,EP>
            TOTAL.TSALE<1,EP>=TOTAL.TSALE<1,EP> + EST.DEPT.COMP.TSALE<1,DP>
            TOTAL.VSALE<1,EP>=TOTAL.VSALE<1,EP> + EST.DEPT.COMP.VSALE<1,DP>
            TOTAL.FSALE<1,EP>=TOTAL.TSALE<1,EP> - TOTAL.VSALE<1,EP>
         END
      END
   NEXT DP

   ECNT = DCOUNT(EST.QTY,VM)
   FOR EP = 1 TO ECNT
      TOTAL.TSALE.MO<1,EP>=TOTAL.TSALE<1,EP> + (INT(OCONV(TOTAL.TSALE<1,EP>,'MD2') * OCONV(EST.OM.PCT<1,EP>,'MD4') + .005 / 100))
      TOTAL.VSALE.MO<1,EP>=TOTAL.VSALE<1,EP> + (INT(OCONV(TOTAL.VSALE<1,EP>,'MD2') * OCONV(EST.OM.PCT<1,EP>,'MD4') + .005 / 100))
      TOTAL.FSALE.MO<1,EP>=TOTAL.TSALE.MO<1,EP>-TOTAL.VSALE.MO<1,EP>
   NEXT EP

   IF COMP = "ALL" THEN
      DISP.COMP = "ALL COMPONENTS"
   END ELSE
      DISP.COMP = EST.PROD.DESC<1,COMP>
   END
   Q = 0
   DISP.COST = "" ; DISP.COST.THOU = "" ; DISP.SELL = ""
   DISP.SELL.THOU = "" ; DISP.PROFIT = "" ; DISP.QTY = ""
   FOR QPTR = START.QC TO END.QC
      Q = Q + 1
      FN = 5 - 1 + Q
      QTY = EST.QTY<1,QPTR>
      PQTY = OCONV(QTY,"MD0,")
      DISP.QTY<1,QPTR> = PQTY
      FN = 11 - 1 + Q
      DISP.COST<1,QPTR,1> = OCONV(TOTAL.FCOST<1,QPTR>,"MD2Z,")
      DISP.COST<1,QPTR,2> = OCONV(TOTAL.VCOST<1,QPTR>,"MD2Z,")
      DISP.COST<1,QPTR,3> = OCONV(TOTAL.TCOST<1,QPTR>,"MD2Z,")
      FN = 16 - 1 + Q
      COST.PER.1000=INT(TOTAL.TCOST<1,QPTR>/(QTY/1000)+0.5)
      DISP.COST.THOU<1,QPTR,1> = OCONV(COST.PER.1000,"MD2Z,")
      COST.ADD.1000=INT(TOTAL.VCOST<1,QPTR>/(QTY/1000)+0.5)
      DISP.COST.THOU<1,QPTR,2> = OCONV(COST.ADD.1000,"MD2Z,")
      FN = 31 - 1 + Q
      DISP.SELL<1,QPTR,1> = OCONV(TOTAL.FSALE.MO<1,QPTR>,"MD2Z,")
      DISP.SELL<1,QPTR,2> = OCONV(TOTAL.VSALE.MO<1,QPTR>,"MD2Z,")
      DISP.SELL<1,QPTR,3> = OCONV(TOTAL.TSALE.MO<1,QPTR>,"MD2Z,")
      FN = 36 - 1 + Q
      SALE.PER.1000=INT(TOTAL.TSALE.MO<1,QPTR>/(QTY/1000)+0.5)
      DISP.SELL.THOU<1,QPTR,1> = OCONV(SALE.PER.1000,"MD2Z,")
      SALE.ADD.1000=INT(TOTAL.VSALE.MO<1,QPTR>/(QTY/1000)+0.5)
      DISP.SELL.THOU<1,QPTR,2> = OCONV(SALE.ADD.1000,"MD2Z,")
      FN = 41 - 1 + Q
      PROFIT = TOTAL.TSALE.MO<1,QPTR> - TOTAL.TCOST<1,QPTR>
      DISP.PROFIT<1,QPTR,1> = OCONV(PROFIT,"MD2Z,")
      IF TOTAL.TSALE.MO<1,QPTR>+0 # 0 THEN
         MARGIN = INT(PROFIT * 100 / TOTAL.TSALE.MO<1,QPTR> * 100 + 0.5)
         DISP.PROFIT<1,QPTR,2> = OCONV(MARGIN,"MD2Z,")
      END
   NEXT QPTR
*
*---- BUILD RBO RECORD
*
EstCOSTSALEStr=DISP.COMP:"|":DISP.QTY<1,START.QC>:"|":DISP.QTY<1,START.QC+1> :"|":DISP.QTY<1,START.QC+2> :"|":DISP.COST<1,START.QC>:"|":DISP.COST<1,START.QC+1>:"|":DISP.COST<1,START.QC+2>:"|":DISP.COST.THOU<1,START.QC>:"|":DISP.COST.THOU<1,START.QC+1>:"|":DISP.COST.THOU<1,START.QC+2>:"|":DISP.SELL<1,START.QC>:"|":DISP.SELL<1,START.QC+1>:"|":DISP.SELL<1,START.QC+2>:"|":DISP.SELL.THOU<1,START.QC>:"|":DISP.SELL.THOU<1,START.QC+1>
EstCOSTSALEStr=EstCOSTSALEStr:"|":DISP.SELL.THOU<1,START.QC+2>:"|":DISP.PROFIT<1,START.QC>:"|":DISP.PROFIT<1,START.QC+1>:"|":DISP.PROFIT<1,START.QC+2>

STATUS = RBO.setProperty('','EstCOSTSALEStr',EstCOSTSALEStr)

RETURN
93000 *
   STATUS = RBO.setProperty('','ServerStatus',1)
   STATUS = RBO.setProperty('','ServerMessage',ERRMSG)
   RETURN
