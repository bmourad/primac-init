SUBROUTINE POSPOM_PREWRITE
********************************************************************************
*   Program name :- POSPOM_PREWRITE
*   Created:- 11/17/2005
*------------------------------------------------------------------------------*
*

* In Properties:
* --------------
*  
*
* Out Properties:
* ---------------
*  
********************************************************************************
$INCLUDE WWINSERT RBO.H
$INCLUDE CPYLIB CHAR
$INCLUDE PMC.CPYLIB PO
$INCLUDE ICS.CPYLIB INVENTORY
$INCLUDE ICS.CPYLIB INV.CNV
$INCLUDE PMC.CPYLIB SHIP.VIA ;*ADDED BY ZAHOOR

*DEFFUN CALC_COST_QTY(STK.QTY,MAT INV.CNV.REC)

* Insert method code here
OPEN '','PO' TO PO ELSE 
	ERRMSG = 'PO FILE IS MISSING'; GOTO 93000
END

OPEN '','INVENTORY' TO INVENTORY ELSE 
	ERRMSG = 'INVENTORY FILE IS MISSING'; GOTO 93000
END
OPEN '','SHIP.VIA' TO SHIP.VIA ELSE ;*ADDED BY ZAHOOR
	ERRMSG = 'CANNOT OPEN SHIP.VIA FILE';GOTO 93000 
END
OPEN '','CONTROL' TO CONTROL ELSE ;*ADDED BY ZAHOOR
	ERRMSG = 'CANNOT OPEN CONTROL FILE';GOTO 93000 
END
CONO = ''
USER.ID = ''
PMCProperty = ''
INV.COUNT = ''
LN=1
TOTONOTD=''
TOTCANCEL=''
TOTOPEN=''
UNITFLG=''
MAT PO.REC=''
STATUS=RBO.getProperty('','PMCProperty',PMCProperty)
CONO = PMCProperty<1,4>
USER.ID = PMCProperty<1,3>

STATUS = RBO.getProperty('','ID',ID)
STATUS = RBO.getProperty('','ProdNum',PO.PROD.NUM)
STATUS = RBO.getProperty('','TotOnOrd',PO.TOT.ONORD)
STATUS = RBO.getProperty('','QtyOpen',PO.QTY.OPEN)
STATUS = RBO.getProperty('','TotCancel',PO.TOT.CANCEL)
STATUS = RBO.getProperty('','Discount',PO.DISCOUNT)
STATUS = RBO.getProperty('','JBOnOrd',PO.JB.ONORD)
STATUS = RBO.getProperty('','JBReceved',PO.JB.RECEVED)
STATUS = RBO.getProperty('','JBOpen',PO.JB.OPEN)
STATUS = RBO.getProperty('','JobNo',PO.JOB.NO)
STATUS = RBO.getProperty('','GrosPrice',PO.GROS.PRICE)
STATUS = RBO.getProperty('','TermsDis',PO.TERMS.DIS);*ADDED BY SUHAIL
STATUS = RBO.getProperty("","ShipVia",PO_SHIP_VIA);*ADDED BY ZAHOOR
STATUS=RBO.getProperty('','JBCctr',Cctr)
STATUS=RBO.getProperty('','JBDept',JBDept)
;*ADDED BY ZAHOOR v
MATREAD SHIP.VIA.REC FROM SHIP.VIA,CONO:PO_SHIP_VIA THEN
      PO_VIA_DESC = SHPV.DESC
END ELSE
      PO_VIA_DESC = ""
END
;*ADDED BY ZAHOOR ^

*PO.DISCOUNT
INV.COUNT = DCOUNT(PO.PROD.NUM,VM)

FOR I = 1 TO INV.COUNT

	MATREAD INV.REC FROM INVENTORY,CONO:PO.PROD.NUM<1,I> THEN
		$INCLUDE ICSBP INV.UM.CNV

	IF ( PO.DISCOUNT<1,I> # '' ) THEN
		PO.DISCOUNT<1,I> = PO.DISCOUNT<1,I>*100
	END
       STATUS=RBO.setProperty('','TEMPVAL',PO.DISCOUNT<1,I>)
       PO.PROD.TYPE<1,I>	=INV.PAP.TYPE	
       PO.UNIT.FLG<1,I>=INV.UNIT<1,1>
       PO.JB.UNITS<1,I>=INV.UNIT<1,2>
       LN=I
      * 

      IF INV.UNIT<1,1> = INV.UNIT<1,2> THEN
           GOSUB 4000
           IF ICR.CNV<LN,1> = "MD0"  THEN
		PO.TOT.ONORD<1,I> = ICONV(((PO.TOT.ONORD<1,I>/ICR.MT1<LN,1>)*ICR.DV1<LN,1>)*ICR.DV2<LN,1>,'MD0')
              PO.TOT.CANCEL<1,I> = ICONV(((PO.TOT.CANCEL<1,I>/ICR.MT1<LN,1>)*ICR.DV1<LN,1>)*ICR.DV2<LN,1>,'MD0')
              PO.QTY.OPEN<1,I> = ICONV(((PO.QTY.OPEN<1,I>/ICR.MT1<LN,1>)*ICR.DV1<LN,1>)*ICR.DV2<LN,1>,'MD0')
 
	    END ELSE
              PO.TOT.ONORD<1,I>=PO.TOT.ONORD<1,I>*10
              PO.TOT.CANCEL<1,I>=PO.TOT.CANCEL<1,I>*10
              PO.QTY.OPEN<1,I>=PO.QTY.OPEN<1,I>*10

           END

              *PO.TOT.ONORD<1,I> = PO.TOT.ONORD<1,I>/1000
		*PO.QTY.OPEN<1,I> = PO.QTY.OPEN<1,I>/1000
		*PO.TOT.CANCEL<1,I> = PO.TOT.CANCEL<1,I>/1000

           

       END
*STATUS=RBO.setProperty('','CNVVAL',PO.UNIT.FLG<1,I>:"<>":INV.UNIT<1,1> :"<>": INV.UNIT<1,2>)
IF INV.UNIT<1,1> <> INV.UNIT<1,2> THEN

GOSUB 4000
 *STATUS=RBO.setProperty('','CNVVAL',ICR.MT1<LN,1>:"///":ICR.DV1<LN,1>:"///":ICR.DV2<LN,1>)
*STATUS=RBO.setProperty('','CNVVAL',ICR.CNV<LN,1>:"///":ICR.CNV<LN,2>)
 IF ICR.CNV<LN,1> = 'MD0' AND ICR.CNV<LN,2> = 'MD0' THEN
    

            IF  ICR.CNV<LN,2> = 'MD0' THEN
              PO.TOT.ONORD<1,I> = ICONV((( PO.TOT.ONORD<1,I>/ICR.MT1<LN,2>)*ICR.DV1<LN,2>)*ICR.DV2<LN,2>,'MD0') 
              PO.TOT.CANCEL<1,I> = ICONV(((PO.TOT.CANCEL<1,I>/ICR.MT1<LN,2>)*ICR.DV1<LN,2>)*ICR.DV2<LN,2>,'MD0')
              PO.QTY.OPEN<1,I> = ICONV(((PO.QTY.OPEN<1,I>/ICR.MT1<LN,2>)*ICR.DV1<LN,2>)*ICR.DV2<LN,2>,'MD0')
            END 
           
 END 
		*PO.TOT.ONORD<1,I> = PO.TOT.ONORD<1,I>/1000
		*PO.QTY.OPEN<1,I> = PO.QTY.OPEN<1,I>/1000
		*PO.TOT.CANCEL<1,I> = PO.TOT.CANCEL<1,I>/1000
 *END	
END

*PO.GROS.PRICE<1,I>=PO.GROS.PRICE<I,I>/10000
    SUBCOUNT=DCOUNT(PO.JOB.NO<1,I>,SM)
    FOR J=1 TO SUBCOUNT
       IF(PO.JB.ONORD<1,I,J> > 0) THEN
          GOSUB 4000
         PO.JB.ONORD<1,I,J>=INT(((PO.JB.ONORD<1,I,J>/ICR.MT1<LN,1>)*ICR.DV1<LN,1>)*ICR.DV2<LN,1> + .5)
         * PO.JB.ONORD<1,I,J>=PO.JB.ONORD<1,I,J>/1000
       END
       IF(PO.JB.RECEVED<1,I,J> > 0) THEN
          GOSUB 4000
          PO.JB.RECEVED<1,I,J>=INT(((PO.JB.RECEVED<1,I,J>/ICR.MT1<LN,1>)*ICR.DV1<LN,1>)*ICR.DV2<LN,1> + .5)
        *  PO.JB.RECEVED<1,I,J>=PO.JB.RECEVED<1,I,J>/1000
       END
       IF(PO.JB.OPEN<1,I,J> > 0) THEN
          GOSUB 4000
          PO.JB.OPEN<1,I,J>=INT(((PO.JB.OPEN<1,I,J>/ICR.MT1<LN,1>)*ICR.DV1<LN,1>)*ICR.DV2<LN,1> + .5)
        *  PO.JB.OPEN<1,I,J>=PO.JB.OPEN<1,I,J>/1000
       END
      NEXT J
  
	*IF ( PO.TOT.ONORD<1,I> # '' ) THEN
	*	PO.TOT.ONORD<1,I> = ICONV(PO.TOT.ONORD<1,I>,ICR.CNV)
	*	PO.TOT.ONORD<1,I> = CALC_COST_QTY(PO.TOT.ONORD<1,I>,MAT INV.CNV.REC,ROND,'') 
*ICONV(((PO.TOT.ONORD<1,LN>/ICR.DV1<LN,2>)*ICR.MT1<LN,2>)/ICR.DV2<LN,2>, 'MD0')
*LN=I


PO.TOT.RECEIVED<1,I>=PO.TOT.ONORD<1,I>-(PO.TOT.CANCEL<1,I>+PO.QTY.OPEN<1,I>)
PO.PREV.RECEVED<1,I>=PO.TOT.RECEVED<1,I>
IF PO.PREV.RECEVED<1,I>="" THEN
   PO.PREV.RECEVED<1,I>="0"
END
*WRITE PO.PREV.RECEVED ON CONTROL,"PREVREC"
*PO.TOT.RECEIVED<1,I>=PO.TOT.RECEIVED<1,I>*1000
*PO.GROS.PRICE<1,I>=PO.GROS.PRICE<1,I>/10000
	END
NEXT I
*WRITE PO.PREV.RECEVED ON CONTROL,"PREVREC"
*Reference
WRITE Cctr  ON CONTROL,"CCTR"
STATUS = RBO.setProperty('','Reference',INV.COUNT)


STATUS = RBO.setProperty('','ProdNum',PO.PROD.NUM)
STATUS = RBO.setProperty('','TotOnOrd',PO.TOT.ONORD)
STATUS = RBO.setProperty('','QtyOpen',PO.QTY.OPEN)
STATUS = RBO.setProperty('','TotCancel',PO.TOT.CANCEL)
STATUS = RBO.setProperty('','Discount',PO.DISCOUNT)
STATUS=  RBO.setProperty('','ProdType',PO.PROD.TYPE)
STATUS=  RBO.setProperty('','JBUnits',PO.JB.UNITS)
STATUS=  RBO.setProperty('','UnitFlg',PO.UNIT.FLG)
STATUS=  RBO.setProperty('','TotReceived',PO.TOT.RECEIVED)
STATUS=  RBO.setProperty('','PrevReceved',PO.PREV.RECEVED)
STATUS = RBO.setProperty('','JBOnOrd',PO.JB.ONORD)
STATUS = RBO.setProperty('','JBReceved',PO.JB.RECEVED)
STATUS = RBO.setProperty('','JBOpen',PO.JB.OPEN)
STATUS = RBO.setProperty('','TermsDis',ICONV(PO.TERMS.DIS,"MD2"));*ADDED BY SUHAIL
STATUS = RBO.setProperty("","ViaDesc",PO_VIA_DESC);*ADDED BY ZAHOOR
*PO_JB_CCTR=Cctr
*STATUS=RBO.setProperty('','JBCctr',PO_JB_CCTR)



* End of method code
RETURN
4000:
 BEGIN CASE
   CASE INV.UNIT<1,2> = "SHT" AND INV.UNIT<1,3> = "LBS"
     ICR.CNV<LN,1> = "MD0"; ICR.DV2<LN,1> = 1
     ICR.DV1<LN,1> = INV.M.WT; ICR.MT1<LN,1> = 1
    CASE INV.UNIT<1,2> = "PC" AND INV.UNIT<1,3> = "MSI"
      ICR.CNV<LN,1> = "MD0"; ICR.DV2<LN,1> = 1
      ICR.DV1<LN,1> = INV.PAP.WIDTH/100; ICR.MT1<LN,1> = 10
    CASE INV.UNIT<1,2> = "FT" AND INV.UNIT<1,3> = "MSI"
      ICR.CNV<LN,1> = "MD0"; ICR.DV2<LN,1> = 12
      ICR.DV1<LN,1> = INV.PAP.WIDTH/100; ICR.MT1<LN,1> = 100
    CASE 1
      ICR.CNV<LN,1> = "MD2"; ICR.DV2<LN,1> = 1
      ICR.DV1<LN,1> = 10; ICR.MT1<LN,1> = INV.SBR
  END CASE


  BEGIN CASE
    CASE PO.UNIT.FLG<1,LN> = "SHT" AND INV.UNIT<1,3> = "LBS"
      ICR.CNV<LN,2> = "MD0"; ICR.DV2<LN,2> = 1
      ICR.DV1<LN,2> = INV.M.WT; ICR.MT1<LN,2> = 1
    CASE PO.UNIT.FLG<1,LN> = "PC" AND INV.UNIT<1,3> = "MSI"
      ICR.CNV<LN,2> = "MD0"; ICR.DV2<LN,2> = 1
      ICR.DV1<LN,2> = INV.PAP.WIDTH/100; ICR.MT1<LN,2> = 10
    CASE PO.UNIT.FLG<1,LN> = "FT" AND INV.UNIT<1,3> = "MSI"
      ICR.CNV<LN,2> = "MD0"; ICR.DV2<LN,2> = 12
      ICR.DV1<LN,2> = INV.PAP.WIDTH/100; ICR.MT1<LN,2> = 100
    CASE 1
      ICR.CNV<LN,2> = "MD2"; ICR.DV2<LN,2> = 1
      ICR.DV1<LN,2> = 10; ICR.MT1<LN,2> = 1
  END CASE
RETURN
93000*
	STATUS = RBO.setProperty("","ServerStatus",1)
	STATUS = RBO.setProperty("","ServerMessage",ERRMSG)
RETURN
