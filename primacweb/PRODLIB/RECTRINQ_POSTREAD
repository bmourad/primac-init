  SUBROUTINE RECTRINQ_POSTREAD
*********************************************************************
*
* REVISION - [12.0]
*
* PROGRAM  - RECTRINQ_POSTREAD
*
* AUTHOR   - ALEJANDRO DELGADO
*
* DATE     - 09/27/2002
*
* DESCRIPTION
*
* This program builds the data from INVENTORY file to load into 
* Receipt Tracking Inquiry screen.
*
*********************************************************************
*
*---- FILE COPY STATEMENTS
*
  $INCLUDE WWINSERT RBO.H
  $INCLUDE ICS.CPYLIB INVENTORY
  $INCLUDE ICS.CPYLIB INV.CNV
  $INCLUDE ICS.CPYLIB INV_RECEIPTS
  $INCLUDE ICS.CPYLIB INV_SERIAL
  $INCLUDE ICS.CPYLIB CATEGORY
  $INCLUDE PMC.CPYLIB PO
  $INCLUDE CPYLIB>FILE.VARS
  $INCLUDE CPYLIB CHAR
*
*---- INITIALIZATION
*
  ERRMSG = RBO.getProperty('','ID',RECP.NUM)
  CONO = RECP.NUM[1,3]
  RECP.NUM = RECP.NUM[4,99]
  SYSLIST = ''
  *
  ERRMSG = "" ; IN_PARAM = "" ; OUT_PARAM = ""
  IN_PARAM<1,1> = 'INVENTORY'
  IN_PARAM<1,2> = 'INV.STATS'
  IN_PARAM<1,3> = 'CATEGORY'
  IN_PARAM<1,4> = 'INV_AUDIT_HIST'
  IN_PARAM<1,5> = 'INV_RECEIPTS'
  IN_PARAM<1,6> = 'INV_SERIAL'
  IN_PARAM<1,7> = 'PO'
  CALL GetInvOpenFiles(ERRMSG,IN_PARAM,OUT_PARAM,MAT FILE.VARS)
  IF ERRMSG # '' THEN GOTO SET.ERROR
*
*---- PROCESSING
*
  MATREAD INVR.REC FROM INV_RECEIPTS, CONO:RECP.NUM ELSE
    ERRMSG = RECP.NUM:" is not a valid receipt tracking ID."
    GOTO SET.ERROR
  END
  MATREAD PO.REC FROM PO, CONO:INVR.PO ELSE MAT PO.REC=""
  MATREAD INV.REC FROM INVENTORY, CONO:INVR.PROD ELSE MAT INV.REC=""
  MATREAD CATG.REC FROM CATEGORY, CONO:INV.LINE ELSE MAT CATG.REC=""
  ERRMSG = "" ; IN_PARAM = "" ; OUT_PARAM = "" ; MAT INV.CNV.REC = ""
  CALL GetInvUMCnv(ERRMSG,IN_PARAM,OUT_PARAM,MAT INV.CNV.REC,MAT INV.REC)
  *
  SEL.WHSE = '' ; SEL.QTY = ''
  SEL.LOC = '' ; SEL.SERIAL = ''
  SEL.MILL = '' ; SEL.DIAM = ''
  SEL.SHEETS = ''
  SER.ARR = INVR.SERIAL.NO<1>
  ID.CNT = DCOUNT (SER.ARR,VM)
  FOR I = 1 TO ID.CNT
    SER.ARR<1,I> = CONO:SER.ARR<1,I> 
  NEXT I
  CONVERT VM TO AM IN SER.ARR
  FORMLIST SER.ARR TO 0
  CMD = "SSELECT INV_SERIAL BY ISTK_WHSE BY ISTK_LOC"
  PERFORM CMD RTNLIST SYSLIST CAPTURING RESPONSE
  DONE = 0
  LN.CNT = 0
  LOOP
    READNEXT SEL.ID FROM SYSLIST ELSE DONE = 1
  UNTIL DONE DO
    MATREAD ISTK.REC FROM INV_SERIAL, SEL.ID THEN
      LN.CNT += 1 ; ROND = 0.5
      SEL.WHSE<1,LN.CNT> = ISTK.WHSE
      SEL.LOC<1,LN.CNT> = ISTK.LOC
      SEL.SERIAL<1,LN.CNT> = SEL.ID[4,99]
      SEL.MILL<1,LN.CNT> = ISTK.MILL.ID
      IF ISTK.CUR.QTY < 0 THEN ROND = -0.5
      SEL.QTY<1,LN.CNT> = OCONV(ICONV(ISTK.CUR.QTY/1000,ICR.CNV),ICR.CNV)
      SEL.DIAM<1,LN.CNT> = OCONV(ISTK.CUR.DIAM,"MD2")
      SEL.SHEETS<1,LN.CNT> = OCONV(INT(((ISTK.CUR.QTY/ICR.DV1)*ICR.MT1)/ICR.DV2+ROND),ICR.CNV)
    END
  REPEAT
  IF CATG.TRK.LVL # 'S' THEN
    SEL.SERIAL = ""
  END
  *
  COST.UM = INV.UNIT<1,3> 
  STOCK.UM = INV.UNIT<1,2>
*
*---- BUILD RBO RECORD
*
  STATUS = RBO.setProperty('','INV_FULL_DESC',INV.FULL.DESC)
*  STATUS = RBO.setProperty('','PO_VEND_NO',PO.VEND.NO)
  STATUS = RBO.setProperty('','PO_VEND_NO',INVR.VEND)

  STATUS = RBO.setProperty('','COST_UM',COST.UM)
  STATUS = RBO.setProperty('','STOCK_UM',STOCK.UM)
  STATUS = RBO.setProperty('','WHSE_IDS',SEL.WHSE)
  STATUS = RBO.setProperty('','LOC_IDS',SEL.LOC)
  STATUS = RBO.setProperty('','SERIAL_IDS',SEL.SERIAL)
  STATUS = RBO.setProperty('','ISTK_MILL_ID',SEL.MILL)
  STATUS = RBO.setProperty('','COST_QTYS',SEL.QTY)
  STATUS = RBO.setProperty('','ISTK_CUR_DIAM',SEL.DIAM)
  STATUS = RBO.setProperty('','STOCK_QTYS',SEL.SHEETS)
  STATUS = RBO.setProperty('','CATG_TRK_LVL',CATG.TRK.LVL)
  STATUS = RBO.setProperty('','ServerStatus',2)
RETURN
*
SET.ERROR: 
*
  STATUS = RBO.setProperty('','ServerStatus',1)
  STATUS = RBO.setProperty('','ServerMessage',ERRMSG)
  RETURN
END
