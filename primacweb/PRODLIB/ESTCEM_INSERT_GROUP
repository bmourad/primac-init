SUBROUTINE ESTCEM_INSERT_GROUP
********************************************************************************
*   Program name :- ESTCEM_INSERT_GROUP
*   WRITTEN BY SYED ALEEM
*   Created:- 4/21/2005
*------------------------------------------------------------------------------*
*

* In Properties:
* --------------
*  
*
* Out Properties:
* ---------------
*  
********************************************************************************
$INCLUDE WWINSERT RBO.H
$INCLUDE JES.CPYLIB SCOMMON.ESTIMATE
$DEFINE ESTIMATE
$INCLUDE JES.CPYLIB ESTIMATE
$INCLUDE PMC.CPYLIB COST.CNTR
$INCLUDE PMC.CPYLIB VEND
$INCLUDE PMC.CPYLIB SHIP.VIA
$INCLUDE JCS.CPYLIB CATEGORY.OSP
$INCLUDE JES.CPYLIB ESTIMATE.GRP
$DEFINE ESTIMATEMATL
$INCLUDE JES.CPYLIB ESTIMATE.MATL
$DEFINE ESTIMATEDEPT
$INCLUDE JES.CPYLIB ESTIMATE.DEPT
$DEFINE ESTIMATETEMP
$INCLUDE JES.CPYLIB ESTIMATE.TEMP
$INCLUDE JES.CPYLIB ESTIMATE.TEMP2
$DEFINE JESFILEVARS
$INCLUDE JES.CPYLIB JES.FILE.VARS
$INCLUDE CPYLIB CHAR
$DEFINE FILEVARS
$INCLUDE CPYLIB FILE.VARS
$INCLUDE JES.CPYLIB ESTIMATE.TBL

* Insert method code here
   ERRMSG		 = ""
   SUB.ID   		 = ""
   PROMPT_ITEMS       = ""
   OPEN '','FOH.TABLE' TO FOH.TABLE ELSE 
	ERRMSG = 'Cannot open FOH.TABLE file!'
	GOTO 93000      
   END

   OPEN '','ESTIMATE.MARKUP' TO ESTIMATE.MARKUP ELSE 
	ERRMSG = 'Cannot open ESTIMATE.MARKUP file!'
	GOTO 93000      
   END

   OPEN '','CONTROL' TO CONTROL ELSE 
	ERRMSG = 'Cannot open CONTROL file!'
	GOTO 93000      
   END

   OPEN '','ESTIMATE.DEPT' TO ESTIMATE.DEPT ELSE 
	ERRMSG = 'Cannot open ESTIMATE.DEPT file!'
	GOTO 93000      
   END

   OPEN '','ESTIMATE' TO ESTIMATE ELSE 
	ERRMSG = 'Cannot open ESTIMATE file!'
	GOTO 93000      
   END

   OPEN '','ESTIMATE.GRP' TO ESTIMATE.GRP ELSE 
	ERRMSG = 'Cannot open ESTIMATE.GRP file!'
	GOTO 93000      
   END
   OPEN '','COST.CNTR' TO COST.CNTR ELSE 
	ERRMSG = 'Cannot open COST.CNTR file!'
	GOTO 93000      
   END
   OPEN '','VEND' TO VEND ELSE 
	ERRMSG = 'Cannot open VEND file!'
	GOTO 93000      
   END
   OPEN '','ESTIMATE.MATL' TO ESTIMATE.MATL ELSE 
	ERRMSG = 'Cannot open ESTIMATE.MATL file!'
	GOTO 93000      
   END
   OPEN '','ESTIMATE.TBL' TO ESTIMATE.TBL ELSE
	ERRMSG = 'Cannot open ESTIMATE.TBL file!'
	GOTO 93000      
   END 
   OPEN '','CATEGORY.OSP' TO CATEGORY.OSP ELSE 
	ERRMSG = 'Cannot open CATEGORY.OSP file!'
	GOTO 93000      
   END
   OPEN '','SHIP.VIA' TO SHIP.VIA ELSE 
	ERRMSG = 'Cannot open SHIP.VIA file!'
	GOTO 93000      
   END
   ERR = RBO.getProperty('','DREFCREF',VALUECONTENT)
   ERR = RBO.getProperty('','ESTDEPTINFO',ESTDEPTINFO)
   ERR = RBO.getProperty('','PMCProperty',PMCProperty)

	CONO           = PMCProperty<1,4>
	EQTY           = FIELD(VALUECONTENT,"^",1)
	DPTR           = FIELD(VALUECONTENT,"^",2)
  	DEPT           = FIELD(VALUECONTENT,"^",3)
	COMP           = FIELD(VALUECONTENT,"^",4)
	REF.NO         = FIELD(VALUECONTENT,"^",5)
	ESTGX.GRP      = FIELD(VALUECONTENT,"^",6)
	TEMP.GRP.ID    = FIELD(VALUECONTENT,"^",7)
	TEMP.QTY       = FIELD(VALUECONTENT,"^",8)
	TEMP.FCTR      = FIELD(VALUECONTENT,"^",9)
	EST.NO         = FIELD(VALUECONTENT,"^",10)
	MODE1          = FIELD(VALUECONTENT,"^",11)

	ESTD.ID = DPTR:"!":COMP:"!":EQTY

	MATREAD EST.REC FROM ESTIMATE,CONO:EST.NO ELSE
               MAT EST.REC=""
		ERRMSG = 'Cannot open ESTIMATE file!'
       END
	MATREAD ESTG.REC FROM ESTIMATE.GRP,CONO:DEPT:"!":ESTGX.GRP ELSE
               MAT ESTG.REC=""
		ERRMSG = 'Cannot open ESTIMATE.GRP file!'
       END
	MATREAD ESTD.REC FROM ESTIMATE.DEPT,CONO:EST.NO:"!":ESTD.ID ELSE
               MAT ESTD.REC = ""
		ERRMSG = 'Cannot open ESTIMATE.D file!'
       END
	ESTD.TYPE         = FIELD(ESTDEPTINFO,"^",1)
	ESTD.CCTR         = FIELD(ESTDEPTINFO,"^",2)
   	ESTD.OPV          = FIELD(ESTDEPTINFO,"^",3)
	ESTD.CODE         = FIELD(ESTDEPTINFO,"^",4)
	ESTD.QTY          = FIELD(ESTDEPTINFO,"^",5)
	ESTD.FCTR         = FIELD(ESTDEPTINFO,"^",6)
	ESTD.STD          = FIELD(ESTDEPTINFO,"^",7)
	ESTD.STD.TYPE     = FIELD(ESTDEPTINFO,"^",8)
	ESTD.TSALE        = FIELD(ESTDEPTINFO,"^",9)
	ESTD.DESC         = FIELD(ESTDEPTINFO,"^",10)
	ESTD.GRP.QTY      = FIELD(ESTDEPTINFO,"^",11)	
	ESTD.GRP.FCTR     = FIELD(ESTDEPTINFO,"^",12)
	ESTD.GRP.QCALC    = FIELD(ESTDEPTINFO,"^",13)	
	ESTD.GRP.QPARAM   = FIELD(ESTDEPTINFO,"^",14)	
	ESTD.GRP.QOR      = FIELD(ESTDEPTINFO,"^",15)		
	ESTD.GRP.FCALC    = FIELD(ESTDEPTINFO,"^",16)	
	ESTD.GRP.FPARAM   = FIELD(ESTDEPTINFO,"^",17)	
	ESTD.GRP.FOR      = FIELD(ESTDEPTINFO,"^",18)    	

	ESTD.GRP.ID       = FIELD(ESTDEPTINFO,"^",19)		
100*
   GCNT     = COUNT(ESTG.TYPE,VM) + (ESTG.TYPE # "")
   GRP.ID   = TEMP.GRP.ID
   GRP.QTY  = TEMP.QTY
   GRP.FCTR = TEMP.FCTR
   GPTR     = 0
   LOOP
      GPTR = GPTR + 1
   UNTIL GPTR > GCNT DO
      MAT ESTD.TEMP = ""
      TEMP.GRP.ID = GRP.ID
      TEMP.GRP.QTY = GRP.QTY
      TEMP.GRP.FCTR = GRP.FCTR
      TEMP.TYPE = ESTG.TYPE<1,GPTR>
      TEMP.CCTR = ESTG.CCTR<1,GPTR>
      BEGIN CASE
         CASE TEMP.CCTR = "SAD" OR TEMP.CCTR = "STT"
            TEMP.CCTR = EST.STITCHER.CCTR
            TEMP.GRP.CCTR = "STT"
         CASE TEMP.CCTR = "BND"
            TEMP.CCTR = EST.BINDER.CCTR
            TEMP.GRP.CCTR = "BND"
         CASE TEMP.CCTR = "GTR"
            TEMP.CCTR = EST.GATHERER.CCTR
            TEMP.GRP.CCTR = "GTR"
         CASE TEMP.CCTR = "TRM"
            TEMP.CCTR = EST.TRIMMER.CCTR
            TEMP.GRP.CCTR = "TRM"
         CASE TEMP.CCTR = "CSM"
            TEMP.CCTR = EST.CASEMAKER.CCTR
            TEMP.GRP.CCTR = "CSM"
         CASE TEMP.CCTR = "CSS"
            TEMP.CCTR = EST.CASESTAMP.CCTR
            TEMP.GRP.CCTR = "CSS"
         CASE TEMP.CCTR = "CSI"
            TEMP.CCTR = EST.CASEIN.CCTR
            TEMP.GRP.CCTR = "CSI"
         CASE TEMP.CCTR = "PRS"
            TEMP.CCTR = EST.PROD.PRESS.ID<1,COMP>
            TEMP.GRP.CCTR = "PRS"
      END CASE
      BEGIN CASE
         CASE TEMP.CCTR = "CUT"
         CASE TEMP.CCTR = "FLD"
         CASE 1
            MATREAD CCTR.REC FROM COST.CNTR, CONO:TEMP.CCTR ELSE GOTO 390
            TEMP.CCTR.TYPE = CCTR.TYPE
      END CASE

      BEGIN CASE
         CASE TEMP.TYPE[1,1] = "M"
            TEMP.GRP.QCALC = ESTG.OPER.QCALC<1,GPTR>
            TEMP.GRP.QPARAM = ESTG.OPER.QPARAM<1,GPTR>
            TEMP.GRP.QOR = ESTG.OPER.QOR<1,GPTR>
            TEMP.GRP.FCALC = ESTG.OPER.FCALC<1,GPTR>
            TEMP.GRP.FPARAM = ESTG.OPER.FPARAM<1,GPTR>
            TEMP.GRP.FOR = ESTG.OPER.FOR<1,GPTR>
            BEGIN CASE
               CASE TEMP.TYPE = "MS"
                  CALL EST.INSERT.STK (CONO, EQTY, DPTR, COMP, REF.NO)
                  GOTO 390
               CASE TEMP.TYPE = "MI"
                  CALL EST.INSERT.INK (CONO, EQTY, DPTR, COMP, REF.NO)
                  GOTO 390
               CASE TEMP.TYPE = "MC"
                  CALL EST.INSERT.CASE (CONO, EQTY, DPTR, COMP, REF.NO)
                  GOTO 390
               CASE 1
                  TEMP.OPV = ESTG.OPER<1,GPTR>
                  MATREAD ESTM.REC FROM ESTIMATE.MATL, CONO:TEMP.TYPE[2,1] ELSE GOTO 390
                  LOCATE TEMP.OPV IN ESTM.PROD<1>,1 SETTING MT.PTR ELSE GOTO 390
            END CASE
            TEMP.STD = ESTM.COST<1,MT.PTR> / 100
            TEMP.STD.TYPE = "$/":ESTM.UM<1,MT.PTR>
            TEMP.UM = ESTM.COST.UNIT<1,MT.PTR>
            TEMP.IND.1 = ESTM.FOH.PCT<1,MT.PTR>
            TEMP.MARKUP = ESTM.MARKUP<1,MT.PTR>
            TEMP.DESC = ESTM.FULL.DESC<1,MT.PTR>
            IF TEMP.GRP.QCALC = "" THEN
               TEMP.GRP.QCALC = ESTM.QCALC<1,MT.PTR>
               TEMP.GRP.QPARAM = ESTM.QPARAM<1,MT.PTR>
               TEMP.GRP.QOR = ESTM.QOR<1,MT.PTR>
            END
            IF TEMP.GRP.FCALC = "" THEN
               TEMP.GRP.FCALC = ESTM.FCALC<1,MT.PTR>
               TEMP.GRP.FPARAM = ESTM.FPARAM<1,MT.PTR>
               TEMP.GRP.FOR = ESTM.FOR<1,MT.PTR>
            END
         CASE TEMP.TYPE[1,1] = "P"
            TEMP.OPV = ESTG.OPER<1,GPTR>
            MATREAD VEND.REC FROM VEND,CONO:TEMP.OPV ELSE GOTO 390
            TEMP.FCTR = 1000
            BEGIN CASE
               CASE TEMP.TYPE = "PM"
                  TEMP.STD.TYPE = "$/M"
                  TEMP.UM = 1000
               CASE TEMP.TYPE = "PC"
                  TEMP.STD.TYPE = "$/C"
                  TEMP.UM = 100
               CASE TEMP.TYPE = "PT"
                  TEMP.STD.TYPE = "$/TTL"
                  TEMP.UM = 1
               CASE 1
                  TEMP.STD.TYPE = "$/EA"
                  TEMP.UM = 1
            END CASE
            TEMP.DESC = VEND.DESC
            TEMP.CODE = ESTG.CAT.SP.CODE<1,GPTR>
            MATREAD CAOS.REC FROM CATEGORY.OSP,CONO:TEMP.CODE ELSE GOTO 390
            TEMP.IND.1 = CAOS.FOH.PCT
            TEMP.MARKUP = CAOS.MARKUP
*T26564  TEMP.DESC = CAOS.DESC
            TEMP.DESC = ESTG.OPER.DESC<1,GPTR>
            TEMP.STD = ESTG.CAT.SP.COST<1,GPTR> / 100
            TEMP.GRP.QCALC = ESTG.OPER.QCALC<1,GPTR>
            TEMP.GRP.QPARAM = ESTG.OPER.QPARAM<1,GPTR>
            TEMP.GRP.QOR = ESTG.OPER.QOR<1,GPTR>
            TEMP.GRP.FCALC = ESTG.OPER.FCALC<1,GPTR>
            TEMP.GRP.FPARAM = ESTG.OPER.FPARAM<1,GPTR>
            TEMP.GRP.FOR = ESTG.OPER.FOR<1,GPTR>
         CASE TEMP.TYPE = "S"
            TEMP.OPV = ESTG.OPER<1,GPTR>
            LOCATE TEMP.OPV IN CCTR.OPER<1>,1 SETTING OP.PTR ELSE GOTO 390
            TEMP.OPV.TYPE = CCTR.OPER.TYPE<1,OP.PTR>
            IF CCTR.OPER.STD.IMP<1,OP.PTR>+0=0 THEN TEMP.OPV.TYPE="F"
            TEMP.HRS = ""
            TEMP.STD = ESTG.CAT.SP.COST<1,GPTR> / 100
            TEMP.STD.TYPE = '$/LB'
            TEMP.IND.1 = CCTR.FOH.TYPE<1,1>:CCTR.FOH.PCT<1,1>
            TEMP.IND.2 = CCTR.FOH.TYPE<1,2>:CCTR.FOH.PCT<1,2>
            TEMP.IND.3 = CCTR.FOH.TYPE<1,3>:CCTR.FOH.PCT<1,3>
            TEMP.IND.4 = CCTR.FOH.TYPE<1,4>:CCTR.FOH.PCT<1,4>
            TEMP.CODE = ESTG.CAT.SP.CODE<1,GPTR>
            MATREAD SHIP.VIA.REC FROM SHIP.VIA,CONO:TEMP.CODE ELSE GOTO 390
            TEMP.DESC = SHPV.DESC
            TEMP.MARKUP = CCTR.OPER.MARKUP<1,OP.PTR>
            TEMP.DESC = ESTG.OPER.DESC<1,GPTR>
            TEMP.GRP.QCALC = ESTG.OPER.QCALC<1,GPTR>
            TEMP.GRP.QPARAM = ESTG.OPER.QPARAM<1,GPTR>
            TEMP.GRP.QOR = ESTG.OPER.QOR<1,GPTR>
            TEMP.GRP.FCALC = ESTG.OPER.FCALC<1,GPTR>
            TEMP.GRP.FPARAM = ESTG.OPER.FPARAM<1,GPTR>
            TEMP.GRP.FOR = ESTG.OPER.FOR<1,GPTR>
         CASE TEMP.TYPE = "L"
	    BEGIN CASE
               CASE TEMP.CCTR = "CUT"
                  MAT ESTD.TEMP2 = ""
                  TDP = 0
                  GPTR = GPTR - 1
                  LOOP
                  WHILE ESTG.CCTR<1,GPTR+1> = "CUT" DO
                     TDP = TDP + 1
                     GPTR = GPTR + 1
                     TEMP2.GRP.ID<1,TDP> = GRP.ID
                     TEMP2.GRP.QTY<1,TDP> = GRP.QTY
                     TEMP2.GRP.FCTR<1,TDP> = GRP.FCTR
                     TEMP2.TYPE<1,TDP> = ESTG.TYPE<1,GPTR>
                     TEMP2.CCTR<1,TDP> = ESTG.CCTR<1,GPTR>
                     TEMP2.OPV<1,TDP> = ESTG.OPER<1,GPTR>
                     TEMP2.GRP.QCALC<1,TDP> = ESTG.OPER.QCALC<1,GPTR>
                     TEMP2.GRP.QPARAM<1,TDP> = ESTG.OPER.QPARAM<1,GPTR>
                     TEMP2.GRP.QOR<1,TDP> = ESTG.OPER.QOR<1,GPTR>
                     TEMP2.GRP.FCALC<1,TDP> = ESTG.OPER.FCALC<1,GPTR>
                     TEMP2.GRP.FPARAM<1,TDP> = ESTG.OPER.FPARAM<1,GPTR>
                     TEMP2.GRP.FOR<1,TDP> = ESTG.OPER.FOR<1,GPTR>
                  REPEAT
                  CALL EST.INSERT.CUT (CONO, EQTY, DPTR, COMP, REF.NO, MAT ESTD.TEMP2)
                  GOTO 390
               CASE TEMP.CCTR = "FLD"
                  MAT ESTD.TEMP2 = ""
                  TDP = 0
                  GPTR = GPTR - 1
                  LOOP
                  WHILE ESTG.CCTR<1,GPTR+1> = "FLD" DO
                     TDP = TDP + 1
                     GPTR = GPTR + 1
                     TEMP2.GRP.ID<1,TDP> = GRP.ID
                     TEMP2.GRP.QTY<1,TDP> = GRP.QTY
                     TEMP2.GRP.FCTR<1,TDP> = GRP.FCTR
                     TEMP2.TYPE<1,TDP> = ESTG.TYPE<1,GPTR>
                     TEMP2.CCTR<1,TDP> = ESTG.CCTR<1,GPTR>
                     TEMP2.OPV<1,TDP> = ESTG.OPER<1,GPTR>
                     TEMP2.GRP.QCALC<1,TDP> = ESTG.OPER.QCALC<1,GPTR>
                     TEMP2.GRP.QPARAM<1,TDP> = ESTG.OPER.QPARAM<1,GPTR>
                     TEMP2.GRP.QOR<1,TDP> = ESTG.OPER.QOR<1,GPTR>
                     TEMP2.GRP.FCALC<1,TDP> = ESTG.OPER.FCALC<1,GPTR>
                     TEMP2.GRP.FPARAM<1,TDP> = ESTG.OPER.FPARAM<1,GPTR>
                     TEMP2.GRP.FOR<1,TDP> = ESTG.OPER.FOR<1,GPTR>
                  REPEAT
                  CALL EST.INSERT.FLD (CONO, EQTY, DPTR, COMP, REF.NO, MAT ESTD.TEMP2)
                  GOTO 390
               CASE 1
                  TEMP.OPV = ESTG.OPER<1,GPTR>
                  LOCATE TEMP.OPV IN CCTR.OPER<1>,1 SETTING OP.PTR ELSE GOTO 390
                  TEMP.OPV.TYPE = CCTR.OPER.TYPE<1,OP.PTR>
                  IF CCTR.OPER.STD.IMP<1,OP.PTR>+0=0 THEN TEMP.OPV.TYPE="F"
                  IF TEMP.OPV.TYPE = "F" THEN
                     TEMP.STD = CCTR.OPER.STD.HRS<1,OP.PTR> / 100
                     TEMP.STD.TYPE = "HR/OP"
                  END ELSE
                     TEMP.STD = CCTR.OPER.STD.IMP<1,OP.PTR>
                     TEMP.STD.TYPE = "OP/HR"
                  END

                  TEMP.HRS = ""
                  TEMP.RATE = CCTR.OPER.HR.RATE<1,OP.PTR>
                  TEMP.IND.1 = CCTR.FOH.TYPE<1,1>:CCTR.FOH.PCT<1,1>
                  TEMP.IND.2 = CCTR.FOH.TYPE<1,2>:CCTR.FOH.PCT<1,2>
                  TEMP.IND.3 = CCTR.FOH.TYPE<1,3>:CCTR.FOH.PCT<1,3>
                  TEMP.IND.4 = CCTR.FOH.TYPE<1,4>:CCTR.FOH.PCT<1,4>
                  TEMP.MARKUP = CCTR.OPER.MARKUP<1,OP.PTR>
                  TEMP.DESC = ESTG.OPER.DESC<1,GPTR>
                  TEMP.GRP.QCALC = ESTG.OPER.QCALC<1,GPTR>
                  TEMP.GRP.QPARAM = ESTG.OPER.QPARAM<1,GPTR>
                  TEMP.GRP.QOR = ESTG.OPER.QOR<1,GPTR>
                  TEMP.GRP.FCALC = ESTG.OPER.FCALC<1,GPTR>
                  TEMP.GRP.FPARAM = ESTG.OPER.FPARAM<1,GPTR>
                  TEMP.GRP.FOR = ESTG.OPER.FOR<1,GPTR>

            END CASE
         CASE TEMP.TYPE = "O"
            TEMP.OPV = ESTG.OPER<1,GPTR>
            LOCATE TEMP.OPV IN CCTR.OPER<1>,1 SETTING OP.PTR ELSE GOTO 390
            TEMP.OPV.TYPE = CCTR.OPER.TYPE<1,OP.PTR>
            IF CCTR.OPER.STD.IMP<1,OP.PTR>+0=0 THEN TEMP.OPV.TYPE="F"
            TEMP.STD=CCTR.OPER.HR.RATE<1,OP.PTR>/100
            TEMP.STD.TYPE="$/EA"
            TEMP.HRS = ""
            TEMP.RATE = CCTR.OPER.HR.RATE<1,OP.PTR>
            TEMP.IND.1 = CCTR.FOH.TYPE<1,1>:CCTR.FOH.PCT<1,1>
            TEMP.IND.2 = CCTR.FOH.TYPE<1,2>:CCTR.FOH.PCT<1,2>
            TEMP.IND.3 = CCTR.FOH.TYPE<1,3>:CCTR.FOH.PCT<1,3>
            TEMP.IND.4 = CCTR.FOH.TYPE<1,4>:CCTR.FOH.PCT<1,4>
            TEMP.MARKUP = CCTR.OPER.MARKUP<1,OP.PTR>
            TEMP.DESC = ESTG.OPER.DESC<1,GPTR>
            TEMP.GRP.QCALC = ESTG.OPER.QCALC<1,GPTR>
            TEMP.GRP.QPARAM = ESTG.OPER.QPARAM<1,GPTR>
            TEMP.GRP.QOR = ESTG.OPER.QOR<1,GPTR>
            TEMP.GRP.FCALC = ESTG.OPER.FCALC<1,GPTR>
            TEMP.GRP.FPARAM = ESTG.OPER.FPARAM<1,GPTR>
            TEMP.GRP.FOR = ESTG.OPER.FOR<1,GPTR>
      END CASE
      BEGIN CASE
         CASE TEMP.GRP.QCALC = ""
            TEMP.QTY = ""
         CASE TEMP.GRP.QCALC = "C"
            TEMP.QTY = TEMP.GRP.QPARAM
         CASE TEMP.GRP.QCALC = "M"
            TEMP.QTY = GRP.QTY * TEMP.GRP.QPARAM
         CASE TEMP.GRP.QCALC = "F"
            TEMP.FPTR = REF.NO+1
            READV T.OPV.DESC FROM OPERATION, CONO:TEMP.OPV,1 ELSE T.OPV.DESC=''
            *IF TEMP.GRP.QPARAM = '030' THEN
               *P_X  = 20 ; P_Y = 22 ; P_VALUE = "Operation ":T.OPV.DESC'L#30' ; P_OPT = ""
               *CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
            *END
            SUB.NAME = "EST.FORMULA.Q":TEMP.GRP.QPARAM
            CALL @SUB.NAME (CONO, "", EQTY, DPTR, COMP)
            *P_X  = 20 ; P_Y = 22 ; P_VALUE = SPACE(43) ; P_OPT = ""
            *CALL VSI_SI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
            IF TEMP.QTY = "" THEN
               TEMP.GRP.QOR = ""
            END
      END CASE
      BEGIN CASE
         CASE TEMP.GRP.FCALC = ""
            TEMP.FCTR = 1000
         CASE TEMP.GRP.FCALC = "C"
            TEMP.FCTR = INT(TEMP.GRP.FPARAM*1000+0.5)
         CASE TEMP.GRP.FCALC = "M"
            TEMP.FCTR = INT(GRP.FCTR*TEMP.GRP.FPARAM+0.5)
         CASE TEMP.GRP.FCALC = "F"
            TEMP.FPTR = REF.NO+1
            SUB.NAME = "EST.FORMULA.F":TEMP.GRP.FPARAM
            CALL @SUB.NAME (CONO, "", EQTY, DPTR, COMP)
            IF TEMP.QTY = "" THEN TEMP.GRP.FOR = ""
         CASE TEMP.GRP.FCALC = "T"
            TBL.ID = TEMP.GRP.FPARAM
            CALL EST.TABLE.FCTR (CONO, TBL.ID, GRP.FCTR)
            IF TEMP.FCTR+0 = 0 THEN TEMP.FCTR = 1000
      END CASE
      CALL ESTCEM_EVAL_COST(CONO,DPTR,ERRMSG)
      IF ERRMSG # "" AND ERRMSG # 0 THEN GOTO 93000

      REF.NO = REF.NO + 1

      FOR A = ESTD.FIRST.MV TO ESTD.LAST.MV
         ESTD.REC(A) = INSERT(ESTD.REC(A),1,REF.NO,0,ESTD.TEMP(A))
      NEXT A
      ESTD.QTY<1,REF.NO> = TEMP.QTY * 100
      ESTD.STD<1,REF.NO> = TEMP.STD * 100
      ESTD.GRP.QTY<1,REF.NO> = TEMP.GRP.QTY * 100
390 REPEAT

LINE.CNT=DCOUNT(ESTD.TYPE,VM)
OPEN "","VOC" TO VOC ELSE ERRMSG = "NO VOC FOUND" ;GOTO 93000
* BELOW CODING IS OF EST.DEPT.GROUP SUBROUTINE


   UDTDIR = "UDTHOME"
   CALL SYSVARS.SUB (UDTDIR)

*T27684 ^
   UDTDIR = UDTDIR<1>:"/sys/CTLG/e/"
LOOP
      REF.NO = REF.NO + 1
   WHILE ESTD.GRP.ID<1,REF.NO> = GRP.ID DO
      MAT ESTD.TEMP = ""
      FOR A = ESTD.FIRST.MV TO ESTD.LAST.MV
         ESTD.TEMP(A) = ESTD.REC(A)<1,REF.NO>
      NEXT A
      TEMP.QTY = TEMP.QTY / 100
      IF TEMP.QTY = INT(TEMP.QTY) THEN TEMP.QTY = INT(TEMP.QTY)
      TEMP.STD = TEMP.STD / 100
      IF TEMP.STD = INT(TEMP.STD) THEN TEMP.STD = INT(TEMP.STD)
      TEMP.GRP.QTY = TEMP.GRP.QTY / 100
      IF TEMP.GRP.QTY = INT(TEMP.GRP.QTY) THEN TEMP.GRP.QTY = INT(TEMP.GRP.QTY)
      *GOSUB 50000
      GOSUB 100099
   REPEAT   	
	ESTDEPTINFO = ESTD.TYPE : "^" : ESTD.CCTR : "^" : ESTD.OPV : "^" : ESTD.CODE : "^" : ESTD.QTY : "^" :	ESTD.FCTR : "^" : ESTD.STD : "^" : ESTD.STD.TYPE : "^" : ESTD.TSALE : "^" :	ESTD.DESC
	ESTDEPTINFO = ESTDEPTINFO : "^" : ESTD.GRP.QTY : "^" : ESTD.GRP.FCTR : "^" : ESTD.GRP.QCALC : "^" : ESTD.GRP.QPARAM : "^" : ESTD.GRP.QOR : "^" : ESTD.GRP.FCALC : "^" : ESTD.GRP.FPARAM : "^" : ESTD.GRP.FOR : "^" : ESTD.GRP.ID

	STATUS = RBO.setProperty('', 'ESTDEPTINFO', ESTDEPTINFO)
	STATUS = RBO.setProperty('', 'DREFCREF', PROMPT_ITEMS)
RETURN
*
*---- GET MULTI-LINE DATA
*
100099*
*
*---- GET TRANSACTION CODE
*
1400*
   BEGIN CASE
      CASE TEMP.TYPE[1,1] = "G"
      CASE TEMP.TYPE[1,1] = "L"
      CASE TEMP.TYPE[1,1] = "M"
      CASE TEMP.TYPE[1,1] = "I"
      CASE TEMP.TYPE[1,1] = "P"
1430*
**ADDED BY RK v
	  PROMPT_ITEMS := "Quote":REF.NO:"^" 
**ADDED BY RK ^	
*         S$DATA(11)<S$SCR,REF.NO>=TEMP.OPV
*         S$VAL=REF.NO
*         SCREEN FIELD;EST.DEPT.MAINT;11
*         SCREEN INPUT;EST.DEPT.MAINT;11;RETURN
 *        IF S$VALUE="???" THEN
*            FLD=11;FREF=REF.NO;XTYPE="VEND";XFILE=VEND;XFLD=1;GOSUB 49000
 *           IF XCODE="" THEN GOTO 1430
 *        END
 *        IF S$VALUE="" THEN
  *          MAT VEND.REC=""
  *       END ELSE
  *          MATREAD VEND.REC FROM VEND,CONO:S$VALUE ELSE
  *             ERRMSG="Invalid Vendor ID. Try again! "
  *             GOSUB 90000
  *             GOTO 1430
  *          END
  *       END
   *      TEMP.OPV=S$VALUE
1440*
   *      PREV.CODE = TEMP.CODE
    *     S$VAL = REF.NO
    *     SCREEN FIELD;EST.DEPT.MAINT;12
    *     SCREEN INPUT;EST.DEPT.MAINT;12;RETURN
    *     MATREAD CAOS.REC FROM CATEGORY.OSP,CONO:S$VALUE ELSE
    *        ERRMSG = "Invalid O/P category code. Try again! "
    *        GOSUB 90000
    *        GOTO 1440
   *      END
    *     TEMP.CODE = S$VALUE
    *     TEMP.IND.1 = CAOS.FOH.PCT
    *     TEMP.MARKUP = CAOS.MARKUP
    *     IF TEMP.CODE # PREV.CODE THEN TEMP.DESC = CAOS.DESC
      CASE TEMP.TYPE[1,1] = "S"
**ADDED BY RK v
	  PROMPT_ITEMS := "Quote":REF.NO:"^" 
**ADDED BY RK ^

*1450*
*         S$VAL = REF.NO
*         SCREEN FIELD;EST.DEPT.MAINT;12
*         SCREEN INPUT;EST.DEPT.MAINT;12;RETURN
*         MATREAD SHIP.VIA.REC FROM SHIP.VIA,CONO:S$VALUE ELSE
*            ERRMSG = "Invalid carrier ID. Try again! "
*            GOSUB 90000
*            GOTO 1450
*         END
*         TEMP.CODE = S$VALUE
*         TEMP.DESC = SHPV.DESC
   END CASE
*
*---- GET DESCRIPTION
*
   BEGIN CASE
      CASE TEMP.TYPE[1,1] = "L"
      CASE TEMP.TYPE[1,1] = "I"
      CASE TEMP.TYPE[1,1] = "M"
      CASE 1
  *       S$DATA(19)<S$SCR,REF.NO> = TEMP.DESC
 *        S$VAL = REF.NO
  *       SCREEN FIELD;EST.DEPT.MAINT;19
   *      SCREEN INPUT;EST.DEPT.MAINT;19;RETURN
   *      TEMP.DESC = S$VALUE
   END CASE
*
*---- GET QUANTITY
*
1500*
   BEGIN CASE
      CASE TEMP.GRP.QOR = "N"
      CASE TEMP.GRP.QOR = "X"
*CSF 25880 v
         IF (TEMP.GRP.QPARAM = "799") AND (REF.NO+0 > 1) THEN
            TEMP.QTY = ESTD.QTY<1,REF.NO-1> / 100
            IF TEMP.QTY = INT(TEMP.QTY) THEN TEMP.QTY = INT(TEMP.QTY)
*            S$VAL = REF.NO
*            S$DATA(13)<S$SCR,REF.NO> = TEMP.QTY
 *           SCREEN DISPLAY;EST.DEPT.MAINT;13
         END
*CSF 25880 ^
      CASE 1
* ADDED BY RK v
	  PROMPT_ITEMS := "Quanty":REF.NO:"^"
         GOTO 1600
* ADDED BY RK ^

  *       S$VAL = REF.NO
  *       SCREEN FIELD;EST.DEPT.MAINT;13
*        IF ESTG.HMSG # "" THEN S$HMSG = ESTG.HMSG
   *      SCREEN INPUT;EST.DEPT.MAINT;13;RETURN
*         IF NUM(S$VALUE) THEN
*            TEMP.QTY = S$VALUE
 *        END ELSE
  *          SUB.ID=S$VALUE[2,99]
  *          SUB.NAME="EST.FORMULA.Q":SUB.ID
  *          FORMULA.FOUND = 0
  *          READ DUMMY FROM VOC, SUB.NAME THEN
  *             IF DUMMY<1> = "C" THEN
  *                OSREAD DUMMY FROM DUMMY<2> THEN FORMULA.FOUND = 1
  *             END
  *          END ELSE
  *             OSREAD DUMMY FROM (UDTDIR:SUB.NAME) THEN FORMULA.FOUND = 1
  *          END
  *          IF NOT(FORMULA.FOUND) THEN
  *             ERRMSG="Invalid formula ID. Try again !"
  *             GOSUB 90000
  *             GOTO 1500
  *          END
  *          TEMP.FPTR = REF.NO
   *         CALL @SUB.NAME (CONO,"",EQTY,DPTR,COMP)	

            IF TEMP.QTY = "" THEN GOTO 1500 
            TEMP.GRP.QCALC = "F"
            TEMP.GRP.QPARAM = SUB.ID
            TEMP.GRP.QOR = "X"
     *       S$VAL = REF.NO
    *        S$DATA(13)<S$SCR,REF.NO> = TEMP.QTY
   *         SCREEN DISPLAY;EST.DEPT.MAINT;13
 *        END
   END CASE
*
*---- GET FACTOR
*
1600*
   PREV.FCTR = TEMP.FCTR
   BEGIN CASE
      CASE TEMP.GRP.FOR = "N"
      CASE TEMP.GRP.FOR = "X"
*CSF 25880 v
         IF (TEMP.GRP.FPARAM = "799") AND (REF.NO+0 > 1) THEN
            TEMP.FCTR = ESTD.FCTR<1,TEMP.FPTR-1>
            IF TEMP.FCTR+0 = 0 THEN TEMP.FCTR = 1000
*            S$VAL = REF.NO
 *           S$DATA(14)<S$SCR,REF.NO> = TEMP.FCTR
 *           SCREEN DISPLAY;EST.DEPT.MAINT;14
         END
*CSF 25880 ^
      CASE TEMP.TYPE[1,1] = "L"
         BEGIN CASE
            CASE TEMP.GRP.FCALC="F"
               S$VALUE="F":TEMP.GRP.FPARAM
            CASE TEMP.GRP.FCALC="T"
               S$VALUE="T":TEMP.GRP.FPARAM
            CASE 1
* ADDED BY RK v
		 PROMPT_ITEMS := "Fact":REF.NO:"^"
		 GOTO 1700
* ADDED BY RK ^
  *             S$VAL = REF.NO
   *            S$DATA(14)<S$SCR,REF.NO> = OCONV(S$DATA(14)<S$SCR,REF.NO>,"MD3Z")
    *           SCREEN FIELD;EST.DEPT.MAINT;14
     *          S$TYP = 7
      *         SCREEN INPUT;EST.DEPT.MAINT;14;RETURN
         END CASE
         BEGIN CASE
            CASE NUM(S$VALUE)
               TEMP.FCTR = S$VALUE*1000
*T25099 v
          *     S$DATA(14)<S$SCR,REF.NO> = TEMP.FCTR
*T25099 ^
               GOTO 1700
            CASE S$VALUE[1,1]="F"
               SUB.ID=S$VALUE[2,99]
               SUB.NAME="EST.FORMULA.F":SUB.ID
               FORMULA.FOUND = 0
               READ DUMMY FROM VOC, SUB.NAME THEN
                  IF DUMMY<1> = "C" THEN
                     OSREAD DUMMY FROM DUMMY<2> THEN FORMULA.FOUND = 1
                  END
               END ELSE
                  OSREAD DUMMY FROM (UDTDIR:SUB.NAME) THEN FORMULA.FOUND = 1
               END
               IF NOT(FORMULA.FOUND) THEN
                  ERRMSG="Invalid formula ID. Try again !"
                  GOTO 93000
               END
               TEMP.FPTR = REF.NO
               CALL @SUB.NAME (CONO,"",EQTY,DPTR,COMP)
            CASE S$VALUE[1,1] = "T"
               SUB.ID = S$VALUE[2,99]
               CALL EST.TABLE.FCTR (CONO, SUB.ID, TEMP.GRP.FCTR)
               IF SUB.ID = "NONE" THEN 
                  SUB.ID = "" 
                  GOTO 1600
               END
            CASE 1
               ERRMSG = "Invalid entry. Try again !"
               GOTO 1600
         END CASE
         IF TEMP.FCTR = "" THEN TEMP.FCTR = 0
         TEMP.GRP.FCALC = S$VALUE[1,1]
         TEMP.GRP.FPARAM = SUB.ID
         TEMP.GRP.FOR = "X"
   END CASE
*
*---- GET STANDARD
*
1700*
   BEGIN CASE
      CASE TEMP.GRP.FOR = "N" AND TEMP.TYPE # "MI" 
      CASE TEMP.GRP.FOR = "N" AND TEMP.TYPE = "MI" AND TEMP.STD+0 # 0
      CASE TEMP.GRP.FOR = "X"
      CASE TEMP.FCTR = PREV.FCTR OR TEMP.STD+0 = 0

* ADDED BY RK v
	PROMPT_ITEMS := "Stand":REF.NO:"^"
*ADDED BY RK ^

         *S$VAL = REF.NO
         *SCREEN FIELD;EST.DEPT.MAINT;15
*         SCREEN INPUT;EST.DEPT.MAINT;15;RETURN
         *IF S$VALUE # TEMP.STD THEN
*      C25275  v
         *   BEGIN CASE
          *     CASE TEMP.STD+0 # 0 AND TEMP.TYPE[1,1] = "L" 
           *       TEMP.FCTR = INT(S$VALUE / TEMP.STD * 1000 + 0.5)
          *        S$VAL = REF.NO
          *        S$DATA(14)<S$SCR,REF.NO> = TEMP.FCTR
          *        SCREEN DISPLAY;EST.DEPT.MAINT;14
          *        S$VAL = REF.NO
          *        S$DATA(15)<S$SCR,REF.NO> = TEMP.STD
          *        SCREEN DISPLAY;EST.DEPT.MAINT;15
*       CASE TEMP.STD+0 = 0 AND TEMP.TYPE[2,1] = "I" 
            *   CASE TEMP.TYPE[2,1] = "I"
             *     INKCNT = DCOUNT(EST.PROD.INK.ID<1,COMP,TEMP.MPTR>,"!")
              *    FOR MM = 1 TO INKCNT
               *      IF FIELD(EST.PROD.INK.ID<1,COMP,TEMP.MPTR>,"!",MM) = TEMP.OPV THEN
				*MACROREPVAL()
                      *  MACRO REPVAL;EST.PROD.INK.UCOST<1,COMP,TEMP.MPTR>;"!";MM;S$VALUE
              *       END
               *   NEXT MM
               *   TEMP.STD = S$VALUE
               *CASE 1
               *   TEMP.STD = S$VALUE
            *END CASE
        * END
   END CASE
   IF TEMP.TYPE[1,1] = "P" THEN
      CALL EST.OSP.UPD (CONO,"A",DPTR,COMP,EQTY,REF.NO)
   END
*
*---- CALCULATE HOURS, COST AND SALE AMOUNTS
*
1800*
   IF EST.PDEF.TYPE # "RL" THEN
      CALL ESTCEM_EVAL_COST(CONO,DPTR,ERRMSG)
      IF ERRMSG # "" AND ERRMSG # 0 THEN GOTO 93000
  *
 *     S$VAL = REF.NO
*      S$DATA(18)<S$SCR,REF.NO> = TEMP.TSALE
   END ELSE
      CALL EST.RES.CALC.COST (CONO,EST.QTY,DPTR)
     * S$VAL = REF.NO
     * S$DATA(18)<S$SCR,REF.NO> = TEMP.SALE
   END
*T21526 ^
  * SCREEN DISPLAY;EST.DEPT.MAINT;18
*
*---- SAVE ALL VALUES
*
1900*
   BEGIN CASE
      CASE TEMP.TYPE[1,1] = "M"
         GOSUB 30000
      CASE 1
         GOSUB 30000
   END CASE
   RETURN
*
*---- STORE OPERATION RELATED DATA
*
30000*
   FOR A = ESTD.FIRST.MV TO ESTD.LAST.MV
      ESTD.REC(A)<1,REF.NO> = ESTD.TEMP(A)
   NEXT A

   ESTD.QTY<1,REF.NO> = TEMP.QTY * 100
   ESTD.STD<1,REF.NO> = TEMP.STD * 100
   ESTD.GRP.QTY<1,REF.NO> = TEMP.GRP.QTY * 100
RETURN
	
* ABOVE CODING IS OF EST.DEPT.GROUP SUBROUTINE
93000*
	IF ERRMSG # "" THEN
		STATUS = RBO.setProperty('', 'ServerStatus',1)
	      	STATUS = RBO.setProperty('', 'ServerMessage', ERRMSG)	   
	END

* End of method code
RETURN

