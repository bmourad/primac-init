SUBROUTINE FNGDMRES_PREWRITE
********************************************************************************
*   Program name :- FNGDMRES_PREWRITE
*   Created:- 11/18/2002
*   Authoe:- Edvard Pitka
*------------------------------------------------------------------------------*
*
*
* In Properties:
* --------------
*  
*
* Out Properties:
* ---------------
*  
********************************************************************************
$INCLUDE WWINSERT RBO.H
$INCLUDE ICS.CPYLIB INVENTORY
$INCLUDE ICS.CPYLIB INV.FNGD
$INCLUDE ICS.CPYLIB INV.HIST
$INCLUDE CPYLIB CHAR

ERRMSG=''
IF FILEINFO(CONTROL,0)=0 THEN
  OPEN '','CONTROL' TO CONTROL ELSE
   ERRMSG<1,-1>='CONTROL FILE IS MISSING' 
  END
END
IF FILEINFO(INVENTORY,0)=0 THEN
  OPEN '','INVENTORY' TO INVENTORY ELSE
    ERRMSG<1,-1>='INVENTORY FILE IS MISSING'
  END
END
IF FILEINFO(INV.FNGD,0)=0 THEN
  OPEN '','INV.FNGD' TO INV.FNGD ELSE
    ERRMSG<1,-1>='INV.FNGD FILE IS MISSING'
  END
END
IF FILEINFO(INV.HIST,0)=0 THEN
  OPEN '','INV.HIST' TO INV.HIST ELSE
    ERRMSG<1,-1>='INV.HIST FILE IS MISSING'
  END
END
IF ERRMSG THEN GOTO 93000
;* get an ID AND PROD NUMBER
STATUS=RBO.getProperty('','ID',INV.ID)
CONO=INV.ID[1,3]
PDNO=INV.ID[4,99]
;* check required
STATUS=RBO.getProperty('','IOF_BOM',IOF.BOM)
STATUS=RBO.getProperty('','IOF_UPC',IOF.UPC)
STATUS=RBO.getProperty('','IOF_PLATE',IOF.PLATE)
STATUS=RBO.getProperty('','IOF_DIE',IOF.DIE)
STATUS=RBO.getProperty('','IOF_SI_NO',IOF.SI.NO)
STATUS=RBO.getProperty('','ValidOptions',ValidOptions)
LOCATE "B" IN ValidOptions<1> SETTING RQD.B ELSE
  RQD.B=0
END
LOCATE "D" IN ValidOptions<1> SETTING RQD.D ELSE
  RQD.D=0
END
LOCATE "S" IN ValidOptions<1> SETTING RQD.S ELSE
  RQD.S=0
END
LOCATE "P" IN ValidOptions<1> SETTING RQD.P ELSE
  RQD.P=0
END
ERR='Information has not been completed on'
ERRMSG=''
IF IOF.BOM='' AND RQD.B THEN
  ERRMSG<1,-1>=ERR:" Bill of Materials"
END
IF IOF.DIE='' AND RQD.D THEN
  ERRMSG<1,-1>=ERR:" Die"
END
IF IOF.PLATE='' AND IOF.SI.NO='' AND RQD.P THEN
  ERRMSG<1,-1>=ERR:" Plates"
END
IF IOF.UPD='' AND RQD.S THEN
  ERRMSG<1,-1>=ERR:" Specifications"
END

IF ERRMSG#'' THEN GOTO 93000

STATUS=RBO.getProperty('','HoldBaseSku',S.BASE.SKU)
STATUS=RBO.getProperty('','INV_BASE_SKU',INV.BASE.SKU)
IF S.BASE.SKU # "" AND S.BASE.SKU # INV.BASE.SKU THEN 
  S.INV.ID=CONO:S.BASE.SKU                            
  MATREADU INV.REC FROM INVENTORY, S.INV.ID THEN 
    LOCATE PDNO IN INV.SUBS<1>,1 SETTING SLOC THEN      
      INV.SUBS = DELETE(INV.SUBS,1,SLOC,0)              
      MATWRITE INV.REC ON INVENTORY, S.INV.ID   
    END ELSE                                            
      RELEASE INVENTORY, S.INV.ID            
    END                                                 
  END ELSE                                              
    RELEASE INVENTORY, S.INV.ID                 
  END                                                                            
END                                                     
IF INV.BASE.SKU # "" THEN                                                         
  S.INV.ID=CONO:INV.BASE.SKU                             
  MATREADU INV.REC FROM INVENTORY, S.INV.ID THEN   
    LOCATE PDNO IN INV.SUBS<1>,1 SETTING FND ELSE       
      INV.SUBS<1,FND> = PDNO                            
    END                                                 
    MATWRITE INV.REC ON INVENTORY, S.INV.ID                                
  END ELSE                                             
    RELEASE INVENTORY, S.INV.ID                  
    INV.BASE.SKU = ""                                  
  END                                                  
END 
    
STATUS=RBO.getProperty('','INV_SUBS',S.INV.SUBS)                                               
IF S.INV.SUBS # "" THEN 
  STATUS=RBO.getProperty('','INV_CUST',S.CUST)
  STATUS=RBO.getProperty('','INV_LINE',S.LINE)
  STATUS=RBO.getProperty('','INV_SBR',S.SBR)
  STATUS=RBO.getProperty('','INV_BAS_WT',S.BAS.WT)
  STATUS=RBO.getProperty('','INV_COST_WT',S.COST.WT)
  STATUS=RBO.getProperty('','INV_M_WT',S.M.WT)                                                         
  PCNT = DCOUNT(S.INV.SUBS,VM)                         
  FOR P = 1 TO PCNT                                    
    S.INV.ID=CONO:S.INV.SUBS<1,P>                        
    MATREADU INV.REC FROM INVENTORY, S.INV.ID THEN 
      IF INV.BASE.SKU = PDNO THEN                      
        INV.CUST = S.CUST
        INV.LINE = S.LINE            
        INV.SBR = S.SBR
        INV.BAS.WT = S.BAS.WT          
        INV.COST.WT = S.COST.WT
        INV.M.WT = S.M.WT      
        MATWRITE INV.REC ON INVENTORY, S.INV.ID    
      END ELSE                         
        RELEASE INVENTORY, S.INV.ID
      END                              
     END ELSE                           
      RELEASE INVENTORY, S.INV.ID  
    END                                
  NEXT P                                                          
END
;* retrieve database values
STATUS=RBO.getProperty('','INV_DESC',INV.DESC)
STATUS=RBO.getProperty('','INV_M_LINE',INV.M.LINE)
STATUS=RBO.getProperty('','INV_COLOR',INV.COLOR)
STATUS=RBO.getProperty('','INV_PAP_LEN',INV.PAP.LEN)
STATUS=RBO.getProperty('','INV_PAP_WIDTH',INV.PAP.WIDTH)
STATUS=RBO.getProperty('','INV_M_WT',INV.M.WT)
STATUS=RBO.getProperty('','INV_PAP_FINISH',INV.PAP.FINISH)
STATUS=RBO.getProperty('','INV_BRIGHT',INV.BRIGHT)
STATUS=RBO.getProperty('','INV_PPI',INV.PPI)
STATUS=RBO.getProperty('','INV_BAS_WT',INV.BAS.WT)
;* build full description
ERRMSG=''
IN_PARAM=''
OUT_PARAM=''
IN_PARAM<1>=CONO
CALL InvFullDescSub(ERRMSG,IN_PARAM,OUT_PARAM,CONTROL,MAT INV.REC)
IF ERRMSG THEN GOTO 93000
;*
;* update IOF.REC
;*
IF RQD.B = 0 THEN       
   IOF.BOM = ""         
END                     
STATUS=RBO.getProperty('','IOF_ADHESIVE',IOF.ADHESIVE)
STATUS=RBO.getProperty('','IOF_APPLICATION',IOF.APPLICATION)
STATUS=RBO.getProperty('','IOF_BOM',IOF.BOM)
STATUS=RBO.getProperty('','IOF_BW_REDUCE',IOF.BW.REDUCE)
STATUS=RBO.getProperty('','IOF_CNTR_READ_32',IOF.CNTR.READ.32)
STATUS=RBO.getProperty('','IOF_CNTR_READ_8',IOF.CNTR.READ.8)
STATUS=RBO.getProperty('','IOF_CORE_SIZE',INV.CORE.SIZE)
STATUS=RBO.getProperty('','IOF_CROSS_TAB',IOF.CROSS.TAB)
STATUS=RBO.getProperty('','IOF_DIE',IOF.DIE)
STATUS=RBO.getProperty('','IOF_ESTIMATE',IOF.ESTIMATE)
STATUS=RBO.getProperty('','IOF_FAN_FOLD',IOF.FAN.FOLD)
STATUS=RBO.getProperty('','IOF_LABEL_ROLL',IOF.LABEL.ROLL)
STATUS=RBO.getProperty('','IOF_LABEL_SHEET',IOF.LABEL.SHEET)
STATUS=RBO.getProperty('','IOF_LINEAL_TAB',IOF.LINEAL.TAB)
STATUS=RBO.getProperty('','IOF_LINER_A',IOF.LINER.A)
STATUS=RBO.getProperty('','IOF_LINER_L',IOF.LINER.L)
STATUS=RBO.getProperty('','IOF_MAG_FACTOR',IOF.MAG.FACTOR)
STATUS=RBO.getProperty('','IOF_OVER_PCT',IOF.OVER.PCT)
STATUS=RBO.getProperty('','IOF_PERF',IOF.PERF)
STATUS=RBO.getProperty('','IOF_PIN_FEED',IOF.PIN.FEED)
STATUS=RBO.getProperty('','IOF_PLATE',IOF.PLATE)
STATUS=RBO.getProperty('','IOF_PLATE_DESC',IOF.PLATE.DESC)
STATUS=RBO.getProperty('','IOF_POS_NEG',IOF.POS.NEG)
STATUS=RBO.getProperty('','IOF_RUN',IOF.RUN)
STATUS=RBO.getProperty('','IOF_SI_DEPT',IOF.SI.DEPT)
STATUS=RBO.getProperty('','IOF_SI_DESC',IOF.SI.DESC)
STATUS=RBO.getProperty('','IOF_SI_NO',IOF.SI.NO)
STATUS=RBO.getProperty('','IOF_SUPERGARD',IOF.SUPERGARD)
STATUS=RBO.getProperty('','IOF_SYS_CHAR',IOF.SYS.CHAR)
STATUS=RBO.getProperty('','IOF_UNWIND',IOF.UNWIND)
STATUS=RBO.getProperty('','IOF_UPC',IOF.UPC)
STATUS=RBO.getProperty('','IOF_VARNISH',IOF.VARNISH)
STATUS=RBO.getProperty('','IOF_VERSION',IOF.VERSION)

IF RQD.D = 0 THEN       
   IOF.DIE = ""         
END                     
IF RQD.P = 0 THEN       
   IOF.PLATE = ""       
   IOF.PLATE.DESC = ""  
   IOF.SI.DEPT = ""     
   IOF.SI.NO = ""       
   IOF.SI.DESC = ""     
END                     
IF RQD.S = 0 THEN       
   IOF.VARNISH = ""     
   IOF.SUPERGARD = ""   
   IOF.ADHESIVE = ""    
   IOF.RUN = ""         
   IOF.UNWIND = ""      
   IOF.CORE.SIZE = ""   
   IOF.APPLICATION = "" 
   IOF.CNTR.READ.32 = ""
   IOF.CNTR.READ.8 = "" 
   IOF.LABEL.ROLL = "" 
   IOF.LABEL.SHEET = ""
   IOF.PERF = ""       
   IOF.FAN.FOLD = ""   
   IOF.PIN.FEED = ""   
   IOF.OVER.PCT = ""   
   IOF.LINEAL.TAB = "" 
   IOF.CROSS.TAB = ""  
   IOF.LINER.L = ""    
   IOF.LINER.A = ""    
   IOF.UPD = ""        
   IOF.VERSION = ""    
   IOF.SYS.CHAR = ""   
   IOF.POS.NEG = ""    
   IOF.MAG.FACTOR = "" 
   IOF.BW.REDUCE = ""  
END   
STATUS=RBO.setProperty('','IOF_ADHESIVE',IOF.ADHESIVE)
STATUS=RBO.setProperty('','IOF_APPLICATION',IOF.APPLICATION)
STATUS=RBO.setProperty('','IOF_BOM',IOF.BOM)
STATUS=RBO.setProperty('','IOF_BW_REDUCE',IOF.BW.REDUCE)
STATUS=RBO.setProperty('','IOF_CNTR_READ_32',IOF.CNTR.READ.32)
STATUS=RBO.setProperty('','IOF_CNTR_READ_8',IOF.CNTR.READ.8)
STATUS=RBO.setProperty('','IOF_CORE_SIZE',INV.CORE.SIZE)
STATUS=RBO.setProperty('','IOF_CROSS_TAB',IOF.CROSS.TAB)
STATUS=RBO.setProperty('','IOF_DIE',IOF.DIE)
STATUS=RBO.setProperty('','IOF_ESTIMATE',IOF.ESTIMATE)
STATUS=RBO.setProperty('','IOF_FAN_FOLD',IOF.FAN.FOLD)
STATUS=RBO.setProperty('','IOF_LABEL_ROLL',IOF.LABEL.ROLL)
STATUS=RBO.setProperty('','IOF_LABEL_SHEET',IOF.LABEL.SHEET)
STATUS=RBO.setProperty('','IOF_LINEAL_TAB',IOF.LINEAL.TAB)
STATUS=RBO.setProperty('','IOF_LINER_A',IOF.LINER.A)
STATUS=RBO.setProperty('','IOF_LINER_L',IOF.LINER.L)
STATUS=RBO.setProperty('','IOF_MAG_FACTOR',IOF.MAG.FACTOR)
STATUS=RBO.setProperty('','IOF_OVER_PCT',IOF.OVER.PCT)
STATUS=RBO.setProperty('','IOF_PERF',IOF.PERF)
STATUS=RBO.setProperty('','IOF_PIN_FEED',IOF.PIN.FEED)
STATUS=RBO.setProperty('','IOF_PLATE',IOF.PLATE)
STATUS=RBO.setProperty('','IOF_PLATE_DESC',IOF.PLATE.DESC)
STATUS=RBO.setProperty('','IOF_POS_NEG',IOF.POS.NEG)
STATUS=RBO.setProperty('','IOF_RUN',IOF.RUN)
STATUS=RBO.setProperty('','IOF_SI_DEPT',IOF.SI.DEPT)
STATUS=RBO.setProperty('','IOF_SI_DESC',IOF.SI.DESC)
STATUS=RBO.setProperty('','IOF_SI_NO',IOF.SI.NO)
STATUS=RBO.setProperty('','IOF_SUPERGARD',IOF.SUPERGARD)
STATUS=RBO.setProperty('','IOF_SYS_CHAR',IOF.SYS.CHAR)
STATUS=RBO.setProperty('','IOF_UNWIND',IOF.UNWIND)
STATUS=RBO.setProperty('','IOF_UPC',IOF.UPC)
STATUS=RBO.setProperty('','IOF_VARNISH',IOF.VARNISH)
STATUS=RBO.setProperty('','IOF_VERSION',IOF.VERSION)
MATWRITE IOF.REC ON INV.FNGD,INV.ID    
;* update IH.REC            
MATREADU IH.REC FROM INV.HIST,INV.ID THEN              
  RELEASE INV.HIST,INV.ID                           
END ELSE                                                   
  MAT IH.REC = ""                                         
  MATWRITE IH.REC ON INV.HIST,INV.ID                 
END                               
GOTO 99999

*************************************************************************
93000 
STATUS = RBO.setProperty('','ServerStatus',1)        
STATUS = RBO.setProperty('','ServerMessage',ERRMSG)  
99999 
                             
                                                                   
                                                   
 


