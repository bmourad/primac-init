SUBROUTINE GLFRM_WRITE_DATA_GLRP_REC
********************************************************************************
*   Program name :- GLFRM_WRITE_DATA_GLRP_REC
*   Created:- 6/28/2003
*------------------------------------------------------------------------------*
*

* In Properties:
* --------------
*  ALL THE FIELDS ARE INPUT HERE FROM RBO OBJ.
*
* Out Properties:
* ---------------
*  
********************************************************************************
$INCLUDE WWINSERT RBO.H
$INCLUDE GLS.CPYLIB GLS.REPORT
$INCLUDE CPYLIB CHAR
* Insert method code here

OPEN '', 'GLS.REPORT' TO GLS.REPORT ELSE
	ERRMSG = 'GLS.REPORT FILE IS MISSING'
    	GOTO 99999
END

MAT GLRP.REC = ""
STATUS = RBO.getProperty('','ID',ID)
STATUS = RBO.getProperty('','HEAD_LEN',HEAD_LEN)
STATUS = RBO.getProperty('','DESC',DESC)

STATUS = RBO.getProperty('','TITLE',TITLE)

STATUS = RBO.getProperty('','HEAD_COL',HEAD_COL)
STATUS = RBO.getProperty('','HEAD_DESC',HEAD_DESC)

STATUS = RBO.getProperty('','COLUMN',COLUMN)
STATUS = RBO.getProperty('','COL_LEN',COL_LEN)
STATUS = RBO.getProperty('','COL_TYPE',COL_TYPE)
STATUS = RBO.getProperty('','COL_TLN',COL_TLN)
STATUS = RBO.getProperty('','COL_CC1',COL_CC1)
STATUS = RBO.getProperty('','COL_CC2',COL_CC2)
STATUS = RBO.getProperty('','COL_C_Y',COL_C_Y)
STATUS = RBO.getProperty('','COL_CONV',COL_CONV)
STATUS = RBO.getProperty('','COL_PREC',COL_PREC)
STATUS = RBO.getProperty('','COL_DIV',COL_DIV)
STATUS = RBO.getProperty('','COL_DEPT',COL_DEPT)
STATUS = RBO.getProperty('','COL_CCTR',COL_CCTR)
STATUS = RBO.getProperty('','COL_HEAD1',COL_HEAD1)
STATUS = RBO.getProperty('','COL_HEAD2',COL_HEAD2)
STATUS = RBO.getProperty('','COL_MON',COL_MON)
STATUS = RBO.getProperty('','COL_DASH',COL_DASH)

STATUS = RBO.getProperty('','LINE_TYPE',LINE_TYPE)
STATUS = RBO.getProperty('','LINE_LINE',LINE_LINE)
STATUS = RBO.getProperty('','LINE_SKIP',LINE_SKIP)
STATUS = RBO.getProperty('','LINE_DASH',LINE_DASH)
STATUS = RBO.getProperty('','LINE_REV',LINE_REV)
STATUS = RBO.getProperty('','LINE_DIV',LINE_DIV)
STATUS = RBO.getProperty('','LINE_DEPT',LINE_DEPT)
STATUS = RBO.getProperty('','LINE_CCTR',LINE_CCTR)
STATUS = RBO.getProperty('','LINE_DESC',LINE_DESC)
STATUS = RBO.getProperty('','LINE_AMT',LINE_AMT)
STATUS = RBO.getProperty('','COL_CONV',COL_CONV)






STATUS = RBO.getProperty('','ACCT_CODE',ACCT_CODE)
STATUS = RBO.getProperty('','TYPE',TYPE)
STATUS = RBO.getProperty('','BAL_INC',BAL_INC)
STATUS = RBO.getProperty('','CATG_CODE',CATG_CODE)
STATUS = RBO.getProperty('','SUB_CATG',SUB_CATG)
STATUS = RBO.getProperty('','SUB_C',SUB_C)
STATUS = RBO.getProperty('','SUB_P',SUB_P)
STATUS = RBO.getProperty('','SUB_F',SUB_F)
STATUS = RBO.getProperty('','SIGN',SIGN)
STATUS = RBO.getProperty('','LEVEL',LEVEL)

*SET PROPERTIES
CONO = ID[1,3]
GLRP.DESC = DESC
GLRP.GRP.LEN = HEAD_LEN

GLRP.TITLE = TITLE

GLRP.HD.COL = HEAD_COL
GLRP.HD.DESC = HEAD_DESC


GLRP.COLUMN = COLUMN
GLRP.COL.LEN = COL_LEN
GLRP.COL.TYPE = COL_TYPE
GLRP.COL.CC1 = COL_CC1
GLRP.COL.CC2 = COL_CC2
GLRP.COL.TLN = COL_TLN
GLRP.COL.C.Y = COL_C_Y
GLRP.COL.PREC = COL_PREC
GLRP.COL.CONV = COL_CONV
GLRP.COL.HEAD1 = COL_HEAD1
GLRP.COL.HEAD2 = COL_HEAD2
GLRP.COL.DASH = COL_DASH
GLRP.DIV = COL_DIV
GLRP.DEPT = COL_DEPT
GLRP.CCTR = COL_CCTR
GLRP.COL.MON = COL_MON

*MATREAD GLRP.REC FROM GLS.REPORT, ID ELSE
*	ERRMSG = "CAN'T FIND REPORT WITH ID ":ID[4,99]
*   	GOTO 99999
*END

*MV.LINES = GLRP.BEG.LINE + 1

*LOOP WHILE GLRP.REC(MV.LINES) # '' DO
*	MV.LINES = MV.LINES + 1
*REPEAT

*MV.LINES = MV.LINES - GLRP.BEG.LINE - 1

FOR N = 1 TO DCOUNT(LINE_TYPE,@VM)
	XN = N + GLRP.BEG.LINE
	GLRP.REC(XN)<1,GLRP.LINE.TYPE> = LINE_TYPE<1,N>
	GLRP.REC(XN)<1,GLRP.LINE.LINE> = LINE_LINE<1,N>
	GLRP.REC(XN)<1,GLRP.LINE.SKIP> = LINE_SKIP<1,N>
	GLRP.REC(XN)<1,GLRP.LINE.DASH> = LINE_DASH<1,N>
	GLRP.REC(XN)<1,GLRP.LINE.REV> = LINE_REV<1,N>
	GLRP.REC(XN)<1,GLRP.LINE.DIV> = LINE_DIV<1,N>
	GLRP.REC(XN)<1,GLRP.LINE.DEPT> = LINE_DEPT<1,N>
	GLRP.REC(XN)<1,GLRP.LINE.CCTR> = LINE_CCTR<1,N>
	GLRP.REC(XN)<1,GLRP.LINE.DESC> = LINE_DESC<1,N>
	GLRP.REC(XN)<1,GLRP.LINE.AMT> =  ICONV(LINE_AMT<1,N>,"MD2")
NEXT N

FOR I = 1 TO DCOUNT(LINE_TYPE,@VM)
	IF LINE_TYPE<1,I> = "R" THEN
		MV.XLN = I + GLRP.BEG.LINE
		SV.LINES = DCOUNT(ACCT_CODE<1,I>,SVM)
		FOR N = 1 TO SV.LINES
			GLRP.REC(MV.XLN)<1,GLRP.ACCT.CODE,N> = LEVEL<1,I,N>
			GLRP.REC(MV.XLN)<1,GLRP.ACCT.TYPE,N> = TYPE<1,I,N>
			GLRP.REC(MV.XLN)<1,GLRP.ACCT.SIGN,N> = SIGN<1,I,N>
			BEGIN CASE
				CASE LEVEL<1,I,N> = 1
					GLRP.REC(MV.XLN)<1,GLRP.LINE.ACCT,N>= CATG_CODE<1,I,N> : SUB_CATG<1,I,N>
				CASE LEVEL<1,I,N> = 2
					GLRP.REC(MV.XLN)<1,GLRP.LINE.ACCT,N> = CATG_CODE<1,I,N>
				CASE LEVEL<1,I,N> = 3	
					GLRP.REC(MV.XLN)<1,GLRP.LINE.ACCT,N> = BAL_INC<1,I,N>
				CASE 1
					GLRP.REC(MV.XLN)<1,GLRP.LINE.ACCT,N> = ACCT_CODE<1,I,N>
		      END CASE	
		NEXT N
	END
NEXT I

MATWRITE GLRP.REC ON GLS.REPORT, ID

* End of method code
99999
  IF (TRIM(ERRMSG) # "") THEN
       STATUS = RBO.setProperty('','ServerStatus','E')
       STATUS = RBO.setProperty('','ServerMessage',ERRMSG)
  END ELSE
       STATUS = RBO.setProperty('','ServerStatus','')
       STATUS = RBO.setProperty('','ServerMessage','')
  END 
RETURN


