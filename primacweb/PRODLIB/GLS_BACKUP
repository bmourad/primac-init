SUBROUTINE GLS_BACKUP
************************************************************************
*
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - GLSBP
* PROGRAM     - GLS.BACKUP
* BY          - MONTY J. BRADFORD , Vercom Software, Inc.
* DATE        - 09/07/90
* DESCRIPTION - SAVES THE CURRENT MONTH G/L FILES TO GLS-BACKUP.
*
*     18573 5/95 LLH 1-52 ACCOUNTING PERIODS
*C24677 gat 1/9/96 FIX GLSBACKUP TO SIZE CORRECTLY
*T21177 diane 03/06/1997 * REV11 UPG Rewrite to use SCRN.EDIT
*T21177 diane 03/17/1997 * REV11 UPG Change to create files via unix
*T21911 diane 05/16/1997 * Set flag for menu processor
*T22737 lanny 04/10/1998 * After 1st unix dir copy subsequent backups do
*                          not add new data to backup files.
*T22737 diane 07/09/1998 * FIX so first backup will cp file.
************************************************************************
$INCLUDE WWINSERT RBO.H
$INCLUDE PMC.CPYLIB MENUS.CONTROL
**
*$INCLUDE CPYLIB>COM1
$INCLUDE PMC.CPYLIB COMPANY
*$INCLUDE PMC.CPYLIB>MENUS.CONTROL
$INCLUDE CPYLIB EDIT.COM
$INCLUDE CPYLIB EDIT.COM.DRIVER
$INCLUDE CPYLIB FILE.VARS
$INCLUDE CPYLIB SYSCOM
$INCLUDE CPYLIB CHAR
**
* Insert method code here
ERRMSG = ''
ERRMSG1=""
OPEN "","COMPANY" TO COMPANY ELSE
      ERRMSG = "CANNOT OPEN COMPANY FILE"
      GOTO 99999
   END
   OPEN "","CONTROL" TO CONTROL ELSE
      ERRMSG = "CANNOT OPEN CONTROL FILE"
      GOTO 99999
   END
   OPEN "","VOC" TO VOC ELSE
      ERRMSG = "CANNOT OPEN VOC FILE"
      GOTO 99999
   END
   OPEN "","SECURITY" TO SECURITY ELSE
      ERRMSG = "CANNOT OPEN SECURITY FILE"
      GOTO 99999
   END
   OPEN "","COA" TO COA ELSE
      ERRMSG = "CANNOT OPEN COA FILE"
      GOTO 99999
   END
   OPEN "","CC.COA.BAL" TO CC.COA.BAL ELSE
      ERRMSG = "CANNOT OPEN CC.COA.BAL FILE"
      GOTO 99999
   END
   OPEN "","GLM" TO GLM ELSE
      ERRMSG = "CANNOT OPEN GLM FILE"
      GOTO 99999
   END
   OPEN "","CO.COA.BAL" TO CO.COA.BAL ELSE
      ERRMSG = "CANNOT OPEN CO.COA.BAL FILE"
      GOTO 99999
   END
   OPEN "","DP.COA.BAL" TO DP.COA.BAL ELSE
      ERRMSG = "CANNOT OPEN DP.COA.BAL FILE"
      GOTO 99999
   END
   OPEN "","DV.COA.BAL" TO DV.COA.BAL ELSE
      ERRMSG = "CANNOT OPEN DV.COA.BAL FILE"
      GOTO 99999
   END


VAL = RBO.getProperty('','PERIOD',PERIOD)
VAL = RBO.getProperty('','PMCProperty',PMCProperty)
* PORT.NO - IS USER ID---------------------------

   PORT.NO = 'TTY'
   CALL SYSVARS.SUB(PORT.NO)
PORT.NO = PORT.NO:PMCProperty<1,3>
*PORT.NO = PMCProperty<1,3>
CONO = PMCProperty<1,4>

GOSUB 1000
READU PROCESS.CONTROL FROM CONTROL,CONO:'GLS.BACKUP.RESTORE' THEN
	PROCESS.CONTROL = ''
      	WRITE PROCESS.CONTROL ON CONTROL, CONO:'GLS.BACKUP.RESTORE'
END ELSE
	RELEASE CONTROL, CONO:'GLS.BACKUP.RESTORE'
END
GOTO 99999
******************************END OF BACKUP PROCESS****************************

*---- CHECK CONTROL RECORD
1000 *
	READU TAPE.CONTROL FROM CONTROL,CONO:PERIOD[1,4]:'GLS.TAPE' ELSE
		RELEASE CONTROL, CONO:PERIOD[1,4]:"GLS.TAPE"
	      	ERRMSG='GLS.TAPE CONTROL RECORD NOT AVAILIABLE'
      		GOTO 99999
	END
	READU PROCESS.CONTROL FROM CONTROL,CONO:'GLS.BACKUP.RESTORE' THEN
		IF PROCESS.CONTROL = 'R' THEN
       		ERRMSG = 'GENERAL LEDGER RESTORE IN PROCESS'
	         	GOTO 99999
      		END
	END
	PROCESS.CONTROL = 'B'
	WRITE PROCESS.CONTROL ON CONTROL, CONO:'GLS.BACKUP.RESTORE'
*
*---- GET MODULOS FOR BACKUP FILES
*
	ID = "COA"
	GOSUB 4000
	COA.MOD = MODX
	ID = "CO.COA.BAL"
	GOSUB 4000
	CO.COA.MOD = MODX
	ID = "DV.COA.BAL"
	GOSUB 4000
	DV.COA.MOD = MODX
	ID = "DP.COA.BAL"
	GOSUB 4000
	DP.COA.MOD = MODX
	ID = "CC.COA.BAL"
	GOSUB 4000
	CC.COA.MOD = MODX
	ID = "GLM"
	GOSUB 4000
	GLM.MOD = MODX
	*
*---- LOG TO GLS-BACKUP AND CREATE BACKUP FILES
*
	READ LOGIN.REC FROM VOC,'LOGIN' ELSE NULL
*
*---- Get menus control record
*
	MATREAD MENU.REC FROM CONTROL, "MENUS.CONTROL" ELSE
		ERRMSG = "** Cannot Locate CONTROL, MENUS.CONTROL **"
	      	GOTO 99999
	END
	PMC.PATH = PRIMAC.PATH
	STMT =  "SETFILE ":PMC.PATH:"-GLS-BACKUP/VOC GLS-BACKUP-VOC":PORT.NO:" OVERWRITING"
	UDTEXECUTE STMT CAPTURING RESPONSE
	OPEN '',"GLS-BACKUP-VOC":PORT.NO TO VOC.GLS.BACKUP ELSE ERRMSG='GLS-BACKUP-VOC':PORT.NO:' CANNOT BE OPENED'; GOTO 99999
*
*---- CREATE 'COPY' VOC ENTRIES AND POINT COPY FILE DICTIONARYS TO USER-GLS
*
	READ COA.D.ITEM FROM VOC.GLS.BACKUP,'COA':PERIOD ELSE NULL
	COA.D.ITEM="F"
	COA.D.ITEM<2>=PMC.PATH:"-GLS-BACKUP/":'COA':PERIOD
	COA.D.ITEM<3>=PMC.PATH:"-GLS-BACKUP/":'D_COA':PERIOD
	READ CO.COA.D.ITEM FROM VOC.GLS.BACKUP,'CO.COA':PERIOD ELSE NULL
	CO.COA.D.ITEM="F"
	CO.COA.D.ITEM<2>=PMC.PATH:"-GLS-BACKUP/":'CO.COA':PERIOD
	CO.COA.D.ITEM<3>=PMC.PATH:"-GLS-BACKUP/":'D_CO.COA':PERIOD
	READ DV.COA.D.ITEM FROM VOC.GLS.BACKUP,'DV.COA':PERIOD ELSE NULL
	DV.COA.D.ITEM="F"
	DV.COA.D.ITEM<2>=PMC.PATH:"-GLS-BACKUP/":'DV.COA':PERIOD
	DV.COA.D.ITEM<3>=PMC.PATH:"-GLS-BACKUP/":'D_DV.COA':PERIOD
	READ DP.COA.D.ITEM FROM VOC.GLS.BACKUP,'DP.COA':PERIOD ELSE NULL
	DP.COA.D.ITEM="F"
	DP.COA.D.ITEM<2>=PMC.PATH:"-GLS-BACKUP/":'DP.COA':PERIOD
	DP.COA.D.ITEM<3>=PMC.PATH:"-GLS-BACKUP/":'D_DP.COA':PERIOD
	READ CC.COA.D.ITEM FROM VOC.GLS.BACKUP,'CC.COA':PERIOD ELSE NULL
	CC.COA.D.ITEM="F"
	CC.COA.D.ITEM<2>=PMC.PATH:"-GLS-BACKUP/":'CC.COA':PERIOD
	CC.COA.D.ITEM<3>=PMC.PATH:"-GLS-BACKUP/":'D_CC.COA':PERIOD
	READ GLM.D.ITEM FROM VOC.GLS.BACKUP,'GLM':PERIOD ELSE NULL
	GLM.D.ITEM="F"
	GLM.D.ITEM<2>=PMC.PATH:"-GLS-BACKUP/":'GLM':PERIOD
	GLM.D.ITEM<3>=PMC.PATH:"-GLS-BACKUP/":'D_GLM':PERIOD
*
*---- LOG TO USER-GLS AND COPY TO THE BACKUP FILES
*
	* WRITE PERIOD:PORT.NO:"AND" ON CONTROL,"GF105"
	WRITE COA.D.ITEM ON VOC,'COA':PERIOD: PORT.NO
	WRITE CO.COA.D.ITEM ON VOC,'CO.COA':PERIOD: PORT.NO
	WRITE DV.COA.D.ITEM ON VOC,'DV.COA':PERIOD: PORT.NO
	WRITE DP.COA.D.ITEM ON VOC,'DP.COA':PERIOD: PORT.NO
	WRITE CC.COA.D.ITEM ON VOC,'CC.COA':PERIOD: PORT.NO
	WRITE GLM.D.ITEM ON VOC,'GLM':PERIOD: PORT.NO
	WRITE COA.D.ITEM ON VOC,'COA':PERIOD
	WRITE CO.COA.D.ITEM ON VOC,'CO.COA':PERIOD
	WRITE DV.COA.D.ITEM ON VOC,'DV.COA':PERIOD
	WRITE DP.COA.D.ITEM ON VOC,'DP.COA':PERIOD
	WRITE CC.COA.D.ITEM ON VOC,'CC.COA':PERIOD
	WRITE GLM.D.ITEM ON VOC,'GLM':PERIOD
	READ VREC FROM VOC, 'GLS.BACKUP.':PERIOD:'.WORK':PORT.NO THEN
      STMT = 'CLEAR.FILE GLS.BACKUP.':PERIOD:'.WORK':PORT.NO
      UDTEXECUTE STMT CAPTURING RESPONSE
   END ELSE
      STMT =  'CREATE.FILE GLS.BACKUP.':PERIOD:'.WORK':PORT.NO:' 200 DYNAMIC'
      UDTEXECUTE STMT CAPTURING RESPONSE
   END

	*WRITE PERIOD:PORT.NO:"AND" ON CONTROL, "GF100"
   OPEN 'GLS.BACKUP.':PERIOD:'.WORK':PORT.NO TO CFILE ELSE
      ERRMSG="CANNOT OPEN GLS.BACKUP.":PERIOD:'.WORK':PORT.NO
       GOTO 99999
   END

   OPEN 'DICT','GLS.BACKUP.':PERIOD:'.WORK':PORT.NO TO DICT.CFILE ELSE
      ERRMSG="CANNOT OPEN GLS.BACKUP.":PERIOD:'.WORK':PORT.NO
       GOTO 99999
   END
*COPYING FILE COA TO BACKUP FILE COA':PERIOD
	ERRMSG1<1,-1>='COPYING FILE COA TO BACKUP FILE COA':PERIOD
	OPEN 'COA' TO MFILE ELSE NULL
	FILE.NAME='COA'
	TO.FILE.NAME='COA'
	GOSUB 3000
	OPEN 'DICT','COA' TO MFILE ELSE NULL
	GOSUB 3100
*COPYING FILE CO.COA.BAL TO BACKUP FILE CO.COA':PERIOD
	ERRMSG1<1,-1>='COPYING FILE CO.COA.BAL TO BACKUP FILE CO.COA':PERIOD
	OPEN 'CO.COA.BAL' TO MFILE ELSE NULL
	FILE.NAME='CO.COA.BAL'
	TO.FILE.NAME='CO.COA'
	GOSUB 3000
	OPEN 'DICT','CO.COA.BAL' TO MFILE ELSE NULL
	GOSUB 3100
*COPYING FILE DV.COA.BAL TO BACKUP FILE DV.COA':PERIOD
	ERRMSG1<1,-1>='COPYING FILE DV.COA.BAL TO BACKUP FILE DV.COA':PERIOD
	OPEN 'DV.COA.BAL' TO MFILE ELSE NULL
	FILE.NAME='DV.COA.BAL'
	TO.FILE.NAME='DV.COA'
	GOSUB 3000
	OPEN 'DICT','DV.COA.BAL' TO MFILE ELSE NULL
	GOSUB 3100
*COPYING FILE DP.COA.BAL TO BACKUP FILE DP.COA':PERIOD
	ERRMSG1<1,-1>='COPYING FILE DP.COA.BAL TO BACKUP FILE DP.COA':PERIOD
	OPEN 'DP.COA.BAL' TO MFILE ELSE NULL
	FILE.NAME='DP.COA.BAL'
	TO.FILE.NAME='DP.COA'
	GOSUB 3000
	OPEN 'DICT','DP.COA.BAL' TO MFILE ELSE NULL
	GOSUB 3100
*COPYING FILE CC.COA.BAL TO BACKUP FILE CC.COA':PERIOD
	ERRMSG1<1,-1>='COPYING FILE CC.COA.BAL TO BACKUP FILE CC.COA':PERIOD
	OPEN 'CC.COA.BAL' TO MFILE ELSE NULL
	FILE.NAME='CC.COA.BAL'
	TO.FILE.NAME='CC.COA'
	GOSUB 3000
	OPEN 'DICT','CC.COA.BAL' TO MFILE ELSE NULL
	GOSUB 3100
*COPYING FILE GLM TO BACKUP FILE GLM':PERIOD
	ERRMSG1<1,-1>='COPYING FILE GLM TO BACKUP FILE GLM':PERIOD
	OPEN 'GLM' TO MFILE ELSE NULL
	FILE.NAME='GLM'
	TO.FILE.NAME='GLM'
	GOSUB 3000
	OPEN 'DICT','GLM' TO MFILE ELSE NULL
	GOSUB 3100
	DELETE VOC,'COA':PERIOD:PORT.NO
	DELETE VOC,'CO.COA':PERIOD:PORT.NO
	DELETE VOC,'DV.COA':PERIOD:PORT.NO
	DELETE VOC,'DP.COA':PERIOD:PORT.NO
	DELETE VOC,'CC.COA':PERIOD:PORT.NO
	DELETE VOC,'GLM':PERIOD:PORT.NO
	DELETE VOC, "GLS-BACKUP-VOC":PORT.NO
	STMT =  'DELETE.FILE GLS.BACKUP.':PERIOD:'.WORK':PORT.NO
	DATA "Y"
	UDTEXECUTE STMT CAPTURING JUNK
	TAPE.CONTROL<PERIOD[5,2]> = DATE()
	WRITE TAPE.CONTROL ON CONTROL, CONO:PERIOD[1,4]:"GLS.TAPE"
	READU EOM.FLG FROM CONTROL, CONO:"EOM.FLG" ELSE EOM.FLG = ""
	EOM.FLG = "Y"
	WRITE EOM.FLG ON CONTROL, CONO:"EOM.FLG"
RETURN ;***********************************

3000 * COPY FILE LOGIC *
	STMNT = "CLEAR.FILE GLS.BACKUP.":PERIOD:".WORK":PORT.NO
	UDTEXECUTE STMNT CAPTURING RESPONSE
*T22737 v
	STMT = 'COUNT ':TO.FILE.NAME:PERIOD
	UDTEXECUTE STMT CAPTURING JUNK
*T22737 FIX   IF JUNK[1,3] = 'Not' THEN
	IF JUNK[1,3] = 'Not' OR JUNK[1,4] = "stat" THEN
		STMNT = "SELECT ":FILE.NAME:" WITH @ID LIKE ":CONO:"..."
	      	UDTEXECUTE STMNT CAPTURING RESPONSE
3010  		READNEXT ID ELSE GOTO 3020
      		READU REC FROM MFILE, ID ELSE REC=''
      		WRITE REC ON CFILE, ID
      		RELEASE  MFILE, ID
      		GOTO 3010
3020   *
      		STMT = "!cp -r ":PMC.PATH:"/GLS.BACKUP.":PERIOD:".WORK":PORT.NO
      		STMT := " ":PMC.PATH:"-GLS-BACKUP/":TO.FILE.NAME:PERIOD
      		UDTEXECUTE STMT CAPTURING RESPONSE
	END ELSE
		STMT = "SELECT ":FILE.NAME:" WITH @ID LIKE ":CONO:"..."
	      	UDTEXECUTE STMT CAPTURING JUNK
      		DATA 'Y'
	      	STMT = 'COPY FROM ':FILE.NAME:' TO ':TO.FILE.NAME:PERIOD:' OVERWRITING'
      		UDTEXECUTE STMT CAPTURING JUNK
	END
RETURN

3100 * COPY DICT LOGIC *
	STMNT = "CLEAR.FILE DICT GLS.BACKUP.":PERIOD:".WORK":PORT.NO
	UDTEXECUTE STMNT CAPTURING RESPONSE
	STMNT = "SELECT DICT ":FILE.NAME
	UDTEXECUTE STMNT CAPTURING RESPONSE
3110 
	READNEXT ID ELSE GOTO 3120
	READU REC FROM MFILE, ID ELSE REC=''
	WRITE REC ON DICT.CFILE, ID
	RELEASE MFILE, ID
	GOTO 3110
	3120 *
	STMT = "!cp -r ":PMC.PATH:"/D_GLS.BACKUP.":PERIOD:".WORK":PORT.NO
	STMT := " ":PMC.PATH:"-GLS-BACKUP/D_":TO.FILE.NAME:PERIOD
	UDTEXECUTE STMT CAPTURING RESPONSE
RETURN
4000 *
	VERB = "FILE-STAT ":ID
	UDTEXECUTE VERB CAPTURING JUNK
	FROMSIZE = INT(TRIM(FIELD(JUNK<2>,"=",2)))
	TOSIZE	= INT(TRIM(FIELD(JUNK<25>,"=",2)))
	IF TOSIZE = "0" OR TOSIZE = "" THEN
		MODX = FROMSIZE
	END ELSE
		MODX = TOSIZE
	END
RETURN

99999
IF ERRMSG1 # '' THEN
	VAL = RBO.setProperty('','DISPLAY_MSG',ERRMSG1)
END
IF ERRMSG # '' THEN
	VAL = RBO.setProperty('',"ServerStatus",'E')
	VAL = RBO.setProperty('','ServerMessage',ERRMSG)
END ELSE
	VAL = RBO.setProperty('','ServerStatus','')
END
* End of method code
RETURN
