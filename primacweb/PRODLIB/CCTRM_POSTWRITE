SUBROUTINE CCTRM_POSTWRITE
********************************************************************************
*   Program name :- CCTRM_POSTWRITE
*   Created:- 11/11/2002, Abdullah Jibaly
*------------------------------------------------------------------------------*
*
*  Server event triggered after the database has been updated. Note that the - *
*  API function RBO.getDBVals() should be used to retrieve values from the da- *
*  tabase image, as values from the uObject data aware properties may have be- *
*  en amended via the {m:WW:uObject=PreWrite} server event.
*  
*
*
* In Properties:
* --------------
* ID,CCTR_DEPT,CCTR_MASTER,PREV_MASTER
*
* Out Properties:
* ---------------
* NONE
********************************************************************************
$INCLUDE WWINSERT RBO.H
$INCLUDE PMC.CPYLIB COST.CNTR
$INCLUDE PMC.CPYLIB DEPARTMENT
$INCLUDE PMC.CPYLIB COMPANY

* Insert method code here
ERRMSG = ''

* Open files
OPEN 'COST.CNTR' TO COST.CNTR ELSE ERRMSG = 'COST.CNTR'
OPEN 'DEPARTMENT' TO DEPARTMENT ELSE ERRMSG = 'DEPARTMENT'
OPEN 'COMPANY' TO COMPANY ELSE ERRMSG = 'COMPANY'
IF ERRMSG # '' THEN
  ERRMSG = 'Cannot open the ' : ERRMSG : ' file.'
  CALL RBO_ERROR_SUB(ERRMSG); RETURN
END

* Get all properties
CHK.STATUS.PROPERTY = 'ID'
STATUS = RBO.getProperty('','ID',ID); GOSUB CHK.STATUS
CHK.STATUS.PROPERTY = 'CCTR_MASTER'
STATUS = RBO.getProperty('','CCTR_MASTER',CCTR.MASTER); GOSUB CHK.STATUS
CHK.STATUS.PROPERTY = 'CCTR_DEPT'
STATUS = RBO.getProperty('','CCTR_DEPT',CCTR.DEPT); GOSUB CHK.STATUS
CHK.STATUS.PROPERTY = 'PREV_MASTER'
STATUS = RBO.getProperty('','PREV_MASTER',PREV.MASTER); GOSUB CHK.STATUS
IF CHK.STATUS.ERROR THEN
  ERRMSG = CHK.STATUS.ERROR
  CALL RBO_ERROR_SUB(ERRMSG); RETURN
END

* Get CONO
CONO = ID[1,3]
MATREAD COMP.REC FROM COMPANY, CONO ELSE
  ERRMSG = 'Invalid Company ID (':CONO:').'
  CALL RBO_ERROR_SUB(ERRMSG); RETURN
END

* Update Cost Center Master
CCTR.ID = ID[4,99]
MASTER.CC = CCTR.MASTER
IF MASTER.CC AND CCTR.ID # MASTER.CC THEN
  MATREADU CCTR.REC FROM COST.CNTR, CONO : MASTER.CC THEN
    LOCATE CCTR.ID IN CCTR.SUBS<1>,1 SETTING CCFND ELSE
      CCTR.SUBS<1,CCFND> = CCTR.ID
    END
    MATWRITE CCTR.REC ON COST.CNTR, CONO : MASTER.CC
  END ELSE
    RELEASE COST.CNTR, CONO : MASTER.CC
    ERRMSG<-1> =  "CANNOT LOCATE MAST COST CENTER  - ": CCTR.MASTER
    MASTER.CC = ''
  END
END
IF MASTER.CC AND PREV.MASTER THEN
  MATREADU CCTR.REC FROM COST.CNTR, CONO : PREV.MASTER THEN
    LOCATE CCTR.ID IN CCTR.SUBS<1>,1 SETTING FND THEN
      CCTR.SUBS = DELETE(CCTR.SUBS,1,FND,0)
      MATWRITE CCTR.REC ON COST.CNTR, CONO : PREV.MASTER
    END
  END ELSE
    RELEASE COST.CNTR, CONO : PREV.MASTER
    ERRMSG<-1> = "CANNOT LOCATE COST CENTER - ": PREV.MASTER
  END
END

* Update Department
DEPT.FND = 1
MATREADU DEPT.REC FROM DEPARTMENT, CONO : CCTR.DEPT ELSE
  DEPT.FND = 0
  RELEASE DEPARTMENT, CONO : CCTR.DEPT
  ERRMSG<-1> = 'CANNOT LOCATE DEPARTMENT ' : CCTR.DEPT
END
IF DEPT.FND THEN
  LOCATE CCTR.ID IN DEPT.CCTRS<1>,1 BY "AR" SETTING CCTR.FND ELSE
    INS CCTR.ID BEFORE DEPT.CCTRS<1,CCTR.FND>
  END
  MATWRITE DEPT.REC ON DEPARTMENT, CONO : CCTR.DEPT
END
IF INDEX(CCTR.DEPT,"-",1) THEN
  MAIN.DEPT = FIELD(CCTR.DEPT,"-",1)
  MATREADU DEPT.REC FROM DEPARTMENT, CONO : MAIN.DEPT ELSE
    DEPT.FND = 0
    RELEASE DEPARTMENT, CONO : MAIN.DEPT
    ERRMSG<-1> = "CANNOT LOCATE MAIN DEPARTMENT " : MAIN.DEPT
  END
  IF DEPT.FND THEN
    LOCATE CCTR.ID IN DEPT.CCTRS<1>,1 BY "AR" SETTING CCTR.FND ELSE
      INS CCTR.ID BEFORE DEPT.CCTRS<1,CCTR.FND>
    END
    MATWRITE DEPT.REC ON DEPARTMENT, CONO : MAIN.DEPT
  END
END

* Display message if any errors were encountered
IF ERRMSG THEN CALL RBO_ERROR_SUB(ERRMSG)

* End of method code
RETURN

CHK.STATUS:
  CHK.STATUS.ERROR = ''
  IF STATUS # RBO.NO.ERROR THEN
    CHK.STATUS.ERROR = 'Cannot get ' : CHK.STATUS.PROPERTY : ' property.'
  END
RETURN
