SUBROUTINE GLS_EOM_CLOSE
********************************************************************************
*   Program name :- GLS_EOM_CLOSE
*   Created:- 9/15/2003
*------------------------------------------------------------------------------*
*

* In Properties:
* --------------
*  
*
* Out Properties:
* ---------------
*  
********************************************************************************
$INCLUDE WWINSERT RBO.H

* Insert method code here
*** INSERT FILES EQUETES   
$INCLUDE PMC.CPYLIB COMPANY   
$INCLUDE PMC.CPYLIB FISCAL
$INCLUDE PMC.CPYLIB GLTABLE
$INCLUDE PMC.CPYLIB COA
$INCLUDE GLS.CPYLIB GLM
$INCLUDE GLS.CPYLIB COA.BAL

ERRMSG = ''
OPEN '','COMPANY' TO COMPANY ELSE ERRMSG = 'COMPANY FILE MISSING' ; GOTO 99999
OPEN '','GLS.SCREENS' TO M.SCREENS ELSE ERRMSG = 'GLS.SCREENS FILE MISSING' ; GOTO 99999
OPEN '','PREFIX' TO PREFIX ELSE ERRMSG = 'PREFIX FILE MISSING' ; GOTO 99999
OPEN '','CONTROL' TO CONTROL ELSE  ERRMSG = 'CONTROL FILE IS MISSING';GOTO 99999
OPEN '','COA' TO COA ELSE  ERRMSG = 'COA FILE IS MISSING';GOTO 99999
OPEN '','GLM' TO GLM ELSE  ERRMSG = 'GLM FILE IS MISSING';GOTO 99999
OPEN '','GLA' TO GLA ELSE  ERRMSG = 'GLA FILE IS MISSING';GOTO 99999
OPEN '','GLX' TO GLX ELSE  ERRMSG = 'GLX FILE IS MISSING';GOTO 99999

STATUS = RBO.getProperty('','ID',ID)
CONO = ID[1,3]

READ PROCESS.CONTROL FROM CONTROL,CONO:'GLS.BACKUP.RESTORE' THEN
	IF PROCESS.CONTROL = 'R' THEN
		ERRMSG = 'GENERAL LEDGER RESTORE IN PROCESS'
		GOTO 99999
	END ELSE IF PROCESS.CONTROL = 'B' THEN
		ERRMSG = 'GENERAL LEDGER BACKUP IN PROCESS'
		GOTO 99999
	END
END


MATREAD COMP.REC FROM COMPANY,CONO ELSE
	ERRMSG = "CANNOT LOCATE COMPANY " : CONO
	GOTO 99999
END

READ FLG FROM CONTROL,CONO:"EOM.FLG" ELSE FLG = "N"
IF FLG = "N" THEN 
	ERRMSG = "FILE BACKUP MUST BE RUN AFTER BALANCE UPDATE AND PRIOR TO CLOSE"
      	GOTO 99999
END
READ PERIOD.REC FROM CONTROL, CONO:"ACCT.PERIODS" ELSE
	PERIOD.REC = ""
      	PERIOD.REC<1> = 12
END

NUM.PERIODS = PERIOD.REC<1>
MATREAD GLTABLE.REC FROM CONTROL, CONO : "GLTABLE" ELSE
	ERRMSG = "CANNOT LOCATE CONTROL, GLTABLE"
      	GOTO 99999
END
MATREAD COA.REC FROM COA, CONO : GLTB.RET.EARN ELSE
	ERRMSG = "CANNOT LOCATE RETAINED EARNINGS ACCOUNT, ":GLTB.RET.EARN
      	GOTO 99999
END
IF COA.TYPE # "O" THEN
	ERRMSG = "RETAINED EARNINGS ACCOUNT TYPE IS INVALID"
      	GOTO 99999
END


IF CO.GLS.HIST<1,1> = "Y" THEN
	OPEN '','GLH' TO GLH ELSE
       	ERRMSG = 'GLH FILE IS MISSING'
              GOTO 99999
      	END
      	OPEN '','GLHX' TO GLHX ELSE
         	ERRMSG = 'GLHX FILE IS MISSING'
         	GOTO 99999
      	END
      	OPEN '','CO.COA.BAL' TO CO.COA.BAL ELSE
       	ERRMSG = 'CO.COA.BAL FILE IS MISSING'
         	GOTO 99999
      	END
      	OPEN '','DV.COA.BAL' TO DV.COA.BAL ELSE
       	ERRMSG = 'DV.COA.BAL FILE IS MISSING'
         	GOTO 99999
      	END
      	OPEN '','DP.COA.BAL' TO DP.COA.BAL ELSE
       	ERRMSG = 'DP.COA.BAL FILE IS MISSING'
         	GOTO 99999
      	END
      	OPEN '','CC.COA.BAL' TO CC.COA.BAL ELSE
       	ERRMSG = 'CC.COA.BAL FILE IS MISSING'
            	GOTO 99999
      	END
END

ACCT.LEN = LEN(CO.ACCT.PIC)
CO.ID.LEN = ACCT.LEN + 3
DV.ID.LEN = ACCT.LEN + 5
DP.ID.LEN = ACCT.LEN + 7
CC.ID.LEN = ACCT.LEN + 10

*--- MAIN PROCESS
*
READ OPENDATES FROM CONTROL, CONO : "OPENDATES" ELSE
	ERRMSG = "CONTROL OPENDATES IS NOT ON FILE"
       GOTO 99999
END
READ SALESDATES FROM CONTROL, CONO : "SALESDATES" ELSE
	ERRMSG = "CONTROL SALESDATES IS NOT ON FILE"
      	GOTO 99999
END
MATREAD FISCAL.REC FROM CONTROL, CONO : "FISCAL" ELSE
	RELEASE CONTROL, CONO : "FISCAL"
      	ERRMSG = "CONTROL FISCAL IS NOT ON FILE"
      	GOTO 99999
END
PERIOD = FR.CURR.PER
CURR.PER = FR.CURR.PER[5,2]

IF NOT(NUM(CURR.PER)) OR CURR.PER < 1 OR CURR.PER > NUM.PERIODS THEN
	RELEASE CONTROL, CONO : "FISCAL"
      	ERRMSG = "ERROR IN PERIOD IN CONTROL FISCAL"
      	GOTO 99999
END
READ GLS.UPD.CHK FROM CONTROL, CONO:"GLS.UPD.CHK" ELSE GLS.UPD.CHK = ""
PER = CURR.PER + 1
IF PER > NUM.PERIODS THEN
	PER = "01"
      	FR.CURR.PER = FR.CURR.PER[1,4] + 1 : PER
      	FR.CURR.DATE = OCONV(OPENDATES<1>,"D/")
      	FR.CURR.DATE = FR.CURR.DATE[1,6] : FR.CURR.DATE[7,4] + 1
      	FR.CURR.DATE = ICONV(FR.CURR.DATE,"D/")
      	END.DATE = OCONV(OPENDATES<2>-1,"D/")
      	END.DATE = END.DATE[1,6] : END.DATE[7,4] + 1
      	END.DATE = ICONV(END.DATE,"D/")
END ELSE
	PER = STR('0',2-LEN(PER)) : PER
      	FR.CURR.PER = FR.CURR.PER[1,4] : PER
      	FR.CURR.DATE = OPENDATES<PER>
      	IF PER = NUM.PERIODS THEN
       	END.DATE = OCONV(OPENDATES<1>-1,"D/")
         	END.DATE = END.DATE[1,6] : END.DATE[7,4] + 1
         	END.DATE = ICONV(END.DATE,"D/")
      	END ELSE
         	END.DATE = OPENDATES<PER> - 1
      	END
END
MON = SALESDATES<CURR.PER+1,2>


VAL = RBO.setProperty('','Per',PER) ;* 1
VAL = RBO.setProperty('','date',SALESDATES<PER+1,2>) ;* 2
VAL = RBO.setProperty('','CurrPeriod',OCONV(FR.CURR.DATE,'D2/')) ;* 3

NO.CLOSE = 0
READ REC FROM CONTROL, CONO:"JE":PERIOD ELSE
	REC = "CLOSED"
      	REC<2> = END.DATE
END

ENTRIES = DCOUNT(REC<1>,@VM)
NOT.FINISHED = 1

STATUS = ""
DATES = ""
PERIODS = ""
MONS = ""
FOR I = 1 TO ENTRIES WHILE NOT.FINISHED
	IF REC<1,I> # '' THEN
       	STATUS<1,1> = REC<1,I>
         	DATES<1,1> = OCONV(REC<2,I>,'D2/')
         	IF REC<1,I> # 'CLOSED' THEN
            		NOT.FINISHED = 0
            		NO.CLOSE = 1
         	END
      	END
NEXT I
PERIODS<1,1> = CURR.PER
MONS<1,1> = MON

READ REC FROM CONTROL, CONO:"JE.REVERSE":PERIOD ELSE
      REC = "CLOSED"
      REC<2> = END.DATE
END

ENTRIES = DCOUNT(REC<1>,@VM)
NOT.FINISHED = 1
FOR I = 1 TO ENTRIES WHILE NOT.FINISHED
	IF REC<1,I> # '' THEN
       	STATUS<1,2> = REC<1,I>
         	DATES<1,2> = OCONV(REC<2,I>,'D2/')
         	IF REC<1,I> # 'CLOSED' THEN
            		NOT.FINISHED = 0
            		NO.CLOSE = 1
         	END
      	END
NEXT I
PERIODS<1,2> = CURR.PER
MONS<1,2> = MON

READ REC FROM CONTROL, CONO:"JE.RECUR":PERIOD ELSE
      REC = "CLOSED"
      REC<2> = END.DATE
END

NOT.FINISHED = 1
FOR I = 1 TO ENTRIES WHILE NOT.FINISHED
	IF REC<1,I> # '' THEN
       	STATUS<1,3> = REC<1,I>
         	DATES<1,3> = OCONV(REC<2,I>,'D2/')
         	IF REC<1,I> # 'CLOSED' THEN
            		NOT.FINISHED = 0
            		NO.CLOSE = 1
         	END
      	END
NEXT I
PERIODS<1,3> = CURR.PER
MONS<1,3> = MON

READ REC FROM CONTROL, CONO:"COA.DIST" ELSE
      REC<1> = "CLOSED"
      REC<2> = END.DATE
      REC<3> = PERIOD
END
IF REC<3> < PERIOD THEN
      REC<1> = "ENTERED"
      REC<2> = END.DATE
      REC<3> = PERIOD
END

STATUS<1,4> = REC<1>
PERIODS<1,4> = REC<3>[5,2]
MONS<1,4> = SALESDATES<(REC<3>[5,2]+1),2>
DATES<1,4> = OCONV(REC<2>,'D2/')

TAPE.PER.ID = CONO : PERIOD[1,4] : "GLS.TAPE"
READ TAPE.PERIOD FROM CONTROL, TAPE.PER.ID ELSE TAPE.PERIOD = ''
IF TAPE.PERIOD<CURR.PER> = '' THEN
	STATUS<1,5> = "ENTERED"
      	FND = 0
      	FOR I = CURR.PER TO 1 STEP -1 WHILE FND = 0
       	IF TAPE.PERIOD<I> # '' THEN FND = I
      	NEXT I
      	IF FND = 0 THEN
       	FND = "01"
         	TAPE.PERIOD<1> = OPENDATES<1>
      	END
	PERIODS<1,5> = STR("0",2-LEN(FND)) : FND
      	MONS<1,5> = SALESDATES<FND+1,2>
	DATES<1,5> = OCONV(TAPE.PERIOD<FND>,'D2/')
      	NO.CLOSE = 1
END ELSE
	STATUS<1,5> = "CLOSED"
	PERIODS<1,5> = CURR.PER
      	MONS<1,5> = MON
      	DATES<1,5> = OCONV(TAPE.PERIOD<CURR.PER>,'D2/')
END

VAL = RBO.setProperty('','Status',STATUS) ;* 4
VAL = RBO.setProperty('','Dates',DATES) ;* 7
VAL = RBO.setProperty('','Curr_Per',PERIODS) ;* 5
VAL = RBO.setProperty('','Mon',MONS) ;* 6
VAL = RBO.setProperty('','NO_CLOSE',NO.CLOSE)
VAL = RBO.setProperty('','GLS_UPD_CHK',LOWER(GLS.UPD.CHK))
VAL = RBO.setProperty('','period',PERIOD)
VAL = RBO.setProperty('','CURR_PER',CURR.PER)


99999
IF ERRMSG # '' THEN
	VAL = RBO.setProperty('','ServerStatus','E')
	VAL = RBO.setProperty('','ServerMessage',ERRMSG)
END ELSE
	VAL = RBO.setProperty('','ServerStatus','')
END
* End of method code
RETURN

