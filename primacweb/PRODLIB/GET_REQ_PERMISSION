SUBROUTINE GET_REQ_PERMISSION
********************************************************************************
*   Program name :- GET_REQ_PERMISSION
*   Created:- 12/23/2002
*------------------------------------------------------------------------------
*
*
* In Properties:
* --------------
* ID, ReqList, ReqTypeList, ReqIndexNumber
*
* Out Properties:
* ---------------
* ReqPermission
********************************************************************************
$INCLUDE WWINSERT RBO.H

* Insert method code here
$INCLUDE PMC.CPYLIB COMPANY
$INCLUDE POS.CPYLIB APP.REQ
$INCLUDE PMC.CPYLIB PO
$INCLUDE POS.CPYLIB OUTSIDE.PO
$INCLUDE POS.CPYLIB MISC.PO

* Initialize variables
ERRMSG = ''
TRUE = 1
FALSE = 0

* Open Files
OPEN 'COMPANY' TO COMPANY ELSE 
  ERRMSG  = 'COMPANY FILE IS MISSING'
END
OPEN 'REG.REQ' TO REG.REQ ELSE
  ERRMSG = 'REG.REQ FILE IS MISSING'
END
OPEN 'OUT.REQ' TO OUT.REQ ELSE
  ERRMSG = 'OUT.REQ FILE IS MISSING'
END
OPEN 'MISC.REQ' TO MISC.REQ ELSE
  ERRMSG = 'MISC.REQ FILE IS MISSING'
END
OPEN 'APP.REQ' TO APP.REQ ELSE
  ERRMSG = 'APP.REQ FILE IS MISSING'
END

* Get properties
STATUS = RBO.getProperty('','ID',ID)
STATUS = RBO.getProperty('','ReqList',ReqList)
STATUS = RBO.getProperty('','ReqTypeList',ReqTypeList)
STATUS = RBO.getProperty('','ReqIndexNumber',ReqIndexNumber)
STATUS = RBO.getProperty('','PMCProperty',PMCProperty)

* Get CONO and login name
CONO = ID[1,3]
MATREAD COMP.REC FROM COMPANY, CONO ELSE
  ERRMSG = 'Invalid Company ID (':CONO:').'
  CALL RBO_ERROR_SUB(ERRMSG); RETURN
END
USER.ID = PMCProperty<1,3>

* Check permissions
SKIP = TRUE
BEGIN CASE
  CASE ReqTypeList<1,ReqIndexNumber> = 'R'
    MATREAD PO.REC FROM REG.REQ, CONO : ReqList<1,ReqIndexNumber> ELSE MAT PO.REC = ''
    IF (USER.ID # PO.APPROVER AND USER.ID # PO.PREV.APP<1,1>)  THEN
      MATREAD APP.REQ.REC FROM APP.REQ, CONO : USER.ID : '!ALL'  THEN
        IF APP.STATUS = 'N' THEN 
          MATREAD APP.REQ.REC FROM APP.REQ, CONO : USER.ID : '!' : PO.DIV.OWNER ELSE
            MAT APP.REQ.REC = ''
          END
        END
      END ELSE
        MATREAD APP.REQ.REC FROM APP.REQ, CONO : USER.ID : '!' : PO.DIV.OWNER ELSE
          MAT APP.REQ.REC = ''
        END
      END
      IF APP.PO.LEVEL =  1 THEN
        SKIP = FALSE
      END 
    END ELSE
      SKIP = FALSE
    END
  CASE ReqTypeList<1,ReqIndexNumber> = 'O'
    MATREAD OPO.REC FROM OUT.REQ, CONO : ReqList<1,ReqIndexNumber> ELSE MAT OPO.REC = ''
    IF (USER.ID # OPO.APPROVER AND USER.ID # OPO.PREV.APP<1,1>) THEN
      MATREAD APP.REQ.REC FROM APP.REQ, CONO : USER.ID : '!ALL'  THEN
        IF APP.STATUS = 'N' THEN 
          MATREAD APP.REQ.REC FROM APP.REQ, CONO : USER.ID : OPO.DIV.OWNER ELSE
            MAT APP.REQ.REC = ''
          END
        END
      END ELSE
        MATREAD APP.REQ.REC FROM APP.REQ, CONO : USER.ID : OPO.DIV.OWNER ELSE
          MAT APP.REQ.REC = ''
        END
      END
      IF APP.PO.LEVEL =  1 THEN
        SKIP = FALSE
      END 
    END ELSE
      SKIP = FALSE
    END
  CASE ReqTypeList<1,ReqIndexNumber> = 'M'
    MATREAD MPO.REC FROM MISC.REQ, CONO : ReqList<1,ReqIndexNumber> ELSE
      MAT MPO.REC = ''
    END
    IF (USER.ID # MPO.APPROVER AND USER.ID # MPO.PREV.APP<1,1>)  THEN
      MATREAD APP.REQ.REC FROM APP.REQ, CONO : USER.ID : '!ALL'  THEN
        IF APP.STATUS = 'N' THEN 
          MATREAD APP.REQ.REC FROM APP.REQ, CONO : USER.ID : MPO.DIV.OWNER ELSE
            MAT APP.REQ.REC = ''
          END
        END
      END ELSE
        MATREAD APP.REQ.REC FROM APP.REQ, CONO : USER.ID : MPO.DIV.OWNER ELSE
          MAT APP.REQ.REC = ''
        END
      END
      IF APP.PO.LEVEL =  1 THEN
        SKIP = FALSE
      END 
    END ELSE
      SKIP = FALSE
    END
END CASE

ReqPermission = FALSE
IF NOT(SKIP) THEN
  ReqPermission = TRUE
END

* Set output variables
STATUS = RBO.setProperty('','ReqPermission',ReqPermission)

* End of method code
RETURN

