SUBROUTINE EST_RES_CALC_PAP(CONO, ACTION, DEL.NO)
********************************************************************************
*   Program name :- EST_RES_CALC_PAP
*   Created:- 9/3/2003
*  
********************************************************************************
$INCLUDE WWINSERT RBO.H
$INCLUDE JES.CPYLIB SCOMMON.ESTIMATE
$DEFINE ESTIMATE
$INCLUDE JES.CPYLIB ESTIMATE

$DEFINE ESTIMATEMATL
$INCLUDE JES.CPYLIB ESTIMATE.MATL

$INCLUDE JES.CPYLIB ESTIMATE.BIND.SPOIL

$INCLUDE JES.CPYLIB ESTIMATE.RES.PRESS.SPOIL
$DEFINE ESTIMATERES
$INCLUDE JES.CPYLIB ESTIMATE.RES

$INCLUDE ICS.CPYLIB INVENTORY
$INCLUDE ICS.CPYLIB INV.WHSE

$DEFINE JESFILEVARS
$INCLUDE JES.CPYLIB JES.FILE.VARS
$DEFINE COMPANY
$INCLUDE PMC.CPYLIB COMPANY
$DEFINE FILEVARS
$INCLUDE CPYLIB FILE.VARS
$INCLUDE CPYLIB CHAR


 	IF FILEINFO(WAREHOUSE,0)=0 THEN        
     	   OPEN '','WAREHOUSE' TO WAREHOUSE ELSE
          ERRMSG='WAREHOUSE FILE IS MISSING' 
          END                                  
       END         
     
	ERRMSG = RBO.getProperty('','ID',ID)

       OPEN '','ESTIMATE.RES.PRESS.SPOIL' TO ESTIMATE.RES.PRESS.SPOIL ELSE
	ERRMSG = 'CANNOT OPEN ESTIMATE.RES.PRESS.SPOIL FILE'
	END

	OPEN "","ESTIMATE" TO ESTIMATE ELSE
		ERRMSG="CAN NOT OPEN ESTIMATE FILE"
	END
	
	OPEN "","ESTIMATE.RES" TO ESTIMATE.RES ELSE
		ERRMSG="CAN NOT OPEN ESTIMATE FILE"
	END

	OPEN "","ESTIMATE.BIND.SPOIL" TO ESTIMATE.BIND.SPOIL ELSE
		ERRMSG = "CAN NOT OPEN ESTIMATE.BIND.SPOIL FILE"
	END

	OPEN "","COST.CNTR" TO COST.CNTR ELSE
		ERRMSG = "CAN NOT OPEN COST.CNTR FILE"
	END

	MATREAD EST.REC FROM ESTIMATE,ID ELSE MAT EST.REC =''
	MATREAD EST.RL.REC FROM ESTIMATE.RES,ID ELSE MAT EST.RL.REC = ''

       ERRMSG = RBO.getProperty('','EST_QTY',EST.QTY)
*
*---- MAIN PROCESSING
*
*T26413 v
   IF DEL.NO # "" THEN
      PCNT=DCOUNT(EST.PROD.OS.PROD<1,1>,SVM)
      FOR MPTR=1 TO PCNT
         *MACRODELVAL(EST.RL.PAP.PRICE<1,1,MPTR>,"!",DEL.NO)
         CALL ESTCEM_MACRO_DELVAL(EST.RL.PAP.PRICE<1,1,MPTR>,"!",DEL.NO)
      NEXT PCNT
   END
   *T26413 ^
   SAVE.PAP.PRICE=EST.RL.PAP.PRICE
   PRICE.FLAG = CO.JES.PARAM<1,11>
   IF PRICE.FLAG = "" THEN; ***** T23918
      PRICE.FLAG='X'
   END; ***** T23918

*
*--- Calculate Roll Label Paper Details
*
   QQTY=DCOUNT(EST.QTY,VM)
   UCNT=DCOUNT(EST.PROD.OS.USAGE,SM)
   FOR COMP=1 TO UCNT
      PCNT=DCOUNT(EST.PROD.OS.PROD<1,COMP>,SVM)
      FOR MPTR=1 TO PCNT
         MATREAD ESTM.REC FROM ESTIMATE.MATL, CONO:"R":EST.PROD.OS.USAGE<1,COMP,MPTR> ELSE MAT ESTM.REC=""
         LOCATE EST.PROD.OS.PROD<1,COMP,MPTR> IN ESTM.PROD<1>,1 SETTING MP ELSE MP=1
         FOR Y=1 TO QQTY
            GOSUB 1000
            TOT.MSI=INT(((EST.PROD.OS.WIDTH<1,COMP,MPTR>/10000*TOT.PC)/1000)+.9)
            INV.ID=EST.PROD.INV.ID<1,COMP,MPTR>
            IF PRICE.FLAG # "X" AND INV.ID # "" THEN
               GOSUB 2000
            END ELSE
               PRICE.BRK.COUNT=DCOUNT(ESTM.END.QTY<1,MP>,SVM)
               FLG=0
               FOR X=1 TO PRICE.BRK.COUNT UNTIL FLG
                  TEST.QTY=ESTM.END.QTY<1,MP,X>
                  IF TOT.MSI <= TEST.QTY THEN
                     UNIT.PR=ESTM.QCOST<1,MP,X>
                     FLG=1
                  END
               NEXT X
               IF NOT(FLG) THEN
                  UNIT.PR=ESTM.QCOST<1,MP,PRICE.BRK.COUNT>
               END
            END
            IF UNIT.PR+0 = 0 THEN
              SAVE.PR = FIELD(SAVE.PAP.PRICE<1,COMP,MPTR>,'!',Y)
              IF SAVE.PR+0 = 0 AND Y > 1 THEN
                SAVE.PR = FIELD(SAVE.PAP.PRICE<1,COMP,MPTR>,'!',Y-1)
              END
              IF SAVE.PR # '' THEN UNIT.PR = SAVE.PR
            END
            *MACROREPVAL(EST.RL.TOTAL.PC<1,COMP,MPTR>,"!",Y,INT(TOT.PC))
            CALL ESTCEM_MACRO_REPVAL(EST.RL.TOTAL.PC<1,COMP,MPTR>,"!",Y,INT(TOT.PC))
            *MACROREPVAL(EST.RL.PAP.MSI<1,COMP,MPTR>,"!",Y,TOT.MSI)
            CALL ESTCEM_MACRO_REPVAL(EST.RL.PAP.MSI<1,COMP,MPTR>,"!",Y,TOT.MSI)
 	     *MACROREPVAL(EST.RL.PAP.PRICE<1,COMP,MPTR>,"!",Y,UNIT.PR)
            CALL ESTCEM_MACRO_REPVAL(EST.RL.PAP.PRICE<1,COMP,MPTR>,"!",Y,UNIT.PR)
         NEXT Y
         PLC=DCOUNT(EST.RL.PAP.MSI<1,COMP,MPTR>,"!")
         FOR X=PLC TO QQTY+1 STEP -1
           * MACRODELVAL(EST.RL.TOTAL.PC<1,COMP,MPTR>,"!",X)
             CALL ESTCEM_MACRO_DELVAL(EST.RL.TOTAL.PC<1,COMP,MPTR>,"!",X)
 	    * MACRODELVAL(EST.RL.PAP.MSI<1,COMP,MPTR>,"!",X)
             CALL ESTCEM_MACRO_DELVAL(EST.RL.PAP.MSI<1,COMP,MPTR>,"!",X)
           * MACRODELVAL(EST.RL.PAP.PRICE<1,COMP,MPTR>,"!",X
             CALL ESTCEM_MACRO_DELVAL(EST.RL.PAP.PRICE<1,COMP,MPTR>,"!",X)
         NEXT X
      NEXT MPTR
   NEXT COMP
   *GOTO 99999
*
*---- EQUATIONS TO CALCULATE MSQ
*
1000 *
*
   IF EST.RL.DIE.REPEAT<1,COMP,1> # "" AND EST.RL.DIE.NO.ACR<1,COMP,1> # "" AND EST.RL.DIE.NO.ARD<1,COMP,1> # "" THEN
      VAR1 = EST.QTY<1,Y>*(EST.RL.DIE.REPEAT<1,COMP,1>/10000)
      IF EST.RL.DIE.NO.ARD<1,COMP,1>='' THEN
         VAR3 = 1
      END ELSE
         VAR3 = EST.RL.DIE.NO.ARD<1,COMP,1>
      END
      VAR4 = EST.RL.SETS<1,COMP,2>
      IF VAR4 = '' THEN VAR4 = 1
      VAR2 = (EST.RL.DIE.NO.ACR<1,COMP,1>*VAR3)/VAR4
      BASE.PC = INT((VAR1/VAR2)+.5);*IMPERIAL
      PR.SPOIL.PC = 0
      FIN.SPOIL.PC = 0
      MR.PC=0
*
*--- Call routine to calculate Spoilage's
*
      CALL EST_RES_CALC_SPOIL(CONO,ACTION,COMP,EST.QTY<1,Y>,BASE.PC,PR.SPOIL.PC,FIN.SPOIL.PC,MR.PC)
*
      TOT.PC=BASE.PC+MR.PC+PR.SPOIL.PC+FIN.SPOIL.PC
   END ELSE
      TOT.PC=0
   END
   RETURN
*
*---- GET INVENTORY PRICE
*
2000 *
   ICOST = ""
   MATREAD INV.REC FROM INVENTORY, CONO:INV.ID ELSE
      MAT INV.REC = ""
   END
   WCNT = DCOUNT(INV.WHSE.CODE,VM)
   FOR WP = 1 TO WCNT
      WHSE = INV.WHSE.CODE<1,WP>
      IWH.ID = CONO:INV.ID:"!":WHSE
      MATREAD IWH.REC FROM INV.WHSE,IWH.ID THEN
         MAT IWH.REC = ""
      END
      SCOST = ""
      BEGIN CASE
         CASE PRICE.FLAG = "L"
            IF IWH.LIST.COST # "" THEN
               SCOST = IWH.LIST.COST
            END
         CASE PRICE.FLAG = "A"
            IF IWH.AVG.COST # "" THEN
               SCOST = IWH.AVG.COST
            END
         CASE PRICE.FLAG = "S"
            IF IWH.STD.COST # "" THEN
               SCOST = IWH.STD.COST
            END
         CASE PRICE.FLAG = "R"
            DIV.POS='' ; FISCAL.FLAG='IC' ; TRAN.PERIOD=''
            CALL GET_LAST_COST(IWH.ID,MAT IWH.REC,WAREHOUSE,CONTROL,ERR.FLG,ERRMSG,DIV.POS,FISCAL.FLAG,TRAN.PERIOD,LAST.PRICE)
            BEGIN CASE
               CASE ERR.FLG=''
                  SCOST=INT(LAST.PRICE)
               CASE ERR.FLG="-1"
                  *GOSUB 90000
                  CONTINUE
               CASE ERR.FLG='-2'
                  *GOSUB 93000
            END CASE
      END CASE
      BEGIN CASE
         CASE SCOST = ""
         CASE ICOST = ""
            ICOST = SCOST
         CASE SCOST > ICOST
            ICOST = SCOST
      END CASE
   NEXT WP
   UNIT.PR = ICOST
   RETURN
* End of method code
RETURN

