SUBROUTINE GetPMCDropDowns
********************************************************************************
*   Program name :- GetPMCDropDowns
*   Created:- 11/1/02
*------------------------------------------------------------------------------*
*

* In Properties:
* --------------
*  
*
* Out Properties:
* ---------------
*  
********************************************************************************
$INCLUDE WWINSERT RBO.H
$INCLUDE PMC.CPYLIB EPRIMAC_XREF
$INCLUDE PMC.CPYLIB PMC_DROPDOWN
$INCLUDE CPYLIB CHAR

DIM XREF_REC(5)
EQU XREF_CODE  TO XREF_REC(1)
EQU XREF_DESC  TO XREF_REC(2)
EQU XREF_GROUP TO XREF_REC(3)
EQU XREF_TYPE  TO XREF_REC(4)

* Insert method code here
ERRMSG = ""
   OPEN '','PMC_PROCESS' TO PMC_PROCESS ELSE
      ERRMSG = 'Cannot open PMC_PROCESS file!'
      GOTO 93000
   END
   OPEN '','PMC_DROPDOWN' TO PMC_DROPDOWN ELSE
      ERRMSG = 'Cannot open PMC_DROPDOWN file!'
      GOTO 93000
   END
   OPEN '','EPRIMAC_XREF' TO EPRIMAC_XREF ELSE
      ERRMSG = 'Cannot open EPRIMAC_XREF file!'
      GOTO 93000
   END
 OPEN '','VOC' TO VOC ELSE
      ERRMSG = 'Cannot open EPRIMAC_XREF file!'
      GOTO 93000
   END

   MATREAD EPMCX_REC FROM EPRIMAC_XREF, "TABLES" ELSE
      ERRMSG = 'Cannot find TABLES list in EPRIMAC_XREF file!'
      GOTO 93000
   END

STATUS = RBO.getProperty('', 'PMCProperty', PMCProperty)

PMCID     = PMCProperty<1,1>
SessionID = PMCProperty<1,2>
UserID    = PMCProperty<1,3>
CONO      = PMCProperty<1,4>
PPSID     = PMCProperty<1,5> ;*THIS IS USED TO GET SPECIFIC CODES AND DESCRITION EX: DIVISION OR "all" / "ALL".

IF PMCID = "" THEN GOTO 93000

MATREAD PDD.REC FROM PMC_DROPDOWN, PMCID ELSE MAT PDD.REC = ""

IF PPSID # "" THEN
	IF PPSID # "ALL" AND PPSID # "all" THEN
		PDD.DROPDOWNS<1> = PPSID
	END
END

MATREAD PDD.REC FROM PMC_DROPDOWN, PMCID ELSE MAT PDD.REC = ""

TCNT = DCOUNT(PDD.DROPDOWNS<1>,VM)
IF PDD.DROPDOWNS = "" OR TCNT < 1 THEN GOTO 93000

FOR TT = 1 TO TCNT
XREF_DESC=''
   IF PDD.DROPDOWNS<1,TT> = "" THEN CONTINUE
   LOCATE PDD.DROPDOWNS<1,TT> IN EPMCX_TABLE<1>,1 SETTING FND ELSE CONTINUE
   IF EPMCX_RBO_CODE<1,FND> = "" OR EPMCX_RBO_DESC<1,FND> = "" THEN CONTINUE
   BEGIN CASE
   CASE PDD.DROPDOWNS<1,TT> = "COMPANY"
      XREF_ID = PDD.DROPDOWNS<1,TT>
   CASE PDD.DROPDOWNS<1,TT> = "ACCT.TYPE"
      XREF_ID = PDD.DROPDOWNS<1,TT>
   CASE PDD.DROPDOWNS<1,TT> = "ACCT.CATG"
      XREF_ID = PDD.DROPDOWNS<1,TT>
   CASE PDD.DROPDOWNS<1,TT> = "ACCT.SUB.CATG"
      XREF_ID = PDD.DROPDOWNS<1,TT>
   CASE 1
      XREF_ID = CONO : PDD.DROPDOWNS<1,TT>
   END CASE
   RBO_CODE = EPMCX_RBO_CODE<1,FND>
   RBO_DESC = EPMCX_RBO_DESC<1,FND>
   RBO_GROUP = EPMCX_RBO_GROUP<1,FND>
   RBO_TYPE = EPMCX_RBO_TYPE<1,FND>
  
   MATREAD XREF_REC FROM EPRIMAC_XREF, XREF_ID ELSE CONTINUE
   SWAP "'" WITH "" IN XREF_DESC
   SWAP '"' WITH "" IN XREF_DESC
   *SWAP "." WITH "" IN XREF_DESC
    STATUS = RBO.setProperty('', RBO_CODE, XREF_CODE)

*COMMENTED BY DEEPAK ON 13/06/2006, BECAUSE OF PROBLEMS IN CODE VALIDATIONS, TO BE REVIEWED LATER
**ADDED BY DJAMAL ON 09/06/2006 TO GIVE FIXED LENGTH TO CODES
*TEMPLENVAR=""
*LENVAR=""
*LOCVAR=""
*I = ""
*NCNT = DCOUNT(XREF_CODE,@VM)
*	FOR I = 1 TO NCNT
*		TEMPLENVAR=LEN(XREF_CODE<1,I>)
*		IF TEMPLENVAR > LENVAR THEN
*			LENVAR = TEMPLENVAR
*		END
*	NEXT I
*	FOR I = 1 TO NCNT
*		LOCVAR = CHARLEN(XREF_CODE<1,I>)
*		SPCVAR = ""
*		TEMPLENVAR = LEN(XREF_CODE<1,I>)
*		TEMPLENVAR = LENVAR - TEMPLENVAR
*		FOR J = 1 TO TEMPLENVAR + 1
*			SPCVAR = SPCVAR:" "
*		NEXT J
*		IF TRIM(XREF_DESC<1,I>," ","L")# "" THEN
*			IF TRIM(XREF_DESC<1,I>[LOCVAR+1,99]) # "" THEN
*				XREF_DESC<1,I>=TRIM(XREF_DESC<1,I>[1,LOCVAR]," ","L"): SPCVAR :TRIM(XREF_DESC<1,I>[LOCVAR+1,99]," ","L")
*			END ELSE
*				XREF_DESC<1,I>=TRIM(XREF_DESC<1,I>[1,LOCVAR]," ","L")			
*			END
*		END
*	NEXT I
**DJAMAL CODE END
*END

    STATUS = RBO.setProperty('', RBO_DESC, XREF_DESC)
    IF RBO_GROUP # "" AND PDD.GROUP.FLAG<1,TT> # "" THEN
	  STATUS = RBO.setProperty('', RBO_GROUP, XREF_GROUP)
    END
    IF RBO_TYPE # "" AND PDD.TYPE.FLAG<1,TT> # "" THEN
       STATUS = RBO.setProperty('', RBO_TYPE, XREF_TYPE)
    END
NEXT TT

93000*
   IF ERRMSG # "" THEN
      STATUS = RBO.setProperty('', 'ServerStatus', 1)
      STATUS = RBO.setProperty('', 'ServerMessage', ERRMSG)
   END
* End of method code
RETURN

