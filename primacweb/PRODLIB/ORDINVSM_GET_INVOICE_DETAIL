SUBROUTINE ORDINVSM_GET_INVOICE_DETAIL
********************************************************************************
* REVISION    - [e12.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM    - PRIMAC
* PROGRAM   - ORDINVSM_GET_INVOICE_DETAIL
* AUTHOR    - ABED ALI
* DATE      - 9/10/2003
*------------------------------------------------------------------------------*
*
* In Properties:
* --------------
*  
*
* Out Properties:
* ---------------
*  
********************************************************************************
$INCLUDE WWINSERT RBO.H
$INCLUDE PMC.CPYLIB COMPANY
$INCLUDE PMC.CPYLIB INVOICE.CODE
$INCLUDE PMC.CPYLIB CUSTOMER
$INCLUDE OPS.CPYLIB BOL
$INCLUDE OPS.CPYLIB ORDER.INVOICE
$INCLUDE ICS.CPYLIB INVENTORY
$INCLUDE OPS.CPYLIB ORDER
$INCLUDE PMC.CPYLIB COMP.OPS
$INCLUDE PMC.CPYLIB SHIP.TO
$INCLUDE PMC.CPYLIB SHIP.VIA
$INCLUDE CPYLIB CHAR
* Insert method code here
ERRMSG = ""
OPEN "","CONTROL" TO CONTROL ELSE
	ERRMSG = "Cannot locate the CONTROL file"; GOTO 99999
END
OPEN "","CUSTOMER" TO CUSTOMER ELSE
	ERRMSG = "Cannot locate the CUSTOMER file"; GOTO 99999
END
OPEN "","COMPANY" TO COMPANY ELSE
	ERRMSG = "Cannot locate the COMPANY file"; GOTO 99999
END
OPEN "","ORDER" TO ORDER ELSE
	ERRMSG = "Cannot locate the ORDER file"; GOTO 99999
END
OPEN "","ORDER.DETAIL" TO ORDER.DETAIL ELSE
	ERRMSG = "Cannot locate the ORDER.DETAIL file"; GOTO 99999
END
OPEN "","BOL" TO BOL ELSE
	ERRMSG = "Cannot locate the BOL file"; GOTO 99999
END
OPEN "","ORDER.INVOICE" TO ORDER.INVOICE ELSE
	ERRMSG = "Cannot locate the ORDER.INVOICE file"; GOTO 99999
END
OPEN "","VOID.INVOICES" TO VOID.INVOICES ELSE
	ERRMSG = "Cannot locate the VOID.INVOICES file"; GOTO 99999
END
OPEN "","DAILY.ORDER.INVOICE" TO DAILY.ORDER.INVOICE ELSE
	ERRMSG = "Cannot locate the DAILY.ORDER.INVOICE file"; GOTO 99999
END
OPEN "","INVOICE.CODE" TO INVOICE.CODE ELSE
	ERRMSG = "Cannot locate the INVOICE.CODE file"; GOTO 99999
END
OPEN "","INVENTORY" TO INVENTORY ELSE
	ERRMSG = "Cannot locate the INVENTORY file"; GOTO 99999
END
OPEN "","SHIP.TO" TO SHIP.TO ELSE 
	ERRMSG = "SHIP.TO FILE IS MISSING"
	GOTO 99999
END
OPEN "","SHIP.VIA" TO SHIP.VIA ELSE 
	ERRMSG = "SHIP.VIA FILE IS MISSING"
	GOTO 99999
END

VAL = RBO.getProperty('','ID',ID) ;*CONO : Order No
CONO = ID[1,3]
ORDER.NO = ID[4,99]
VAL = RBO.getProperty('','ORD_INV_NO',INVOICE.NO) ;*Single Valued Invoice Number
VAL = RBO.getProperty('','ORD_CUST',ORD.CUST)

MATREAD COMP.REC FROM COMPANY,CONO ELSE
	ERRMSG = "Cannot locate COMPANY ID " : CONO; GOTO 99999
END
MATREAD OPCO.REC FROM CONTROL, CONO:"OPS" ELSE MAT OPCO.REC = ""

IF CO.ARS = "Y" THEN
	OPEN "","OPEN.RECV" TO OPEN.RECV ELSE
    		ERRMSG = "Cannot locate the OPEN.RECV file"; GOTO 99999
  	END
END


MATREAD ORD.REC FROM ORDER, ID ELSE MAT ORD.REC = ''

LOCATE INVOICE.NO IN ORD.INV.NO<1>,1 SETTING LOC ELSE
	ERRMSG = "Cannot locate invoice on ORDER file:"
      	GOTO 99999
END

IF ORD.INV.DATE<1,LOC> = "" THEN
	MATREAD IVC.REC FROM DAILY.ORDER.INVOICE, CONO:INVOICE.NO ELSE
       	ERRMSG = "Cannot locate invoice on DAILY.ORDER.INVOICE file"
         	GOTO 99999
	END
END ELSE
	MATREAD IVC.REC FROM ORDER.INVOICE, CONO:INVOICE.NO ELSE
      		ERRMSG = "Cannot locate invoice on ORDER.INVOICE file"
		GOTO 99999
	END
END


BEGIN CASE
	CASE INVOICE.NO[7,2] = "CM"
       	MENU = "CREDIT"
      	CASE INVOICE.NO[7,2] = "DM"
       	MENU = "DEBIT"
     	CASE 1
       	MENU = "INVOICE"
END CASE
IF INVOICE.NO[7,2] = "PB" THEN
	MENU = "INVOICE"
END

IF MENU = "PREBILL" THEN
	PRE.BILL = "Y"
  	MENU = "INVOICE"
END ELSE
  	PRE.BILL = ""
END

SFX = INVOICE.NO[LEN(INVOICE.NO)-1,2]
FMTERR = 0
BEGIN CASE
	CASE MENU = "CREDIT"
    		IF SFX # "CM" THEN INVOICE.NO = INVOICE.NO:"CM"
    		IF LEN(INVOICE.NO) <= 8 THEN
      			INVOICE.NO = STR("0",8-LEN(INVOICE.NO)):INVOICE.NO
    		END ELSE
      			FMTERR = 1
    		END
  	CASE MENU = "DEBIT"
    		IF SFX # "DM" THEN INVOICE.NO = INVOICE.NO:"DM"
    		IF LEN(INVOICE.NO) <= 8 THEN
      			INVOICE.NO = STR("0",8-LEN(INVOICE.NO)):INVOICE.NO
    		END ELSE
      			FMTERR = 1
    		END
  	CASE PRE.BILL = "Y"
    		IF SFX # "PB" THEN INVOICE.NO = INVOICE.NO:"PB"
   		IF LEN(INVOICE.NO) <= 8 THEN
      			INVOICE.NO = STR("0",8-LEN(INVOICE.NO)):INVOICE.NO
    		END ELSE
      			FMTERR = 1
    		END
  	CASE 1
    		IF LEN(INVOICE.NO) <= 6 THEN
      			INVOICE.NO = STR("0",6-LEN(INVOICE.NO)):INVOICE.NO
    		END ELSE
      			FMTERR = 1
    		END
END CASE

IF FMTERR THEN
	ERRMSG = "Invalid format. Try again! "
  	GOTO 99999
END
MODE = ""

IF CO.ARS = "Y" THEN GOSUB 2000 ELSE GOSUB 3000

IVC.NO = INVOICE.NO
MAT BOL.REC = ""
MATREAD CUST.REC FROM CUSTOMER, CONO:IVC.CUST.NO ELSE
	MAT CUST.REC = ''
END
*
*---- Continue
*
SAVE.IVC.LAST = IVC.LAST
IF PRE.BILL = "Y" THEN
	MTYPE = "PREBILL"
END ELSE
	MTYPE = MENU
END
IF MODE = "OLD" THEN ACTION = "I" ELSE ACTION = "M" ;* RETURN ACTION TO MAIN - TO DECIDE VIEW OR UPDATE
val = RBO.setProperty('','ACTION',ACTION)
val = RBO.setProperty('','IVC_BOL_NO',IVC.BOL.NO)
val = RBO.setProperty('','IVC_CUST_NO',IVC.CUST.NO)
val = RBO.setProperty('','IVC_ADDR1',IVC.ADDR1)
val = RBO.setProperty('','IVC_ADDR2',IVC.ADDR2)
val = RBO.setProperty('','IVC_ADDR3',IVC.ADDR3)
val = RBO.setProperty('','IVC_ADDR4',IVC.ADDR4)
val = RBO.setProperty('','IVC_ATTENTION',IVC.ATTENTION)
val = RBO.setProperty('','IVC_PO_NO',IVC.PO.NO)
val = RBO.setProperty('','IVC_ORDER_NO',IVC.ORDER.NO)
val = RBO.setProperty('','IVC_DATE',OCONV(IVC.DATE,'D2/'))
val = RBO.setProperty('','IVC_TAX_EXEMPT',IVC.TAX.EXEMPT)
val = RBO.setProperty('','IVC_TAX_JURS',IVC.TAX.JURS)
val = RBO.setProperty('','CUST_TAX_JUR',CUST.TAX.JUR<1,1>)

val = RBO.setProperty('','CUST_ADDR1',CUST.ADDR1)
val = RBO.setProperty('','CUST_ADDR2',CUST.ADDR2)
val = RBO.setProperty('','CUST_ADDR3',CUST.ADDR3)
val = RBO.setProperty('','CUST_ADDR4',CUST.ADDR4)
val = RBO.setProperty('','CUST_ZIP',CUST.ZIP)
val = RBO.setProperty('','CUST_NAME',CUST.NAME)
val = RBO.setProperty('','CUST_ATTENTION',CUST.ATTENTION)

IVC.STAT = ""
IVC.STAT.DATE = ""
IF IVC.PROC.DATE="" THEN
	IF IVC.PRT.DATE # "" THEN
       	IVC.STAT = "PRINTED"
         	IVC.STAT.DATE = IVC.PRT.DATE
      	END
END ELSE
	IVC.STAT = "PROCESSED"
      	IVC.STAT.DATE = IVC.PROC.DATE
END
val = RBO.setProperty('','IVC_STAT',IVC.STAT)
val = RBO.setProperty('','IVC_STAT_DATE',OCONV(IVC.STAT.DATE,'D2/'))
val = RBO.setProperty('','IVC_CHG_CODE',IVC.CHG.CODE)
val = RBO.setProperty('','IVC_QUANTITY',IVC.QUANTITY)
val = RBO.setProperty('','IVC_TAXABLE',IVC.TAXABLE)
val = RBO.setProperty('','IVC_UM',IVC.UM)
val = RBO.setProperty('','IVC_DESC',IVC.DESC)
val = RBO.setProperty('','IVC_PROC_DATE',IVC.PROC.DATE)
CNT = DCOUNT(IVC.AMOUNT,VM)
FOR I = 1 TO CNT
	IVC.UNIT.PRICE<1,I> = OCONV(IVC.UNIT.PRICE<1,I>,'MD4')
	IVC.AMOUNT<1,I> = OCONV(IVC.AMOUNT<1,I>,'MD2')
NEXT I
val = RBO.setProperty('','IVC_UNIT_PRICE',IVC.UNIT.PRICE)
val = RBO.setProperty('','IVC_AMOUNT',IVC.AMOUNT)
val = RBO.setProperty('','MTYPE',MTYPE)
val = RBO.setProperty('','IVC_CHG_ORDER',IVC.CHG.ORDER)
val = RBO.setProperty('','IVC_TERMS',IVC.TERMS)
val = RBO.setProperty('','IVC_SHIP_TO',IVC.SHIP.TO)
val = RBO.setProperty('','IVC_EMAIL',IVC.PRT.FLG)

MCNT = DCOUNT(IVC.PROD<1>,@VM)
RNO = 0
TMP.SHP.QTY = ""
TMP.REF.QTY = ""
TMP.BPROD = ""
TMP.AMOUNT = ""
FOR LPTR = 1 TO MCNT
	SCNT = DCOUNT(IVC.PROD<1,LPTR>,@SM)
	FOR SPTR = 1 TO SCNT
		PROD = IVC.PROD<1,LPTR,SPTR>
	      	WHSE = IVC.WHSE<1,LPTR,SPTR>
      		MATREAD INV.REC FROM INVENTORY, CONO:PROD ELSE
	      		MAT INV.REC = ""
      		END
	      	RNO = RNO + 1
		TMP.SHP.QTY<1,LPTR,SPTR> = IVC.SHP.QTY<1,LPTR,SPTR>
      		IF IVC.REF.QTY<1,LPTR,SPTR> = "" THEN
	      		TMP.REF.QTY<1,LPTR,SPTR> = TMP.SHP.QTY<1,LPTR,SPTR>
      		END ELSE
       		TMP.REF.QTY<1,LPTR,SPTR> = IVC.REF.QTY<1,LPTR,SPTR>
	      	END
      		IF OPCO.INV.DISPLAY = "S" AND INV.BASE.SKU # "" THEN
       		TMP.BPROD<1,LPTR,SPTR> = INV.BASE.SKU
	      	END ELSE
       		TMP.BPROD<1,LPTR,SPTR> = PROD
	      	END
	NEXT SPTR
NEXT LPTR

val = RBO.setProperty('','IVC_COST_UNIT',IVC.COST.UNIT)
val = RBO.setProperty('','IVC_PROD',IVC.PROD)
val = RBO.setProperty('','IVC_WHSE',IVC.WHSE)
val = RBO.setProperty('','IVC_PALLET',IVC.PALLET)
val = RBO.setProperty('','IVC_SHP_COST',IVC.SHP.COST)
val = RBO.setProperty('','TMP_ORDER',IVC.CHG.ORDER)
val = RBO.setProperty('','TMP_SHP_QTY',IVC.SHP.QTY)

val = RBO.setProperty('','TMP_REF_QTY',TMP.REF.QTY)
val = RBO.setProperty('','TMP_BPROD',TMP.BPROD)
*val = RBO.setProperty('','TMP_AMOUNT',TMP.AMOUNT)
val = RBO.setProperty('','IVC_LAST',IVC.LAST)
val = RBO.setProperty('','IVC_PRE_BILL',IVC.PRE.BILL)
val = RBO.setProperty('','IVC_CUST_NAME',IVC.CUST.NAME)
val = RBO.setProperty('','IVC_SID',IVC.SID)
val = RBO.setProperty('','IVC_RTN_QTY',IVC.RTN.QTY)
val = RBO.setProperty('','IVC_RTN_LOC',IVC.RTN.LOC)
val = RBO.setProperty('','IVC_RTN_WHSE',IVC.RTN.WHSE)


IF IVC.SHIP.TO # "" THEN
	IDD = ID[1,3]:ORD.CUST:"!":IVC.SHIP.TO
	MATREAD SPT.REC FROM SHIP.TO, IDD ELSE
		ERRMSG = "SHIP.TO RECORD IS MISSING"
		GOTO 99999
	END
	VAL = RBO.setProperty('','SPT_NAME',SPT.NAME)
	VAL = RBO.setProperty('','SPT_ADDR1',SPT.ADDR1)
	VAL = RBO.setProperty('','SPT_ADDR2',SPT.ADDR2)
	VAL = RBO.setProperty('','SPT_CITY',SPT.CITY)
	VAL = RBO.setProperty('','SPT_STATE',SPT.STATE)
	IF IVC.BOL.NO = "" THEN
    		MAT BOL.REC = ""
  	END ELSE
    		MATREAD BOL.REC FROM BOL, CONO:IVC.BOL.NO ELSE
      			MAT BOL.REC = ""
    		END
  	END
	VAL = RBO.setProperty('','BOL_SHP_DATE',OCONV(BOL.SHP.DATE,'D2/'))
	VAL = RBO.setProperty('','BOL_FREIGHT',BOL.FREIGHT)
	VAL = RBO.setProperty('','BOL_SHP_AMT',OCONV(SUM(SUM(BOL.SHP.AMT)),'MD2'))
	IF BOL.SHIP.VIA = "" THEN
    		MAT SHIP.VIA.REC = ""
  	END ELSE
    		MATREAD SHIP.VIA.REC FROM SHIP.VIA, CONO:BOL.SHIP.VIA ELSE
      			MAT SHIP.VIA.REC = ""
    		END
  	END
	VAL = RBO.setProperty('','SHPV_DESC',SHPV.DESC)
END

GOTO 99999

*************************************************************************

*---- Verify Invoice number when A/R is active
*
2000 *
FLAG = ""
MODE = ""
MATREAD IVC.REC FROM ORDER.INVOICE, CONO:INVOICE.NO THEN FLAG<1,1>="Y" ELSE FLAG<1,1>="N"
READ REC FROM DAILY.ORDER.INVOICE, CONO:INVOICE.NO THEN FLAG<1,2>="Y" ELSE FLAG<1,2>="N"
READ REC FROM OPEN.RECV, CONO:INVOICE.NO THEN FLAG<1,3>="Y" ELSE FLAG<1,3>="N"
BEGIN CASE
	CASE FLAG<1,1> = "N" AND FLAG<1,2> = "N" AND FLAG<1,3> = "Y"
    		ERRMSG = "This is a manual invoice"
    		GOTO 99999
  	CASE FLAG<1,1> = "Y" AND FLAG<1,2> = "N" AND FLAG<1,3> = "Y"
    		MODE = "OLD"
  	CASE FLAG<1,1> = "N" AND FLAG<1,3> = "N"
    		MODE = "NEW"
		MATREAD IVC.REC FROM DAILY.ORDER.INVOICE, CONO:INVOICE.NO ELSE
	      		BEGIN CASE
       	 		CASE MENU = "CREDIT"
          				ERRMSG = "Credit Memo is not on file"
      				CASE MENU = "DEBIT"
       				ERRMSG = "Debit Memo is not on file"
	     			CASE 1
       				ERRMSG = "Invoice is not on file"
      			END CASE
			GOTO 99999
	    	END
	CASE 1
		ERRMSG = "*** ERROR ***"
    		MODE = "ERROR"; GOTO 99999
END CASE

MATREAD ORD.REC FROM ORDER, CONO:IVC.ORDER.NO ELSE MAT ORD.REC = ''
RETURN
*

*---- Verify Invoice number when A/R is not active
*
3000 *
MODE = ""
MATREAD IVC.REC FROM ORDER.INVOICE, CONO:INVOICE.NO THEN
	MODE = "OLD"
END ELSE
	MATREAD IVC.REC FROM DAILY.ORDER.INVOICE, CONO:INVOICE.NO ELSE
    		BEGIN CASE
      			CASE MENU = "CREDIT"
        			ERRMSG = "Credit Memo is not on file"
      			CASE MENU = "DEBIT"
        			ERRMSG = "Debit Memo is not on file"
      			CASE 1
        			ERRMSG = "Invoice is not on file"
    		END CASE
		GOTO 99999
    	END
END
RETURN

99999
CLOSE CONTROL
CLOSE CUSTOMER
CLOSE ORDER
CLOSE ORDER.DETAIL
CLOSE BOL
CLOSE ORDER.INVOICE
CLOSE DAILY.ORDER.INVOICE
CLOSE VOID.INVOICES
CLOSE INVENTORY
CLOSE INVOICE.CODE
CLOSE SHIP.TO
IF ERRMSG # "" THEN
	VAL = RBO.setProperty('','ServerStatus','E')
	VAL = RBO.setProperty('','ServerMessage',ERRMSG)
END ELSE
	VAL = RBO.setProperty('','ServerStatus','')
END
* End of method code
RETURN


