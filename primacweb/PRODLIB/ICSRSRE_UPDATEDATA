SUBROUTINE ICSRSRE_UPDATEDATA(CONO,DSR.ID,COMPLETE)

$INCLUDE WWINSERT RBO.H

$INCLUDE CPYLIB COMMON1
$INCLUDE ICS.CPYLIB COM.INV.LINK
$INCLUDE ICS.CPYLIB COM.INV.MAIN  
$INCLUDE ICS.CPYLIB COM.INV.SERIAL
$INCLUDE POS.CPYLIB COM.PO.INTRF
*$INCLUDE JCS.CPYLIB COM.INV.STATS

$DEFINE PO
$DEFINE INVHIST
$DEFINE VEND
*$DEFINE JOB
$DEFINE COMPANY
$DEFINE APSFILEVARS
$DEFINE INVENTORY
$DEFINE WAREHOUSE
$DEFINE FILEVARS
$DEFINE INVRECEIPTS
$DEFINE INVAUDITHIST
$DEFINE INVSERIAL
$DEFINE DAILYSTOCK
$DEFINE CATEGORY
$DEFINE INVWHSE
$DEFINE INVWHSELOC
$DEFINE INVRECPWHSE
$DEFINE ICSID
$DEFINE COMPANY
$DEFINE SSTK

*$DEFINE EDITCOM
*$DEFINE ECD
*$INCLUDE CPYLIB EDIT.COM
*$INCLUDE CPYLIB EDIT.COM.DRIVER

$INCLUDE PMC.CPYLIB PO

$INCLUDE ICS.CPYLIB SAVE.STOCK.REC
$INCLUDE ICS.CPYLIB INV.HIST
$INCLUDE PMC.CPYLIB VEND
$INCLUDE JCS.CPYLIB JOB
$INCLUDE PMC.CPYLIB COMPANY
$INCLUDE APS.CPYLIB APS.FILE.VARS
$INCLUDE ICS.CPYLIB INVENTORY
$INCLUDE ICS.CPYLIB INV.WHSE
$INCLUDE ICS.CPYLIB WAREHOUSE
*$INCLUDE CPYLIB SYSCOM
$INCLUDE CPYLIB FILE.VARS
$INCLUDE CPYLIB CHAR
*
$INCLUDE ICS.CPYLIB ICS.ID         
$INCLUDE ICS.CPYLIB INV.WHSE.LOC   
$INCLUDE ICS.CPYLIB CATEGORY       
$INCLUDE ICS.CPYLIB INV_RECEIPTS   
$INCLUDE ICS.CPYLIB INV_RECP_WHSE  
$INCLUDE ICS.CPYLIB INV_AUDIT_HIST 
$INCLUDE ICS.CPYLIB INV_SERIAL     
$INCLUDE ICS.CPYLIB DAILY_STOCK
$INCLUDE ICS.CPYLIB PO.RSKI.XREF
$INCLUDE ICS.CPYLIB PO.MAN.XREF 
*
DEFFUN DIVISION.POSITION(CONO,CONTROL.FILE,DIV.CODE)        
DEFFUN CURRENT.PERIOD(CONO,CONTROL.FILE,DIV.POS,FISCAL.FLAG)
*
*----------------------- READ PROC ------------------------------
*

HERRMSG='' ;*T27306
*

*---------------------- OPEN ALL FILES --------------------------
*
OPEN "","COMPANY" TO COMPANY ELSE
   ERRMSG = "CANNOT OPEN COMPANY FILE";GOTO 93000
END
OPEN "","CONTROL" TO CONTROL ELSE
   ERRMSG = "CANNOT OPEN CONTROL FILE";GOTO 93000
END
OPEN "","PO.RSKI.XREF" TO PO.RSKI.XREF ELSE
   ERRMSG ="CANNOT OPEN PO.RSKI.XREF FILE";GOTO 93000
END
OPEN "","PO.MAN.XREF" TO PO.MAN.XREF ELSE
   ERRMSG ="CANNOT OPEN PO.MAN.XREF FILE";GOTO 93000
END
OPEN "","PO" TO PO ELSE
   ERRMSG = "CANNOT OPEN PO FILE"; GOTO 93000
END
OPEN "","CATEGORY" TO CATEGORY ELSE
   ERRMSG = "CATEGORY FILE IS MISSING"; GOTO 93000
END
OPEN "","INVENTORY" TO INVENTORY ELSE
   ERRMSG = "CANNOT OPEN INVENTORY FILE";GOTO 93000
END
OPEN "","INV.STATS" TO INV.STATS ELSE
   ERRMSG = "INV.STATS FILE IS MISSING"; GOTO 93000 
END
OPEN "","INV.WHSE.LOC" TO INV.WHSE.LOC ELSE
   ERRMSG = "INV.WHSE.LOC IS MISSING"; GOTO 93000 
END
OPEN "","INV.WHSE" TO INV.WHSE ELSE
   ERRMSG = "INV.WHSE IS MISSING"; GOTO 93000 
END
OPEN "","INV.HIST" TO INV.HIST ELSE
   ERRMSG = "INV.HIST IS MISSING"; GOTO 93000 
END
OPEN "","INV_AUDIT_HIST" TO INV_AUDIT_HIST ELSE
   ERRMSG = "INV_AUDIT_HIST FILE IS MISSING"; GOTO 93000 
END
OPEN "","INV_AUDIT_TAG" TO INV_AUDIT_TAG ELSE
   ERRMSG = "INV_AUDIT_TAG FILE IS MISSING"; GOTO 93000 
END
OPEN "","INV.JOB.STATS" TO INV.JOB.STATS ELSE
   ERRMSG = "INV.JOB.STATS FILE IS MISSING"; GOTO 93000 
END

OPEN "","JOB" TO JOB ELSE
   ERRMSG = "JOB FILE IS MISSING"; GOTO 93000 
END
OPEN "ACCRUED.LIAB.HIST" TO ACCRUED.LIAB.HIST ELSE
   ERRMSG = "ACCRUED.LIAB.HIST IS MISSING" ; GOTO 93000
END
OPEN "","CATEGORY" TO CATEGORY ELSE
   ERRMSG = "CATEGORY FILE IS MISSING"; GOTO 93000
END
OPEN "","WAREHOUSE" TO WAREHOUSE ELSE
   ERRMSG = "WAREHOUSE FILE IS MISSING"; GOTO 93000
END
OPEN '','DAILY_STOCK' TO DAILY_STOCK ELSE
   ERRMSG='DAILY_STOCK FILE IS MISSING';GOTO 93000
END
OPEN '','INV_SERIAL' TO INV_SERIAL ELSE
   ERRMSG='INV_SERIAL IS MISSING'; GOTO 93000
END
*
*------------------------ GET CONO -------------------------------
*
*CONO = ""
*CALL GET.CONO(CONO,MAT COMP.REC)
*MAT COMP.REC=""


DEFFUN CALC_DIAM(COST.QTY,STK.QTY,MAT INV.REC)

DIM COMP.REC(100)



MATREAD COMP.REC FROM COMPANY,CONO THEN
  
IF CONO = "END" THEN GOTO 99990
 IF CO.APS.R.INTRF > 1 THEN
   OPEN "","VEND" TO VEND ELSE
      ERRMSG = "CANNOT OPEN VEND FILE"; GOTO 93000 
   END
   OPEN "","VEND.STATS" TO VEND.STATS ELSE
      ERRMSG = "CANNOT OPEN VEND.STATS FILE";GOTO 93000 
   END
   OPEN "","VEND.PO.STATS" TO VEND.PO.STATS ELSE
      ERRMSG="CANNOT OPEN VEND.PO.STATS FILE";GOTO 93000 
   END
   OPEN "","VEND.PROD.STATS" TO VEND.PROD.STATS ELSE
      ERRMSG = "CANNOT OPEN VEND.PROD.STATS FILE"; GOTO 93000 
   END
 *END
END ELSE
 MAT COMP.REC=""
END
READ DIVISION.REC FROM CONTROL, CONO:"DIVISIONS" ELSE
   ERRMSG = "CANNOT LOCATE DIVISIONS CONTROL FILE RECORD"; GOTO 93000
END
READ SECURITY.REC FROM CONTROL, CONO:"DIV.SECURITY" ELSE
   ERRMSG = "CANNOT LOCATE DIV.SECURITY CONTROL FILE RECORD:"; GOTO 93000
END
MAT EDIT.COM="" ; TYP=0 ; CALL EDIT.SUB    
*
*------------------- MAIN PROCESSING ------------------------------
*
DONE=0



LOOP
   READNEXT DSR.ID ELSE DONE = 1
UNTIL (DONE) DO
   RSMAN.ID = DSR.ID
  
   PO.CODE = FIELD(DSR.ID,"!",1)[4,99]
 
   RSXRF.ID=CONO:PO.CODE
   DSR.STATUS=''
   ERROR=0
*T27306 v
   PO.PRESENT=1
   MAN.ENTRY = 0
   MAT PO.REC = ''
   PO.DIV.OWNER = '00'
 

   MATREAD DSR.REC FROM DAILY_STOCK,DSR.ID THEN
 

      READV TESTX FROM PO,CONO:PO.CODE,1 ELSE
         PO.PRESENT = 0
         PO.VEND.NO = DSR.VEND
         MATREAD WHSE.REC FROM WAREHOUSE,CONO:DSR.WHSE<1,1> THEN
            IF WHS.DIV = '' THEN WHS.DIV = '00'
            PO.DIV.OWNER = WHS.DIV
         END
         MATREAD RSMAN.REC FROM PO.MAN.XREF, DSR.ID THEN
            SCNT = DCOUNT(RSMAN.RS.NO,VM)
            IF SCNT > 0 THEN
               MAN.ENTRY = 1
               FOR I = 1 TO SCNT
                  FIND RSMAN.RS.NO<1,I> IN DSR.SERIAL SETTING FLD,VL,SVL THEN
                     MATREAD ISTK.REC FROM INV_SERIAL,CONO:RSMAN.RS.NO<1,I> THEN
                        IF ISTK.POST.DATE = '' THEN
                           PTR = 1
                           LOOP
                              LOCATE ISTK.PROD IN PO.PROD.NUM<1>,PTR SETTING FND THEN
                                 IF ISTK.WHSE = PO.WHSE<1,FND> THEN
                                    PTR = 0
                                 END ELSE
                                    PTR = FND+1
                                 END
                              END ELSE
                                 INS ISTK.PROD BEFORE PO.PROD.NUM<1,RSMAN.LINE.NO<1,I>>
                                 INS ISTK.WHSE BEFORE PO.WHSE<1,RSMAN.LINE.NO<1,I>>
                                 INS ISTK.UNIT.COST BEFORE PO.GROS.PRICE<1,RSMAN.LINE.NO<1,I>>
                                 INS ISTK.UOM BEFORE PO.UNIT.FLG<1,RSMAN.LINE.NO<1,I>>
                                 PTR = 0
                              END
                           WHILE PTR DO REPEAT
                        END
                     END
                  END
               NEXT I
            END
         END
      END
   END
   IF PO.PRESENT AND NOT(MAN.ENTRY) THEN
      MATREAD PO.REC FROM PO, CONO:PO.CODE ELSE
         DSR.STATUS<1,-1> = "Cannot locate P/O record - ":CONO:PO.CODE
         ERROR = 1
         GOTO BAD.DATA
      END
   END


* MATREADU PO.REC FROM PO, CONO:PO.CODE THEN
*T27306 ^
   DIV.CODE = PO.DIV.OWNER; USER.ID = UPCASE(@LOGNAME); ERRMSG = ''
   CALL CK.DIV.SEC.SUB(CONO,DIV.CODE,USER.ID,ERRMSG)               
   IF ERRMSG # '' THEN                                             
      DSR.STATUS<1,-1>=ERRMSG
      ERROR = 1
      GOTO BAD.DATA ;*T27306
   END ELSE                                                        
      GOSUB GET.CURRENT.PERIOD                                                    
      IF ERRMSG#'' THEN
         DSR.STATUS<1,-1>=ERRMSG
         ERROR=1
         GOTO BAD.DATA ;*T27306
      END
*T28200 v
      IF DSR.PERIOD < CUR.PERIOD THEN
         ERRMSG='Cannot post receipt to a PRIOR PERIOD!'
         DSR.STATUS<1,-1>=ERRMSG
         ERROR=1
         GOTO BAD.DATA
      END
*T28200 ^
   END
*T27306 v
* END ELSE
*   DSR.STATUS<1,-1> = "Cannot locate P/O record - ":CONO:PO.CODE
*   ERROR=1
* END
*T27306 ^
   MATREAD RSMAN.REC FROM PO.MAN.XREF,RSMAN.ID ELSE
      DSR.STATUS<1,-1> = "Cannot locate manifest record - ":DSR.ID
      ERROR=1
      GOTO BAD.DATA ;*T27306
   END
*T27904 v
   IF DSR.TYPE = "J" THEN
      MATREAD RSXRF.REC FROM PO.RSKI.XREF,RSXRF.ID ELSE
         MAT RSXRF.REC = ""
      END
   END ELSE
*T27904 ^
      MATREAD RSXRF.REC FROM PO.RSKI.XREF,RSXRF.ID ELSE
         DSR.STATUS<1,-1>='Cannot locate PO.RSKI.XREF record ': RSXRF.ID
         ERROR=1
         GOTO BAD.DATA ;*T27306
      END
   END ; * T27904

   SV.CNT=0
   MATREAD DSR.REC FROM DAILY_STOCK,DSR.ID THEN
      IF NOT(ERROR) THEN
         MAT SAVE.STK.REC=""
         GOSUB SETDSRREC
         SSTK.PROD = DSR.PROD
         SSTK.WHSE=DSR.WHSE
         SSTK.UNIT.PRICE= DSR.UN.PRICE
         SSTK.DISCOUNT=DSR.DISCOUNT
         SSTK.TOT.ONORD = PO.TOT.ONORD                            
         SSTK.TOT.RECEVED = PO.TOT.RECEVED                        
         SSTK.PREV.RECEVED = PO.PREV.RECEVED                      
         SSTK.QTY.OPEN = PO.QTY.OPEN                              
         SSTK.TOT.CANCEL = PO.TOT.CANCEL                          
         SSTK.TOT.REC = 0                                         
         SSTK.PROD.TYPE = PO.PROD.TYPE                            
         SSTK.UNIT.FLG = PO.UNIT.FLG                              
         SSTK.DEL.DATE = PO.DEL.DATE                              
         SSTK.STATUS = DSR.LINE.STATUS
         
         SSTK.SERIAL = DSR.SERIAL 
         SSTK.LOC = DSR.LOC 
         SSTK.PO.LINE=DSR.PO.LINE
*T27902 v Double-check ISTK.POST.DATE
         FOR P = 1 TO DCOUNT(DSR.PROD,VM)
            FOR S = 1 TO DCOUNT(DSR.SERIAL<1,P>,SVM)
               MATREAD ISTK.REC FROM INV_SERIAL,CONO:DSR.SERIAL<1,P,S> THEN
                  IF ISTK.POST.DATE # '' THEN
                     DSR.POST.DATE<1,P,S> = ISTK.POST.DATE
                     DSR.QTY<1,P,S> = 0
                     DSR.STK.QTY<1,P,S> = 0
                     DSR.DIAM<1,P,S> = 0
                  END
               END
            NEXT S
         NEXT P
*T27902 ^
         SSTK.QTY = DSR.QTY             
         SSTK.MILL.ID = DSR.MILL.ID     
         SSTK.SHEET = DSR.STK.QTY         
         SSTK.DIAM = DSR.DIAM           
         SSTK.LOC.STATUS = DSR.LOC.STATUS   
         SSTK.DATE = DSR.DATE
         SSTK.PERIOD = DSR.PERIOD
         SSTK.SHIP.NO = DSR.SHPMNT.NO
         SSTK.SHIP.TOT = DSR.SHPMNT.TOT
         SSTK.VEND = DSR.VEND                           
         SSTK.UNIT.FLG = DSR.UOM         
         SSTK.JOB.ALC = DSR.JOB.ALC      
         SSTK.JOB.REC = DSR.JOB.REC      
         SSTK.COMPLETE = COMPLETE    
         SSTK.NO.PIECES = DSR.NO.PIECES 
         SSTK.POST.DATE=DSR.POST.DATE    ;*27009
         
         ;* SSTK.JOB.QTY VALUES
 
*T27306 
   *CALL RS.STOCK.REC.UPDATE(CONO,PO.CODE,MAT COMP.REC,MAT RSXRF.REC,MAT RSMAN.REC,ERROR,HERRMSG,CUR.PERIOD,PO.PRESENT)
  CALL ICSRSRE_STOCK_UPDATE(CONO,PO.CODE,MAT COMP.REC,MAT RSXRF.REC,MAT RSMAN.REC,ERROR,HERRMSG,CUR.PERIOD,PO.PRESENT)
*STATUS=RBO.setProperty('','TEST',"ERR":ERROR)

*********
BAD.DATA: 
*********
         IF ERROR THEN
            DSR.LINE.STATUS=SSTK.STATUS
            DSR.LOC.STATUS=SSTK.LOC.STATUS
            DSR.JOB.STATUS=SSTK.JOB.STATUS
            DSR.COMPLETE=COMPLETE
            MATWRITE DSR.REC ON DAILY_STOCK,DSR.ID
         END ELSE
            DELETE DAILY_STOCK,DSR.ID
            PO.CHG.FLG=""
*T25740 v
*C40540 v
            NO.PROD = DCOUNT(PO.PROD.NUM,VM)
            IF PO.PRESENT THEN ;*T27306 v
               FOR P = 1 TO NO.PROD
*T27306 v
                  MATREAD INV.REC FROM INVENTORY,CONO:PO.PROD.NUM<1,P> ELSE MAT INV.REC = ''
                  TEST.OPEN = ABS(PO.QTY.OPEN<1,P>)
*T28054 v
                  IF TEST.OPEN > 0 AND TEST.OPEN <= 50 THEN
                     IF INV.UNIT<1,3>='MSI' OR TEST.OPEN <= 9 THEN
                        PO.TOT.CANCEL<1,P> += (PO.TOT.ONORD<1,P>-PO.TOT.CANCEL<1,P>-PO.TOT.RECEVED<1,P>)
                        PO.QTY.OPEN<1,P> = 0
                        IF PO.TOT.CANCEL<1,P> < 0 THEN PO.TOT.CANCEL<1,P> = 0
                     END
                  END
*T28054 ^
*           TEST.OPEN = ABS(PO.TOT.ONORD<1,P> - PO.TOT.RECEVED<1,P> - PO.TOT.CANCEL<1,P>)
                  ;* Migrate any remainder qty of 1000 or less (costing qty)
                  ;* to the PO Cancel Qty.
*           IF TEST.OPEN <= 1000 THEN
*             PO.TOT.CANCEL<1,P> += TEST.OPEN
*             PO.TOT.CANCEL<1,P> += PO.TOT.ONORD<1,P> - PO.TOT.RECEVED<1,P>
*             PO.QTY.OPEN<1,P>  = 0
*           END
*T27306 ^
               NEXT P
*C40540 ^
*T25740   ^
*T28090 v      MATWRITE PO.REC ON PO,CONO:PO.CODE
            END ;*T27306 ^
         END
      END ELSE
         MATWRITE DSR.REC ON DAILY_STOCK,DSR.ID 
      END
      MATWRITE RSXRF.REC ON PO.RSKI.XREF,RSXRF.ID
*T28090 v
      IF DCOUNT(RSMAN.RS.NO,VM) > 0 THEN
         MATWRITE RSMAN.REC ON PO.MAN.XREF,RSMAN.ID 
      END ELSE
         DELETE PO.MAN.XREF,RSMAN.ID
         IF PO.PRESENT THEN
            MAN.ID = FIELD(DSR.ID,"!",2)
            LOCATE MAN.ID IN PO.MAN<1> SETTING MFND THEN DEL PO.MAN<1,MFND>
         END
      END
      IF PO.PRESENT THEN MATWRITE PO.REC ON PO,CONO:PO.CODE
*T28090 ^
   END
REPEAT
GOTO 99999
*
**************************************************************************
**** S U B R O U T I N E S ***********************************************
**************************************************************************
*
**
SETDSRREC:
S.CNT=DCOUNT(DSR.SERIAL,VM)

   DIM S.REC(25)
   S.PO.LINE.NO=DSR.PO.LINE
   S.SERIAL=DSR.SERIAL
   S.LINE.STATUS=DSR.LINE.STATUS
   S.PROD.NO=DSR.PROD
   S.UNIT=DSR.UOM
   S.WHSE=DSR.WHSE
   S.LOC=DSR.LOC
   S.UN.PRICE=DSR.UN.PRICE
   S.QTY=DSR.QTY
   S.STK.QTY=DSR.STK.QTY
   S.POST.DATE=DSR.POST.DATE
   S.DIAM=DSR.DIAM
   S.MILL.ID=DSR.MILL.ID
   S.COMPLETE=COMPLETE
   S.STATUS=DSR.STATUS

   DSR.SERIAL=""
   DSR.PO.LINE=""
   DSR.QTY=""
   DSR.STK.QTY=""
   DSR.UOM=""
   DSR.WHSE=""
   DSR.PROD=""
   DSR.UN.PRICE=""
   DSR.POST.DATE=""
   DSR.COMPLETE=""
   DSR.MILL.ID=""
   DSR.DIAM=""
   DSR.LOC=""


FOR SS= 1 TO S.CNT
   *MAT DSR.REC=""
LOCATE S.PO.LINE.NO<1,SS> IN DSR.PO.LINE<1>,1 BY 'AR' SETTING LN THEN
*T27902 ^

    SV.CNT=DCOUNT(DSR.SERIAL<1,LN>,SVM)
  END ELSE
    SV.CNT=0
  END

*     T27902 v
  IF NOT(SV.CNT) THEN
    INS '' BEFORE DSR.PO.LINE<1,LN>
    INS '' BEFORE DSR.LINE.STATUS<1,LN>
    INS '' BEFORE DSR.PROD<1,LN>
    INS '' BEFORE DSR.UOM<1,LN>
    INS '' BEFORE DSR.WHSE<1,LN>
    INS '' BEFORE DSR.UN.PRICE<1,LN>
    INS '' BEFORE DSR.LOC<1,LN>
    INS '' BEFORE DSR.SERIAL<1,LN>
    INS '' BEFORE DSR.QTY<1,LN>
    INS '' BEFORE DSR.STK.QTY<1,LN>
    INS '' BEFORE DSR.POST.DATE<1,LN>
    INS '' BEFORE DSR.DIAM<1,LN>
    INS '' BEFORE DSR.MILL.ID<1,LN>
  END
*     T27902 ^
  SV.CNT+=1
  DSR.PO.LINE<1,LN> = S.PO.LINE.NO<1,SS>
  DSR.COMPLETE<1,LN> = S.COMPLETE<1,SS> ; * T27920
  DSR.LINE.STATUS<1,LN> = S.LINE.STATUS<1,LN>
  DSR.PROD<1,LN> = S.PROD.NO<1,SS>
  DSR.UOM<1,LN> = S.UNIT<1,SS>
  DSR.WHSE<1,LN> = S.WHSE<1,SS>
  DSR.UN.PRICE<1,LN> = S.UN.PRICE<1,SS>
  DSR.LOC<1,LN,SV.CNT> = S.LOC<1,SS>
  DSR.SERIAL<1,LN,SV.CNT>=S.SERIAL<1,SS>
  DSR.QTY<1,LN,SV.CNT>=S.QTY<1,SS>
  DSR.STK.QTY<1,LN,SV.CNT>=S.STK.QTY<1,SS>
*T27306 v Had subscripts reversed
  DSR.POST.DATE<1,LN,SV.CNT>=S.POST.DATE<1,SS>;*T27009
  IF DSR.POST.DATE<1,LN,SV.CNT>='' THEN POST.FLAG=1;*T27941
  MATREAD INV.REC FROM INVENTORY,CONO:S.PROD.NO<1,SS> THEN
    DSR.DIAM<1,LN,SV.CNT>=CALC_DIAM(S.QTY<1,SS>,S.STK.QTY<1,SS>,MAT INV.REC)
  END ELSE
    MAT INV.REC=''
  END
  DSR.STATUS=S.STATUS
  DSR.MILL.ID<1,LN,SV.CNT>=S.MILL.ID<1,SS>
NEXT SS


RETURN

************
GET.CURRENT.PERIOD: 
************
**
DIV.POS=DIVISION.POSITION(CONO,CONTROL,DIV.CODE)         
CUR.PERIOD = ''
BEGIN CASE                                              
   CASE DIV.POS<1,1>=''                                  
      DIV.POS=DIV.POS<1,2>                                
      CUR.PERIOD=CURRENT.PERIOD(CONO,CONTROL,DIV.POS,"IC")
      IF CUR.PERIOD<1,1>='' THEN                          
         CUR.PERIOD=CUR.PERIOD<1,2>                        
      END ELSE                                            
         IF CUR.PERIOD<1,1>='-2' THEN                      
            ERRMSG=CUR.PERIOD<1,2>                          
            GOTO 93000                                     
         END                                               
      END                                                 
   CASE DIV.POS<1,1>='-1'                                
      ERRMSG=DIV.POS<1,2>                                 
      GOSUB 91000                                         
      RELEASE PO, CONO:PO.CODE                            
   CASE DIV.POS<1,1>='-2'                                
      ERRMSG=DIV.POS<1,2>                                 
      GOTO 93000                                         
END CASE                                                
RETURN                                                  
**
*----------------------- CALLS FOR SYSCOM ---------------------------
*
91000 
   STATUS = RBO.setProperty('','ServerStatus',1)
   STATUS = RBO.setProperty('','ServerMessage',ERRMSG:"!!":DSR.STATUS)
RETURN
92000 
   STATUS = RBO.setProperty('','ServerStatus',2)
    STATUS = RBO.setProperty('','ServerMessage',ERRMSG:"$$":DSR.STATUS)
RETURN
93000 
 STATUS = RBO.setProperty('','ServerStatus',3)
STATUS = RBO.setProperty('','ServerMessage',ERRMSG:"%%":DSR.STATUS)
RETURN 

99990 PROCWRITE "END"
*
*------------------------ END OF JOB -------------------------------
*
99999 *
END
