SUBROUTINE getICSRCAMDatas
********************************************************************************
*   Program name :- 
*   Created:- 7/7/2003
*T27990 * Mods for ICS.IWH.SUB (ERRMSG)
*------------------------------------------------------------------------------*
*
*  This server event is triggered from within the {m:WW:uObject=ReadData}, {m- *
*  :WW:uObject=DeleteData} and {m:WW:uObject=WriteData} server events. In eac- *
*  h case, this {m:WW:uObject=PostRead} event occurs after the physical datab- *
*  ase read, but before values are extracted from the database record. This p- *
*  rovides a window of opportunity in which the database values may be direct- *
*  ly manipulated. The API functions
*  RBO.setDBVals() and RBO.getDBVals() are - *
*  used to do this.
*  
*                - *

* In Properties:
* --------------
*  
*
* Out Properties:
* ---------------
*  
********************************************************************************
$INCLUDE WWINSERT RBO.H
$INCLUDE CPYLIB COMMON1
$INCLUDE ICS.CPYLIB COM.INV.MAIN  
$INCLUDE ICS.CPYLIB COM.INV.SERIAL
$INCLUDE ICS.CPYLIB COM.INV.LINK  
$INCLUDE POS.CPYLIB COM.PO.INTRF
$INCLUDE CPYLIB CHAR

$DEFINE PO
$INCLUDE PMC.CPYLIB PO
$DEFINE SSTK
$INCLUDE ICS.CPYLIB SAVE.STOCK.REC
$INCLUDE PMC.CPYLIB COMPANY
$DEFINE INVENTORY
$INCLUDE ICS.CPYLIB INVENTORY
$INCLUDE ICS.CPYLIB WAREHOUSE
$INCLUDE ICS.CPYLIB INV.STATS
$INCLUDE ICS.CPYLIB INV.JOB.STATS
$INCLUDE JCS.CPYLIB JOB
$DEFINE INVWHSE
$INCLUDE ICS.CPYLIB INV.WHSE
$INCLUDE ICS.CPYLIB INV.HIST
$DEFINE APSFILEVARS
$INCLUDE APS.CPYLIB APS.FILE.VARS
$DEFINE FILEVARS
$INCLUDE CPYLIB FILE.VARS
$INCLUDE APS.CPYLIB VEND.STATS
$INCLUDE APS.CPYLIB VEND.PO.STATS
$INCLUDE APS.CPYLIB VEND.PROD.STATS
$INCLUDE POS.CPYLIB ACCRUED.LIAB.HIST
$DEFINE ICSID
$INCLUDE ICS.CPYLIB ICS.ID
$DEFINE INVWHSELOC
$INCLUDE ICS.CPYLIB INV.WHSE.LOC
$DEFINE CATEGORY
$INCLUDE ICS.CPYLIB CATEGORY
$DEFINE INVRECEIPTS
$INCLUDE ICS.CPYLIB INV_RECEIPTS
$DEFINE INVRECPWHSE
$INCLUDE ICS.CPYLIB INV_RECP_WHSE
$DEFINE INVAUDITHIST
$INCLUDE ICS.CPYLIB INV_AUDIT_HIST
$DEFINE INVSERIAL
$INCLUDE ICS.CPYLIB INV_SERIAL

$INCLUDE ICS.CPYLIB INV.CNV

OPEN '','INV_RECEIPTS' TO INV_RECEIPTS ELSE ERRMSG='INV_RECEIPTS FILE IS MISSING' ; GOTO 99999
OPEN '','WAREHOUSE' TO WAREHOUSE ELSE ERRMSG='WAREHOUSE FILE IS MISSING' ; GOTO 99999
OPEN '','INVENTORY' TO INVENTORY ELSE ERRMSG='INVENTORY FILE IS MISSING' ; GOTO 99999
OPEN '','CATEGORY' TO CATEGORY ELSE ERRMSG='CATEGORY FILE IS MISSING' ; GOTO 99999
OPEN '','INV.WHSE' TO INV.WHSE ELSE ERRMSG='INV.WHSE FILE IS MISSING' ; GOTO 99999

* DECLARING THE VARIABLE
	RecpDate = ''
	PONum	= ''
	RecPer	= ''	
	RecvQty  = ''
	UsedQty  = ''
	RecvCost = ''
	AdjCost = ''
	RecpNo  = ''
	VendNo  = ''
	AdjPer = ''
	ResvQty = ''

INVR_RecpDate = ''
INVR_PONum = ''
INVR_RecvQty = ''
INVR_ResvQty = ''
INVR_UsedQty = ''
INVR_RecvCost = ''
INVR_AdjCost = ''
INVR_VendNo = ''
INVR_RecpNo = ''
INVR_RecPer = ''
SSTK.PERIOD = ''
ERRMSG = ''

MAT WHSE.REC= ''
MAT INV.REC = ''
MAT CATG.REC= ''
MAT IWH.REC = ''
STATUS = RBO.getProperty('','PRODUCT',PROD)
STATUS = RBO.getProperty('','WHSENO',WHSE)
STATUS = RBO.getProperty('','PMCProperty',PMCPROPERTY)
CONO = PMCPROPERTY<1,4>

GEN.DIV = "00";GEN.DEPT = "00";GEN.CCTR = "000"

   MATREAD WHSE.REC FROM WAREHOUSE,CONO:WHSE ELSE
    MAT WHSE.REC = ""                               
  END                                                
  IF WHS.DIV = "" THEN WHS.DIV = GEN.DIV             
  DV.DP.CC = WHS.DIV:GEN.DEPT:GEN.CCTR
  MAT INAH.REC=''              
  INAH.PROD=PROD
  INAH.WHSE=WHSE
*  INAH.DATE=SSTK.DATE
  INAH.TYPE='R'                
  INAH.SRC='IR'                
*  INAH.TRAN=PO.CODE
  INAH.PERIOD=SSTK.PERIOD<1>
  PERIOD=SSTK.PERIOD<1>
  INAH.DV.DP.CC=DV.DP.CC
*  IF PO.ACCRUE='Y' THEN
    INAH.ACCT=CATG.INV
    INAH.ACCR.ACCT=CATG.ACCRU.LIAB
*  END

      MATREAD INV.REC FROM INVENTORY, CONO:PROD THEN
        MATREAD CATG.REC FROM CATEGORY, CONO:INV.LINE THEN
          IWH.ID=CONO:PROD:'!':WHSE
          INV.ID=CONO:PROD
          MATREADU IWH.REC FROM INV.WHSE , IWH.ID THEN
            MAT ORG.IWH.REC = MAT IWH.REC         
	   END
        END   
      END 
	ADJ.COST = ''
	ADJ.PERIOD = ''
	MAT INAH.REC=''
       INAH.PROD=PROD
       INAH.WHSE=WHSE
       ACTION=1;*build INV.WHSE fifo buckets
       TMP.CNT='' ; LAST='' ; TMP.ARR=''
       PERIOD='' ; *include future posted receipts too. 
       MAT ORG.IWH.REC = MAT IWH.REC
	OPEN.FLAG = 1
 *T27990       CALL ICS_IWH_SUB (CONO,PERIOD,TMP.ARR,TMP.CNT,LAST,ACTION,OPEN.FLAG)
	CALL ICS_IWH_SUB (CONO,PERIOD,TMP.ARR,TMP.CNT,LAST,ACTION,OPEN.FLAG,ERRMSG)
	RELEASE
	$INCLUDE ICSBP INV.UM.CNV
      
	*GOSUB BUILD.SCREEN
	RCNT=DCOUNT(IWH.RECP.NO,VM)
	*STATUS = RBO.setProperty('','ServerMessage', RCNT)
	*RETURN

	FOR R=1 TO RCNT
  		S.ORIG=IWH.ORG.FI<1,R>
		S.USED=S.ORIG-IWH.QTY.FI<1,R>
		S.RESV=S.ORIG-IWH.RSV.FI<1,R>-S.USED
		INVR_RecpDate<1,R>=OCONV(IWH.RECV.FI<1,R>,"D2/") 
		INVR_PONum<1,R>=IWH.PO.NO.FI<1,R>
		INVR_RecvQty<1,R>=OCONV(INT(((S.ORIG/ICR.DV1)*ICR.MT1)/ICR.DV2+.5),ICR.CNV)
		INVR_ResvQty<1,R>=OCONV(INT(((S.RESV/ICR.DV1)*ICR.MT1)/ICR.DV2+.5),ICR.CNV)
		INVR_UsedQty<1,R>=OCONV(INT(((S.USED/ICR.DV1)*ICR.MT1)/ICR.DV2+.5),ICR.CNV)
		INVR_RecvCost<1,R>=OCONV(IWH.COST.FI<1,R>,"MD4")
		INVR_AdjCost<1,R>=OCONV(ADJ.COST<1,R>,"MD4")
		INVR_VendNo<1,R>=IWH.VDR.FI<1,R>	
		INVR_RecpNo<1,R>=IWH.RECP.NO<1,R>
		INVR_RecPer<1,R>=IWH.RECP.PERIOD<1,R>
		*INVR_AdjPerS<1,R>=ADJ.PERIOD<1,R>
	NEXT R

	* Insert method code here
	STATUS = RBO.setProperty('','RecpDate',INVR_RecpDate)
	STATUS = RBO.setProperty('','PONum',INVR_PONum)
	STATUS = RBO.setProperty('','RecPer',INVR_RecPer)	
	STATUS = RBO.setProperty('','RecvQty',INVR_RecvQty)
	STATUS = RBO.setProperty('','UsedQty',INVR_UsedQty)
	STATUS = RBO.setProperty('','RecvCost',INVR_RecvCost)
	STATUS = RBO.setProperty('','AdjCost',INVR_AdjCost)
	STATUS = RBO.setProperty('','RecpNo',INVR_RecpNo)
	STATUS = RBO.setProperty('','VendNo',INVR_VendNo)
	*STATUS = RBO.setProperty('','AdjPer',INVR_AdjPer)
	STATUS = RBO.setProperty('','ResvQty',INVR_ResvQty)
	RETURN

* End of method code
99999*
STATUS = RBO.setProperty('','ServerStatus',1)
STATUS = RBO.setProperty('','ServerMessage',ERRMSG)
RETURN


