SUBROUTINE GetInvSalesDate
********************************************************************************
*   Program name :- GetInvSalesDate
*   Created:- 10/29/2002
*   By:- Abdullah Jibaly
*   See:- PMCBP SALES.DATES
*------------------------------------------------------------------------------*
*
*  This is a server event which is triggered after the object has been create- *
*  d on the RedBack Server. Note "Server Events" are pre-defined events to wh- *
*  ich application developers can assign BASIC code routines.                                                      - *
*
* In Properties:
* --------------
*   ID, Division,  
*
* Out Properties:
* ---------------
* CurrPeriod, Mon, Qtr, EndDate, Wks
* SystemModule, SystemModuleYear, SystemModulePr,
* SystemModuleMon, SystemModuleEndDate
*
*  
********************************************************************************
$INCLUDE WWINSERT RBO.H
$INCLUDE PMC.CPYLIB COMPANY
$INCLUDE PMC.CPYLIB SALESDATES
$INCLUDE PMC.CPYLIB FISCAL

* Insert method code here
ERRMSG = ''

* Open files
OPEN 'CONTROL' TO CONTROL ELSE ERRMSG = 'CONTROL'
OPEN 'COMPANY' TO COMPANY ELSE ERRMSG = 'COMPANY'
IF ERRMSG # '' THEN
  ERRMSG = 'Cannot open the ' : ERRMSG : ' file.'
  CALL RBO_ERROR_SUB(ERRMSG); RETURN
END

* Get all properties
CHK.STATUS.PROPERTY = 'ID'
STATUS = RBO.getProperty('','ID',ID); GOSUB CHK.STATUS
CHK.STATUS.PROPERTY = 'Division'
STATUS = RBO.getProperty('','Division',DIV.CODE); GOSUB CHK.STATUS
IF CHK.STATUS.ERROR THEN
  ERRMSG = CHK.STATUS.ERROR
  CALL RBO_ERROR_SUB(ERRMSG); RETURN
END

* Get CONO
CONO = ID[1,3]
MATREAD COMP.REC FROM COMPANY, CONO ELSE
  ERRMSG = 'Invalid Company ID (':CONO:').'
  CALL RBO_ERROR_SUB(ERRMSG); RETURN
END

* Get number of accounting periods
READ PERIOD.REC FROM CONTROL, CONO:'ACCT.PERIODS' ELSE
  PERIOD.REC = 12
END
NUM.PERIODS = PERIOD.REC<1>
MATREAD FISCAL.REC FROM CONTROL, CONO:'JCFISCAL' ELSE
  ERRMSG = 'Cannot locate JCS fiscal period.'
  CALL RBO_ERROR_SUB(ERRMSG); RETURN
END

* Get division
IF DIV.CODE = '' THEN
  ERRMSG = 'Invalid division.'
  CALL RBO_ERROR_SUB(ERRMSG); RETURN
END
POS = 1
IF DIV.CODE # 'ALL' THEN
  READ DIVISION.REC FROM CONTROL, CONO:'DIVISIONS' ELSE
    ERRMSG = 'Cannot locate CONTROL, DIVISIONS.'
    CALL RBO_ERROR_SUB(ERRMSG); RETURN
  END
  LOCATE DIV.CODE IN DIVISION.REC<1>,1 SETTING POS ELSE
    ERRMSG = 'Division ' : DIV.CODE
    ERRMSG:= ' not found on Control File DIVISIONS Record.'
    CALL RBO_ERROR_SUB(ERRMSG); RETURN
  END
END

* Get period
CURR = FR.CURR.PER<1,POS>[5,2]
YEAR = FR.CURR.PER<1,POS>[1,4]
IF CURR < 1 OR CURR > PERIOD.REC<1> THEN
  ERRMSG = 'Error in JCS fiscal period.'
  CALL RBO_ERROR_SUB(ERRMSG); RETURN
END

* Read main record
MATREADU SALESDATES.REC FROM CONTROL, CONO:'SALESDATES' LOCKED
  ERRMSG = 'SALES & INVENTORY DATE record is locked by user - '
  ERRMSG:= GETUSERNAME(STATUS()) : '.'
  CALL RBO_ERROR_SUB(ERRMSG); RETURN
END ELSE
  MAT SALESDATES.REC = ''
END

* Set all out variables
CurrPeriod = SALD.CURR<1,1>
Mon = ''
Qtr = ''
EndDate = ''
Wks = ''
SystemModule = ''
SystemModuleYear = ''
SystemModulePr = ''
SystemModuleMon = ''
SystemModuleEndDate = ''

REF.CNT = PERIOD.REC<1>
FOR REF = 1 TO REF.CNT
  Mon<1,REF> = SALESDATES.REC(REF+1)<1,2>
  Qtr<1,REF> = SALESDATES.REC(REF+1)<1,3>
  EndDate<1,REF> = OCONV(SALESDATES.REC(REF+1)<1,1>,'D2/')
  Wks<1,REF> = SALESDATES.REC(REF+1)<1,4>
NEXT REF

PTR = 0
IF CO.GLS = 'Y' THEN
  SAVE.POS = POS; POS = 1
  PTR = PTR + 1
  SystemModule<1,PTR> = 'General Ledger'
  ID.NAME = 'FISCAL'; GOSUB GET.MODULE.DATA
  POS = SAVE.POS
END
IF CO.OPS = 'Y' THEN
  PTR = PTR + 1
  SystemModule<1,PTR> = 'Finished Goods Sales'
  ID.NAME = 'OPFISCAL'; GOSUB GET.MODULE.DATA
END
IF CO.JCS = 'Y' THEN
  PTR = PTR + 1
  SystemModule<1,PTR> = 'Sales Journal'
  ID.NAME = 'JCFISCAL'; GOSUB GET.MODULE.DATA
  PTR = PTR + 1
  SystemModule<1,PTR> = 'Work In Process'
  ID.NAME = 'JCFISCAL'; GOSUB GET.MODULE.DATA
END
IF CO.ICS = 'Y' THEN
  PTR = PTR + 1
  SystemModule<1,PTR> = 'Inventory'
  ID.NAME = 'ICFISCAL'; GOSUB GET.MODULE.DATA
END
IF CO.ARS = 'Y' THEN
  PTR = PTR + 1
  SystemModule<1,PTR> = 'Manual Sales'
  ID.NAME = 'ARSFISCAL'; GOSUB GET.MODULE.DATA
  PTR = PTR + 1
  SystemModule<1,PTR> = 'Cash Receipts'
  ID.NAME = 'ARCFISCAL'; GOSUB GET.MODULE.DATA
END
IF CO.APS = 'Y' THEN
  PTR = PTR + 1
  SystemModule<1,PTR> = 'Voucher Register'
  ID.NAME = 'APVFISCAL'; GOSUB GET.MODULE.DATA
  PTR = PTR + 1
  SystemModule<1,PTR> = 'Cash Disbursement'
  ID.NAME = 'APDFISCAL'; GOSUB GET.MODULE.DATA
END
IF CO.PRS # 'N' THEN
  PTR = PTR + 1
  SystemModule<1,PTR> = 'Payroll'
  ID.NAME = 'PRFISCAL'; GOSUB GET.MODULE.DATA
END
IF CO.FAS = 'Y' THEN
  PTR = PTR + 1
  SystemModule<1,PTR> = 'Fixed Assets'
  ID.NAME = 'FAFISCAL'; GOSUB GET.MODULE.DATA
END

* Set all properties
STATUS = RBO.setProperty('','CurrPeriod',CurrPeriod)
STATUS = RBO.setProperty('','Mon',Mon)
STATUS = RBO.setProperty('','Qtr',Qtr)
STATUS = RBO.setProperty('','EndDate',EndDate)
STATUS = RBO.setProperty('','Wks',Wks)
STATUS = RBO.setProperty('','SystemModule',SystemModule)
STATUS = RBO.setProperty('','SystemModuleYear',SystemModuleYear)
STATUS = RBO.setProperty('','SystemModulePr',SystemModulePr)
STATUS = RBO.setProperty('','SystemModuleMon',SystemModuleMon)
STATUS = RBO.setProperty('','SystemModuleEndDate',SystemModuleEndDate)
STATUS = RBO.setProperty('','YEAR',YEAR)
* End of method code
RETURN

GET.MODULE.DATA:
  MATREAD FISCAL.REC FROM CONTROL, CONO : ID.NAME THEN
    SystemModuleYear<1,PTR> = FR.CURR.PER<1,POS>[1,4]
    SystemModulePr<1,PTR> = FR.CURR.PER<1,POS>[5,2]
    SystemModuleMon<1,PTR> = SALESDATES.REC(SystemModulePr<1,PTR> + 1)<1,2>
    YRS = SystemModuleYear<1,PTR> - YEAR
    CURR.DATE = OCONV(SALESDATES.REC(SystemModulePr<1,PTR> + 1)<1,1>,'D/')
    CURR.DATE = CURR.DATE[1,6] : CURR.DATE[7,4] + YRS
    SystemModuleEndDate<1,PTR> = OCONV(ICONV(CURR.DATE,'D/'),'D2/')
  END ELSE
    SystemModuleYear<1,PTR> = 'None'
    ID.NAME = ''
  END
RETURN  

CHK.STATUS:
  CHK.STATUS.ERROR = ''
  IF STATUS # RBO.NO.ERROR THEN
    CHK.STATUS.ERROR = 'Cannot get ' : CHK.STATUS.PROPERTY : ' property.'
  END
RETURN
