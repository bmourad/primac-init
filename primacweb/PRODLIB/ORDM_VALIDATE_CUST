SUBROUTINE ORDM_VALIDATE_CUST
********************************************************************************
*   Program name :- ORDM_VALIDATE_CUST
*   Created:- 03/22/2006
*   Programmer :- Suhail Hussain S
********************************************************************************
$INCLUDE WWINSERT RBO.H
$INCLUDE CPYLIB COMMON1
$INCLUDE JCS.CPYLIB COM.JCS.LINK  
$INCLUDE ICS.CPYLIB COM.INV.MAIN  
$INCLUDE ICS.CPYLIB COM.INV.SERIAL
$INCLUDE JCS.CPYLIB COM.INV.STATS 
$INCLUDE PMC.CPYLIB COM.CUST 
$INCLUDE OPS.CPYLIB COM.ORDER
$INCLUDE OPS.CPYLIB COM.OPS.LINK

$DEFINE INVENTORY
$DEFINE ORDER
$DEFINE ORDERDETAILINQ
$DEFINE COMPOPS
$DEFINE CUSTOMER
$DEFINE CATEGORY
$DEFINE INVWHSE
$DEFINE FNGDSTATS
$DEFINE FNGDORDERSTATS
$DEFINE JOB
$DEFINE FILEVARS

$INCLUDE PMC.CPYLIB COMP.OPS
$INCLUDE PMC.CPYLIB CUSTOMER
$INCLUDE OPS.CPYLIB ORDER
$INCLUDE OPS.CPYLIB ORDER.DETAIL
$INCLUDE OPS.CPYLIB ORDER.DETAIL.INQ
$INCLUDE OPS.CPYLIB ORDER.RELEASE
$INCLUDE ICS.CPYLIB INVENTORY
$INCLUDE ICS.CPYLIB CATEGORY
$INCLUDE ICS.CPYLIB INV.WHSE
$INCLUDE ICS.CPYLIB INV.FNGD
$INCLUDE ICS.CPYLIB INV.CNV
$INCLUDE ICS.CPYLIB FNGD.BOM
$INCLUDE ICS.CPYLIB FNGD.STATS
$INCLUDE ICS.CPYLIB FNGD.ORDER.STATS
$INCLUDE ICS.CPYLIB FNGD.JOB.STATS
$INCLUDE ICS.CPYLIB PRICE.TABLE
$INCLUDE ICS.CPYLIB WAREHOUSE
$INCLUDE JES.CPYLIB ESTIMATE
$INCLUDE JCS.CPYLIB JOB
$INCLUDE PMC.CPYLIB SHIP.TO
$INCLUDE CPYLIB FILE.VARS
$INCLUDE CPYLIB CHAR

   OPEN "","CUSTOMER" TO CUSTOMER ELSE ERRMSG = "CANNOT OPEN CUSTOMER FILE";GOTO 91000
   OPEN "","ORDER" TO ORDER ELSE ERRMSG = "CANNOT OPEN ORDER FILE";GOTO 91000
   OPEN "","ORDER.DETAIL" TO ORDER.DETAIL ELSE ERRMSG = "CANNOT OPEN ORDER.DETAIL FILE";GOTO 91000
   OPEN "","ORDER.RELEASE" TO ORDER.RELEASE ELSE ERRMSG = "CANNOT OPEN ORDER.RELEASE FILE";GOTO 91000
   OPEN "","INVENTORY" TO INVENTORY ELSE ERRMSG = "CANNOT OPEN INVENTORY FILE";GOTO 91000
   OPEN "","CATEGORY" TO CATEGORY ELSE ERRMSG = "CANNOT OPEN CATEGORY FILE";GOTO 91000
   OPEN "","INV.WHSE" TO INV.WHSE ELSE ERRMSG = "CANNOT OPEN INV.WHSE FILE";GOTO 91000
   OPEN "","INV.FNGD" TO INV.FNGD ELSE ERRMSG = "CANNOT OPEN INV.FNGD FILE";GOTO 91000
   OPEN "","FNGD.BOM" TO FNGD.BOM ELSE ERRMSG = "CANNOT OPEN FNGD.BOM FILE";GOTO 91000
   OPEN "","FNGD.STATS" TO FNGD.STATS ELSE ERRMSG = "CANNOT OPEN FNGD.STATS FILE";GOTO 91000
   OPEN "","FNGD.ORDER.STATS" TO FNGD.ORDER.STATS ELSE ERRMSG = "CANNOT OPEN  FILE";GOTO 91000
   OPEN "","FNGD.JOB.STATS" TO FNGD.JOB.STATS ELSE ERRMSG = "CANNOT OPEN FNGD.JOB.STATS FILE";GOTO 91000
   OPEN "","PRICE.TABLE" TO PRICE.TABLE ELSE ERRMSG = "CANNOT OPEN PRICE.TABLE FILE";GOTO 91000
   OPEN "","WAREHOUSE" TO WAREHOUSE ELSE ERRMSG = "CANNOT OPEN WAREHOUSE FILE";GOTO 91000
   OPEN "","ESTIMATE" TO ESTIMATE ELSE ERRMSG = "CANNOT OPEN ESTIMATE FILE";GOTO 91000
   OPEN "","JOB" TO JOB ELSE ERRMSG = "CANNOT OPEN JOB FILE";GOTO 91000
   OPEN "","CONTROL" TO CONTROL ELSE ERRMSG = "CANNOT OPEN CONTROL FILE";GOTO 91000  
   OPEN "","SHIP.TO" TO SHIP.TO ELSE ERRMSG = "CANNOT OPEN SHIP.TO FILE";GOTO 91000

STATUS = RBO.getProperty("","PMCProperty",PMCProperty)
STATUS = RBO.getProperty("","GRIDARR",ORD_DET_SUM)
STATUS = RBO.getProperty("","INARR",INARR)
CONO        = PMCProperty<1,4>
ORDNO       = INARR<1,1>
ORD.STATUS  = INARR<1,2>
ORD.CUST    = INARR<1,3>
ORD.SHIP.TO = INARR<1,4>
ORD.TOT.INV = INARR<1,5>
ORD.CRED.AUTH = INARR<1,6>

RETARR = ""
MAT ORD.DET.SUM = ""
MAT ORD.DET.INQ = ""

   SWAP "#" WITH VM IN ORD.SHIP.TO
   IF ORD_DET_SUM # "" THEN
      FOR X = 1 TO DCOUNT(ORD.SHIP.TO,VM)
         TEMPORD_REC = FIELD(ORD_DET_SUM,"¥",X,1)
         IF TEMPORD_REC # "" THEN
            MATPARSE ORD.DET.REC FROM TEMPORD_REC,"ð"
         END ELSE
            MAT ORD.DET.REC = ""
         END
         FOR P = 1 TO ORD.DET.REC.SIZE
            ORD.DET.SUM(P,X) = ORD.DET.REC(P)
         NEXT P
      NEXT X
      
      FOR X = 1 TO DCOUNT(ORD.SHIP.TO,VM)
         STATUS = "L"; SHPNO = ORD.SHIP.TO<1,X>
         CALL ORDER_LINE_UPD(CONO,ORDNO,SHPNO,STATUS)
      NEXT X

   END

   IF ODQ.PROD # "" THEN
      ERRMSG = "Sorry, Cannot switch customer for an order with line items."
      GOTO 91000
   END

   MATREAD CUST.REC FROM CUSTOMER, CONO:ORD.CUST ELSE
      ERRMSG = "Cannot locate customer # ":ORD.CUST
      GOTO 91000
   END
   BEGIN CASE
      CASE ORD.STATUS<1,1> # "NEW"
      CASE CUST.TYPE = "F"
         ERRMSG = "Customer Type is Frozen - Cannot Enter Order"
         GOTO 91000
      CASE CUST.CREDIT = "DEL"
         ERRMSG = 'This customer has credit code "DEL", cannot enter an order.'
         GOTO 91000
      CASE CUST.CREDIT = "N"
         ERRMSG = "There is NO CREDIT for the customer"
         GOTO 91000
      CASE 1
         GOSUB 1900
   END CASE
   STATUS = RBO.setProperty("","RETARR",RETARR)
   IF ORD.CRED.AUTH # "" THEN
      STATUS = RBO.setProperty("","WARNINGARR",FIELD(ORD.CRED.AUTH,"!",1))
   END
RETURN

1900*
   JOB.BALANCE = SUM(CUST.JOB.BAL)
   ORD.BALANCE = SUM(CUST.ORD.BAL)
   IF ORD.STATUS<1,1> # "NEW" THEN
      LOCATE ORDNO IN CUST.ORD.NUM<1>,1 SETTING FND THEN
         ORD.BALANCE = ORD.BALANCE - CUST.ORD.BAL<1,FND>
      END
   END
   CUR.BALANCE = SUM(ODQ.AMT) - ORD.TOT.INV
   IF CUR.BALANCE < 0 THEN CUR.BALANCE = 0
   TOT.BALANCE = JOB.BALANCE + ORD.BALANCE + CUR.BALANCE
   EPTR=0
   BEGIN CASE
      CASE CUST.CREDIT = "N"
         ERRMSG = "There is NO CREDIT for this customer"
         GOTO 91000
      CASE CUST.CREDIT = "E"
         AVAIL = CUST.CR.LIMIT * 100 - CUST.AR.BAL - TOT.BALANCE
         IF AVAIL < 0 THEN
            ERRMSG = "A/R = ":OCONV(CUST.AR.BAL,"MD2,$<")
            ERRMSG = ERRMSG : " & ORD/JOB = ":OCONV(TOT.BALANCE,"MD2,$<")
            ERRMSG = ERRMSG : " & AVAIL = ":OCONV(AVAIL,"MD2,$<")
         END ELSE
            GOTO 1909
         END
      CASE CUST.CREDIT = "CASH"
         AVAIL = CUST.AR.BAL + CUST.AR.BAL + TOT.BALANCE
         IF AVAIL > 0 THEN
            ERRMSG = "A/R = ":OCONV(CUST.AR.BAL,"MD2,$<")
            ERRMSG = ERRMSG : " & ORD/JOB = ":OCONV(TOT.BALANCE,"MD2,$<")
            ERRMSG = ERRMSG : " & TOTAL BAL = ":OCONV(AVAIL,"MD2,$<")
         END ELSE
            GOTO 1909
         END
      CASE 1
         ERRMSG = "A/R = ":OCONV(CUST.AR.BAL,"MD2,$<")
         ERRMSG = ERRMSG : " & JOB = ":OCONV(TOT.BALANCE,"MD2,$<")
         ERRMSG = ERRMSG : " & TOTAL BAL = ":OCONV(CUST.AR.BAL+TOT.BALANCE,"MD2,$<")
   END CASE
   RETARR = ERRMSG
1909*
   RETURN

91000
   STATUS = RBO.setProperty("","ServerStatus",1)
   STATUS = RBO.setProperty("","ServerMessage",ERRMSG)
RETURN
