SUBROUTINE GetStockMSIDetails
********************************************************************************
*   Program name :- GetStockMSIDetails
*   Created:- 8/2/2003
*
********************************************************************************
$INCLUDE WWINSERT RBO.H
$INCLUDE JES.CPYLIB ESTIMATE
$INCLUDE JES.CPYLIB ESTIMATE.RES
$INCLUDE PMC.CPYLIB VEND
$INCLUDE JCS.CPYLIB CATEGORY.OSP
$INCLUDE CPYLIB SCREEN.COM
$INCLUDE CPYLIB FILE.VARS
$INCLUDE JES.CPYLIB JES.FILE.VARS
$INCLUDE CPYLIB CHAR
$INCLUDE JES.CPYLIB ESTIMATE.MATL
* Insert method code here

       OPEN "","ESTIMATE" TO ESTIMATE ELSE
		ERRMSG="CAN NOT OPEN ESTIMATE FILE"
	END
	
	OPEN "","ESTIMATE.RES" TO ESTIMATE.RES ELSE
		ERRMSG="CAN NOT OPEN ESTIMATE FILE"
	END

	OPEN "","VEND" TO VEND ELSE
		ERRMSG="CAN NOT OPEN VEND FILE"
	END

	OPEN "","CATEGORY.OSP" TO CATEGORY.OSP ELSE
		ERRMSG="CAN NOT OPEN CATEGORY.OSP FILE"
	END
	OPEN "","ESTIMATE.MATL" TO ESTIMATE.MATL ELSE
		ERRMSG = "CAN NOT OPEN ESTIMATE.MATL FILE"
	END

	STATUS = RBO.getProperty('','ID',ID)
	ERRMSG = RBO.getProperty('','QSEL',EST.QTY)
	ERRMSG = RBO.getProperty('','MATLID',MATLID)
	ERRMSG = RBO.getProperty('','ESTWIDTH',ESTWIDTH)
	* INITIALIZE VARIABLES
	CONO=ID[1,3]
	EST.KEY=ID[4,99]
	COMP =1
 	COMPSTR="!"
	TOTMSISTR =""
	PRICESTR=""

       MATREAD EST.REC FROM ESTIMATE,ID THEN
	END ELSE
	END
	
       MATREAD EST.RL.REC FROM ESTIMATE.RES,ID THEN
	TOTASTR = EST.RL.TOTAL.PC
	EST.RL.DIE.REPEAT = EST.RL.DIE.REPEAT
	EST.RL.DIE.NO.ACR =EST.RL.DIE.NO.ACR
	EST.RL.DIE.NO.ARD=EST.RL.DIE.NO.ARD

	END

	*MATREAD ESTM.REC FROM ESTIMATE.MATL,CONO:"R":MATLID ELSE
        * MAT ESTM.REC = ""
       *END
	MP =1

EQTY = DCOUNT(EST.QTY,VM)
FOR Y = 1 TO EQTY
  **S$VAL = QTY.LINE.COUNT * INT((Y-1)/QTY.LINE.COUNT) + 1
      **S$CNT = EQTY
      GOSUB 30000
      TOT.MSI = INT(((ESTWIDTH/10000*TOT.LINEAL)/1000)+.9)
       IF UNIT.PR = "" THEN
         PRICE.BRK.COUNT = DCOUNT(ESTM.END.QTY<1,MP>,SVM)
         FLG=0
        FOR X = 1 TO PRICE.BRK.COUNT UNTIL FLG=1
            TEST.QTY = ESTM.END.QTY<1,MP,X>
            IF TOT.MSI <= TEST.QTY THEN
               UNIT.PR = ESTM.QCOST<1,MP,X>
               FLG=1
            END
        NEXT X
         IF NOT(FLG) THEN
           UNIT.PR = ESTM.QCOST<1,MP,PRICE.BRK.COUNT>
         END
      END

      * CALL MACROREPVAL(EST.RL.TOTAL.PC,COMPSTR,Y,INT(TOT.LINEAL))
* C33801
      * CALL MACROREPVAL(EST.RL.MR.PC,COMPSTR,Y,INT(MR.LINEAL))
* C33801
     * CALL MACROREPVAL(EST.RL.PAP.MSI,COMPSTR,Y,TOT.MSI)
      	TOTMSISTR<1,-1>=TOT.MSI
	**S$VAL = Y
      **PRICESTR<1,-1>=FIELD(EST.RL.PAP.PRICE<1,COMP,REF.NO>,'!',Y)
     	PRICESTR<1,-1>=EST.RL.PAP.PRICE

		**  S$VAL = Y
      **S$DEFAULT=FIELD(EST.RL.PAP.PRICE<1,COMP,REF.NO>,'!',Y)
      **IF S$DEFAULT = "" THEN S$DEFAULT = UNIT.PR
      **GOTO 3000
      * UNIT.PR=S$VALUE
      * IF UNIT.PR+0=0 AND Y>1 THEN
      *   UNIT.PR=FIELD(EST.RL.PAP.PRICE,'!',1)
      * END
      * CALL MACROREPVAL(EST.RL.PAP.PRICE,COMPSTR,Y,UNIT.PR)
      **S$DATA(48)<S$SCR,Y>=INT((TOT.MSI * (UNIT.PR/100))+.5)
      **S$VAL = Y
     
     * UNIT.PR='';*T26583
   
NEXT Y

30000*
   IF EST.RL.DIE.REPEAT<1,COMP,1> # "" AND EST.RL.DIE.NO.ACR<1,COMP,1> # "" AND EST.RL.DIE.NO.ARD<1,COMP,1> # "" THEN
    
      VAR1 = EST.QTY<1,Y>*(EST.RL.DIE.REPEAT<1,COMP,1>/10000)
      IF EST.RL.DIE.NO.ARD<1,COMP,1>='' THEN
        VAR3 = 1
      END ELSE
     	 VAR3 = EST.RL.DIE.NO.ARD<1,COMP,1>
      END
      VAR4 = EST.RL.SETS<1,COMP,2>
      IF VAR4 = '' THEN VAR4 = 1
      VAR2=EST.RL.DIE.NO.ACR<1,COMP,1>
      VAR2=(VAR2*VAR3)/VAR4
      BASE.LINEAL = INT((VAR1/VAR2)+ .5); * IMPERIAL
      MR.LINEAL=0; PR.SPOIL.LINEAL=0; FIN.SPOIL.LINEAL=0
      CALL EST_RES_CALC_SPOIL(ID,ACTION,COMP,EST.QTY<1,Y>,BASE.LINEAL,PR.SPOIL.LINEAL,FIN.SPOIL.LINEAL,MR.LINEAL)
      TOT.LINEAL = BASE.LINEAL+MR.LINEAL+PR.SPOIL.LINEAL+FIN.SPOIL.LINEAL
   END ELSE
      TOT.LINEAL = "0"
   END


 ERRMSG=RBO.setProperty('','StockMSIInfo',TOT.LINEAL:"****":TOTMSISTR)     
	
* End of method code
RETURN

