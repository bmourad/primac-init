SUBROUTINE VEND_POP_BUILD
********************************************************************************
*   Program name :- VEND_POP_BUILD
*   Created:- 6/5/2003
*------------------------------------------------------------------------------*
*

* In Properties:
* --------------
*  CONO,DIV_CODE,LIST_NAME
*
* Out Properties:
* ---------------
*  
********************************************************************************
$INCLUDE WWINSERT RBO.H
$INCLUDE APS.CPYLIB VEND.POP
$INCLUDE APS.CPYLIB VEND.VOUCH.POP
$INCLUDE APS.CPYLIB OAP
$INCLUDE APS.CPYLIB CKP
$INCLUDE PMC.CPYLIB VEND
$INCLUDE PMC.CPYLIB COMPANY
$INCLUDE CPYLIB CHAR
* Insert method code here
  DIM SVEND.REC(10)
  EQU SVEND.NO TO SVEND.REC(1)
  EQU SVEND.DS TO SVEND.REC(2)
  EQU SVEND.PT TO SVEND.REC(3)

  ERRMSG = ''
  OPEN '', 'VEND' TO VEND ELSE
    ERRMSG = 'VEND FILE IS MISSING'
    GOTO 99999
  END
  OPEN '', 'CONTROL' TO CONTROL ELSE
    ERRMSG = 'CONTROL FILE IS MISSING'
    GOTO 99999
  END
  OPEN '', 'COMPANY' TO COMPANY ELSE
    ERRMSG = 'COMPANY FILE IS MISSING'
    GOTO 99999
  END
  OPEN '', 'VEND.POP' TO VEND.POP ELSE
    ERRMSG = 'VEND.POP FILE IS MISSING'
    GOTO 99999
  END
  OPEN '', 'OAP' TO OAP ELSE
    ERRMSG = 'OAP FILE IS MISSING'
    GOTO 99999
  END
  OPEN '', 'CKP' TO CKP ELSE
    ERRMSG = 'CKP FILE IS MISSING'
    GOTO 99999
  END
  OPEN '', 'SQV' TO SQV ELSE
    ERRMSG = 'SQV FILE IS MISSING'
    GOTO 99999
  END
  
  STATUS = RBO.getProperty('','Cono',CONO)
  STATUS = RBO.getProperty('','DIV_CODE',DIV.OWNER)

  MATREAD COMP.REC FROM COMPANY ,CONO ELSE 
	ERRMSG = 'COMPANY NOT ON FILE '
	GOTO 99999
  END

  READV DUE.DATE FROM CONTROL, CONO : "SCH.PAYDATE":DIV.OWNER,1 ELSE 
	ERRMSG = "PAYMENT DATE IS MISSING"
	GOTO 99999
  END

  READU DUMMY FROM CONTROL, CONO :"PAYDATE":DIV.OWNER ELSE DUMMY = ""
  WRITE DUE.DATE ON CONTROL, CONO :"PAYDATE":DIV.OWNER
  DUE.DATE = ICONV(DUE.DATE, "D2/")
  MATREAD SVEND.REC FROM CONTROL, CONO:"VENDORS":DIV.OWNER ELSE MAT SVEND.REC = ""
  IF SVEND.PT = "" THEN SVEND.PT = "S"
  VPOP.VEND = ""
  VPOP.VOUCH = ""
  GRS.AMT = 0
  DSC.AMT = 0
  NET.AMT = 0

  STATUS = RBO.setProperty('','LIST_NAME','SCD.RPT')
  STATUS=RBO.callMethod('','GET_SELNAME')
  STATUS = RBO.getProperty('','LIST_NAME',LIST.NAME)
  UDTEXECUTE "GET-LIST " : LIST.NAME

100*
  READNEXT ID ELSE
    ACNT = COUNT(VPOP.VEND,AM) + (VPOP.VEND # "")
    LINES = ACNT - VPOP.START.ATT + 1
    IF LINES < 1 THEN
	DELETE VEND.POP, CONO : "VENDORS":DIV.OWNER
	ERRMSG = "NO VENDORS WERE SELECTED TO BE PAID"
	GOTO 99999
    END  
    FOR LN = ACNT TO VPOP.START.ATT STEP - 1
    IF VPOP.VEND<VPOP.NET.ATT,LN> < 0 THEN
        VCNT = COUNT(VPOP.VEND<LN>,VM) + (VPOP.VEND<LN> # "")
       BEGIN CASE
          	CASE VCNT = 1
			READ VPOP.VOUCH FROM VEND.POP, CONO:VPOP.VEND<LN>:"!":DIV.OWNER ELSE VPOP.VOUCH = ""
			VOU.CNT = COUNT(VPOP.VOUCH,AM) + (VPOP.VOUCH # "")
       	     	FOR VOU = 1 TO VOU.CNT
              		DELETE CKP, CONO : VPOP.VOUCH<VOU,VPOP.VOUCH.MV>
	            	NEXT VOU
       	     	DELETE VEND.POP, CONO : VPOP.VEND<LN> :"!":DIV.OWNER
		CASE VCNT > 1
			VVV.KEY = CONO : VPOP.VEND<LN,1> : "!" : VPOP.VEND<VPOP.SEQ.ATT,LN>
	            	READ VPOP.VOUCH FROM VEND.POP, VVV.KEY ELSE VPOP.VOUCH = ""
			VOU.CNT = COUNT(VPOP.VOUCH,AM) + (VPOP.VOUCH # "")
            		FOR VOU = 1 TO VOU.CNT
              		DELETE CKP, CONO : VPOP.VOUCH<VOU,VPOP.VOUCH.MV>
	            	NEXT VOU
			DELETE VEND.POP, VVV.KEY
	END CASE
       VPOP.VEND = DELETE(VPOP.VEND,LN,0,0)
	VPOP.VEND = DELETE(VPOP.VEND,VPOP.GRS.ATT,LN,0)
       VPOP.VEND = DELETE(VPOP.VEND,VPOP.DSC.ATT,LN,0)
	VPOP.VEND = DELETE(VPOP.VEND,VPOP.NET.ATT,LN,0)
       VPOP.VEND = DELETE(VPOP.VEND,VPOP.SEQ.ATT,LN,0)
	WRITE VPOP.VEND ON VEND.POP, CONO : "VENDORS":DIV.OWNER
	LINES = LINES - 1
    END
    NEXT LN
    IF LINES < 1 THEN
	DELETE VEND.POP, CONO : "VENDORS":DIV.OWNER
	ERRMSG = "NO VENDORS WERE SELECTED TO BE PAID"
	GOTO 99999
    END
    GOTO 99999
  END

  IF CONO # ID[1,3] THEN GOTO 100
  MATREAD OAP.REC FROM OAP, ID ELSE GOTO 100

  READV THIS.DIV.OWNER FROM SQV, ID, 47 ELSE THIS.DIV.OWNER = ""
  IF THIS.DIV.OWNER # DIV.OWNER AND DIV.OWNER # "ALL" THEN GOTO 100
ABDSTR=""
ABDSTR<-1>="SVEND.PT OAP.VEND<1,1> SVEND.NO<1> ":SVEND.PT :" & ": OAP.VEND<1,1> :" & ": SVEND.NO<1>
  IF SVEND.PT = "S" THEN
    LOCATE OAP.VEND<1,1> IN SVEND.NO<1>,1 SETTING SFND ELSE SFND = 0
ABDSTR<-1>="IN IF SFND IS ":SFND
*WRITE ABDSTR ON CONTROL,"MTEST01"
    IF SFND THEN GOTO 100
  END ELSE
    LOCATE OAP.VEND<1,1> IN SVEND.NO<1>,1 SETTING SFND ELSE SFND = 0
ABDSTR<-1>="IN ELSE SFND IS ":SFND
*WRITE ABDSTR ON CONTROL,"MTEST01"
    IF NOT(SFND) THEN GOTO 100
  END
ABDSTR<-1>="AFTER THE IS STATEMENT "
*WRITE ABDSTR ON CONTROL,"MTEST01"
  VOUCH.NO = ID[4,6]
  IF OAP.DUE.DATE > DUE.DATE THEN GOTO 100
  GRS.AMT = OAP.GRS.AMT - OAP.PAID.AMT - OAP.DSC.PAID
  DSC.AMT = OAP.DSC.AMT - OAP.DSC.PAID
  IF DSC.AMT < 0 AND OAP.GRS.AMT > 0 THEN DSC.AMT = 0
  IF DSC.AMT > 0 AND OAP.GRS.AMT < 0 THEN DSC.AMT = 0
  NET.AMT = GRS.AMT - DSC.AMT
  IF GRS.AMT = 0 THEN GOTO 100
  IF NET.AMT = 0 THEN GOTO 100
  VCNT = COUNT(OAP.VEND,VM) + (OAP.VEND # "")
  FND = 1
  BEGIN CASE
    CASE VCNT < 1
      GOTO 100
    CASE VCNT = 1
      LOCATE OAP.VEND IN VPOP.VEND,VPOP.START.ATT BY "AL" SETTING VFND ELSE
        INS OAP.VEND BEFORE VPOP.VEND<VFND>
        INS "" BEFORE VPOP.VEND<VPOP.SEQ.ATT,VFND>
        INS "" BEFORE VPOP.VEND<VPOP.GRS.ATT,VFND>
        INS "" BEFORE VPOP.VEND<VPOP.DSC.ATT,VFND>
        INS "" BEFORE VPOP.VEND<VPOP.NET.ATT,VFND>
        FND = 0
      END
	KEY = OAP.VEND:"!":DIV.OWNER
	CASE 1
      LOCATE OAP.VEND IN VPOP.VEND,VPOP.START.ATT BY "AL" SETTING VFND ELSE
        INS OAP.VEND BEFORE VPOP.VEND<VFND>
        VPOP.VEND<VPOP.NEXT.SEQ.ATT> = VPOP.VEND<VPOP.NEXT.SEQ.ATT> + 1
        INS VPOP.VEND<VPOP.NEXT.SEQ.ATT> BEFORE VPOP.VEND<VPOP.SEQ.ATT,VFND>
        INS "" BEFORE VPOP.VEND<VPOP.GRS.ATT,VFND>
        INS "" BEFORE VPOP.VEND<VPOP.DSC.ATT,VFND>
        INS "" BEFORE VPOP.VEND<VPOP.NET.ATT,VFND>
        FND = 0
      END
      KEY = OAP.VEND<1,1> : "!" : VPOP.VEND<VPOP.SEQ.ATT,VFND>:"!":DIV.OWNER
  END CASE
  IF FND = 0 THEN
    VPOP.VOUCH = ""
  END ELSE
    READ VPOP.VOUCH FROM VEND.POP, CONO : KEY ELSE
      VPOP.VOUCH = ""
      VPOP.VEND<VPOP.GRS.ATT,VFND> = ""
      VPOP.VEND<VPOP.DSC.ATT,VFND> = ""
      VPOP.VEND<VPOP.NET.ATT,VFND> = ""
    END
  END

  LOCATE VOUCH.NO IN VPOP.VOUCH,1 BY "DR" SETTING VOU ELSE
    INS VOUCH.NO BEFORE VPOP.VOUCH<VOU>
    VPOP.VOUCH<VOU,VPOP.INV.MV> = OAP.INV
    VPOP.VOUCH<VOU,VPOP.PO.MV> = OAP.PO
    VPOP.VOUCH<VOU,VPOP.DUE.MV> = OAP.DUE.DATE
  END
  VPOP.VEND<VPOP.GRS.ATT,VFND> = VPOP.VEND<VPOP.GRS.ATT,VFND> - VPOP.VOUCH<VOU,VPOP.GRS.MV> + GRS.AMT
  VPOP.VEND<VPOP.DSC.ATT,VFND> = VPOP.VEND<VPOP.DSC.ATT,VFND> - VPOP.VOUCH<VOU,VPOP.DSC.MV> + DSC.AMT
  VPOP.VEND<VPOP.NET.ATT,VFND> = VPOP.VEND<VPOP.NET.ATT,VFND> - VPOP.VOUCH<VOU,VPOP.NET.MV> + NET.AMT
  VPOP.VOUCH<VOU,VPOP.GRS.MV> = GRS.AMT
  VPOP.VOUCH<VOU,VPOP.DSC.MV> = DSC.AMT
  VPOP.VOUCH<VOU,VPOP.NET.MV> = NET.AMT

  MAT CKP.REC = ""
  CKP.VEND = OAP.VEND
  CKP.INV = OAP.INV
  CKP.INV.DATE = OAP.INV.DATE
  CKP.DUE.DATE = OAP.DUE.DATE
  CKP.GRS.AMT = GRS.AMT
  CKP.MER.AMT = OAP.MER.AMT
  CKP.DSC.AMT = DSC.AMT
  CKP.ACCT = OAP.ACCT
  CKP.DIST.AMT = OAP.DIST.AMT
  CKP.JOB = OAP.JOB
  CKP.PO = OAP.PO
  CKP.ASSET.ID = OAP.ASSET.ID
  CKP.JCS.TRANS = OAP.JCS.TRANS
  CKP.TERMS = OAP.TERMS
  CKP.DIV = OAP.DIV
  CKP.DEPT = OAP.DEPT
  CKP.CTR = OAP.CTR
  CKP.MON = OAP.MON
  CKP.REM.COMM = OAP.REM.COMM ; *T25759
  CKP.COMMENT = OAP.COMMENT 
  CKP.MISC.CAT = OAP.MISC.CAT
  CKP.AP.ACCT = OAP.AP.ACCT
  CKP.AP.AMT = OAP.AP.AMT
  CKP.AP.DIV = OAP.AP.DIV
  CKP.AP.DEPT = OAP.AP.DEPT
  CKP.AP.CCTR = OAP.AP.CCTR
  
  MATWRITE CKP.REC ON CKP, ID
  WRITE VPOP.VOUCH ON VEND.POP, CONO : KEY
  WRITE VPOP.VEND ON VEND.POP, CONO : "VENDORS":DIV.OWNER

  GOTO 100
  


* End of method code
99999
  IF (TRIM(ERRMSG) # "") THEN
       STATUS = RBO.setProperty('','ServerStatus','E')
       STATUS = RBO.setProperty('','ServerMessage',ERRMSG)
  END ELSE
       STATUS = RBO.setProperty('','ServerStatus','')
       STATUS = RBO.setProperty('','ServerMessage','')
  END 
RETURN

