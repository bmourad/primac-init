SUBROUTINE POSPOM_PO_UPDATE
********************************************************************************
*   Program name :- POSPOM_PO_UPDATE
*   Created:- 7/5/2006
*   Programmer :- Suhail Hussain S
********************************************************************************
$INCLUDE WWINSERT RBO.H

$INCLUDE ICS.CPYLIB INVENTORY
$INCLUDE ICS.CPYLIB INV.STATS
$INCLUDE ICS.CPYLIB WAREHOUSE
$INCLUDE PMC.CPYLIB DIVISION
$INCLUDE ICS.CPYLIB CATEGORY
$INCLUDE PMC.CPYLIB TERMS
$INCLUDE PMC.CPYLIB SHIP.VIA
$INCLUDE ICS.CPYLIB INV.WHSE
$INCLUDE PMC.CPYLIB VEND
$INCLUDE APS.CPYLIB VEND.STATS
$INCLUDE APS.CPYLIB VEND.PO.STATS
$INCLUDE APS.CPYLIB VEND.PROD.STATS
$INCLUDE PMC.CPYLIB COMPANY
$INCLUDE ICS.CPYLIB INV_SERIAL
$INCLUDE PMC.CPYLIB SECURITY
$INCLUDE ICS.CPYLIB INV.CNV
$INCLUDE POS.CPYLIB APP.REQ
$INCLUDE ICS.CPYLIB INV.JOB.STATS
$INCLUDE JCS.CPYLIB JOB
$INCLUDE PMC.CPYLIB PO
$INCLUDE CPYLIB CHAR

   OPEN '','INVENTORY' TO INVENTORY ELSE ERRMSG = 'INVENTORY FILE IS MISSING'; GOTO 93000
   OPEN '','CONTROL' TO CONTROL ELSE ERRMSG = 'CONTROL FILE IS MISSING'; GOTO 93000

   OPEN '','CUSTOMER' TO CUSTOMER ELSE ERRMSG = 'CUSTOMER FILE IS MISSING'; GOTO 93000
   OPEN '','JOB' TO JOB ELSE ERRMSG = 'JOB FILE IS MISSING'; GOTO 93000
   OPEN '','PO' TO PO ELSE ERRMSG = 'PO FILE IS MISSING'; GOTO 93000
   OPEN '','TERMS' TO TERMS ELSE ERRMSG = 'TERMS FILE IS MISSING'; GOTO 93000
   OPEN '','INV.STATS' TO INV.STATS ELSE ERRMSG = 'INV.STATS FILE IS MISSING'; GOTO 93000
   OPEN '','INV.JOB.STATS' TO INV.JOB.STATS ELSE ERRMSG = 'INV.JOB.STATS FILE IS MISSING'; GOTO 93000
   OPEN '','WAREHOUSE' TO WAREHOUSE ELSE ERRMSG = 'WAREHOUSE FILE IS MISSING'; GOTO 93000
   OPEN '','INV.WHSE' TO INV.WHSE ELSE ERRMSG = 'INV.WHSE IS MISSING'; GOTO 93000
   OPEN '','SHIP.VIA' TO SHIP.VIA ELSE ERRMSG = 'SHIP.VIA FILE IS MISSING'; GOTO 93000
   OPEN '','CATEGORY' TO CATEGORY ELSE ERRMSG = 'CATEGORY FILE IS MISSING'; GOTO 93000
   OPEN '','VEND' TO VEND ELSE ERRMSG = 'VENDOR FILE IS MISSING'; GOTO 93000
   OPEN '','INV_SERIAL' TO INV_SERIAL ELSE ERRMSG = 'INV_SERIAL FILE IS MISSING'; GOTO 93000
   OPEN '','INV_SERIAL_DELETED' TO INV_SERIAL_DELETED ELSE ERRMSG = 'INV_SERIAL_DELETED FILE IS MISSING'; GOTO 93000
   OPEN '','SLIT.TRANS' TO SLIT.TRANS ELSE ERRMSG = 'SLIT.TRANS FILE IS MISSING'; GOTO 93000
   OPEN '','DIVISION' TO DIVISION ELSE ERRMSG = 'DIVISION FILE IS MISSING'; GOTO 93000
   OPEN '','COMPANY' TO COMPANY ELSE ERRMSG = 'COMPANY FILE IS MISSING'; GOTO 93000 
  
   STATUS = RBO.getProperty("","PMCProperty",PMCProperty)
   STATUS = RBO.getProperty("","ID",PO.CODE)
   STATUS = RBO.getProperty("","PD_PROD",PD.PROD)
   STATUS = RBO.getProperty("","PD_WHSE",PD.WHSE)
   STATUS = RBO.getProperty("","new_item",NEW)
   PO.CODE = PO.CODE[4,99]
   CONO = PMCProperty<1,4>
   
   IF CONO = "" THEN RETURN

   UPDATE.VEND = 0
   PD.CNT = 0;LAST.DATE = ""
   ERRMSG = ""
   MAT APP.REQ.REC = ""

   MATREAD COMP.REC FROM COMPANY,CONO ELSE MAT COMP.REC = ""

   MATREAD PO.REC FROM PO,CONO:PO.CODE ELSE 
      MAT PO.REC = ""
      GOTO 88888
      RETURN
   END

   PD.CNT = COUNT(PO.DEL.DATE,VM) + (PO.DEL.DATE # "")
   FOR PD = 1 TO PD.CNT
      IF PO.DEL.DATE<1,PD> > LAST.DATE THEN LAST.DATE = PO.DEL.DATE<1,PD>
   NEXT PD
   PO.DUE.DATE = LAST.DATE
   IF (NEW) THEN 
      PO.APP.LEVEL = APP.PO.LEVEL
   END
   GOSUB PO.UPDATE
   *CALL PO.UPDATE(PO.CODE,CONO,MAT PROD.DEL)
   IF CO.APS.R.INTRF > 2 THEN
      UPDATE.VEND = 1
   END
   GOTO 88888
RETURN

PO.UPDATE:
   ERRMSG = ""
   UPDATE = "PO"
**** DELETE
   PO.CNT = COUNT(PD.PROD,VM) + (PD.PROD # "")
   FOR P = 1 TO PO.CNT
      MATREADU INV.STAT.REC FROM INV.STATS, CONO:PD.PROD<1,P>:"!":PD.WHSE<1,P> ELSE GOTO 150
      MATREADU IWH.REC FROM INV.WHSE , CONO:PD.PROD<1,P>:"!":PD.WHSE<1,P> ELSE GOTO 150
      LOCATE PO.CODE IN ISTAT.PO<1>,1 SETTING PFND ELSE GOTO 150
      J.CNT = COUNT(ISTAT.PO.JOB<1,PFND>,SVM) + (ISTAT.PO.JOB<1,PFND> # "")
      FOR J = 1 TO J.CNT
         JOB.NUM = ISTAT.PO.JOB<1,PFND,J>
         LOCATE JOB.NUM IN ISTAT.JOB<1>,1 SETTING JFND ELSE GOTO 120
         MATREADU JOB.REC FROM JOB, CONO:JOB.NUM ELSE
            RELEASE JOB, CONO:JOB.NUM
            ERRMSG<1,-1> = "JOB ":JOB.NUM:" IS ON INV.STATS FILE AND NOT ON JOB FILE"
            GOTO 120
         END
         MATREADU INV.JS.REC FROM INV.JOB.STATS, CONO:PD.PROD<1,P>:"!":PD.WHSE<1,P>:"!":JOB.NUM ELSE
            RELEASE INV.JOB.STATS , CONO:PD.PROD<1,P>:"!":PD.WHSE<1,P>:"!":JOB.NUM
            GOTO 120
         END
         PTR = 1
         LOOP
            LOCATE PD.PROD<1,P> IN JOB.RESV.MATL<1>,PTR SETTING MFND ELSE MFND = 0
            IF MFND THEN
               IF PD.WHSE<1,P> = JOB.RESV.WHSE<1,MFND> THEN PTR = 0 ELSE PTR = MFND + 1
            END
         WHILE PTR AND MFND DO REPEAT
         IF MFND = 0 THEN
            ERRMSG<1,-1> = "PRODUCT ":PD.PROD<1,P>:", WHSE ":PD.WHSE<1,P>:" IS NOT ON JOB ":JOB.NUM
            GOTO 120
         END
         LOCATE PO.CODE IN IJS.PO<1>,1 SETTING POF ELSE POF = 0
         IF POF THEN
            IJS.JOB.ALOC = IJS.JOB.ALOC - IJS.PO.JOB.QTY<1,POF,0>
            IWH.ALLOC = IWH.ALLOC - IJS.PO.JOB.QTY<1,POF,0>
            IF IWH.ALLOC < 0 THEN IWH.ALLOC = 0
            IJS.PO = DELETE(IJS.PO,1,POF,0)
            IJS.PO.JOB.QTY = DELETE(IJS.PO.JOB.QTY,1,POF,0)
            IJS.PO.JOB.AMT = DELETE(IJS.PO.JOB.AMT,1,POF,0)
         END
         IF IJS.JOB.ALOC=0 AND IJS.JOB.QTY+0=0 AND IJS.JOB.USED+0=0 AND IJS.JMT.SEQ="" AND IJS.PO="" AND IJS.REQ.QTY+0=0 THEN
            PROD = PD.PROD<1,P> ; WHSE = PD.WHSE<1,P> ; GOSUB 6000
         END ELSE
            IF MFND THEN
               JOB.ALOC.QTY<1,MFND> = JOB.ALOC.QTY<1,MFND> - ISTAT.PO.JOB.QTY<1,PFND,J>
               JOB.ALOC.AMT<1,MFND> = JOB.ALOC.AMT<1,MFND> - ISTAT.PO.JOB.AMT<1,PFND,J>
            END
            IF UPDATE # "REQ" THEN
               MATWRITE INV.JS.REC ON INV.JOB.STATS , CONO:PD.PROD<1,P>:"!":PD.WHSE<1,P>:"!":JOB.NUM
            END
         END
         IF UPDATE # "REQ" THEN
            MATWRITE JOB.REC ON JOB, CONO:JOB.NUM
         END
120*
      NEXT J
      IWH.ON.ORDER = IWH.ON.ORDER - ISTAT.PO.QTY<1,PFND>
      ISTAT.PO = DELETE(ISTAT.PO,1,PFND,0)
      ISTAT.PO.VEND = DELETE(ISTAT.PO.VEND,1,PFND,0)
      ISTAT.PO.DATE = DELETE(ISTAT.PO.DATE,1,PFND,0)
      ISTAT.PO.QTY = DELETE(ISTAT.PO.QTY,1,PFND,0)
      ISTAT.PO.JOB = DELETE(ISTAT.PO.JOB,1,PFND,0)
      ISTAT.PO.JOB.QTY = DELETE(ISTAT.PO.JOB.QTY,1,PFND,0)
      ISTAT.PO.JOB.AMT = DELETE(ISTAT.PO.JOB.AMT,1,PFND,0)
      IF ISTAT.JOB = "" AND ISTAT.PO = "" THEN
         DELETE INV.STATS, CONO:PD.PROD<1,P>:"!":PD.WHSE<1,P>
      END ELSE
         IF UPDATE # "REQ" THEN
            MATWRITE INV.STAT.REC ON INV.STATS, CONO:PD.PROD<1,P>:"!":PD.WHSE<1,P>
         END
      END
      IF UPDATE # "REQ" THEN
         MATWRITE IWH.REC ON INV.WHSE , CONO:PD.PROD<1,P>:"!":PD.WHSE<1,P>
      END
150*
      RELEASE INV.STATS, CONO:PD.PROD<1,P>:"!":PD.WHSE<1,P>
      RELEASE INV.WHSE , CONO:PD.PROD<1,P>:"!":PD.WHSE<1,P>
   NEXT P

**** UPDATE ROUTINE
1000*
   PO.CNT = COUNT(PO.PROD.NUM,VM) + (PO.PROD.NUM # "")
   FOR P = 1 TO PO.CNT
      MATREAD INV.REC FROM INVENTORY, CONO:PO.PROD.NUM<1,P> ELSE
         ERRMSG<1,-1> = "INVENTORY ":PO.PROD.NUM<1,P>:" IS NOT ON FILE"
         GOTO 1999
      END
      IF INV.COST.WT + 0 = 0 THEN INV.COST.WT = 100
      IF INV.SBR + 0 = 0 THEN INV.SBR = 1
      MATREADU INV.STAT.REC FROM INV.STATS, CONO:PO.PROD.NUM<1,P>:"!":PO.WHSE<1,P> ELSE MAT INV.STAT.REC = ""
      MATREADU IWH.REC FROM INV.WHSE , CONO:PO.PROD.NUM<1,P>:"!":PO.WHSE<1,P> ELSE MAT IWH.REC = ""
      LOCATE PO.CODE IN ISTAT.PO<1>,1 SETTING PFND ELSE
         ISTAT.PO<1,PFND> = PO.CODE
         ISTAT.PO.VEND<1,PFND> = PO.VEND.NO
         IF PO.DEL.DATE<1,P> # "" THEN
            ISTAT.PO.DATE<1,PFND> = PO.DEL.DATE<1,P> 
         END ELSE
            ISTAT.PO.DATE<1,PFND> = PO.DUE.DATE
         END
         ISTAT.PO.QTY<1,PFND> = 0
         ISTAT.PO.JOB<1,PFND> = ""
         ISTAT.PO.JOB.QTY<1,PFND> = ""
         ISTAT.PO.JOB.AMT<1,PFND> = ""
      END
      NEW.PRICE = INT(PO.GROS.PRICE<1,P>*(1 - (PO.DISCOUNT<1,P>/10000))/INV.SBR)
      PWP = 1
      LOOP
         LOCATE PO.PROD.NUM<1,P> IN PO.PROD.NUM<1>,PWP SETTING FND THEN
            IF PO.WHSE<1,P> = PO.WHSE<1,FND> THEN
               PWP = 0
            END
         END ELSE
            PWP = 0; FND = P
         END
      WHILE PWP DO
         PWP = FND + 1
      REPEAT
      IF FND < P THEN ADDP = 1 ELSE ADDP = 0
      IF ADDP THEN
         IWH.ON.ORDER = IWH.ON.ORDER + PO.QTY.OPEN<1,P>
         ISTAT.PO.QTY<1,PFND> = ISTAT.PO.QTY<1,PFND> + PO.QTY.OPEN<1,P>
         SAVE.JOB = PO.JOB.NO<1,P>
         SAVE.QTY = PO.JB.OPEN<1,P>
      END ELSE
         IWH.ON.ORDER = IWH.ON.ORDER - ISTAT.PO.QTY<1,PFND>
         IWH.ON.ORDER = IWH.ON.ORDER + PO.QTY.OPEN<1,P>
         IF PO.DEL.DATE<1,P> # "" THEN
            ISTAT.PO.DATE<1,PFND> = PO.DEL.DATE<1,P> 
         END ELSE
            ISTAT.PO.DATE<1,PFND> = PO.DUE.DATE
         END
         ISTAT.PO.QTY<1,PFND> = PO.QTY.OPEN<1,P>
         J.CNT = COUNT(ISTAT.PO.JOB<1,PFND>,SVM) + (ISTAT.PO.JOB<1,PFND> # "")
         SAVE.JOB = PO.JOB.NO<1,P>
         SAVE.QTY = PO.JB.OPEN<1,P>
         FOR J = J.CNT TO 1 STEP -1
            JOB.NUM = ISTAT.PO.JOB<1,PFND,J>
            MATREADU INV.JS.REC FROM INV.JOB.STATS , CONO:PO.PROD.NUM<1,P>:"!":PO.WHSE<1,P>:"!":JOB.NUM ELSE MAT INV.JS.REC = ""
            MATREADU JOB.REC FROM JOB, CONO:JOB.NUM ELSE
               RELEASE JOB, CONO:JOB.NUM
               ERRMSG<1,-1> = "JOB ":JOB.NUM:" IS ON INV.STATS FILE AND NOT ON JOB FILE"
               GOTO 1200
            END
            LOCATE PO.CODE IN IJS.PO<1>,1 SETTING PPFND ELSE
               IJS.PO<1,PPFND> = PO.CODE
               IJS.PO.JOB.QTY<1,PPFND> = ""
               IJS.PO.JOB.AMT<1,PPFND> = ""
            END
            IJS.JOB.ALOC = IJS.JOB.ALOC - IJS.PO.JOB.QTY<1,PPFND>
            IWH.ALLOC = IWH.ALLOC - IJS.PO.JOB.QTY<1,PPFND>
            IF IWH.ALLOC < 0 THEN IWH.ALLOC = 0
            LOCATE JOB.NUM IN ISTAT.JOB<1>,1 SETTING JFND ELSE JFND = 0
            LOCATE JOB.NUM IN SAVE.JOB<1,1>,1 SETTING DFND ELSE DFND = 0
            PTR = 1
            LOOP
               LOCATE PO.PROD.NUM<1,P> IN JOB.RESV.MATL<1>,PTR SETTING MFND ELSE MFND = 0
               IF MFND THEN
                  IF PO.WHSE<1,P> = JOB.RESV.WHSE<1,MFND> THEN PTR = 0 ELSE PTR = MFND + 1
               END
            WHILE PTR AND MFND DO REPEAT
            IF MFND THEN
               JOB.ALOC.QTY<1,MFND> = JOB.ALOC.QTY<1,MFND> - ISTAT.PO.JOB.QTY<1,PFND,J>
               JOB.ALOC.AMT<1,MFND> = JOB.ALOC.AMT<1,MFND> - ISTAT.PO.JOB.AMT<1,PFND,J>
            END
            IF DFND THEN
               NEW.QTY = SAVE.QTY<1,1,DFND>
               NEW.COST = INT((NEW.PRICE/10000)*((NEW.QTY/10)/(INV.COST.WT/100)) + .5)
               ISTAT.PO.JOB.QTY<1,PFND,J> = NEW.QTY
               IWH.ALLOC = IWH.ALLOC + NEW.QTY
               ISTAT.PO.JOB.AMT<1,PFND,J> = NEW.COST
               IJS.PO.JOB.QTY<1,PPFND> = NEW.QTY
               IJS.JOB.ALOC = IJS.JOB.ALOC + NEW.QTY
               IJS.PO.JOB.AMT<1,PPFND> = NEW.COST
               IF JFND = 0 THEN
                  JFND = COUNT(ISTAT.JOB,VM) + (ISTAT.JOB # "") + 1
                  ISTAT.JOB<1,JFND> = JOB.NUM
                  IJS.JOB.CUST = JOB.CUST
                  IJS.JOB.DATE = "ALLOCATE"
               END
               IF MFND THEN
                  JOB.ALOC.QTY<1,MFND> = JOB.ALOC.QTY<1,MFND> + NEW.QTY
                  JOB.ALOC.AMT<1,MFND> = JOB.ALOC.AMT<1,MFND> + NEW.COST
               END ELSE
                  MFND = COUNT(JOB.RESV.MATL,VM) + (JOB.RESV.MATL # "") + 1
                  JOB.RESV.MATL<1,MFND> = PO.PROD.NUM<1,P>
                  JOB.RESV.WHSE<1,MFND> = PO.WHSE<1,P>
                  JOB.RESV.DATE<1,MFND> = "ALLOCATE"
                  JOB.ALOC.QTY<1,MFND> = NEW.QTY
                  JOB.ALOC.AMT<1,MFND> = NEW.COST
               END
               SAVE.JOB = DELETE(SAVE.JOB,1,1,DFND)
               SAVE.QTY = DELETE(SAVE.QTY,1,1,DFND)
               IF UPDATE # "REQ" THEN
                  MATWRITE INV.JS.REC ON INV.JOB.STATS , CONO:PO.PROD.NUM<1,P>:"!":PO.WHSE<1,P>:"!":JOB.NUM
               END
            END ELSE
               ISTAT.PO.JOB = DELETE(ISTAT.PO.JOB,1,PFND,J)
               ISTAT.PO.JOB.QTY = DELETE(ISTAT.PO.JOB.QTY,1,PFND,J)
               ISTAT.PO.JOB.AMT = DELETE(ISTAT.PO.JOB.AMT,1,PFND,J)
               IJS.PO = DELETE(IJS.PO,1,PPFND,0)
               IJS.PO.JOB.QTY = DELETE(IJS.PO.JOB.QTY,1,PPFND,0)
               IJS.PO.JOB.AMT = DELETE(IJS.PO.JOB.AMT,1,PPFND,0)
               IF IJS.JOB.ALOC+IJS.JOB.QTY+IJS.JOB.USED+IJS.REQ.QTY=0 AND IJS.JMT.SEQ="" AND IJS.PO="" THEN
                  PROD = PO.PROD.NUM<1,P> ; WHSE = PO.WHSE<1,P> ; GOSUB 6000
               END ELSE
                  IF UPDATE # "REQ" THEN
                     MATWRITE INV.JS.REC ON INV.JOB.STATS, CONO:PO.PROD.NUM<1,P>:"!":PO.WHSE<1,P>:"!":JOB.NUM
                  END
               END
            END
            IF UPDATE # "REQ" THEN
               MATWRITE JOB.REC ON JOB, CONO:JOB.NUM
            END
1200*
         NEXT J
      END
      GOSUB 5000
      IWH.ON.ORDER = SUM(ISTAT.PO.QTY)
      IF ISTAT.PO.QTY<1,PFND> + 0 = 0 AND ISTAT.PO.JOB<1,PFND> = "" THEN
         ISTAT.PO = DELETE(ISTAT.PO,1,PFND,0)
         ISTAT.PO.VEND = DELETE(ISTAT.PO.VEND,1,PFND,0)
         ISTAT.PO.DATE = DELETE(ISTAT.PO.DATE,1,PFND,0)
         ISTAT.PO.QTY = DELETE(ISTAT.PO.QTY,1,PFND,0)
         ISTAT.PO.JOB = DELETE(ISTAT.PO.JOB,1,PFND,0)
         ISTAT.PO.JOB.QTY = DELETE(ISTAT.PO.JOB.QTY,1,PFND,0)
         ISTAT.PO.JOB.AMT = DELETE(ISTAT.PO.JOB.AMT,1,PFND,0)
      END
      IF ISTAT.JOB = "" AND ISTAT.PO = "" THEN
         DELETE INV.STATS, CONO:PO.PROD.NUM<1,P>:"!":PO.WHSE<1,P>
      END ELSE
         IF UPDATE # "REQ" THEN
            MATWRITE INV.STAT.REC ON INV.STATS, CONO:PO.PROD.NUM<1,P>:"!":PO.WHSE<1,P>
         END
      END
      IF UPDATE # "REQ" THEN
         MATWRITE IWH.REC ON INV.WHSE , CONO:PO.PROD.NUM<1,P>:"!":PO.WHSE<1,P>
      END
1999*
   NEXT P
   *IF UPDATE = "REQ" THEN 
   *   MATWRITE PO.REC ON REG.REQ,CONO:PO.CODE
   *END ELSE
      MATWRITE PO.REC ON PO, CONO:PO.CODE
   *END
RETURN

**** ADD ROUTINE
5000*
   J.CNT = COUNT(SAVE.JOB<1,1>,SVM) + (SAVE.JOB<1,1> # "")
   FOR J = 1 TO J.CNT
      IF SAVE.QTY<1,1,J>+0 = 0 THEN GOTO 5200 ; * T26768
      JOB.NUM = SAVE.JOB<1,1,J>
      MATREADU JOB.REC FROM JOB, CONO:JOB.NUM ELSE
         RELEASE JOB, CONO:JOB.NUM
         ERRMSG<1,-1> = "JOB ":JOB.NUM:" IS NOT ON JOB FILE";GOTO 5200
      END
      MATREADU INV.JS.REC FROM INV.JOB.STATS, CONO:PO.PROD.NUM<1,P>:"!":PO.WHSE<1,P>:"!":JOB.NUM ELSE MAT INV.JS.REC = ""
      LOCATE JOB.NUM IN ISTAT.PO.JOB<1,PFND>,1 SETTING JJ ELSE
         ISTAT.PO.JOB<1,PFND,JJ> = JOB.NUM
         ISTAT.PO.JOB.QTY<1,PFND,JJ> = 0
         ISTAT.PO.JOB.AMT<1,PFND,JJ> = 0
      END
      LOCATE PO.CODE IN IJS.PO<1>,1 SETTING PPFND ELSE
         IJS.PO<1,PPFND> = PO.CODE
         IJS.PO.JOB.QTY<1,PPFND> = 0
         IJS.PO.JOB.AMT<1,PPFND> = 0
      END
      LOCATE JOB.NUM IN ISTAT.JOB<1>,1 SETTING JFND ELSE
         ISTAT.JOB<1,JFND> = JOB.NUM
      END
      IJS.JOB.CUST = JOB.CUST
      IJS.JOB.DATE = DATE()
      PTR = 1
      LOOP
         LOCATE PO.PROD.NUM<1,P> IN JOB.RESV.MATL<1>,PTR SETTING MFND ELSE MFND = 0
         IF MFND THEN
            IF PO.WHSE<1,P> = JOB.RESV.WHSE<1,MFND> THEN PTR = 0 ELSE PTR = MFND + 1
         END
      WHILE PTR AND MFND DO REPEAT
      NEW.QTY = SAVE.QTY<1,1,J>
      NEW.COST = INT((NEW.PRICE/10000)*((NEW.QTY/10)/(INV.COST.WT/100)) + .5)
      ISTAT.PO.JOB.QTY<1,PFND,JJ> = ISTAT.PO.JOB.QTY<1,PFND,JJ> + NEW.QTY
      ISTAT.PO.JOB.AMT<1,PFND,JJ> = ISTAT.PO.JOB.AMT<1,PFND,JJ> + NEW.COST
      IJS.JOB.ALOC = IJS.JOB.ALOC + NEW.QTY
      IWH.ALLOC = IWH.ALLOC + NEW.QTY
      IJS.PO.JOB.QTY<1,PPFND> = IJS.PO.JOB.QTY<1,PPFND> + NEW.QTY
      IJS.PO.JOB.AMT<1,PPFND> = IJS.PO.JOB.AMT<1,PPFND> + NEW.COST
      IF MFND THEN
         JOB.ALOC.QTY<1,MFND> = JOB.ALOC.QTY<1,MFND> + NEW.QTY
         JOB.ALOC.AMT<1,MFND> = JOB.ALOC.AMT<1,MFND> + NEW.COST
      END ELSE
         MFND = COUNT(JOB.RESV.MATL,VM) + (JOB.RESV.MATL # "") + 1
         JOB.RESV.MATL<1,MFND> = PO.PROD.NUM<1,P>
         JOB.RESV.WHSE<1,MFND> = PO.WHSE<1,P>
         JOB.RESV.DATE<1,MFND> = "ALLOCATE"
         JOB.ALOC.QTY<1,MFND> = NEW.QTY
         JOB.ALOC.AMT<1,MFND> = NEW.COST
      END
      IF UPDATE # "REQ" THEN
         MATWRITE INV.JS.REC ON INV.JOB.STATS , CONO:PO.PROD.NUM<1,P>:"!":PO.WHSE<1,P>:"!":JOB.NUM
         MATWRITE JOB.REC ON JOB, CONO:JOB.NUM
      END
5200*
   NEXT J
RETURN

**** DELETE ROUTINE
6000*
   DELETE INV.JOB.STATS , CONO:PROD:"!":WHSE:"!":JOB.NUM
   IF JFND THEN
      ISTAT.JOB = DELETE(ISTAT.JOB,1,JFND,0)
   END
   IF MFND THEN
      JOB.RESV.MATL = DELETE(JOB.RESV.MATL,1,MFND,0)
      JOB.RESV.WHSE = DELETE(JOB.RESV.WHSE,1,MFND,0)
      JOB.RESV.DATE = DELETE(JOB.RESV.DATE,1,MFND,0)
      JOB.ALOC.QTY = DELETE(JOB.ALOC.QTY,1,MFND,0)
      JOB.RESV.QTY = DELETE(JOB.RESV.QTY,1,MFND,0)
      JOB.USED.QTY = DELETE(JOB.USED.QTY,1,MFND,0)
      JOB.ALOC.AMT = DELETE(JOB.ALOC.AMT,1,MFND,0)
      JOB.RESV.AMT = DELETE(JOB.RESV.AMT,1,MFND,0)
      JOB.USED.AMT = DELETE(JOB.USED.AMT,1,MFND,0)
   END
RETURN

93000*
   STATUS = RBO.setProperty("","new_item",0)
   STATUS = RBO.setProperty("","ServerStatus",1)
   STATUS = RBO.setProperty("","ServerMessage",ERRMSG)
RETURN

88888*
   STATUS = RBO.setProperty("","new_item",0)
   STATUS = RBO.setProperty("","UPDATE_VEND",UPDATE.VEND)
   STATUS = RBO.setProperty("","ServerMessage",ERRMSG)
99999 
   RETURN
