SUBROUTINE GetNewEstSummary
********************************************************************************
*   Program name :- getEstSummaries
*   Created:- 6/2/2004
*------------------------------------------------------------------------------*
*
*   AUTHOR :- Ramakrishna Pusuluri
*
* DESCRIPTION
*
* This program gets the data from the ESTIMATE.DEPT file to load into the
* Estimate Cost/Type Summary screen.
*
*********************************************************************
*
*---- FILE COPY STATEMENTS
*
   $INCLUDE WWINSERT RBO.H
   $INCLUDE JES.CPYLIB JES.FILE.VARS
   $INCLUDE CPYLIB FILE.VARS
   $INCLUDE JES.CPYLIB ESTIMATE
   $INCLUDE JES.CPYLIB ESTIMATE.RES
   $INCLUDE JES.CPYLIB ESTIMATE.DEPT
   $INCLUDE JES.CPYLIB EST.COST.TYPE.SUM
   $INCLUDE CPYLIB CHAR   
*
*---- OPEN ALL FILES
*
  * IN_PARAM = "" ; OUT_PARAM = ""
  * ERRMSG = "CALL openEstimateFiles PROBLEM"
  * CALL openEstimateFiles(ERRMSG,IN_PARAM,OUT_PARAM,MAT FILE.VARS, MAT JES.FILE.VARS)
  * IF ERRMSG # "" THEN GOTO 1000
*
*---- INITIALIZATION
*
TOTAL.SALE = ''

OPEN "ESTIMATE" TO ESTIMATE ELSE
     ERRMSG = "CAN NOT OPEN ESTIMATE FILE"
     GOTO 93000
END
OPEN "ESTIMATE.DEPT" TO ESTIMATE.DEPT ELSE
     ERRMSG = "CAN NOT OPEN ESTIMATE.DEPT FILE"
     GOTO 93000
END 

OPEN "ESTIMATE.RES" TO ESTIMATE.RES ELSE
     ERRMSG = "CAN NOT OPEN ESTIMATE FILE"
     GOTO 93000
END
OPEN "CONTROL" TO CONTROL ELSE
     ERRMSG ="CAN NOT OPEN CONTROL FILE "
     GOTO 93000
END

STATUS = RBO.getProperty('','ID',ESTIMATE.ID)
STATUS = RBO.getProperty('','QSEL',EST_QTY)
STATUS = RBO.getProperty('','ESTFLAG',ESTFLAG)
   
   CONO = ESTIMATE.ID[1,3]
   EST.ID = TRIM(ESTIMATE.ID[4,99])
   MATREAD EST.REC FROM ESTIMATE, ESTIMATE.ID ELSE
       MAT EST.REC = ""
       EST.BASE.QTY = EST_QTY<1,1>       
   END
   ALLESTSUMMARYVARS = ""
STATUS=RBO.getProperty('','EST_DEPT_COMP',ALLESTSUMMARYVARS)

IF ALLESTSUMMARYVARS <> "" THEN
   EST.DEPT.COMP        = FIELD(ALLESTSUMMARYVARS,"^",1)
   EST.DEPT.COMP.HRS    = FIELD(ALLESTSUMMARYVARS,"^",2)
   EST.DEPT.COMP.DCOST  = FIELD(ALLESTSUMMARYVARS,"^",3)
   EST.DEPT.COMP.COST   = FIELD(ALLESTSUMMARYVARS,"^",4)
   EST.DEPT.COMP.SALE   = FIELD(ALLESTSUMMARYVARS,"^",5)
   EST.DEPT.COMP.TSALE  = FIELD(ALLESTSUMMARYVARS,"^",6)
   EST.DEPT.COMP.VSALE  = FIELD(ALLESTSUMMARYVARS,"^",7)
   EST.DEPT.COMP.VCOST  = FIELD(ALLESTSUMMARYVARS,"^",8)
   EST.PP.INCLUDE       = FIELD(ALLESTSUMMARYVARS,"^",9)
END
WRITE EST.DEPT.COMP:"~":EST.DEPT.COMP.HRS:"~":EST.DEPT.COMP.DCOST:"~":EST.DEPT.COMP.COST:"~":EST.DEPT.COMP.SALE:"~":EST.DEPT.COMP.VSALE:"~":EST.DEPT.COMP.TSALE:"~":EST.DEPT.COMP.VCOST ON CONTROL,"01RKB4"
   IN_PARAM = ""
   IN_PARAM<1> = CONO
   IN_PARAM<2> = EST.ID
   IN_PARAM<3> = "ALL"
   IN_PARAM<4> = "ALL"
   CALC.LB.PCT.SALE = ''
   CALC.MT.PCT.SALE = ''
   CALC.OS.PCT.SALE = ''
   CALC.SP.PCT.SALE = ''
   CALC.MS.PCT.SALE = ''
   CALC.TOT.PCT.SALE = ''
*  CALL SetSummaryData(ERRMSG,IN_PARAM,OUT_PARAM,MAT FILE.VARS,MAT JES.FILE.VARS,MAT EST.REC)
 DIM SAVE.CSUM.REC(40)
   EQU SAVE.LB.HRS           TO SAVE.CSUM.REC(2)    ;* Labor hours
   EQU SAVE.LB.DCOST         TO SAVE.CSUM.REC(3)    ;* Labor direct cost
   EQU SAVE.LB.COST          TO SAVE.CSUM.REC(4)    ;* Labor total cost
   EQU SAVE.LB.SALE          TO SAVE.CSUM.REC(5)    ;* Labor sale
   EQU SAVE.MT.DCOST         TO SAVE.CSUM.REC(6)    ;* Material direct cost
   EQU SAVE.MT.COST          TO SAVE.CSUM.REC(7)    ;* Material total cost
   EQU SAVE.MT.SALE          TO SAVE.CSUM.REC(8)    ;* Material sale
   EQU SAVE.OS.DCOST         TO SAVE.CSUM.REC(9)    ;* O/P direct cost
   EQU SAVE.OS.COST          TO SAVE.CSUM.REC(10)   ;* O/P total cost
   EQU SAVE.OS.SALE          TO SAVE.CSUM.REC(11)   ;* O/P sale
   EQU SAVE.SP.DCOST         TO SAVE.CSUM.REC(12)   ;* Shipping direct cost
   EQU SAVE.SP.COST          TO SAVE.CSUM.REC(13)   ;* Shipping total cost
   EQU SAVE.SP.SALE          TO SAVE.CSUM.REC(14)   ;* Shipping sale
   EQU SAVE.MS.DCOST         TO SAVE.CSUM.REC(15)   ;* Misc direct cost
   EQU SAVE.MS.COST          TO SAVE.CSUM.REC(16)   ;* Misc total cost
   EQU SAVE.MS.SALE          TO SAVE.CSUM.REC(17)   ;* Misc sale
   EQU SAVE.TOT.DCOST        TO SAVE.CSUM.REC(18)   ;* Total direct cost
   EQU SAVE.TOT.COST         TO SAVE.CSUM.REC(19)   ;* Total cost
   EQU SAVE.TOT.SALE         TO SAVE.CSUM.REC(20)   ;* Total sale
   EQU SAVE.MT.DCOST.DET     TO SAVE.CSUM.REC(21)   ;* (MV1) Material direct cost detail
*                                                   ;* 1 = paper
*                                                   ;* 2 = ink
*                                                   ;* 3 = film
*                                                   ;* 4 = plates
*                                                   ;* 5 = other
   EQU SAVE.MT.COST.DET      TO SAVE.CSUM.REC(22)   ;* (MV1) Material total cost detail
   EQU SAVE.MT.SALE.DET      TO SAVE.CSUM.REC(23)   ;* (MV1) Material sale detail
*
*---- INITIALIZATION
*
   CONO = IN_PARAM<1>
   EST.ID = IN_PARAM<2>
   DSEL = IN_PARAM<3>
   CSEL = IN_PARAM<4>
   QSEL = IN_PARAM<5>
   ESTIMATE.ID = CONO:EST.ID
   MAT SAVE.CSUM.REC = ""
   EstSummStr=""

*
*---- PROCESSING
*
STATUS = RBO.getProperty('','QSEL',EST_QTY)
STATUS = RBO.getProperty('','ESTFLAG',ESTFLAG)

QCNT = DCOUNT(EST_QTY,VM)
QTYFLAG = 0
IF EST.QTY # EST_QTY THEN QTYFLAG = 1
NEW_EST_DEPT_COMP_IDS = ""
   FOR QPTR = 1 TO QCNT
      QSEL = EST_QTY<1,QPTR>
      STATUS = RBO.setProperty('','ID',CONO:EST.ID)
      STATUS = RBO.setProperty('','QSEL',EST_QTY)
      STATUS = RBO.setProperty('','EST_DEPT_COMP',EST.DEPT.COMP)
      STATUS = RBO.setProperty('','EST_DEPT_COMP_HRS',EST.DEPT.COMP.HRS)
      STATUS = RBO.setProperty('','EST_DEPT_COMP_DCOST',EST.DEPT.COMP.DCOST)
      STATUS = RBO.setProperty('','EST_DEPT_COMP_COST',EST.DEPT.COMP.COST)
      STATUS = RBO.setProperty('','EST_DEPT_COMP_SALE',EST.DEPT.COMP.SALE)
      STATUS = RBO.setProperty('','EST_DEPT_COMP_VSALE',EST.DEPT.COMP.VSALE)
      STATUS = RBO.setProperty('','EST_DEPT_COMP_TSALE',EST.DEPT.COMP.TSALE)
      STATUS = RBO.setProperty('','EST_DEPT_COMP_VCOST',EST.DEPT.COMP.VCOST)
     CALL EST_RES_QTY_GEN
       STATUS=RBO.getProperty('','EST_DEPT_COMP',EST.DEPT.COMP)
       STATUS=RBO.getProperty('','EST_DEPT_COMP_HRS',EST.DEPT.COMP.HRS)
       STATUS=RBO.getProperty('','EST_DEPT_COMP_DCOST',EST.DEPT.COMP.DCOST)
       STATUS=RBO.getProperty('','EST_DEPT_COMP_COST',EST.DEPT.COMP.COST)
       STATUS=RBO.getProperty('','EST_DEPT_COMP_SALE',EST.DEPT.COMP.SALE)
       STATUS=RBO.getProperty('','EST_DEPT_COMP_VSALE',EST.DEPT.COMP.VSALE)
       STATUS=RBO.getProperty('','EST_DEPT_COMP_TSALE',EST.DEPT.COMP.TSALE)
       STATUS=RBO.getProperty('','EST_DEPT_COMP_VCOST',EST.DEPT.COMP.VCOST)

*GOSUB EST_RES_QTY_GEN
      MAT CSUM.REC = ''
*      CALC.LB.PCT.SALE<1,QPTR> = ''
*      CALC.MT.PCT.SALE<1,QPTR> = ''
*      CALC.OS.PCT.SALE<1,QPTR> = ''
*      CALC.SP.PCT.SALE<1,QPTR> = ''
*      CALC.MS.PCT.SALE<1,QPTR> = ''
*      CALC.TOT.PCT.SALE<1,QPTR> = ''

      IF EST.PDEF.TYPE = 'RL' THEN
*         CALL EST.RES.COST.TYPE.SUB (CONO,EST.KEY,'ALL','ALL',QSEL,MAT CSUM.REC)
          GOSUB EST_RES_COST_TYPE_SUB_LOCAL
      END ELSE
*         CALL EST.COST.TYPE.SUB (CONO,EST.KEY,'ALL','ALL',QSEL,MAT CSUM.REC)
          GOSUB EST_COST_TYPE_SUB_LOCAL
      END
*      IF CSUM.LB.SALE # '' THEN
*         CALC.LB.PCT.SALE<1,QPTR> = CSUM.LB.SALE / CSUM.TOT.SALE
*      END
*      IF CSUM.MT.SALE # '' THEN
*         CALC.MT.PCT.SALE<1,QPTR> = CSUM.MT.SALE / CSUM.TOT.SALE
*      END
*      IF CSUM.OS.SALE # '' THEN
*         CALC.OS.PCT.SALE<1,QPTR> = CSUM.OS.SALE / CSUM.TOT.SALE
*      END
*      IF CSUM.SP.SALE # '' THEN
*         CALC.SP.PCT.SALE<1,QPTR> = CSUM.SP.SALE / CSUM.TOT.SALE
*      END
*      IF CSUM.MS.SALE # '' THEN
*         CALC.MS.PCT.SALE<1,QPTR> = CSUM.MS.SALE / CSUM.TOT.SALE
*      END
*      CALC.TOT.PCT.SALE<1,QPTR> = ICONV(CALC.TOT.PCT.SALE<1,QPTR>,"MD4")
*      CALC.LB.PCT.SALE<1,QPTR> = ICONV(CALC.LB.PCT.SALE<1,QPTR>,"MD4")
*      CALC.MS.PCT.SALE<1,QPTR> = ICONV(CALC.MS.PCT.SALE<1,QPTR>,"MD4")
*      CALC.SP.PCT.SALE<1,QPTR> = ICONV(CALC.SP.PCT.SALE<1,QPTR>,"MD4")
*      CALC.OS.PCT.SALE<1,QPTR> = ICONV(CALC.OS.PCT.SALE<1,QPTR>,"MD4")
*      CALC.MT.PCT.SALE<1,QPTR> = ICONV(CALC.MT.PCT.SALE<1,QPTR>,"MD4")
      SAVE.LB.SALE<1,QPTR> = CSUM.LB.SALE
      SAVE.MT.SALE<1,QPTR> = CSUM.MT.SALE
      SAVE.OS.SALE<1,QPTR> = CSUM.OS.SALE
      SAVE.SP.SALE<1,QPTR> = CSUM.SP.SALE
      SAVE.MS.SALE<1,QPTR> = CSUM.MS.SALE
      TOTAL.SALE<1,QPTR> = CSUM.TOT.SALE
*      EST.OM.PCT <1,QPTR> = EST.OM.PCT <1,QPTR> 
*      EST.FINAL.PRICE <1,QPTR> = EST.FINAL.PRICE <1,QPTR> 
*      EST.OM.PRICE.M <1,QPTR> =EST.OM.PRICE.M <1,QPTR> 
*      EST.PRICE.THOU<1,QPTR> = EST.PRICE.THOU<1,QPTR> 
   NEXT QPTR
   QCNT = DCOUNT(EST_QTY,VM)
   FOR QPTR = 1 TO QCNT
	SAVE.LB.SALE<1,QPTR> = OCONV(SAVE.LB.SALE<1,QPTR>,'MD2,')
	SAVE.MT.SALE<1,QPTR> = OCONV(SAVE.MT.SALE<1,QPTR>,'MD2,')
        SAVE.OS.SALE<1,QPTR> = OCONV(SAVE.OS.SALE<1,QPTR>,'MD2,')
        SAVE.SP.SALE<1,QPTR> = OCONV(SAVE.SP.SALE<1,QPTR>,'MD2,')
        SAVE.MS.SALE<1,QPTR> = OCONV(SAVE.MS.SALE<1,QPTR>,'MD2,')
        TOTAL.SALE<1,QPTR> = OCONV(TOTAL.SALE<1,QPTR>,'MD2,')
   NEXT

*
*---- BUILD RBO RECORD
*
IF EST.PDEF.TYPE = 'RL' THEN
    GOSUB CALL26500
END ELSE
    GOSUB CALL25500
END
EstSummStr=SAVE.LB.SALE:SVM:SAVE.MT.SALE:SVM:SAVE.OS.SALE:SVM:SAVE.SP.SALE:SVM:SAVE.MS.SALE:SVM:TOTAL.SALE  :SVM:  EST.OM.PCT  :SVM: EST.FINAL.PRICE:SVM: EST.OM.PRICE.M  :SVM: EST.PRT.PRICE.THOU :SVM: EST.PRT.PRICE.UOM  :SVM:EST.PRICE.THOU : SVM :EST.COST.THOU : SVM : EST.PRICE.UOM :SVM:EST.BASE.QTY :SVM:EST.DEPT.COMP:SVM:EST.DEPT.COMP.HRS:SVM:EST.DEPT.COMP.DCOST:SVM:EST.DEPT.COMP.COST:SVM:EST.DEPT.COMP.SALE:SVM:EST.DEPT.COMP.VSALE:SVM:EST.DEPT.COMP.TSALE:SVM:EST.DEPT.COMP.VCOST
STATUS = RBO.setProperty('','EstSummStr',EstSummStr)
RETURN

IF ERRMSG # "" THEN GOTO 93000
RETURN

93000 *
   STATUS = RBO.setProperty('','ServerStatus',1)
   STATUS = RBO.setProperty('','ServerMessage',ERRMSG)
   RETURN
*  


EST_RES_COST_TYPE_SUB_LOCAL:
*
      MAT CSUM.REC = ""
      READ EST.RL.PP FROM CONTROL,CONO:'EST.RES.PRE.PRESS' ELSE EST.RL.PP=''
*
*---- MAIN PROCESSING
*
2100 *
*      READV EST.RL.PP.INCLUDE FROM ESTIMATE.RES,CONO:EST.ID,100 ELSE EST.RL.PP.INCLUDE='';RELEASE ESTIMATE.RES,CONO:EST.ID
      
      MATREAD EST.RL.REC FROM ESTIMATE.RES,CONO:EST.ID ELSE MAT EST.RL.REC = ''

      ERRMSG=RBO.getProperty('','NewQtyIds',EST.DEPT.COMP)

*     DCNT = COUNT(EST.DEPT.COMP,VM) + (EST.DEPT.COMP # "")
      DCNT = DCOUNT(EST.DEPT.COMP,VM)

      FOR DP = 1 TO DCNT
         ESTD.ID = EST.DEPT.COMP<1,DP>

         IF DSEL # "ALL" AND DSEL # EST.DEPT<1,FIELD(ESTD.ID,"!",1)> THEN GOTO 2190
         IF CSEL # "ALL" AND CSEL # FIELD(ESTD.ID,"!",2) THEN GOTO 2190
         IF QSEL # FIELD(ESTD.ID,"!",3) THEN GOTO 2190

*READV ESTD.TYPE FROM ESTIMATE.DEPT,CONO:EST.ID:"!":ESTD.ID,6 ELSE ESTD.TYPE='KRISHNA'

         MATREAD ESTD.REC FROM ESTIMATE.DEPT, CONO:EST.ID:"!":ESTD.ID ELSE GOTO 2190
*         IF EST.RL.PP.INCLUDE#'Y' THEN
*           LOCATE ESTD.DEPT IN EST.RL.PP<1>,1 SETTING DPOS THEN GO 2190
*         END
*        TCNT = COUNT(ESTD.TYPE,VM) + (ESTD.TYPE # "")
         TCNT = DCOUNT(ESTD.TYPE,VM)
         FOR TP = 1 TO TCNT
            TYPE = ESTD.TYPE<1,TP>[1,1]
            IF TYPE = "G" THEN GOTO 2180
            TSUB = ESTD.TYPE<1,TP>[2,1]
            HRS = ESTD.HRS<1,TP>
            DCOST = ESTD.DCOST<1,TP>
            COST = ESTD.COST<1,TP>
	    IF EST.RL.PP.INCLUDE#'Y' THEN
               LOCATE ESTD.DEPT IN EST.RL.PP<1>,1 SETTING DPOS THEN
                  SALE = 0
               END ELSE
                  SALE = ESTD.TSALE<1,TP>
               END
            END ELSE
               SALE = ESTD.TSALE<1,TP>
            END
            RATE = ESTD.RATE<1,TP>
            PROD = ESTD.OPV<1,TP>
            QCALC = ESTD.GRP.QCALC<1,TP>
            QPARAM = ESTD.GRP.QPARAM<1,TP>
            BEGIN CASE
               CASE TYPE = "L"
                  IF QCALC = "A" THEN
                     BEGIN CASE
                        CASE QPARAM = "100"
                           CSUM.LB.COPY = CSUM.LB.COPY + RATE
                        CASE QPARAM = "200"
                           CSUM.LB.COLOR = CSUM.LB.COLOR + RATE
                        CASE QPARAM = "300"
                           CSUM.LB.VERSION = CSUM.LB.VERSION + RATE
                     END CASE
                  END
                  CSUM.LB.HRS = CSUM.LB.HRS + HRS
                  CSUM.LB.DCOST = CSUM.LB.DCOST + DCOST
                  CSUM.LB.COST = CSUM.LB.COST + COST
                  CSUM.LB.SALE = CSUM.LB.SALE + SALE
               CASE TYPE = "M" OR TYPE = "I"
                  IF QCALC = "A" THEN
                     BEGIN CASE
                        CASE QPARAM = "100"
                           CSUM.MT.COPY<1,-1> = PROD
                        CASE QPARAM = "200"
                           CSUM.MT.COLOR<1,-1> = PROD
                        CASE QPARAM = "300"
                           CSUM.MT.VERSION<1,-1> = PROD
                     END CASE
                  END
                  CSUM.MT.DCOST = CSUM.MT.DCOST + DCOST
                  CSUM.MT.COST = CSUM.MT.COST + COST
                  CSUM.MT.SALE = CSUM.MT.SALE + SALE
                  BEGIN CASE
* CSF 32159 v
                     CASE ESTD.TYPE<1,TP> = 'MR' OR ESTD.TYPE<1,TP> = 'MS'
                        DET = 1
                     CASE ESTD.TYPE<1,TP> = 'MI'
                        DET = 2
                     CASE ESTD.TYPE<1,TP> = 'MF'
                        DET = 3
                     CASE ESTD.TYPE<1,TP> = 'MP'
                        DET = 4
                     CASE ESTD.TYPE<1,TP> = 'MC'
                        DET = 5
                     CASE ESTD.TYPE<1,TP> = 'MO'
                        DET = 6
*                    CASE TSUB = "S" OR TSUB = "R" OR TSUB = "L"
*                       DET = 1
*                    CASE TSUB = 'I' AND PROD[1,1]='L'
*                       DET = 2
*                    CASE TSUB = 'I' AND PROD[1,1]='S'
*                       DET = 3
*                    CASE TSUB = 'I'
*                       DET = 4
*                    CASE TSUB = "F"
*                       DET = 5
*                    CASE TSUB = "P"
*                       DET = 6
*                    CASE TSUB = "C"
*                       DET = 7
*                    CASE 1
*                       DET = 8
*CSF 32159 ^
                  END CASE
                  CSUM.MT.DCOST.DET<1,DET> = CSUM.MT.DCOST.DET<1,DET> + DCOST
                  CSUM.MT.COST.DET<1,DET> = CSUM.MT.COST.DET<1,DET> + COST
                  CSUM.MT.SALE.DET<1,DET> = CSUM.MT.SALE.DET<1,DET> + SALE
               CASE TYPE = "P"
                  CSUM.OS.DCOST = CSUM.OS.DCOST + DCOST
                  CSUM.OS.COST = CSUM.OS.COST + COST
                  CSUM.OS.SALE = CSUM.OS.SALE + SALE
               CASE TYPE = "S"
                  CSUM.SP.DCOST = CSUM.SP.DCOST + DCOST
                  CSUM.SP.COST = CSUM.SP.COST + COST
                  CSUM.SP.SALE = CSUM.SP.SALE + SALE
               CASE TYPE = "O"
                  CSUM.MS.DCOST = CSUM.MS.DCOST + DCOST
                  CSUM.MS.COST = CSUM.MS.COST + COST
                  CSUM.MS.SALE = CSUM.MS.SALE + SALE
            END CASE
            CSUM.TOT.DCOST = CSUM.TOT.DCOST + DCOST
            CSUM.TOT.COST = CSUM.TOT.COST + COST
            CSUM.TOT.SALE = CSUM.TOT.SALE + SALE
2180      NEXT TP
2190   NEXT DP
RETURN


EST_COST_TYPE_SUB_LOCAL:

   MAT CSUM.REC = ""
*T27716 v
   READ EST.PP FROM CONTROL,CONO:'EST.RES.PRE.PRESS' ELSE EST.PP=''
*T27716 ^

1100*
*   DCNT = COUNT(EST.DEPT.COMP,VM) + (EST.DEPT.COMP # "")
   DCNT = DCOUNT(EST.DEPT.COMP,VM)
   FOR DP = 1 TO DCNT
      ESTD.ID = EST.DEPT.COMP<1,DP>
      IF DSEL # "ALL" AND DSEL # EST.DEPT<1,FIELD(ESTD.ID,"!",1)> THEN GOTO 1190
      IF CSEL # "ALL" AND CSEL # FIELD(ESTD.ID,"!",2) THEN GOTO 1190
      IF QSEL # FIELD(ESTD.ID,"!",3) THEN GOTO 1190
      MATREAD ESTD.REC FROM ESTIMATE.DEPT, CONO:EST.ID:"!":ESTD.ID ELSE GOTO 1190
*     TCNT = COUNT(ESTD.TYPE,VM) + (ESTD.TYPE # "")
      TCNT = DCOUNT(ESTD.TYPE,VM)
      FOR TP = 1 TO TCNT
         TYPE = ESTD.TYPE<1,TP>[1,1]
         IF TYPE = "G" THEN GOTO 1180
         TSUB = ESTD.TYPE<1,TP>[2,1]
         HRS = ESTD.HRS<1,TP>
         DCOST = ESTD.DCOST<1,TP>
         COST = ESTD.COST<1,TP>
*T27716 v
*        SALE = ESTD.TSALE<1,TP>
	 IF EST.PP.INCLUDE#'Y' THEN
            LOCATE ESTD.DEPT IN EST.PP<1>,1 SETTING DPOS THEN
               SALE = 0
            END ELSE
               SALE = ESTD.TSALE<1,TP>
            END
         END ELSE
            SALE = ESTD.TSALE<1,TP>
         END
*T27716 ^
         BEGIN CASE
            CASE TYPE = "L"
               CSUM.LB.HRS = CSUM.LB.HRS + HRS
               CSUM.LB.DCOST = CSUM.LB.DCOST + DCOST
               CSUM.LB.COST = CSUM.LB.COST + COST
               CSUM.LB.SALE = CSUM.LB.SALE + SALE
            CASE TYPE = "M" OR TYPE = "I"
               CSUM.MT.DCOST = CSUM.MT.DCOST + DCOST
               CSUM.MT.COST = CSUM.MT.COST + COST
               CSUM.MT.SALE = CSUM.MT.SALE + SALE
               BEGIN CASE
                  CASE TSUB = "S" OR TSUB = "R" OR TSUB = "L"
                     DET = 1
                  CASE TSUB = "I"
                     DET = 2
                  CASE TSUB = "F"
                     DET = 3
                  CASE TSUB = "P"
                     DET = 4
                  CASE TSUB = "C"
                     DET = 5
                  CASE 1
                     DET = 6
               END CASE
               CSUM.MT.DCOST.DET<1,DET> = CSUM.MT.DCOST.DET<1,DET> + DCOST
               CSUM.MT.COST.DET<1,DET> = CSUM.MT.COST.DET<1,DET> + COST
               CSUM.MT.SALE.DET<1,DET> = CSUM.MT.SALE.DET<1,DET> + SALE
            CASE TYPE = "P"
               CSUM.OS.DCOST = CSUM.OS.DCOST + DCOST
               CSUM.OS.COST = CSUM.OS.COST + COST
               CSUM.OS.SALE = CSUM.OS.SALE + SALE
            CASE TYPE = "S"
               CSUM.SP.DCOST = CSUM.SP.DCOST + DCOST
               CSUM.SP.COST = CSUM.SP.COST + COST
               CSUM.SP.SALE = CSUM.SP.SALE + SALE
            CASE TYPE = "O"
               CSUM.MS.DCOST = CSUM.MS.DCOST + DCOST
               CSUM.MS.COST = CSUM.MS.COST + COST
               CSUM.MS.SALE = CSUM.MS.SALE + SALE
         END CASE
         CSUM.TOT.DCOST = CSUM.TOT.DCOST + DCOST
         CSUM.TOT.COST = CSUM.TOT.COST + COST
         CSUM.TOT.SALE = CSUM.TOT.SALE + SALE
1180   NEXT TP
1190 NEXT DP
RETURN

CALL25500:

*   CALL EST.QTY.GEN (CONO,"A",EST.KEY,"ALL")
*   CALL EST_QTY_GEN(CONO,"A",CONO:EST.ID,"ALL")

   EST.OM.PCT = '000000'
   EST.FINAL.PRICE = ''
   EST.PRICE.THOU = ''
   EST.COST.THOU = ''
   EST.PRT.PRICE.THOU = ''
   EST.OM.PRICE.M = ''
   EST.PRT.PRICE.UOM = ''
   EST.PRICE.UOM = ''
   TOTAL.TCOST = ''
   TOTAL.VCOST = ''
   TOTAL.FCOST = ''
   TOTAL.TSALE = ''
   TOTAL.VSALE = ''
   TOTAL.FSALE = ''
   QC = DCOUNT(EST_QTY,VM)
   DC=DCOUNT(EST.DEPT.COMP,VM)
   FOR DP = 1 TO DC
      ESTD.ID=EST.DEPT.COMP<1,DP>
      EQTY=FIELD(ESTD.ID,"!",3)
      LOCATE EQTY IN EST_QTY<1>,1 SETTING EP THEN
         TOTAL.TCOST<1,EP>=TOTAL.TCOST<1,EP>+EST.DEPT.COMP.COST<1,DP>
         TOTAL.VCOST<1,EP>=TOTAL.VCOST<1,EP>+EST.DEPT.COMP.VCOST<1,DP>
         TOTAL.FCOST<1,EP>=TOTAL.TCOST<1,EP>-TOTAL.VCOST<1,EP>
         TOTAL.TSALE<1,EP>=TOTAL.TSALE<1,EP>+EST.DEPT.COMP.TSALE<1,DP>
         TOTAL.VSALE<1,EP>=TOTAL.VSALE<1,EP>+EST.DEPT.COMP.VSALE<1,DP>
         TOTAL.FSALE<1,EP>=TOTAL.TSALE<1,EP>-TOTAL.VSALE<1,EP>
      END
   NEXT DP
   EST.PRT.PRICE.THOU = 'Y'
   EST.PRT.PRICE.UOM = 'M'
*  ECNT=COUNT(EST_QTY,VM)+1
   ECNT=DCOUNT(EST_QTY,VM)
   FOR EP = 1 TO ECNT
      EST.OM.PCT<1,EP> = '000000'
      EST.FINAL.PRICE<1,EP> = TOTAL.TSALE<1,EP>
      EST.PRICE.THOU<1,EP>=INT(TOTAL.VSALE<1,EP>/(EST_QTY<1,EP>/1000)+0.5)
      EST.COST.THOU<1,EP>=INT(TOTAL.VCOST<1,EP>/(EST_QTY<1,EP>/1000)+0.5)
      EST.OM.PRICE.M<1,EP> = INT(EST.FINAL.PRICE<1,EP> / EST_QTY<1,EP> * 1000 + .5)
      EST.PRICE.UOM<1,EP> = EST.OM.PRICE.M<1,EP>
      
      EST.OM.PCT<1,EP> = OCONV(EST.OM.PCT<1,EP>,'MD4')	
      EST.FINAL.PRICE<1,EP> = OCONV(EST.FINAL.PRICE<1,EP>,'MD2,')
      EST.OM.PRICE.M<1,EP> = OCONV(EST.OM.PRICE.M<1,EP>,'MD2')
      EST.PRICE.THOU<1,EP> = OCONV(EST.PRICE.THOU<1,EP>,'MD2')
   NEXT EP
   RETURN
CALL26500:
      TOTAL.VSALE=""
      TOTAL.VCOST=""
      DC=DCOUNT(EST.DEPT.COMP,VM)
     FOR DP=1 TO DC
         ESTD.ID=EST.DEPT.COMP<1,DP>
         QTY=FIELD(ESTD.ID,"!",3)
         LOCATE QTY IN EST_QTY<1>,1 SETTING P ELSE P=0
         IF P > 0 THEN
            TOTAL.VSALE<1,P>=TOTAL.VSALE<1,P>+EST.DEPT.COMP.VSALE<1,DP>
            TOTAL.VCOST<1,P>=TOTAL.VCOST<1,P>+EST.DEPT.COMP.VCOST<1,DP>
         END
      NEXT DP
      EST.COST.THOU<1,QPTR> = ''
      EST.PRICE.THOU<1,QPTR> = ''
      ECNT=DCOUNT(EST_QTY,VM)
*      EST.PRICE.THOU=""
*      EST.COST.THOU = ''

      FOR EP=1 TO ECNT
          PRICE.THOU.MKUP = TOTAL.VSALE<1,EP> + (INT(OCONV(TOTAL.VSALE<1,EP>,'MD2') * OCONV(EST.OM.PCT<1,EP>,'MD4') + .005 / 100))
*         EST.PRICE.THOU<1,EP>=INT(PRICE.THOU.MKUP/(EST.QTY<1,EP>/1000)+0.5)
*         EST.COST.THOU<1,EP>=INT(TOTAL.VCOST<1,EP>/(EST.QTY<1,EP>/1000)+0.5)

* ADDED 24-8-06 v
*          IF EST.OM.PCT<1,EP> = '' THEN EST.OM.PCT<1,EP> = '000000'
           IF EST.QTY<1,EP> # EST_QTY<1,EP> THEN EST.FINAL.PRICE<1,EP> = TOTAL.SALE<1,EP>

*          IF EST.PRICE.THOU<1,EP> = '' THEN EST.PRICE.THOU<1,EP>=INT(TOTAL.VSALE<1,EP>/(EST_QTY<1,EP>/1000)+0.5)
*          IF EST.COST.THOU<1,EP> = '' THEN EST.COST.THOU<1,EP>=INT(TOTAL.VCOST<1,EP>/(EST_QTY<1,EP>/1000)+0.5)
*          IF EST.OM.PRICE.M<1,EP> = '' THEN EST.OM.PRICE.M<1,EP> = INT(EST.FINAL.PRICE<1,EP> / EST_QTY<1,EP> * 1000 + .5)
*          IF EST.PRICE.UOM<1,EP> = '' THEN EST.PRICE.UOM<1,EP> = EST.OM.PRICE.M<1,EP>
* ADDED 24-8-06

	  EST.PRICE.THOU<1,EP>=INT(PRICE.THOU.MKUP/(EST_QTY<1,EP>/1000)+0.5)
          EST.COST.THOU<1,EP>=INT(TOTAL.VCOST<1,EP>/(EST_QTY<1,EP>/1000)+0.5)          
          EST.OM.PCT<1,EP> = OCONV(EST.OM.PCT<1,EP>,'MD4')	
          EST.FINAL.PRICE<1,EP> = OCONV(EST.FINAL.PRICE<1,EP>,'MD2')
          EST.OM.PRICE.M<1,EP> = OCONV(EST.OM.PRICE.M<1,EP>,'MD2')
          EST.PRICE.THOU<1,EP> = OCONV(EST.PRICE.THOU<1,EP>,'MD2')
      NEXT EP

RETURN
EST_RES_QTY_GEN_NOTINUSE:

      ACTION = "A"
*     DC = COUNT(EST.DEPT.COMP,VM) + (EST.DEPT.COMP # "")
*     EC = COUNT(EST_QTY,VM) + (EST_QTY # "")
      DC = DCOUNT(EST.DEPT.COMP,VM)
      EC = DCOUNT(EST_QTY,VM)
      FOR EP = 1 TO EC
         EQTY = EST_QTY<1,EP>
         IF QSEL = "ALL" THEN GOTO 150
         IF QSEL = "BASE" AND EQTY = EST_QTY<1,1> THEN GOTO 150
         IF QSEL = "SUBS" AND EQTY # EST_QTY<1,1> THEN GOTO 150
         IF QSEL = EQTY THEN GOTO 150
         GOTO 190
150*
	 FOR DP = 1 TO DC
            ESTD.ID = EST.DEPT.COMP<1,DP>
            DPTR = FIELD(ESTD.ID,"!",1)
            CPTR = FIELD(ESTD.ID,"!",2)
            NEW.ID = DPTR:"!":CPTR:"!":EQTY
	    LOCATE NEW.ID IN EST.DEPT.COMP<1>,1 SETTING DPP ELSE DPP = 0
	    IF ACTION = "R" OR DPP = 0 THEN
	       CALL GETRESQTYCALC(CONO, "E", EST.ID, DPTR, CPTR, EQTY)
	    END


         NEXT DP
190   NEXT EP
RETURN
