SUBROUTINE PopSerialValue
********************************************************************************
*   Program name :- 
*   Created:- 7/1/2003
*------------------------------------------------------------------------------*
*

* In Properties:
* --------------
*  
*
* Out Properties:
* ---------------
*  
********************************************************************************
$INCLUDE WWINSERT RBO.H
$INCLUDE ICS.CPYLIB INVENTORY
$INCLUDE ICS.CPYLIB INV_SERIAL
$INCLUDE ICS.CPYLIB WAREHOUSE
$INCLUDE ICS.CPYLIB INV.CNV

$INCLUDE ICS.CPYLIB INV.WHSE
$INCLUDE ICS.CPYLIB CATEGORY
$INCLUDE ICS.CPYLIB INV.WHSE.LOC
$INCLUDE PMC.CPYLIB PO
$INCLUDE ICS.CPYLIB INV.STATS
$INCLUDE ICS.CPYLIB PO.RSKI.XREF
$INCLUDE ICS.CPYLIB SLIT.TRANS
$INCLUDE PMC.CPYLIB COMPANY
$INCLUDE CPYLIB CHAR
$INCLUDE ICS.CPYLIB INV_RECEIPTS
$INCLUDE ICS.CPYLIB INV_RECP_WHSE
$INCLUDE PMC.CPYLIB DIVISION
*$INCLUDE PMC.CPYLIB PO
$INCLUDE ICS.CPYLIB INV_AUDIT_HIST


  DEFFUN GET.SERIAL.SEQ(CONO,CONTROL.FILE,INV_SERIAL.FILE)
  DEFFUN DIVISION.POSITION(COMP.NO,CONTROL.FILE,DIVISION.CODE)    
  DEFFUN CURRENT.PERIOD(COMP.NO,CONTROL.FILE,DIV.POS,FISCAL.FLAG) 
  GEN.DIV='00'
  DIM SAVE.ICR.REC(10)
  EQU S.ICR.DV1  TO SAVE.ICR.REC(2)
  MAT SAVE.ICR.REC = ''
  DIM HOLD.SLT.REC(SLT.REC.SIZE) ; MAT HOLD.SLT.REC=''

ERRMSG=''

*---- OPEN FILES
*
  OPEN '','INVENTORY' TO INVENTORY ELSE
    ERRMSG = 'INVENTORY FILE IS MISSING' ; GOTO 93000
  END
  OPEN '','INV.WHSE' TO INV.WHSE ELSE
    ERRMSG = 'INV.WHSE IS MISSING' ; GOTO 93000
  END
  OPEN '','INV.WHSE.LOC' TO INV.WHSE.LOC ELSE
    ERRMSG = 'INV.WHSE.LOC IS MISSING' ; GOTO 93000
  END
  OPEN '','INVENTORY.XREF' TO INVENTORY.XREF ELSE
    ERRMSG = 'INVENTORY.XREF FILE IS MISSING' ; GOTO 93000
  END
  OPEN '','INV.STATS' TO INV.STATS ELSE
    ERRMSG = 'INV.STATS FILE IS MISSING' ; GOTO 93000
  END
  OPEN '','WAREHOUSE' TO WAREHOUSE ELSE
    ERRMSG = 'WAREHOUSE FILE IS MISSING' ; GOTO 93000
  END
  OPEN '','CATEGORY' TO CATEGORY ELSE
    ERRMSG = 'CATEGORY FILE IS MISSING' ; GOTO 93000
  END
  OPEN '','COMPANY' TO COMPANY ELSE
    ERRMSG = 'COMPANY FILE IS MISSING' ; GOTO 93000
  END
  OPEN '','ICS.SCREENS' TO M.SCREENS ELSE
    ERRMSG = 'ICS.SCREENS FILE IS MISSING' ; GOTO 93000
  END
  OPEN '','XREF.DATA' TO XREF.DATA ELSE
    ERRMSG = 'XREF.DATA FILE MISSING' ; GOTO 93000
  END
  OPEN '','CONTROL' TO CONTROL ELSE
    ERRMSG = 'CONTROL FILE IS MISSING' ; GOTO 93000
  END
  OPEN '','PREFIX' TO PREFIX ELSE
    ERRMSG = 'PREFIX FILE IS MISSING' ; GOTO 93000
  END
  OPEN '','PO.RSKI.XREF' TO PO.RSKI.XREF ELSE
    ERRMSG = 'PO.RSKI.XREF FILE IS MISSING'; GOTO 93000
  END
  OPEN '','PO' TO PO ELSE
    ERRMSG = 'PO FILE IS MISSING'; GOTO 93000
  END
  OPEN '','SLIT.TRANS' TO SLIT.TRANS ELSE
    ERRMSG = 'SLIT.TRANS FILE IS MISSING'; GOTO 93000
  END
  OPEN '','SECURITY' TO SECURITY ELSE
    ERRMSG = 'SECURITY FILE IS MISSING'; GOTO 93000
  END
  OPEN '','INV_SERIAL' TO INV_SERIAL ELSE
    ERRMSG='INV_SERIAL FILE IS MISSING'; GOTO 93000
  END
  OPEN '','INV_RECEIPTS' TO INV_RECEIPTS ELSE
    ERRMSG='INV_RECEIPTS IS MISSING'; GOTO 93000
  END
  OPEN '','INV_RECP_WHSE' TO INV_RECP_WHSE ELSE
    ERRMSG='INV_RECP_WHSE IS MISSING';GOTO 93000
  END
  OPEN '','DIVISION' TO DIVISION ELSE
    ERRMSG = 'DIVISION IS MISSING'; GOTO 93000
  END
 * GOSUB INITIALIZE ; GOSUB INIT.SLT.LOG
 * MAT COMP.REC = ''
  CONO = ''
 * CALL GET.CONO(CONO,MAT COMP.REC)
 * IF CONO = 'END' THEN GOTO 99999
*

IF ERRMSG THEN GOTO 93000
;* get an ID AND PROD NUMBER


STATUS=RBO.getProperty('','PMCProperty',PMCProperty)
CONO=PMCProperty<1,4>
STATUS=RBO.getProperty('','SLT_LOG_SERIAL',SLT_LOG_SERIAL)
STATUS=RBO.getProperty('','SLT_PERIOD',SLT_PERIOD)

STATUS=RBO.getProperty('','SLT_DIVISION',SLT.DIVISION)

*	STATUS = RBO.setProperty('','ServerMessage',SLT_PERIOD:" +  ":SLT.DIVISION)   
*RETURN  



GOTO ENT.PARENT.SERIAL
****************************




******************
ENT.PARENT.SERIAL: 
******************
*
  *MAT ORG.IWH.REC=''
  EPS=0
  LOOP
    ERR=0 ; ERRMSG=''
    ECD.NUM=3
        EPS=1
       IF SLT_LOG_SERIAL #'' THEN
          LOCATE SLT_LOG_SERIAL IN IWLO.SERIAL<1>,1 SETTING RFND ELSE
		 ERR=1
          END
        END
        IF NOT(ERR) THEN
          ISTK.ID=CONO:SLT_LOG_SERIAL 
         MATREAD ISTK.REC FROM INV_SERIAL,ISTK.ID THEN
            * T26497 v
            IF CO.INTR.WHSE # '' AND ISTK.WHSE = CO.INTR.WHSE THEN
              ERRMSG = 'CAN NOT APPLY,SERIAL USING AN INTER-DIVISIONAL WHSE'
            END
            * T26497 ^
            * T26556 v
            IF ISTK.RSVB.QTY LE 1 THEN
              ERRMSG = 'SERIAL NUMBER HAS NO QUANTITY AVAILABLE TO SLIT'
            END
            * T26556 ^
            IF ISTK.POST.DATE='' THEN
              ERRMSG='Serial has not been received into inventory'
            END ELSE
              IF ISTK.RECP.PERIOD>SLT_PERIOD THEN
                ERRMSG='Serial received in period ':ISTK.RECP.PERIOD:' cannot be slitted'
                ERRMSG:='in period ':SLT_PERIOD
              END ELSE
                IF ISTK.RSVB.QTY<ISTK.CUR.QTY THEN 
                  ERRMSG='This serial has quantity reserved and cannot be slitted.'
                END ELSE
                  INV.ID=CONO:ISTK.PROD
                  MATREAD INV.REC FROM INVENTORY,INV.ID THEN
                    MATREAD WHSE.REC FROM WAREHOUSE, CONO:ISTK.WHSE ELSE MAT WHSE.REC = ''
                    IF WHS.DIV# SLT.DIVISION THEN
                      ERRMSG='Serial belongs to division ':WHS.DIV
                    END
                    IF ERRMSG # '' THEN
                    END ELSE

                    *  IF NOT(ERR) THEN
                        CATG.ID=CONO:INV.LINE
                        MATREAD CATG.REC FROM CATEGORY,CATG.ID ELSE MAT CATG.REC=''
* T26556 v
                        IF CATG.TRK.LVL # 'S' THEN
                          ERRMSG = 'Only Serial tracked products are allowed.'
                        END
* T26556 ^
                        IF CATG.COST.TYPE='AC' THEN 
                          DEPL.METHOD='AC'
                    *    END ELSE
                    *      DEPL.METHOD='FI'
                     *   END
                        IWH.ID=CONO:ISTK.PROD:"!":ISTK.WHSE
                        MATREAD IWH.REC FROM INV.WHSE,IWH.ID THEN
                          SLT.LOG.SERIAL = SLT_LOG_SERIAL
                         IF DEPL.METHOD='FI' THEN
                            INAH.PROD=ISTK.PROD
                            INAH.WHSE=ISTK.WHSE
                            ACTION=1
                            TMP.CNT='' ; LAST='' ; TMP.ARR=''
                            PERIOD=SLT_PERIOD
                           * MAT ORG.IWH.REC = MAT IWH.REC
*T27990                     CALL ICS.IWH.SUB (CONO,PERIOD,TMP.ARR,TMP.CNT,LAST,ACTION,OPEN.FLAG)
                            CALL ICS.IWH.SUB (CONO,PERIOD,TMP.ARR,TMP.CNT,LAST,ACTION,OPEN.FLAG,ERRMSG)
                          END ELSE
                            RECP.NO=ISTK.RECP
                            INVR.ID = CONO:RECP.NO
                            MATREAD INVR.REC FROM INV_RECEIPTS,INVR.ID THEN
                              IRW.ID=CONO:ISTK.RECP:"!":ISTK.WHSE
                              MATREAD IRW.REC FROM INV_RECP_WHSE,IRW.ID ELSE
                                ERRMSG='INV_RECP_WHSE record ':IRW.ID:' is missing.'
                              *  GOSUB 93000
                              END 
                            END ELSE
                              ERRMSG='INV_RECEIPTS record ':INVR.ID:' is missing.'
                             * GOSUB 93000
                            END
                          END
                        END ELSE
                          MAT IWH.REC=''
                        END
                        GOSUB GET.INV.UM.CNV
                        SLT.LOG.PROD = ISTK.PROD
                        SLT.LOG.DESC = INV.FULL.DESC
                        SLT.LOG.STK.UOM = INV.UNIT<1,2>
                        SLT.LOG.CST.UOM = INV.UNIT<1,3>
                        SLT.LOG.WHSE = ISTK.WHSE
                        SLT.LOG.LOC = ISTK.LOC
                        IWLO.ID=IWH.ID:"!":ISTK.LOC
                        MATREAD IWLO.REC FROM INV.WHSE.LOC,IWLO.ID ELSE MAT IWLO.REC=''
                        LOCATE SLT.LOG.SERIAL IN IWLO.SERIAL<1>,1 SETTING RSFND THEN
                          ;* maybe +5 should not be added because
                          ;* if it is converted back might show
                          ;* more costing qty. than there really is.
                          SER.STK.QTY=INT(((ISTK.CUR.QTY/ICR.DV1)*ICR.MT1)/ICR.DV2+.5)
                          SER.STK.QTY=OCONV(SER.STK.QTY,ICR.CNV)
                          SLT.LOG.USED.STK.QTY=SER.STK.QTY
                          SLT.LOG.USED.QTY=ISTK.CUR.QTY
                        *  SLT.LOG.SLIT.STK.QTY = 0
                        *  SLT.LOG.SLIT.AMT = 0
                          SLT.LOG.TRIM.QTY=ISTK.CUR.QTY
                          LOG.INV.LINE = INV.LINE
                          LOG.PAP.WIDTH = INV.PAP.WIDTH
                          LOG.COLOR = INV.COLOR
                          SPTR = 6
                          EPS=1
                        END ELSE
                          ERRMSG='Serial is missing from INV.WHSE.LOC record.'
                        *  GOSUB 93000
                        END
                       ********---- GOSUB BUILD.PARENT.LINE
                      END
                    END
                  END ELSE
                    ERRMSG='Product ':ISTK.PROD:' is not on file'
                  *  GOSUB 91000
                  END
                END
              END
            END
         * END ELSE
            ERRMSG='Serial ':SLT_LOG_SERIAL:' is not on file'
           * GOSUB 91000
          END
        END

    LOG.M.WT=INV.M.WT
  UNTIL (EPS) DO REPEAT

  IF ICR.CNV="MD0" THEN
    DQTY = OCONV(ICONV(SLT.LOG.USED.STK.QTY,"MD2"),"MD2")
  END ELSE
    DQTY = SLT.LOG.USED.STK.QTY 
  END

			*STATUS=RBO.setProperty('','xy',"xy HERE " :XY)
			STATUS=RBO.setProperty('','DQTY',DQTY)
			STATUS=RBO.setProperty('','SLT_LOG_USED_AMT',"HI ":SLT.LOG.USED.AMT)
			STATUS=RBO.setProperty('','SLT_LOG_SLIT_QTY',OCONV(SLT.LOG.SLIT.QTY/10,"MD2"))
			STATUS=RBO.setProperty('','SLT_LOG_SLIT_AMT',SLT.LOG.SLIT.AMT)
			STATUS=RBO.setProperty('','SLT_LOG_TRIM_QTY',OCONV(SLT.LOG.TRIM.QTY/10,"MD2"))
			STATUS=RBO.setProperty('','SLT_LOG_TRIM_AMT',SLT.LOG.TRIM.AMT)


***************
GET.INV.UM.CNV: 
***************
$INCLUDE ICSBP INV.UM.CNV
  RETURN
*


* End of method code
*RETURN
***********


*************************************************************************
93000*
	STATUS = RBO.setProperty('','ServerStatus',1)        
	STATUS = RBO.setProperty('','ServerMessage',ERRMSG)   
RETURN  
