SUBROUTINE PHYIM_PostRead
********************************************************************************
*   Program name :- PHYIM_PostRead
*   Created:- 8/4/2003
*T27705 Zahoor Ahmed 04/03/2005 * Expand Serial to 15 pos.
*------------------------------------------------------------------------------*
*

* In Properties:
* --------------
*  
*
* Out Properties:
* ---------------
*  
********************************************************************************
* CONVERSION ROUTINE
$INCLUDE WWINSERT RBO.H
$INCLUDE ICS.CPYLIB WAREHOUSE
$INCLUDE ICS.CPYLIB INVENTORY
$INCLUDE ICS.CPYLIB PHY.INV
$INCLUDE ICS.CPYLIB CATEGORY
$INCLUDE ICS.CPYLIB INV.CNV
$INCLUDE ICS.CPYLIB INV.WHSE
$INCLUDE PMC.CPYLIB SECURITY

* Insert method code here
CONO = ''
PHY.ID = ''
ID = ''
PHYSI_PRODUCT = ''
PHYSI_MAINT_DATE = ''
PHYSI_PRINT_DATE = ''
PHYSI_PREV_SQTY = ''
PHYSI_CURR_QTY = ''
PHYSI_WHSE = ''
PHYSI_LOC = ''
PHYSI_JANUS_FLAG = ''
PHYSI_PREV_QTY = ''
NCNT = ''
LINE.CNT = ''
I = ''
TEMP.PREV.QTY = ""
TEMP.CURR.QTY = ""

DEFFUN CALC_STK_QTY(COST.QTY,MAT INV.CNV.REC,ROND,LN)

ERRMSG = RBO.getProperty('','ID',ID)
ERRMSG = RBO.getProperty('','PMCProperty',PMCProperty)
ERRMSG = RBO.getProperty('','PHYSI_MAINT_DATE',PHYSI_MAINT_DATE)
ERRMSG = RBO.getProperty('','PHYSI_PRINT_DATE',PHYSI_PRINT_DATE)
ERRMSG = RBO.getProperty('','PHYSI_PREV_SQTY',PHYSI_PREV_SQTY)
ERRMSG = RBO.getProperty('','PHYSI_WHSE',PHYSI_WHSE)
ERRMSG = RBO.getProperty('','PHYSI_LOC',PHYSI_LOC)
ERRMSG = RBO.getProperty('','PHYSI_PRODUCT',PHYSI_PRODUCT)
ERRMSG = RBO.getProperty('','PHYSI_JANUS_FLAG',PHYSI_JANUS_FLAG)
ERRMSG = RBO.getProperty('','PHYSI_PREV_QTY',PHYSI_PREV_QTY)
ERRMSG = RBO.getProperty('','PHYSI_CURR_QTY',PHYSI_CURR_QTY)


OPEN '','WAREHOUSE' TO WAREHOUSE ELSE ERRMSG='WAREHOUSE FILE IS MISSING' ; GOTO 90000
OPEN '','CATEGORY' TO CATEGORY ELSE ERRMSG='CATEGORY FILE IS MISSING' ; GOTO 90000
OPEN '','INVENTORY' TO INVENTORY ELSE ERRMSG='INVENTORY FILE IS MISSING' ; GOTO 90000
OPEN '','PHY.INV' TO PHY.INV ELSE ERRMSG='INVENTORY FILE IS MISSING' ; GOTO 90000
OPEN '','INV.WHSE' TO INV.WHSE ELSE ERRMSG='INV.WHSE FILE IS MISSING' ; GOTO 90000
OPEN '','CONTROL' TO CONTROL ELSE ERRMSG = "CONTROL FILE IS MISSING" ; GOTO 90000
OPEN '','SECURITY' TO SECURITY ELSE ERRMSG = "SECURITY FILE IS MISSING" ; GOTO 90000

CONO = ID[1,3]
PHY.ID = ID[4,99]

NCNT = DCOUNT(PHYSI_MAINT_DATE,@VM)
FOR I = 1 TO NCNT
	PHYSI_MAINT_DATE<1,I> = OCONV(PHYSI_MAINT_DATE<1,I>,"D2/")
NEXT I

NCNT = DCOUNT(PHYSI_PRINT_DATE,@VM)
FOR I = 1 TO NCNT
	PHYSI_PRINT_DATE<1,I> = OCONV(PHYSI_PRINT_DATE<1,I>,"D2/")
NEXT I



MATREAD WHSE.REC FROM WAREHOUSE , CONO:PHYSI_WHSE ELSE
  ERRMSG = 'UNABLE TO OPEN WAREHOUSE'
  GOTO 90000
END

LOCATE PHYSI_LOC IN WHS.LOC<1>,1 SETTING FOUND THEN 
	ERRMSG = RBO.setProperty('','PHYSI_LOC_DESC',WHS.LOC.DESC<1,FOUND>)
END

*ADDED NEW
INV_PAP_TYPE = ""
MATREAD PHYSI.REC FROM PHY.INV,CONO:PHY.ID THEN
	LINE.CNT = DCOUNT(PHYSI.PRODUCT,@VM)
	PRECI = ""
	CATG.TRK = ""
	CATG.BARC = "" ;*T27705
	OPT.REQ = ""
	FOR LN = 1 TO LINE.CNT
		GOSUB GET.CONV
		GOSUB SET.DISP.VALUES
		PRECI<1,LN> = ICR.SCAL
		CATG.TRK<1,LN> = CATG.TRK.LVL
		CATG.BARC<1,LN> = CATG.BARCODE  ;*T27705
	
		IF INV.FACTOR+0 > 0 AND INV.PAP.WIDTH+0 > 0 AND INV.CORE.DIA+0 > 0 THEN
       		IF INV.PAP.TYPE = "ROLL" OR INV.PAP.TYPE = "LROLL" OR INV.PAP.TYPE = "PCOAT" THEN
	            		OPT.REQ<1,LN> = 'O'
       	  	END ELSE
				OPT.REQ<1,LN> = 'R'
			END
      		END ELSE
			OPT.REQ<1,LN> = 'R'
		END
		*IF INV.PAP.TYPE = "ROLL" OR INV.PAP.TYPE = "LROLL" OR INV.PAP.TYPE = "PCOAT" THEN
		*	INV_PAP_TYPE<1,LN> = "T"
		*END
	NEXT LN
END
GOSUB CONVERT.UNIT.PRICE

ERRMSG = ""

DIV.CODE = WHS.DIV
USER.ID = UPCASE(PMCProperty<1,3>)

READ SECURITY.REC FROM CONTROL, CONO:"DIV.SECURITY" ELSE GOTO SET.PROP
IF SECURITY.REC<1> # "Y" THEN GOTO SET.PROP
MATREAD SEC.REC FROM SECURITY, CONO:USER.ID ELSE
	ERRMSG = "USER ":USER.ID:" NOT ON FILE"
     	GOTO SET.PROP
END
*
IF SEC.DIVISION = "" THEN
	IF DIV.CODE = "00" AND SECURITY.REC<1> = "Y" AND SECURITY.REC<2> = "Y" THEN
       	ERRMSG = "DIV '00' INVALID WHEN DIVISION CLOSING IS ENABLED"
        	GOTO SET.PROP
     	END ELSE
       	GOTO SET.PROP
     	END
END

**************
SET.PROP:
**************
IF ERRMSG # "" THEN
	VAL = RBO.setProperty('','ServerStatus','2')
	VAL = RBO.setProperty('','ServerMessage',ERRMSG)
END

ERRMSG = RBO.setProperty('','PHYSI_MAINT_DATE',PHYSI_MAINT_DATE)
ERRMSG = RBO.setProperty('','PHYSI_PRINT_DATE',PHYSI_PRINT_DATE)
ERRMSG = RBO.setProperty('','PHYSI_PREV_SQTY',PHYSI_PREV_SQTY)
ERRMSG = RBO.setProperty('','PHYSI_WHSE_DESC',WHS.DESC)

ERRMSG = RBO.setProperty('','PHYSI_CURR_QTY',TEMP.CURR.QTY)
ERRMSG = RBO.setProperty('','PHYSI_PREV_QTY',TEMP.PREV.QTY)
ERRMSG = RBO.setProperty('','PHYSI_CURR_SQTY',PHYSI.CURR.SQTY)
ERRMSG = RBO.setProperty('','PHYSI_UNIT_COST',PHYSI.UNIT.COST)
ERRMSG = RBO.setProperty('','INV_PRECI',PRECI)
ERRMSG = RBO.setProperty('','CATG_TRK_LVL',CATG.TRK)
ERRMSG = RBO.setProperty('','CATG_BARCODE',CATG.BARC)  ;**T27705
ERRMSG = RBO.setProperty('','PHYSI_TEMP_INPUT',OPT.REQ)
*ERRMSG = RBO.setProperty('','PHYSI_PREV_DIA',PHYSI.PREV.DIA) ;* THIS IS REQUIRED
*ERRMSG = RBO.setProperty('','PHYSI_ERROR_LINE',INV_PAP_TYPE)

* End of method code
RETURN


GET.CONV: 
   MATREAD INV.REC FROM INVENTORY,CONO:PHYSI_PRODUCT<1,LN> ELSE
      MAT INV.REC = ""
   END

   EQU INV.UOM.STK TO INV.UNIT<1,2>
   EQU INV.UOM.CST TO INV.UNIT<1,3>

   MATREAD CATG.REC FROM CATEGORY,CONO:INV.LINE ELSE
      MAT CATG.REC = ""
   END
   WHSE.ID=CONO:PHYSI_PRODUCT<1,LN>:'!':PHYSI_WHSE
   MATREAD IWH.REC FROM INV.WHSE, WHSE.ID ELSE
      MAT IWH.REC = ""
   END
   GOSUB GET.INV.UM.CNV
RETURN


GET.INV.UM.CNV: 
	$INCLUDE ICSBP INV.UM.CNV
RETURN


CONVERT.UNIT.PRICE:
NCOUNT = ''
	NCOUNT = DCOUNT(PHYSI.UNIT.COST,@VM)
	FOR I = 1 TO NCOUNT
		IF PHYSI.UNIT.COST<1,I> <> "" THEN
			PHYSI.UNIT.COST<1,I> = OCONV(PHYSI.UNIT.COST<1,I>,"MD4")
		END
	NEXT I
RETURN

SET.DISP.VALUES: 
   IF PHYSI.PREV.QTY<1,LN> < 0 THEN ROND="-.5" ELSE ROND=".5"
   TEMP.PREV.QTY<1,LN>=CALC_STK_QTY(PHYSI.PREV.QTY<1,LN>,MAT INV.CNV.REC,ROND,'')
   TEMP.PREV.QTY<1,LN>=OCONV(TEMP.PREV.QTY<1,LN>,ICR.CNV)
   IF PHYSI.CURR.QTY<1,LN> = "" THEN
* T25934 v
      IF PHYSI.JANUS.FLAG # '' THEN
         PHYSI.CURR.QTY<1,LN> = 0
      END ELSE
         PHYSI.CURR.QTY<1,LN> = PHYSI_PREV_QTY<1,LN>
      END
* T25934 ^
      IF PHYSI.CURR.QTY<1,LN> < 0 THEN ROND="-.5" ELSE ROND=".5"
      TEMP.CURR.QTY<1,LN>=CALC_STK_QTY(PHYSI.CURR.QTY<1,LN>,MAT INV.CNV.REC,ROND,'')
      BEGIN CASE
         CASE INV.UNIT<1,2>='SHT' AND INV.UNIT<1,3>='LBS'
            IF PHYSI.PREV.SQTY<1,LN> = "" THEN PHYSI.PREV.SQTY<1,LN> = 0
            PHYSI.CURR.SQTY<1,LN> = TEMP.CURR.QTY<1,LN>
         CASE INV.UNIT<1,2>='PC' AND INV.UNIT<1,3>='MSI'
            IF PHYSI.PREV.SQTY<1,LN> = "" THEN PHYSI.PREV.SQTY<1,LN> = 0
            PHYSI.CURR.SQTY<1,LN> = TEMP.CURR.QTY<1,LN>
         CASE INV.UNIT<1,2>='FT' AND INV.UNIT<1,3>='MSI'
            IF PHYSI.PREV.SQTY<1,LN> = "" THEN PHYSI.PREV.SQTY<1,LN> = 0
            PHYSI.CURR.SQTY<1,LN> = TEMP.CURR.QTY<1,LN>
         CASE 1
            PHYSI.CURR.SQTY<1,LN> = ""
      END CASE
   END
  IF PHYSI.CURR.QTY<1,LN> < 0 THEN ROND="-.5" ELSE ROND=".5"
   TEMP.CURR.QTY<1,LN>=CALC_STK_QTY(PHYSI.CURR.QTY<1,LN>,MAT INV.CNV.REC,ROND,'')

NCNT = DCOUNT(PHYSI_PREV_SQTY,@VM)
FOR I = 1 TO NCNT
	PHYSI_PREV_SQTY<1,I> = OCONV(PHYSI_PREV_SQTY<1,I>,ICR.CNV)
NEXT I

   TEMP.CURR.QTY<1,LN>=OCONV(TEMP.CURR.QTY<1,LN>,ICR.CNV)
RETURN

90000:
	VAL = RBO.setProperty('','ServerStatus','1')
	VAL = RBO.setProperty('','ServerMessage',ERRMSG)
RETURN
END

