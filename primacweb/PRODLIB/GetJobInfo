SUBROUTINE getJobInfo
********************************************************************************
*   Program name :- getJobInfo
*   Created:- 09/08/2003
*   Author:-  Mohammed Abdul Malik
*   Gets Related info for Job 
*------------------------------------------------------------------------------*
*
*  

* In Properties:
* --------------
*  
IN_PARAM=''
*
* Out Properties:
* ---------------
*  
OUT_PARAM=''
********************************************************************************
$INCLUDE WWINSERT RBO.H
$INCLUDE JCS.CPYLIB JOB
$INCLUDE JCS.CPYLIB REVERSE.WIP.HIST
$INCLUDE OPS.CPYLIB ORDER
$INCLUDE OPS.CPYLIB ORDER.DETAIL
$INCLUDE OPS.CPYLIB ORDER.DETAIL.INQ
$INCLUDE OPS.CPYLIB JOB.FNGD.STATS
$INCLUDE OPS.CPYLIB FNGD.WIP.HIST
$INCLUDE ICS.CPYLIB INVENTORY
$INCLUDE ICS.CPYLIB INV_RECEIPTS
$INCLUDE ICS.CPYLIB CATEGORY
$INCLUDE ICS.CPYLIB INV.JOB.STATS
$INCLUDE ICS.CPYLIB FNGD.STATS
$INCLUDE ICS.CPYLIB FNGD.JOB.STATS
$INCLUDE PMC.CPYLIB JOB.SALES.STATS
$INCLUDE PMC.CPYLIB CUSTOMER
$INCLUDE PMC.CPYLIB COST.CNTR
$INCLUDE PMC.CPYLIB FISCAL
$INCLUDE PMC.CPYLIB COMPANY
$INCLUDE CPYLIB FILE.VARS
$INCLUDE CPYLIB GEN.XREF.SUB
$INCLUDE CPYLIB CHAR
$INCLUDE ICS.CPYLIB INV.CNV
$INCLUDE PMC.CPYLIB DIVISION
$INCLUDE PMC.CPYLIB SECURITY
DEFFUN CalcStkQty(COST.QTY,MAT INV.CNV.REC,ROND,LN)
;* open files
YEAR = '';P.LINES = ''
ERRMSG=''
PERIOD =''
MANU.AMT=''; COMP.AMT=''
STATUS=RBO.getProperty('','PMCProperty',PMCProperty)
CONO=PMCProperty<1,4>
   UserID    = PMCProperty<1,3>
   CONO      = PMCProperty<1,4>
STATUS=RBO.getProperty('','ID',ID)
CONO=ID[1,3]
JOBNO=ID[4,8]

	IF FILEINFO(INVENTORY,0)=0 THEN
	  OPEN '','INVENTORY' TO INVENTORY ELSE
	    ERRMSG<1,-1>='INVENTORY FILE IS MISSING'
	   END
	END
	IF FILEINFO(JOB,0)=0 THEN
	  OPEN '','JOB' TO JOB ELSE
	    ERRMSG='JOB FILE IS MISSING'
	  END
	END
	IF FILEINFO(JOB.FNGD.STATS,0)=0 THEN
	  OPEN '','JOB.FNGD.STATS' TO JOB.FNGD.STATS ELSE
	    ERRMSG<1,-1>='JOB.FNGD.STATS FILE IS MISSING'
	  END
	END
	IF FILEINFO(FNGD.WIP.HIST,0)=0 THEN
	   OPEN '','FNGD.WIP.HIST' TO FNGD.WIP.HIST ELSE
	    ERRMSG<1,-1>='FNGD.WIP.HIST FILE IS MISSING'
	   END
	END
	OPEN '','CONTROL' TO CONTROL ELSE
		ERRMSG = "CONTROL FILE IS MISSING";GOTO 93000
	END
      OPEN "","CATEGORY" TO CATEGORY ELSE
         ERRMSG = "CATEGORY"; GOTO 93000
      END
      OPEN "","INV_RECEIPTS" TO INV_RECEIPTS ELSE
         ERRMSG = "INV_RECEIPTS"; GOTO 93000
      END
*--------------------START OPEN FILES

      OPEN "","JOB.TIME" TO JOB.TIME ELSE
         ERRMSG = "JOB.TIME"; GOTO 93000
      END
      OPEN "","JOB.MATL" TO JOB.MATL ELSE
         ERRMSG = "JOB.MATL"; GOTO 93000
      END
      OPEN "","JOB.OSP" TO JOB.OSP ELSE
         ERRMSG = "JOB.OSP"; GOTO 93000
      END
      OPEN "","JOB.SHIP" TO JOB.SHIP ELSE
         ERRMSG = "JOB.SHIP"; GOTO 93000
      END
      OPEN "","JOB.MISC" TO JOB.MISC ELSE
         ERRMSG = "JOB.MISC"; GOTO 93000
      END
      OPEN "","COST.CNTR.WIP" TO COST.CNTR.WIP ELSE
         ERRMSG = "COST.CNTR.WIP"; GOTO 93000
      END
      OPEN "","CUSTOMER" TO CUSTOMER ELSE
         ERRMSG = "CUSTOMER"; GOTO 93000
      END
      OPEN "","CUSTOMER.XREF" TO CUSTOMER.XREF ELSE
         ERRMSG = "CUSTOMER.XREF"; GOTO 93000
      END
      OPEN "","SALESMAN" TO SALESMAN ELSE
         ERRMSG = "SALESMAN"; GOTO 93000
      END
      OPEN '','CSR.CODE' TO CSR.CODE ELSE
         ERRMSG = 'CSR.CODE' ; GOTO 93000
      END
      OPEN "","JOB.STATS" TO JOB.STATS ELSE
         ERRMSG = "JOB.STATS"; GOTO 93000
      END
      OPEN "","DIVISION" TO DIVISION ELSE
         ERRMSG = "DIVISION"; GOTO 93000
      END
      OPEN "","COST.CNTR" TO COST.CNTR ELSE
         ERRMSG = "COST.CNTR"; GOTO 93000
      END
      OPEN "","INVENTORY" TO INVENTORY ELSE
         ERRMSG = "INVENTORY"; GOTO 93000
      END
      OPEN "","WAREHOUSE" TO WAREHOUSE ELSE
         ERRMSG = "WAREHOUSE"; GOTO 93000
      END
      OPEN "","INV.FNGD" TO INV.FNGD ELSE
         ERRMSG = "INV.FNGD"; GOTO 93000
      END
      OPEN "","CATEGORY" TO CATEGORY ELSE
         ERRMSG = "CATEGORY"; GOTO 93000
      END
      OPEN "","INVENTORY.XREF" TO INVENTORY.XREF ELSE
         ERRMSG = "INVENTORY.XREF"; GOTO 93000
      END
      OPEN "","INV.WHSE" TO INV.WHSE ELSE
         ERRMSG = "INV.WHSE"; GOTO 93000
      END
      OPEN "","INV.WHSE.LOC" TO INV.WHSE.LOC ELSE
         ERRMSG = "INV.WHSE.LOC"; GOTO 93000
      END
      OPEN "","INV_RECEIPTS" TO INV_RECEIPTS ELSE
         ERRMSG = "INV_RECEIPTS"; GOTO 93000
      END
      OPEN "","INV.STATS" TO INV.STATS ELSE
         ERRMSG = "INV.STATS"; GOTO 93000
      END
      OPEN "","INV.JOB.STATS" TO INV.JOB.STATS ELSE
         ERRMSG = "INV.JOB.STATS"; GOTO 93000
      END
      OPEN "","FNGD.BOM" TO FNGD.BOM ELSE
         ERRMSG = "FNGD.BOM"; GOTO 93000
      END
      OPEN "","XREF.DATA" TO XREF.DATA ELSE
         ERRMSG = "XREF.DATA"; GOTO 93000
      END
      OPEN "","PREFIX" TO PREFIX ELSE
         ERRMSG = "PREFIX"; GOTO 93000
      END
      OPEN "","SECURITY" TO SECURITY ELSE
         ERRMSG = "SECURITY"; GOTO 93000
      END
      OPEN "","USER.MAIL" TO USER.MAIL ELSE
         ERRMSG = "USER.MAIL"; GOTO 93000
      END
      OPEN "","SHIP.VIA" TO SHIP.VIA ELSE
         ERRMSG = "SHIP.VIA"; GOTO 93000
      END
      OPEN "","TAX" TO TAX ELSE
         ERRMSG = "TAX"; GOTO 93000
      END
      OPEN "","JOB.CATEGORY" TO JOB.CATEGORY ELSE
         ERRMSG = "JOB.CATEGORY"; GOTO 93000
      END
      OPEN "","SALES.CODE" TO SALES.CODE ELSE
         ERRMSG = "SALES.CODE"; GOTO 93000
      END
      OPEN "","INVOICE.CODE" TO INVOICE.CODE ELSE
         ERRMSG = "INVOICE.CODE"; GOTO 93000
      END
      OPEN "","DEPARTMENT" TO DEPARTMENT ELSE
         ERRMSG = "DEPARTMENT"; GOTO 93000
      END
      OPEN "","JOB.CREDIT.STATS" TO JOB.CREDIT.STATS ELSE
         ERRMSG = "JOB.CREDIT.STATS"; GOTO 93000
      END
      OPEN "","GANG.JOB" TO GANG.JOB ELSE
         ERRMSG = "GANG.JOB"; GOTO 93000
      END
      OPEN "","GANG.ALLOC" TO GANG.ALLOC ELSE
         ERRMSG = "GANG.ALLOC"; GOTO 93000
      END
*      IF CO.JES = "Y" THEN
         OPEN "","ESTIMATE" TO ESTIMATE ELSE
            ERRMSG = "ESTIMATE"; GOTO 93000
         END
*      END
*      IF CO.POS = "Y" THEN
         OPEN "","OUTSIDE.PO" TO OUTSIDE.PO ELSE
            ERRMSG = "OUTSIDE.PO"; GOTO 93000
         END
*      END
      OPEN "","ORDER" TO ORDER ELSE
         ERRMSG = "ORDER"; GOTO 93000
      END
      OPEN "","ORDER.DETAIL" TO ORDER.DETAIL ELSE
         ERRMSG = "ORDER.DETAIL"; GOTO 93000
      END
      OPEN "","ORDER.RELEASE" TO ORDER.RELEASE ELSE
         ERRMSG = "ORDER.RELEASE"; GOTO 93000
      END
      OPEN "","FNGD.STATS" TO FNGD.STATS ELSE
         ERRMSG = "FNGD.STATS"; GOTO 93000
      END
      OPEN "","JOB.FNGD.STATS" TO JOB.FNGD.STATS ELSE
         ERRMSG = "JOB.FNGD.STATS"; GOTO 93000
      END
      OPEN "","FNGD.JOB.STATS" TO FNGD.JOB.STATS ELSE
         ERRMSG = "FNGD.JOB.STATS"; GOTO 93000
      END
      OPEN "","FNGD.ORDER.STATS" TO FNGD.ORDER.STATS ELSE
         ERRMSG = "FNGD.ORDER.STATS"; GOTO 93000
      END
      OPEN "","CPYLIB" TO CPYLIB ELSE
         ERRMSG = "CPYLIB"; GOTO 93000
      END
      OPEN "","SYS_TKT_DEF" TO SYS_TKT_DEF ELSE
         ERRMSG = "SYS_TKT_DEF"; GOTO 93000
      END
      OPEN "","SYS_SCN_DEF" TO SYS_SCN_DEF ELSE
         ERRMSG = "SYS_SCN_DEF"; GOTO 93000
      END
      OPEN "","SYS_FILES" TO SYS_FILES ELSE
         ERRMSG = "SYS_FILES"; GOTO 93000
      END
      OPEN "","PFX_FILES" TO PFX_FILES ELSE
         ERRMSG = "PFX_FILES"; GOTO 93000
      END
      OPEN "","SYS_FIELDS" TO SYS_FIELDS ELSE
         ERRMSG = "SYS_FIELDS"; GOTO 93000
      END
      OPEN "","SYS_FLD_HMSG" TO SYS_FLD_HMSG ELSE
         ERRMSG = "SYS_FLD_HMSG"; GOTO 93000
      END
      OPEN "","JKT_NOTIFY" TO JKT_NOTIFY ELSE
         ERRMSG = "JKT_NOTIFY"; GOTO 93000
      END

   MATREAD FISCAL.REC FROM CONTROL, CONO:"JCFISCAL" ELSE
      ERRMSG = "CONTROL RECORD JCFISCAL IS MISSING";GOTO 93000
   END
   YEAR  = FR.CURR.PER<1,POS>[1,4]
   CURR = FR.CURR.PER<1,POS>[5,2]
*-------------------- END OPEN FILES
* check for open files
*
IF ERRMSG#'' THEN GOTO 93000

;* initialize
PRODUCTS =""
WHSES    =""
MANUFS   =""
COMPLS   =""
ERRMSG_1 =""
ERRMSG_2 =""
VALUE1 =""
      ALL.TYPE = "LB"
      ALL.TYPE<1,2> = "MT"
      ALL.TYPE<1,3> = "OS"
      ALL.TYPE<1,4> = "SP"
      ALL.TYPE<1,5> = "MS"
      LINE.DESC = ""
      LINE.WIP.IN = ""
      LINE.WIP.OUT = ""
      LINE.WIP.TOT = ""
      Temp.TOT = ""
      MAIN.DESC = "OTHER - "

MATREAD JOB.REC FROM JOB,ID ELSE
   ERRMSG='JOB ':ID[4,8]:' IS MISSING'
   STATUS = RBO.setProperty('','completeJobErr',ERRMSG)
  GOTO 93000
END;* get ID

MATREAD JFS.REC FROM JOB.FNGD.STATS,ID ELSE
  *ERRMSG='Cannot read JOB.FNGD.STATS record ':ID
  ERRMSG_1 = "There are no finished goods on this job"
  STATUS = RBO.setProperty('','completeJobErr',ERRMSG_1)
  GOTO 93000
END

  MATREADU FWH.REC FROM FNGD.WIP.HIST,ID ELSE
    ERRMSG = 'FNGD.WIP.HIST record is locked by user - ':GETUSERNAME(STATUS())
    GOTO 93000; ****GOTO 100 
  * END ELSE MAT FWH.REC=''
  END
  * MAT OLD.FWH.REC = MAT FWH.REC
  *  RWH.OPER = PORT.NO:"!":OPER.ID

STATUS = RBO.setProperty('','JOB_CUST',JOB.CUST)
  RWH.ENT.DATE = DATE()
  RWH.JOB = ID
  REV.PER = 0
  PCNT = DCOUNT(JFS.PROD,VM)
  FOR P = 1 TO PCNT
PRODUCTS<1,-1>=JFS.PROD<1,P>
WHSES<1,-1>=JFS.WHSE<1,P> 
************* COMMENTED FOR TIME BEING
***MANUFS<1,-1>=OCONV(MANU.AMT<1,P>, "MD2")
***COMPLS<1,-1>=OCONV(COMP.AMT<1,P>, "MD2")

    BEGIN CASE
      CASE JFS.M.QTY<1,P>+0 > JFS.F.QTY<1,P>+0
        REV.PER = REV.PER + (JFS.F.QTY<1,P> / JFS.M.QTY<1,P>)
      CASE JFS.M.QTY<1,P>+0 > 0
        REV.PER = REV.PER + 1
    END CASE
  NEXT P
  REV.PER = INT(REV.PER / PCNT * 10000 + .5)
  IF REV.PER < 10000 THEN
*T25751 v
	    IF SUM(JOB.WIP<1,2>) > 0 THEN
		      ERRMSG_1  = "Job has open balances, reverse WIP and complete the job (Y/N) ?"
		      STATUS = RBO.setProperty('','completeJobErr',ERRMSG_1)
		      STATUS = RBO.getProperty('','InputVALUE',VALUE1)
		      * IF VALUE1 = "Y" THEN REV.PER = 10000;
	    END ELSE
		      STATUS = RBO.setProperty('','completeJobErr','Job has no WIP to reverse')
		      REV.PER = 0
	    END
*T25751 ^

 END

*_______________________continued  here

    RWH.REV.PER=REV.PER
  *BEGIN CASE
   * CASE RWH.REV.PER=0 
    * RELEASE JOB, CONO:JOBNO
    *  RELEASE JOB.FNGD.STATS, CONO:JOBNO
    * RELEASE FNGD.WIP.HIST, CONO:JOBNO
    *   GOTO 93000
    *CASE MODE="A"
    POS = 1
      RWH.REV.TYPE="ALL"
      RWH.REV.DATE="ALL"
      RWH.PERIOD="ALL"
      PERIOD = FR.CURR.PER<1,POS>
	ALL.TYPE = "LB"

      READ CTL.WIP.TYPE FROM CONTROL, CONO : "WIP.DEFAULT" ELSE CTL.WIP.TYPE = ""
      IF CTL.WIP.TYPE = "" THEN CTL.WIP.TYPE = "ALL"
      RWH.REV.TYPE = CTL.WIP.TYPE
*      LINES = DCOUNT(RWH.REV.TYPE,VM)
      GOSUB 3000

STATUS = RBO.setProperty('','PROD',PRODUCTS)
STATUS = RBO.setProperty('','WHSE',WHSES)
STATUS = RBO.setProperty('','MANUFACT',OCONV(MANU.AMT, "MD2"))
STATUS = RBO.setProperty('','COMPLETE',OCONV(COMP.AMT, "MD2"))

      BEGIN CASE
        CASE JOB.STATUS<1,1>=""
	   STATUS = RBO.setProperty('','JOB_STATUS',"BOOKED")
        CASE JOB.STATUS<1,1>="9"
	   STATUS = RBO.setProperty('','JOB_STATUS',"CANCELLED")
        CASE JOB.STATUS<1,1>="7"
	   STATUS = RBO.setProperty('','JOB_STATUS',"READY TO PURGE")
        CASE JOB.STATUS<1,1>="8"
	   STATUS = RBO.setProperty('','JOB_STATUS',"WAS PURGED")
        CASE JOB.TRACK.DATE<1,10> # ""
          BEGIN CASE
            CASE JOB.STATUS<1,1> = "1"
		   STATUS = RBO.setProperty('','JOB_STATUS',"IN PROCESS")
            CASE JOB.STATUS <1,1> = "3"
		   STATUS = RBO.setProperty('','JOB_STATUS',"INVOICED")
            CASE JOB.STATUS<1,1> = "5"
		   STATUS = RBO.setProperty('','JOB_STATUS',"REOPENED")
            CASE 1
		   STATUS = RBO.setProperty('','JOB_STATUS',"COMPLETED")
          END CASE
        CASE JOB.TRACK.DATE<1,9> # ""
           BEGIN CASE
            CASE JOB.STATUS<1,1> = "1"
		   STATUS = RBO.setProperty('','JOB_STATUS',"IN PROCESS")
            CASE JOB.STATUS<1,1> = "5"
		   STATUS = RBO.setProperty('','JOB_STATUS',"REOPENED")
            CASE 1
		   STATUS = RBO.setProperty('','JOB_STATUS',"INVOICED")
          END CASE
        CASE JOB.TRACK.DATE<1,8> # ""
		   STATUS = RBO.setProperty('','JOB_STATUS',"COSTED")
        CASE JOB.TRACK.DATE<1,7> # ""
		   STATUS = RBO.setProperty('','JOB_STATUS',"RDY-TO-BILL")
        CASE JOB.TRACK.DATE<1,6> # ""
		   STATUS = RBO.setProperty('','JOB_STATUS',"DELIVERED")
        CASE JOB.TRACK.DATE<1,5> # ""
		   STATUS = RBO.setProperty('','JOB_STATUS',"IN PROCESS")
        CASE JOB.TRACK.DATE<1,3> # ""
		   STATUS = RBO.setProperty('','JOB_STATUS',"IN PROCESS")
        CASE JOB.STATUS<1,1>="1"
		   STATUS = RBO.setProperty('','JOB_STATUS',"IN PROCESS")
        CASE JOB.STATUS<1,1>="3"
		   STATUS = RBO.setProperty('','JOB_STATUS',"INVOICED")
        CASE 1
		   STATUS = RBO.setProperty('','JOB_STATUS',"UNKNOWN")
      END CASE
      READ CTL.WIP.TYPE FROM CONTROL, CONO : "WIP.DEFAULT" ELSE CTL.WIP.TYPE = ""
      IF CTL.WIP.TYPE = "" THEN CTL.WIP.TYPE = "ALL"
      RWH.REV.TYPE = CTL.WIP.TYPE
      LINES = DCOUNT(RWH.REV.TYPE,VM)
      IF CTL.WIP.TYPE # "ALL" AND LINES < 5 THEN
        LOCATE "OTH" IN RWH.REV.TYPE<1>,1 SETTING FND ELSE
          LINES = LINES + 1
          RWH.REV.TYPE<1,LINES> = "OTH"
        END
      END
      FOR LN = 1 TO LINES
        BEGIN CASE
          CASE RWH.REV.TYPE<1,LN> = "LB"
            LINE.DESC<1,LN> = "LABOR"
            LINE.WIP.IN<1,LN> =  OCONV(SUM(JOB.LB.WIP<1,2>), "MD2")
            LINE.WIP.OUT<1,LN> = OCONV(SUM(JOB.LB.WIP<1,3>), "MD2")
          CASE RWH.REV.TYPE<1,LN> = "MT"
            LINE.DESC<1,LN> = "MATERIAL"
            LINE.WIP.IN<1,LN> = OCONV(SUM(JOB.MT.WIP<1,2>), "MD2")
            LINE.WIP.OUT<1,LN> = OCONV(SUM(JOB.MT.WIP<1,3>), "MD2")
          CASE RWH.REV.TYPE<1,LN> = "OS"
            LINE.DESC<1,LN> = "OUTSIDE PURCHASE"
            LINE.WIP.IN<1,LN> = OCONV(SUM(JOB.OS.WIP<1,2>), "MD2")
            LINE.WIP.OUT<1,LN> = OCONV(SUM(JOB.OS.WIP<1,3>), "MD2")
          CASE RWH.REV.TYPE<1,LN> = "SP"
            LINE.DESC<1,LN> = "SHIPPING"
            LINE.WIP.IN<1,LN> = OCONV(SUM(JOB.SP.WIP<1,2>), "MD2")
            LINE.WIP.OUT<1,LN> = OCONV(SUM(JOB.SP.WIP<1,3>), "MD2")
          CASE RWH.REV.TYPE<1,LN> = "MS"
            LINE.DESC<1,LN> = "MISCELLANEOUS"
            LINE.WIP.IN<1,LN> = OCONV(SUM(JOB.MS.WIP<1,2>), "MD2")
            LINE.WIP.OUT<1,LN> = OCONV(SUM(JOB.MS.WIP<1,3>), "MD2")
          CASE RWH.REV.TYPE<1,LN> = "OTH"
            LINE.DESC<1,LN> = MAIN.DESC
            FOR XX = 1 TO 5
              LOCATE ALL.TYPE<1,XX> IN RWH.REV.TYPE<1>,1 SETTING FND ELSE
                BEGIN CASE
                  CASE ALL.TYPE<1,XX> = "LB"
                    LINE.WIP.IN<1,LN> = LINE.WIP.IN<1,LN> +  OCONV(SUM(JOB.LB.WIP<1,2>), "MD2")
                    LINE.WIP.OUT<1,LN> =LINE.WIP.OUT<1,LN> + OCONV(SUM(JOB.LB.WIP<1,3>), "MD2")
                  CASE ALL.TYPE<1,XX> = "MT"
                    LINE.WIP.IN<1,LN> = LINE.WIP.IN<1,LN> + OCONV(SUM(JOB.MT.WIP<1,2>), "MD2")
                    LINE.WIP.OUT<1,LN> = LINE.WIP.OUT<1,LN> + OCONV(SUM(JOB.MT.WIP<1,3>), "MD2")
                  CASE ALL.TYPE<1,XX> = "OS"
                    LINE.WIP.IN<1,LN> = LINE.WIP.IN<1,LN> + OCONV(SUM(JOB.OS.WIP<1,2>), "MD2")
                    LINE.WIP.OUT<1,LN> = LINE.WIP.OUT<1,LN> + OCONV(SUM(JOB.OS.WIP<1,3>), "MD2")
                  CASE ALL.TYPE<1,XX> = "SP"
                    LINE.WIP.IN<1,LN> = LINE.WIP.IN<1,LN> + OCONV(SUM(JOB.SP.WIP<1,2>), "MD2")
                    LINE.WIP.OUT<1,LN> = LINE.WIP.OUT<1,LN> + OCONV(SUM(JOB.SP.WIP<1,3>), "MD2")
                  CASE ALL.TYPE<1,XX> = "MS"
                    LINE.WIP.IN<1,LN> = LINE.WIP.IN<1,LN> + OCONV(SUM(JOB.MS.WIP<1,2>), "MD2")
                    LINE.WIP.OUT<1,LN> = LINE.WIP.OUT<1,LN> + OCONV(SUM(JOB.MS.WIP<1,3>), "MD2")
                END CASE
                IF LINE.DESC<1,LN> # MAIN.DESC THEN
                  LINE.DESC<1,LN> = LINE.DESC<1,LN> : ","
                END
                LINE.DESC<1,LN> = LINE.DESC<1,LN> : ALL.TYPE<1,XX>
              END
            NEXT XX
          CASE 1
            LINE.DESC<1,LN> = "ALL"
            LINE.WIP.IN<1,LN> =     OCONV(SUM(JOB.WIP<1,2>), "MD2")
            LINE.WIP.OUT<1,LN> =    OCONV(SUM(JOB.WIP<1,3>), "MD2")

        END CASE

	 Temp.TOT =	LINE.WIP.IN<1,LN> + LINE.WIP.OUT<1,LN>
 	  IF Temp.TOT = 0 THEN
      		 Temp.TOT = "0.00"
         END
        LINE.WIP.TOT<1,LN> = Temp.TOT

        RWH.REV.DATE<1,LN> = "ALL"
        RWH.REV.PER<1,LN> = OCONV(REV.PER, "MD2")    

      NEXT LN
STATUS = RBO.setProperty('','REV_TYPE',RWH.REV.TYPE)
STATUS = RBO.setProperty('','TYPE',LINE.DESC)
STATUS = RBO.setProperty('','WIP_IN',LINE.WIP.IN)
STATUS = RBO.setProperty('','WIP_OUT',LINE.WIP.OUT)
STATUS = RBO.setProperty('','WIP_TOT',LINE.WIP.TOT )

      IF REV.PER < 10000 THEN
        RWH.Z.R.QTY = "N"
        RWH.Z.A.QTY = "N"
        RWH.REV.DATE = DATE()

        RWH.PERIOD = FR.CURR.PER<1,POS>
      END ELSE
        RWH.Z.R.QTY = "Y"
        RWH.Z.A.QTY = "Y"
        RWH.REV.DATE = "ALL"
        RWH.PERIOD = "ALL"
      END
      IF RWH.PERIOD = "ALL" THEN

        PERIOD = FR.CURR.PER<1,POS>
      END ELSE
        PERIOD = RWH.PERIOD
      END
     * STATUS = RBO.setProperty('','ClrRsv',RWH.Z.R.QTY)
     * STATUS = RBO.setProperty('','ClrAllocFG',RWH.Z.A.QTY)
      IF RWH.REV.DATE = "ALL" THEN
       STATUS = RBO.setProperty('','RevDate',RWH.REV.DATE)
      END ELSE
      STATUS = RBO.setProperty('','RevDate',OCONV(RWH.REV.DATE,"D2/"))
      END

      STATUS = RBO.setProperty('','ClrRsv',RWH.Z.R.QTY)
      STATUS = RBO.setProperty('','ClrAllocFG',RWH.Z.A.QTY)

      STATUS = RBO.setProperty('','RevPrd',RWH.PERIOD)

      STATUS = RBO.setProperty('','REV_PER', RWH.REV.PER)
      STATUS = RBO.setProperty('','sumWIPIN',SUM(LINE.WIP.IN))       STATUS = RBO.setProperty('','sumWIPOUT',SUM(LINE.WIP.OUT))
      STATUS = RBO.setProperty('','sumWIPTOT',SUM(LINE.WIP.TOT))

RETURN
************************************** CONTINUTE HERE
 *---- CALC FNGD AMOUNTS
*
3000 *
  PCNT = DCOUNT(JFS.PROD,VM)
  FOR P = 1 TO PCNT
    PROD = JFS.PROD<1,P>
    WHSE = JFS.WHSE<1,P>
    MATREAD INV.REC FROM INVENTORY, CONO:PROD ELSE
      ERRMSG = "Cannot locate Product ":PROD
      GOSUB 91000; GOTO 3609
    END
    MATREAD CATG.REC FROM CATEGORY, CONO:INV.LINE ELSE
      ERRMSG = "Cannot locate Product Line # ":INV.LINE
      GOSUB 91000; GOTO 3609
    END
    IF INV.COST.WT+0 = 0 THEN INV.COST.WT = 1
    MANU.AMT<1,P> = INT(JFS.U.PRICE<1,P>/100 * (JFS.M.QTY<1,P>/1000) / (INV.COST.WT/100) + .5)
    SCNT = DCOUNT(JFS.PALLET<1,P>,SVM)
    FOR S = 1 TO SCNT
	RECP.NO= JFS.RECP<1,P,S>
	 MATREAD INVR.REC FROM INV_RECEIPTS,CONO:RECP.NO ELSE
          ERRMSG = "Cannot locate INV_RECEIPTS ":RECP.NO
          GOSUB 91000; GOTO 3509
        END
      COMP.AMT<1,P> = COMP.AMT<1,P> + INVR.TOT.AMT
3509 *
    NEXT S

3609 *
  NEXT P

  P.LINES = DCOUNT(FWH.PROD,VM)
  RETURN
*
*---------------------------------------------------------------------------------------------------------------
91000*
	STATUS = RBO.setProperty('','ServerStatus',1)
	STATUS = RBO.setProperty('','ServerMessage',ERRMSG)
RETURN

93000*
   IF ERRMSG # "" THEN
	STATUS = RBO.setProperty('','ServerStatus',1)        
	STATUS = RBO.setProperty('','ServerMessage',ERRMSG)  
   END
RETURN

