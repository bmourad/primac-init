SUBROUTINE PHYIM_validateCurrQty
********************************************************************************
*   Program name :- PHYIM_validateCurrQty
*   Created:- 8/27/2003
*T27801 Zahoor Ahmed 03/03/2005 * Error in RECP ID for FNGD items.
*------------------------------------------------------------------------------*
*

* In Properties:
* --------------
*  
*
* Out Properties:
* ---------------
*  
********************************************************************************
$INCLUDE WWINSERT RBO.H
$INCLUDE ICS.CPYLIB INVENTORY
$INCLUDE ICS.CPYLIB PHY.INV
$INCLUDE ICS.CPYLIB INV.CNV
$INCLUDE ICS.CPYLIB INV_SERIAL
$INCLUDE ICS.CPYLIB CATEGORY
$INCLUDE ICS.CPYLIB INV.WHSE
$INCLUDE ICS.CPYLIB INV_RECP_WHSE
$INCLUDE ICS.CPYLIB INV_RECEIPTS
$INCLUDE JCS.CPYLIB>JOB
$INCLUDE OPS.CPYLIB>JOB.FNGD.STATS
* Insert method code here
OPEN "","CONTROL" TO CONTROL ELSE ERRMSG ="CONTROL FILE IS MISSING";GOTO 90000
   OPEN "","INVENTORY" TO INVENTORY ELSE
      ERRMSG = "INVENTORY FILE IS MISSING"
      GOTO 90000
   END

   OPEN "","PHY.INV" TO PHY.INV ELSE
      ERRMSG = "PHY.INV FILE IS MISSING"
      GOTO 90000
   END

   OPEN "","INV_SERIAL" TO INV_SERIAL ELSE
      ERRMSG = "INV_SERIAL FILE IS MISSING"
      GOTO 90000
   END

   OPEN "","CATEGORY" TO CATEGORY ELSE
      ERRMSG = "CATEGORY FILE IS MISSING"
      GOTO 90000
   END

  OPEN "","INV.WHSE" TO INV.WHSE ELSE
      ERRMSG = "INV.WHSE FILE IS MISSING"
      GOTO 90000
  END
  OPEN "","INV_RECP_WHSE" TO INV_RECP_WHSE ELSE
      ERRMSG = "INV_RECP_WHSE FILE IS MISSING"
      GOTO 90000
   END
   OPEN "","INV_RECEIPTS" TO INV_RECEIPTS ELSE
      ERRMSG = "INV_RECEIPTS FILE IS MISSING"
      GOTO 90000
   END
    OPEN '','JOB' TO JOB ELSE
      ERRMSG = 'JOB FILE IS MISSING'
      GOSUB 90000 
    END
	
  OPEN '','JOB.FNGD.STATS' TO JOB.FNGD.STATS ELSE
      ERRMSG = 'JOB.FNGD.STATS FILE IS MISSING'
      GOSUB 90000
   END

  CONO = ''
  ERRMSG = ''
  ID = ''
  QTY = ''
  PHYSI_TEMP_INPUT = ''
  LN = 1
  INV.ID = ''
  PHYSI_TEMP_OUTPUT = ''
  PHYSI_TEMP_OUTPUT2 = ''
  JFS_U_PRICE=''
  PHYWHSE =""
  U.COST =""
   DEFFUN CALC.STK.QTY(COST.QTY,MAT INV.CNV.REC,ROND,LN)
   DEFFUN CALC.COST.QTY(STK.QTY,MAT INV.CNV.REC,ROND,LN)
   DEFFUN CALC.DIAM(COST.QTY,STK.QTY,MAT INV.REC)

   DIM TEMP.REC(18)
   EQU TEMP.PROD      TO TEMP.REC(1)
   EQU TEMP.SERIAL    TO TEMP.REC(2)
   EQU TEMP.ONHAND    TO TEMP.REC(3)
   EQU TEMP.DIA       TO TEMP.REC(4)
   EQU TEMP.COST      TO TEMP.REC(5)
   EQU TEMP.DESC      TO TEMP.REC(6)
   EQU TEMP.PO        TO TEMP.REC(7)
   EQU TEMP.VENDOR    TO TEMP.REC(16)
   EQU TEMP.RECEIPT   TO TEMP.REC(17)
   EQU TEMP.UNIT      TO TEMP.REC(18)


ERRMSG = RBO.getProperty('','ID',ID)
ERRMSG = RBO.getProperty('','PHYSI_TEMP_INPUT',PHYSI_TEMP_INPUT)

CONO = ID[1,3]
PROD.NUM = PHYSI_TEMP_INPUT<1,2>
INV.ID=CONO:PROD.NUM

MATREAD PHYSI.REC FROM PHY.INV,ID ELSE
	ERRMSG = "CAN'T LOCATE RECORD"
	GOTO 90000
END

MATREAD INV.REC FROM INVENTORY,INV.ID ELSE
	ERRMSG = "CAN'T LOCATE RECORD"
	GOTO 90000
END
$INCLUDE ICSBP INV.UM.CNV
*PHYSI.PREV.QTY = PHYSI_TEMP_INPUT<1,1>

LN = PHYSI_TEMP_INPUT<1,3>
TEMP.PO = PHYSI_TEMP_INPUT<1,4>
TEMP.ONHAND = PHYSI_TEMP_INPUT<1,5>
PHYSI.PREV.DIA = PHYSI_TEMP_INPUT<1,6>
SERIAL.NO = PHYSI_TEMP_INPUT<1,7>
PHYSI.CURR.DIA = PHYSI_TEMP_INPUT<1,8>
TEMP.CURR.QTY = PHYSI_TEMP_INPUT<1,9> ;* PREVIOUS REVISED QTY
TEMP.RECEIPT = PHYSI_TEMP_INPUT<1,10> ;* RECEIPT NO.
PHYSI.UNIT.COST = PHYSI_TEMP_INPUT<1,11> ;* CUURENT UNIT.COST 

SER.RECP = PHYSI_TEMP_INPUT<1,12> ;* CUURENT UNIT.COST
PHYWHSE = PHYSI_TEMP_INPUT<1,13> ;*WAREHOUSE
RevisedQty = PHYSI_TEMP_INPUT<1,14>


    BEGIN CASE
         CASE ICR.SCAL=2
            RevisedQty = ICONV(RevisedQty,'MD2')
         CASE 1
               IF ICR.CNV = "MD2" THEN RevisedQty = RevisedQty * 100  
    END CASE




JOB.ID=""

IF SER.RECP = "R" THEN
	TEMP.RECEIPT = SERIAL.NO
END

IF TEMP.CURR.QTY < 0 THEN ROND="-.5" ELSE ROND=".5"
TEMP.CURR.QTY = CALC.STK.QTY(TEMP.CURR.QTY,MAT INV.CNV.REC,ROND,'')
*PHYSI.PREV.QTY = CALC.STK.QTY(PHYSI.PREV.QTY,MAT INV.CNV.REC,ROND,'')
*TEMP.ONHAND =  CALC.STK.QTY(TEMP.ONHAND,MAT INV.CNV.REC,ROND,'')
PHYSI_TEMP_INPUT = PHYSI_TEMP_INPUT<1,1>


TEMP.PREV.QTY = ""
ALERTMSG = ""
PREV.DIA = ""
CURR.DIA = ""

$INCLUDE ICSBP INV.UM.CNV

EQU INV.UOM.STK TO INV.UNIT<1,2>
EQU INV.UOM.CST TO INV.UNIT<1,3>
WRITE INV.LINE ON CONTROL,'01LINE'
MATREAD CATG.REC FROM CATEGORY,CONO:INV.LINE THEN
	*   MAT TEMP.REC="" 
	*   TEMP.PO = PHYSI.PO<1,LN>
	*   TEMP.VENDOR = PHYSI.VENDOR<1,LN>
  	ERR = 0

	IF PHYSI.PREV.QTY < 0 THEN ROND="-.5" ELSE ROND=".5"
   	TEMP.PREV.QTY = CALC.STK.QTY(PHYSI.PREV.QTY,MAT INV.CNV.REC,ROND,'')
   	TEMP.PREV.QTY = OCONV(TEMP.PREV.QTY,ICR.CNV)
	*TEMP.ONHAND = PHYSI_TEMP_INPUT
	IF ICR.SCAL = 2 THEN TEMP.ONHAND = ICONV(TEMP.ONHAND,'MD2')
	IF INV.PAP.TYPE = "ROLL" OR INV.PAP.TYPE = "LROLL" OR INV.PAP.TYPE = "PCOAT" THEN
      		IF PHYSI.PREV.DIA = "" THEN
       		PHYSI.PREV.DIA = 0
	     		PHYSI_TEMP_OUTPUT2 = OCONV("0","MD2")
			PREV.DIA = PHYSI_TEMP_OUTPUT2
       	END
      		BEGIN CASE
         		CASE TEMP.ONHAND = 0
            			TEMP.DIA = 0
	            		*SCV.REC(12)<ESN,LN>=TEMP.DIA
	       		*ECD.NUM=12;ECD.SUB.NUM=LN;ECD.ACTION=5;CALL SCRN.EDIT
				PHYSI_TEMP_OUTPUT2 = OCONV(TEMP.DIA,"MD2")
				CURR.DIA = PHYSI_TEMP_OUTPUT2
         		CASE CATG.TRK.LVL#"S" AND TEMP.PO#"INIT"
	         	CASE TEMP.ONHAND#""
       	     		TMP.WGT=CALC.COST.QTY(TEMP.ONHAND,MAT INV.CNV.REC,'.5','')
            			COST.QTY = TMP.WGT ; STK.QTY = TEMP.ONHAND
	            		DIAM=CALC.DIAM(COST.QTY,STK.QTY,MAT INV.REC)
       	     		IF DIAM # '' THEN
	       	      		TEMP.DIA = DIAM
       	       		*SCV.REC(12)<ESN,LN>=TEMP.DIA
              			*ECD.NUM=12;ECD.SUB.NUM=LN;ECD.ACTION=5;CALL SCRN.EDIT
	        			PHYSI_TEMP_OUTPUT2 = OCONV(TEMP.DIA,"MD2")
					CURR.DIA = PHYSI_TEMP_OUTPUT2
	            		END
		       CASE 1
       			*ECD.NUM=12;ECD.SUB.NUM=LN;ECD.ACTION=4;CALL SCRN.EDIT
            			*IF ECD.RET.VALUE#'END' THEN
               		TEMP.DIA = PHYSI_TEMP_INPUT
      	        		PHYSI_TEMP_OUTPUT2 = OCONV(TEMP.DIA,"MD2")
				ERRMSG = RBO.setProperty('','INV_PRECI','I') ;*I/P REVISED DIA
		END CASE
*T25936 v
      		IF (TEMP.ONHAND + 0) = 0 THEN
         		*ECD.NUM = 12
         		*ECD.SUB.NUM = LN
	       	*ECD.ACTION = 4 ; CALL SCRN.EDIT
	         	*IF ECD.RET.VALUE # "END" THEN
       		TEMP.DIA = PHYSI_TEMP_INPUT
			ERRMSG = RBO.setProperty('','INV_PRECI','I') ;* I/P REVISED DIA
			* THIS INPUT IS TEMP.DIA
         		*END
	      	END
*T25936 ^
	  	IF NOT(ERR) THEN
*T25936 v
*        IF TEMP.ONHAND = "" THEN
       		IF (TEMP.ONHAND + 0) = 0 THEN
*T25936 ^
       			BEGIN CASE
              	 		CASE INV.PAP.TYPE = "ROLL"
                  				TEMP.ONHAND = (((TEMP.DIA/100*TEMP.DIA/100)-(INV.CORE.DIA/100*INV.CORE.DIA/100))*100)
                  				TEMP.ONHAND = INT((TEMP.ONHAND/100)*(INV.PAP.WIDTH/10000)*(INV.FACTOR/10000)/10*100+0.5)
						WRITE TEMP.ONHAND ON CONTROL,'01TEMM'
               			CASE INV.PAP.TYPE = "LROLL" OR INV.PAP.TYPE = "PCOAT"
	              			TEMP.ONHAND = (((TEMP.DIA/100*TEMP.DIA/100)-(INV.CORE.DIA/100*INV.CORE.DIA/100))*100)
       	           			BEGIN CASE
              	       			CASE INV.UOM.STK = "FT"
	                     	   			TEMP.ONHAND = INT((TEMP.ONHAND/100)*3.1416/4*(100000/INV.FACTOR)/12+0.5)
       	              			CASE INV.UOM.STK = "PC"
              	          				TEMP.ONHAND = INT((TEMP.ONHAND/100)*3.1416/4*(100000/INV.FACTOR)/10+0.5)
                  				END CASE
	            		END CASE
       	     		IF TEMP.ONHAND < 0 THEN TEMP.ONHAND = 0
*C40414 v	
*T27801 v
         			IF CATG.TRK.LVL='S' THEN
			            ISTK.ID = CONO:PHYSI.SERIAL<1,LN>
			       END ELSE
			            ISTK.ID = CONO:'R':PHYSI.SERIAL<1,LN>:"!":PHYSI.WHSE:"!":PHYSI.LOC
			       END
*T27801 ^

            			ISTK.ID = CONO:SERIAL.NO
            			MATREAD ISTK.REC FROM INV_SERIAL,ISTK.ID ELSE MAT ISTK.REC=''
            			TMP = CALC.COST.QTY(TEMP.ONHAND,MAT INV.CNV.REC,'.5','')
	       		IF TMP < ISTK.CUR.QTY - ISTK.RSVB.QTY THEN
	       	       	ALERTMSG = 'Cannot adjust serial below reserved qty. '
       	       	*T27801	ALERTMSG := CALC.STK.QTY(ISTK.RSVB.QTY,MAT INV.CNV.REC,'.5','')
              	 		ERR=1
               			ERRMSG = ""
	               		TEMP.ONHAND = TEMP.CURR.QTY
       	        		TEMP.DIA = PHYSI.CURR.DIA
	              	 	OLD.START = 0
       	     		END
*C40414 ^    		   		*SCV.REC(10)<ESN,LN>=OCONV(TEMP.ONHAND,ICR.CNV)
            				*ECD.NUM=10;ECD.SUB.NUM=LN;ECD.ACTION=5;CALL SCRN.EDIT
	      			PHYSI_TEMP_OUTPUT = OCONV(TEMP.ONHAND,ICR.CNV)
	         	END
	      	END
	END ELSE
      		TEMP.DIA = ""
	END
END

****************
ENT.UNIT.COST:
****************
WRITE TEMP.ONHAND:@AM:PHYSI.PREV.QTY ON CONTROL,'01SCV1'

IF TEMP.ONHAND  > PHYSI.PREV.QTY<1,LN> THEN
	BEGIN CASE
       	CASE INV.M.LINE='FNGD' AND TEMP.RECEIPT[1,3] # 'NEW'
			TEMP.COST = PHYSI.UNIT.COST
			CHECK.COST = TEMP.COST
			
        	CASE PHYSI.UNIT.COST<1,LN> = "" AND CATG.PHY.INV.METH # ""
		*	WRITE PHYSI.UNIT.COST<1,LN>:@AM:PHYSI.UNIT.COST:@AM:LN:@AM:TEMP.COST:@AM:CATG.PHY.INV.METH ON CONTROL,'01LL'
            		TEMP.PREV = PHYSI.PREV.QTY
            		IF TEMP.ONHAND < 0 THEN ROND="-.5" ELSE ROND=".5"
			TEMP.CURR = CALC.COST.QTY(TEMP.ONHAND,MAT INV.CNV.REC,ROND,'')
            		IF TEMP.COST = "" OR TEMP.COST = 0 THEN
				GOSUB CALC.UNIT.COST
               		TEMP.COST = CHECK.COST
				WRITE TEMP.COST ON CONTROL,'01FCOS'
				PHYSI_TEMP = "I";*ADDED BY YAKUB
            		END
            		IF CATG.PHY.INV.ALLOW = "Y" THEN
				PHYSI_TEMP = "I" ;* I/P UNIT. PRICE
				GOSUB JFS.UNIT.COST
				U.COST = JFS_U_PRICE
				

	             	END 
	
         	CASE 1
			IF CATG.PHY.INV.ALLOW = "Y" THEN
               		PHYSI_TEMP = "I" ;* I/P UNIT. PRICE
           		END ELSE
               		TEMP.COST = PHYSI.UNIT.COST
				
            		END
      	END CASE
END ELSE
	TEMP.COST = PHYSI.UNIT.COST
	CHECK.COST = TEMP.COST
END
WRITE PHYSI_TEMP_OUTPUT:@AM:PREV.DIA:@AM:CURR.DIA ON CONTROL,'01PREV'
TEMP_OUTPUT = ""
TEMP_OUTPUT<1,1> = PHYSI_TEMP_OUTPUT
TEMP_OUTPUT<1,2> = PREV.DIA
TEMP_OUTPUT<1,3> = CURR.DIA
TEMP_OUTPUT<1,4> = OCONV(CHECK.COST,'MD4')
TEMP_OUTPUT<1,5> = PHYSI_TEMP ;* DESCRIBES I/P MODE
TEMP_OUTPUT<1,6>=  OCONV(U.COST,'MD4')
TEMP_OUTPUT<1,7> = OCONV(RevisedQty,ICR.CNV)
TEMP_OUTPUT<1,8> = TEMP.PREV.QTY
STATUS = RBO.setProperty('','PHYSI_TEMP_OUTPUT',TEMP_OUTPUT)

IF ALERTMSG <> "" THEN
	STATUS = RBO.setProperty('','ServerStatus','A')
	STATUS = RBO.setProperty('','ServerMessage',ALERTMSG)
END 

* End of method code
RETURN
************
JFS.UNIT.COST:
**************
IF TEMP.PO # 'INIT' THEN
    JOB.ID=CONO:TEMP.PO
     MATREAD JOB.REC FROM JOB,JOB.ID THEN
                     MATREAD JFS.REC FROM JOB.FNGD.STATS,JOB.ID ELSE
                        MAT JFS.REC=''
                     END
                     PTR = 1
                     LOOP
                        LOCATE PROD.NUM IN JFS.PROD<1>,PTR SETTING FND THEN
                           IF PHYWHSE = JFS.WHSE<1,FND> THEN
                              PTR = 0
                           END
                        END ELSE
                           PTR = 0
                           FND = 0
                        END
                     WHILE PTR DO
                        PTR = FND + 1
                     REPEAT
                     IF FND THEN
                        EOJ=1
                        JFS_U_PRICE = JFS.U.PRICE<1,FND> 
			END

    END
END
RETURN

****************
CALC.UNIT.COST:
****************
*
WHSE.ID = ""
PHYSI_TEMP=""
TEMP.COST=""
CHECK.COST=""


*WHSE.ID = CONO:PROD.NUM:'!':PHYSI.WHSE
*WHSE.ID="001DROLL1!01"
WHSE.ID = CONO:PROD.NUM:'!':PHYWHSE

WRITE CONO:@AM:PROD.NUM:@AM:PHYSI.WHSE ON CONTROL,'01WH'
MATREAD IWH.REC FROM INV.WHSE, WHSE.ID ELSE
	MAT IWH.REC = ''
END

BEGIN CASE
	CASE CATG.PHY.INV.METH = 'LC'
       	CHECK.COST = 0
         	PROD = PROD.NUM
         	RECP.CNT=DCOUNT(IWH.RECP.NO,@VM)
         	IF RECP.CNT > 0 THEN
            		GOT.LAST=0 ; LAST.COST=0
            		;* inventory received in a future period should not
            		;* be considered for a last cost
            		FOR R=RECP.CNT TO 1 STEP -1 UNTIL  (GOT.LAST)
               		IF IWH.RECP.PERIOD<1,R> <= PHYSI.PERIOD THEN
                  			RECP.NO=IWH.RECP.NO<1,R>
                  			IRW.ID=CONO:RECP.NO:'!':PHYSI.WHSE
                  			MATREAD IRW.REC FROM INV_RECP_WHSE,IRW.ID THEN
                     			INVR.ID=CONO:RECP.NO
                     			MATREAD INVR.REC FROM INV_RECEIPTS,INVR.ID THEN
                        				LAST.COST = INVR.UNIT.COST
                        				GOT.LAST = 1
                     			END
                  			END
               		END
            		NEXT R
            		CHECK.COST = LAST.COST
         	END
      	CASE CATG.PHY.INV.METH = 'SD'
       	CHECK.COST = IWH.STD.COST
      	CASE CATG.PHY.INV.METH = 'AV'
         	CHECK.COST = IWH.AVG.COST
      	CASE CATG.PHY.INV.METH = 'LT'
         	CHECK.COST = IWH.LIST.COST
      	CASE 1
         	CHECK.COST = 0
END CASE
RETURN

90000:
STATUS = RBO.setProperty('','ServerStatus',1)
STATUS = RBO.setProperty('','ServerMessage',ERRMSG)
RETURN

