SUBROUTINE SETEstimateMarkup_PERCENT
********************************************************************************
*   Program name :- SETEstimateMarkup_PERCENT
*   Created:- 6/24/2005
*------------------------------------------------------------------------------*
*

* In Properties:
* --------------
*  
*
* Out Properties:
* ---------------
*  
********************************************************************************

   $INCLUDE JES.CPYLIB SCOMMON.ESTIMATE
   $INCLUDE WWINSERT RBO.H
   $INCLUDE JES.CPYLIB ESTIMATE.PAPER.GROUP
   $DEFINE EQUIPMENT
   $INCLUDE JES.CPYLIB EQUIPMENT
   $DEFINE JESFILEVARS
   $INCLUDE JES.CPYLIB JES.FILE.VARS
   $DEFINE FILEVARS
   $INCLUDE CPYLIB FILE.VARS
   $DEFINE ESTIMATE
   $INCLUDE JES.CPYLIB ESTIMATE
   $DEFINE ESTIMATEDEPT
   $INCLUDE JES.CPYLIB ESTIMATE.DEPT
   $INCLUDE JES.CPYLIB EST.COST.TYPE.SUM
   $INCLUDE CPYLIB CHAR


  STATUS = RBO.getProperty('','ID',ESTIMATE.ID)
  STATUS = RBO.getProperty('','PRICE_M',MarkupPER)
  STATUS = RBO.getProperty('','QTYNO',QPTR)
  STATUS = RBO.getProperty('','TOTAL_SALE',TOTALSALE)
*vvvAdded by Abdul Gafoor on 09/10/07
  ESTQTY = ""
  STATUS = RBO.getProperty('','ESTQTTY',ESTQTY)
*^^^
*
*---- OPEN ALL FILES
*
   IN_PARAM = "" ; OUT_PARAM = ""
   ERRMSG = "CALL openEstimateFiles PROBLEM"
   CALL openEstimateFiles(ERRMSG,IN_PARAM,OUT_PARAM,MAT FILE.VARS, MAT JES.FILE.VARS)
   IF ERRMSG # "" THEN GOTO 93000

   OPEN '','CONTROL' TO CONTROL ELSE RETURN
   CONO = ESTIMATE.ID[1,3]
   EST.ID = TRIM(ESTIMATE.ID[4,99])

  * MATREAD EST.REC FROM ESTIMATE,ESTIMATE.ID ELSE
  *    ERRMSG = 'Estimate not on file. Try again!'
  *    GOTO 93000
  * END


* COPYING THE FINAL PRICE TO TOTAL_SALE VARIABLE BASED ON QTY INDEX
*  TOTAL_SALE = EST.FINAL.PRICE<1,QPTR>

TOTAL.SALE<1,QPTR> = TOTALSALE 
PRICE_M = MarkupPER
EST.FINAL.PRICE_VALUE<1,QPTR> = ""
EST.OM.PRICE.M_VALUE<1,QPTR> = ""
MARKPSTR = ""
FINALPRICE = ""
EST.PRICE.THOU = ""
EST.OM.PRICE.M<1,QPTR> = "0"
*vvvAdded by Abdul Gafoor on 09/10/07
EST.QTY<1,QPTR> = ESTQTY
*^^^

    BEGIN CASE
      CASE MOD(QPTR + 3,"3") = 1		
         IF EST.OM.PRICE.M<1,QPTR> = '' OR EST.OM.PRICE.M<1,QPTR> = 0 THEN
            EST.OM.PCT<1,QPTR> = PRICE_M	
           GOSUB 20200 	      ;* Final Price	
            IF EST.OM.PRICE.M<1,QPTR> = 0 THEN
               GOSUB 20300
            END
            GOSUB 20400
         END ELSE
            ERRMSG = 'QUANTITY ':QPTR:' PERCENT CANNOT CHANGE UNLESS PRICE/M IS "0"'
            GOSUB 93000
         END
      CASE MOD(QPTR + 3,"3") = 2
         IF EST.OM.PRICE.M<1,QPTR> = '' OR EST.OM.PRICE.M<1,QPTR> = 0 THEN
            EST.OM.PCT<1,QPTR> = PRICE_M
            GOSUB 20200          ;* Final Price
            IF EST.OM.PRICE.M<1,QPTR> = 0 THEN
               GOSUB 20300
            END
            GOSUB 20400
         END ELSE
            ERRMSG = 'QUANTITY ':QPTR:' PERCENT CANNOT CHANGE UNLESS PRICE/M IS "0"'
            GOSUB 93000
         END
      CASE MOD(QPTR + 3,"3") = 0
         IF EST.OM.PRICE.M<1,QPTR> = '' OR EST.OM.PRICE.M<1,QPTR> = 0 THEN
            EST.OM.PCT<1,QPTR> = PRICE_M
            GOSUB 20200          ;* Final Price
            IF EST.OM.PRICE.M<1,QPTR> = 0 THEN
               GOSUB 20300
            END
            GOSUB 20400
         END ELSE
            ERRMSG = 'QUANTITY ':QPTR:' PERCENT CANNOT CHANGE UNLESS PRICE/M IS "0"'
            GOSUB 93000
         END
   END CASE
GOTO 95000

RETURN

*
*---- Calculate Final Price
*
20200 *
   BEGIN CASE
      CASE MOD(QPTR + 3,"3") = 1
         EST.FINAL.PRICE<1,QPTR> = TOTAL.SALE<1,QPTR> + (INT(OCONV(TOTAL.SALE<1,QPTR>,'MD2') * OCONV(EST.OM.PCT<1,QPTR>,'MD4') + .005 / 100))
         EST.FINAL.PRICE_VALUE<1,QPTR> = OCONV(EST.FINAL.PRICE<1,QPTR>,'MD2')
      CASE MOD(QPTR + 3,"3") = 2
         EST.FINAL.PRICE<1,QPTR> = TOTAL.SALE<1,QPTR> + (INT(OCONV(TOTAL.SALE<1,QPTR>,'MD2') * OCONV(EST.OM.PCT<1,QPTR>,'MD4') + .005 / 100))
         EST.FINAL.PRICE_VALUE<1,QPTR> = OCONV(EST.FINAL.PRICE<1,QPTR>,'MD2,')
      CASE MOD(QPTR + 3,"3") = 0
         EST.FINAL.PRICE<1,QPTR> = TOTAL.SALE<1,QPTR> + (INT(OCONV(TOTAL.SALE<1,QPTR>,'MD2') * OCONV(EST.OM.PCT<1,QPTR>,'MD4') + .005 / 100))
         EST.FINAL.PRICE_VALUE<1,QPTR> = OCONV(EST.FINAL.PRICE<1,QPTR>,'MD2,')
      CASE 1
         EST.FINAL.PRICE<1,1> = TOTAL.SALE<1,QPTR> + (INT(OCONV(TOTAL.SALE<1,QPTR>,'MD2') * OCONV(EST.OM.PCT<1,1>,'MD4') + .005 / 100))
         EST.FINAL.PRICE<1,2> = TOTAL.SALE<1,QPTR> + (INT(OCONV(TOTAL.SALE<1,QPTR>,'MD2') * OCONV(EST.OM.PCT<1,2>,'MD4') + .005 / 100))
         EST.FINAL.PRICE<1,3> = TOTAL.SALE<1,QPTR> + (INT(OCONV(TOTAL.SALE<1,QPTR>,'MD2') * OCONV(EST.OM.PCT<1,3>,'MD4') + .005 / 100))
         EST.FINAL.PRICE_VALUE<1,QPTR> = OCONV(EST.FINAL.PRICE<1,1>,'MD2,')
         EST.FINAL.PRICE_VALUE<1,QPTR> = OCONV(EST.FINAL.PRICE<1,2>,'MD2,')
         EST.FINAL.PRICE_VALUE<1,QPTR> = OCONV(EST.FINAL.PRICE<1,3>,'MD2,')
   END CASE
   RETURN

*
*---- Calculate  Price per Thousand
*
20300 *
   BEGIN CASE
      CASE MOD(QPTR + 3,"3") = 1
	  EST.OM.PRICE.M<1,QPTR> = INT(EST.FINAL.PRICE<1,QPTR> / EST.QTY<1,QPTR> * 1000)

        * EST.OM.PRICE.M<1,QPTR> = (EST.FINAL.PRICE<1,QPTR> / EST.QTY<1,QPTR> * 10)
         EST.OM.PRICE.M_VALUE<1,QPTR> = EST.OM.PRICE.M<1,QPTR>
      CASE MOD(QPTR + 3,"3") = 2
	  EST.OM.PRICE.M<1,QPTR> = INT(EST.FINAL.PRICE<1,QPTR> / EST.QTY<1,QPTR> * 1000)

        * EST.OM.PRICE.M<1,QPTR> = (EST.FINAL.PRICE<1,QPTR> / EST.QTY<1,QPTR> * 10)
         EST.OM.PRICE.M_VALUE<1,QPTR> = EST.OM.PRICE.M<1,QPTR>
      CASE MOD(QPTR + 3,"3") = 0
	   EST.OM.PRICE.M<1,QPTR> = INT(EST.FINAL.PRICE<1,QPTR> / EST.QTY<1,QPTR> * 1000)

        * EST.OM.PRICE.M<1,QPTR> = (EST.FINAL.PRICE<1,QPTR> / EST.QTY<1,QPTR> * 10)
         EST.OM.PRICE.M_VALUE<1,QPTR> = EST.OM.PRICE.M<1,QPTR>
   END CASE
   RETURN

*
*---- Calculate Additional Price per Thousand
*
20400 *
   TOTAL.VSALE=""
   TOTAL.VCOST=""
   DC=COUNT(EST.DEPT.COMP,VM)+(EST.DEPT.COMP#"")
   FOR DP=1 TO DC
      ESTD.ID=EST.DEPT.COMP<1,DP>
      QTY=FIELD(ESTD.ID,"!",3)
      LOCATE QTY IN EST.QTY<1>,1 SETTING P ELSE P=0
      IF P > 0 THEN
         TOTAL.VSALE<1,P>=TOTAL.VSALE<1,P>+EST.DEPT.COMP.VSALE<1,DP>
         TOTAL.VCOST<1,P>=TOTAL.VCOST<1,P>+EST.DEPT.COMP.VCOST<1,DP>
      END
   NEXT DP
   EST.COST.THOU<1,QPTR> = ''
   EST.PRICE.THOU<1,QPTR> = ''
   EP = QPTR
   PRICE.THOU.MKUP = TOTAL.VSALE<1,EP> + (INT(OCONV(TOTAL.VSALE<1,EP>,'MD2') * OCONV(EST.OM.PCT<1,EP>,'MD4') + .005 / 100))
   EST.PRICE.THOU<1,EP>=OCONV(INT(PRICE.THOU.MKUP/(EST.QTY<1,EP>/1000)+0.5),"MD2")
   EST.COST.THOU<1,EP>=INT(TOTAL.VCOST<1,EP>/(EST.QTY<1,EP>/1000)+0.5)
   RETURN

95000 *
STATUS = RBO.setProperty('','ServerStatus',0)
STATUS = RBO.setProperty('','OpMarkupSum_PER',EST.FINAL.PRICE_VALUE<1,QPTR> : "#" : OCONV(EST.OM.PRICE.M_VALUE<1,QPTR>,"MD2") : "#" : EST.PRICE.THOU<1,EP> : "#" : QPTR )
RETURN

93000 *
   STATUS = RBO.setProperty('','ServerStatus',1)
   STATUS = RBO.setProperty('','ServerMessage',ERRMSG)
   RETURN

