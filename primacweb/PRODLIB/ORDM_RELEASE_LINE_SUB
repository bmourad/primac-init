SUBROUTINE ORDM_RELEASE_LINE_SUB
********************************************************************************
*   Program name :- ORDM_RELEASE_LINE_SUB
*   Created:- 4/3/2006
*   Programmer :- Suhail Hussain S
********************************************************************************
$INCLUDE WWINSERT RBO.H

$INCLUDE CPYLIB COMMON1
$INCLUDE JCS.CPYLIB COM.JCS.LINK
$INCLUDE ICS.CPYLIB COM.INV.MAIN
$INCLUDE ICS.CPYLIB COM.INV.SERIAL
$INCLUDE JCS.CPYLIB COM.INV.STATS
$INCLUDE PMC.CPYLIB COM.CUST
$INCLUDE OPS.CPYLIB COM.ORDER

$DEFINE INVENTORY
$DEFINE ORDER
$DEFINE ORDERDETAILINQ
$DEFINE CUSTOMER
$DEFINE CATEGORY
$DEFINE INVWHSE
$DEFINE FNGDSTATS
$DEFINE FNGDORDERSTATS
$DEFINE JOB
$DEFINE FILEVARS

$INCLUDE PMC.CPYLIB CUSTOMER
$INCLUDE OPS.CPYLIB ORDER
$INCLUDE OPS.CPYLIB ORDER.JOB
$INCLUDE OPS.CPYLIB ORDER.DETAIL
$INCLUDE OPS.CPYLIB ORDER.DETAIL.INQ
$INCLUDE OPS.CPYLIB ORDER.RELEASE
$INCLUDE ICS.CPYLIB INVENTORY
$INCLUDE ICS.CPYLIB CATEGORY
$INCLUDE ICS.CPYLIB INV.WHSE
$INCLUDE ICS.CPYLIB INV.FNGD
$INCLUDE ICS.CPYLIB INV.CNV
$INCLUDE ICS.CPYLIB FNGD.BOM
$INCLUDE ICS.CPYLIB FNGD.STATS
$INCLUDE ICS.CPYLIB FNGD.ORDER.STATS
$INCLUDE ICS.CPYLIB FNGD.JOB.STATS
$INCLUDE JCS.CPYLIB JOB
$INCLUDE PMC.CPYLIB SHIP.TO
$INCLUDE CPYLIB FILE.VARS
$INCLUDE CPYLIB CHAR

   OPEN "","CUSTOMER" TO CUSTOMER ELSE ERRMSG = "CANNOT OPEN CUSTOMER FILE";GOTO 91000
   OPEN "","ORDER" TO ORDER ELSE ERRMSG = "CANNOT OPEN ORDER FILE";GOTO 91000
   OPEN "","ORDER.DETAIL" TO ORDER.DETAIL ELSE ERRMSG = "CANNOT OPEN ORDER.DETAIL FILE";GOTO 91000
   OPEN "","ORDER.RELEASE" TO ORDER.RELEASE ELSE ERRMSG = "CANNOT OPEN ORDER.RELEASE FILE";GOTO 91000
   OPEN "","INVENTORY" TO INVENTORY ELSE ERRMSG = "CANNOT OPEN INVENTORY FILE";GOTO 91000
   OPEN "","CATEGORY" TO CATEGORY ELSE ERRMSG = "CANNOT OPEN CATEGORY FILE";GOTO 91000
   OPEN "","INV.WHSE" TO INV.WHSE ELSE ERRMSG = "CANNOT OPEN INV.WHSE FILE";GOTO 91000
   OPEN "","INV.FNGD" TO INV.FNGD ELSE ERRMSG = "CANNOT OPEN INV.FNGD FILE";GOTO 91000
   OPEN "","FNGD.BOM" TO FNGD.BOM ELSE ERRMSG = "CANNOT OPEN FNGD.BOM FILE";GOTO 91000
   OPEN "","FNGD.STATS" TO FNGD.STATS ELSE ERRMSG = "CANNOT OPEN FNGD.STATS FILE";GOTO 91000
   OPEN "","FNGD.ORDER.STATS" TO FNGD.ORDER.STATS ELSE ERRMSG = "CANNOT OPEN  FILE";GOTO 91000
   OPEN "","FNGD.JOB.STATS" TO FNGD.JOB.STATS ELSE ERRMSG = "CANNOT OPEN FNGD.JOB.STATS FILE";GOTO 91000
   OPEN "","PRICE.TABLE" TO PRICE.TABLE ELSE ERRMSG = "CANNOT OPEN PRICE.TABLE FILE";GOTO 91000
   OPEN "","WAREHOUSE" TO WAREHOUSE ELSE ERRMSG = "CANNOT OPEN WAREHOUSE FILE";GOTO 91000
   OPEN "","ESTIMATE" TO ESTIMATE ELSE ERRMSG = "CANNOT OPEN ESTIMATE FILE";GOTO 91000
   OPEN "","JOB" TO JOB ELSE ERRMSG = "CANNOT OPEN JOB FILE";GOTO 91000
   OPEN "","CONTROL" TO CONTROL ELSE ERRMSG = "CANNOT OPEN CONTROL FILE";GOTO 91000
   OPEN "","SHIP.TO" TO SHIP.TO ELSE ERRMSG = "CANNOT OPEN SHIP.TO FILE";GOTO 91000

   STATUS = RBO.getProperty("","INARR",INARR)
   STATUS = RBO.getProperty("","PMCProperty",PMCProperty)
   STATUS = RBO.getProperty("","GRIDARR",OSD_FULL_ARR)

   STATUS = RBO.setProperty("","GRIDARR","")

   CONO           = PMCProperty<1,4>
   ORDNUM         = INARR<1,1>
   ORD.SHIP.TO    = INARR<1,2>
   ORD.REL.NO     = INARR<1,3>
   RELNO          = INARR<1,4>

   MAT ORD.DET.SUM = ""
   MAT ORD.DET.INQ = ""

   SWAP "#" WITH VM IN ORD.SHIP.TO
   SWAP "#" WITH VM IN ORD.REL.NO
   
   FOR X = 1 TO DCOUNT(ORD.SHIP.TO,VM)
      TEMPORD_REC = FIELD(OSD_FULL_ARR,"¥",X,1)
      MATPARSE ORD.DET.REC FROM TEMPORD_REC,"ð"
      FOR P = 1 TO ORD.DET.REC.SIZE
        ORD.DET.SUM(P,X) = ORD.DET.REC(P)
      NEXT P
   NEXT X
   FOR X = 1 TO DCOUNT(ORD.SHIP.TO,VM)
      FOR P = 1 TO ORD.DET.REC.SIZE
        ORD.DET.REC(P) = ORD.DET.SUM(P,X)
      NEXT P
      STATUS = "L"; SHPNO = ORD.SHIP.TO<1,X>
      CALL ORDER_LINE_UPD(CONO,ORDNO,SHPNO,STATUS)
   NEXT X
   
   RET_ARR = ""
   GRID_ARR = ""

***** start processing
   TODAY = DATE()
   GEN.SHPNO = "000"

1100*
   RELEASE        ;* T26126
   MAT ORR.REC = ""
   ORDNO = ORDNUM
   LINES = 0
   IF ORD.REL.NO = "" THEN GOTO 91000
*
*---- Release
   RPTR = 0; RCNT = DCOUNT(ORD.REL.NO,VM)
   MAT ORR.REC = ""
   LOCATE RELNO IN ORD.REL.NO<1>,1 SETTING RPTR ELSE
      ERRMSG = "Cannot locate release (":RELNO:") for order # ":ORDNUM
      GOTO 91000
   END
   MATREAD ORR.REC FROM ORDER.RELEASE, CONO:RELNO THEN
    IF ORDNO # "" AND ORDNO # ORR.ORD THEN
      ERRMSG = "Release (":RELNO:") is already linked to order # ":ORR.ORD
      GOTO 91000
    END
   END ELSE
      RETURN
   END
   IF ORDNO = ORR.ORD THEN GOTO 1010
1010*
  SHPNO = ORR.SHIP.TO
  RET_ARR<1,1> = OCONV(ORR.DATE,"D2/")
  IF ORR.STATUS<1,1> = "" THEN
    REL.STATUS = "OPEN" 
  END ELSE
    REL.STATUS = ORR.STATUS<1,1>
  END
  RET_ARR<1,2> = REL.STATUS  
  RET_ARR<1,3> = OCONV(ORR.REQ.DATE,"D2/")
  RET_ARR<1,4> = OCONV(ORR.DUE.DATE,"D2/")
  RET_ARR<1,5> = ORR.CUST.REL

  RCNT = DCOUNT(ORD.REL.NO,VM)
1020*
  LN = 1; OLD.SHPNO = SHPNO
  BEGIN CASE
    CASE SHPNO # ""
      RET_ARR<1,6> = SHPNO
      ECD.RET.VALUE = SHPNO; GOSUB 1310
    CASE ORD.SHIP.TO<1,3> # ""
      RET_ARR<1,6> = "I"
      GOTO 93000
    CASE ORD.SHIP.TO<1,2> # ""
      SHPNO = ORD.SHIP.TO<1,2>
      RET_ARR<1,6> = SHPNO
      ECD.RET.VALUE = SHPNO; GOSUB 1310
    CASE ORD.SHIP.TO<1,1> # ""
      SHPNO = ORD.SHIP.TO<1,1>
      RET_ARR<1,6> = SHPNO
      ECD.RET.VALUE = SHPNO; GOSUB 1310
    CASE 1
      RET_ARR<1,6> = "I"
      GOTO 93000
  END CASE
  IF SHPNO = "" THEN GOTO 1100
  ORR.SHIP.TO = SHPNO
  IF ORR.STATUS<1,1> # "" THEN 
   RET_ARR<1,8> = "READ";* MODE OF THE FILE
  END ELSE
   RET_ARR<1,8> = "EDIT"
  END
  GOTO 93000
RETURN
********************
**** --- SUBROUTINES --- ****
1310*
  SPTR = 0; SCNT = DCOUNT(ORD.SHIP.TO,VM)
  IF LEN(ECD.RET.VALUE) < 3 THEN
     ECD.RET.VALUE = ECD.RET.VALUE "R%3"
  END
  SHPNO = ECD.RET.VALUE
  LOCATE SHPNO IN ORD.SHIP.TO<1>,1 SETTING SPTR THEN
     STATUS = "D"
     CALL ORDER_LINE_UPD(CONO,ORDNO,SHPNO,STATUS)
     FOR P = 1 TO ORD.DET.REC.SIZE
        ORD.DET.REC(P) = ORD.DET.SUM(P,SPTR)
     NEXT P
     IF SHPNO = GEN.SHPNO THEN OSD.PO = ORD.PO
     RET_ARR<1,7> = OSD.PO
  END ELSE
     ERRMSG = "Ship to is not setup on the order"
     GOTO 91000
  END
  LN = 1; LINES = DCOUNT(OSD.PROD,VM)
  OLD.START.LINE = 0; GOSUB 7900
RETURN
*---- Display scrolling lines
7900*
  START.LINE = 1
  LAST.LINE = LINES
  IF START.LINE = OLD.START.LINE THEN GOTO 7990
  FOR N = START.LINE TO LAST.LINE
    GOSUB 7910
  NEXT N
7990*
  RETURN
*---- Display a single line
7910*
  GOSUB 9000
  ORDER.AMT = OSD.G.QTY<1,N>
  SHIP.AMT  = OSD.S.QTY<1,N>
  RESV.AMT  = OSD.R.QTY<1,N>  
  GRID_ARR<1,N,1> = OSD.PROD<1,N>
  GRID_ARR<1,N,2> = OSD.WHSE<1,N>
  GRID_ARR<1,N,3> = INV.UNIT<1,3>
  GRID_ARR<1,N,4> = OCONV(INT(((ORDER.AMT / ICR.DV1) * ICR.MT1) / ICR.DV2 + .5),ICR.CNV1)
  GRID_ARR<1,N,5> = OCONV(INT(((SHIP.AMT / ICR.DV1) * ICR.MT1) / ICR.DV2 + .5),ICR.CNV1)
  GRID_ARR<1,N,6> = OCONV(INT(((ORR.QTY<1,N> / ICR.DV1) * ICR.MT1) / ICR.DV2 + .5),ICR.CNV1)
  GRID_ARR<1,N,7> = OCONV(INT(((RESV.AMT / ICR.DV1) * ICR.MT1) / ICR.DV2 + .5),ICR.CNV1)
  RQTY = 0; PTR = 1
  LOOP
    LOCATE RELNO IN OSD.REL.NO<1,N>,PTR SETTING FND THEN
      RQTY = RQTY + OSD.REL.QTY<1,N,FND>
    END ELSE
      PTR = 0
    END
  WHILE PTR DO
    PTR = FND + 1
  REPEAT
  GRID_ARR<1,N,8> = INV.FULL.DESC
  GRID_ARR<1,N,9> = OCONV(INT(((RQTY / ICR.DV1) * ICR.MT1) / ICR.DV2 + .5),ICR.CNV1)

*** TO GET THE MAX & MIN VALS OF THE REL AND RESV QTY
  MAXV = ""
  MAXV = OSD.O.QTY<1,N> - OSD.S.QTY<1,N>
  MAXV = OCONV(INT(((MAXV / ICR.DV1) * ICR.MT1) / ICR.DV2 + .5),ICR.CNV1) ;* THIS IS TO GET THE MAX VALUE IN PROPER FORMAT....
  IF MAXV < 0 THEN MAXV = 0
  GRID_ARR<1,N,10> = MAXV : "ð" : OSD.R.QTY<1,N>
RETURN
*
9000*
  MATREAD INV.REC FROM INVENTORY, CONO:OSD.PROD<1,N> ELSE
    MAT INV.REC = ""; INV.FULL.DESC = "Unknown"
  END
  MATREAD CATG.REC FROM CATEGORY, CONO:INV.LINE ELSE
    MAT CATG.REC = ""
  END
$INCLUDE ICSBP INV.UM.CNV
RETURN

93000*
   STATUS = RBO.setProperty("","RETARR",RET_ARR)
   STATUS = RBO.setProperty("","GRIDARR",GRID_ARR)
   RELEASE
RETURN

91000*
   STATUS = RBO.setProperty("","ServerStatus",1)
   STATUS = RBO.setProperty("","ServerMessage",ERRMSG)
   RELEASE
RETURN

