SUBROUTINE PHYPAPE_VALIDATE_ADJ_CODE
********************************************************************************
*   Program name :- PHYPAPE_VALIDATE_ADJ_CODE
*   Created	   :- 11/03/2006
*   Programmer   :- Suhail Hussain S
********************************************************************************
$INCLUDE WWINSERT RBO.H
$INCLUDE ICS.CPYLIB PHYSICAL.INV
$INCLUDE ICS.CPYLIB INV.ADJ.CODES
$INCLUDE ICS.CPYLIB INVENTORY
$INCLUDE ICS.CPYLIB INV.WHSE
$INCLUDE ICS.CPYLIB INV.WHSE.LOC
$INCLUDE ICS.CPYLIB CATEGORY
$INCLUDE ICS.CPYLIB INV_SERIAL
$INCLUDE ICS.CPYLIB INV.CNV
$INCLUDE PMC.CPYLIB COMPANY
$INCLUDE CPYLIB CHAR
*
   DEFFUN CALC_DIAM(COST.QTY,STK.QTY,MAT INV.REC)
   DEFFUN CALC_STK_QTY(COST.QTY,MAT INV.CNV.REC,ROND,LN)
*
   OPEN '','PHYSICAL.INV' TO PHYSICAL.INV ELSE ERRMSG = 'CANNOT OPEN PHYSICAL.INV FILE';GOTO 91000
   OPEN '','INV.ADJ.CODES' TO INV.ADJ.CODES ELSE ERRMSG = 'CANNOT OPEN INV.ADJ.CODES FILE';GOTO 91000
   OPEN '','INVENTORY' TO INVENTORY ELSE ERRMSG = 'CANNOT OPEN INVENTORY FILE'; GOTO 91000
   OPEN '','INV.WHSE' TO INV.WHSE ELSE ERRMSG = 'CANNOT OPEN INV.WHSE FILE'; GOTO 91000
   OPEN '','INV.WHSE.LOC' TO INV.WHSE.LOC ELSE ERRMSG = 'CANNOT OPEN INV.WHSE.LOC FILE'; GOTO 91000
   OPEN '','CATEGORY' TO CATEGORY ELSE ERRMSG = 'CANNOT OPEN CATEGORY FILE'; GOTO 91000
   OPEN '','INV_SERIAL' TO INV_SERIAL ELSE ERRMSG = 'CANNOT OPEN INV_SERIAL FILE'; GOTO 91000
*
   STATUS = RBO.getProperty('','PMCProperty',PMCProperty)
   STATUS = RBO.getProperty('','LN_VALS',LN_VALS)
   STATUS = RBO.getProperty('','SERIAL_NUM',SERIAL_NUM)
   STATUS = RBO.getProperty('','ADJ_CODE',ADJ.VALUE)
   STATUS = RBO.getProperty('','DIFF_SHEET',DIFF.SHEET)
   STATUS = RBO.getProperty('','PHY_INV_REC',PHY_INV_REC)
*
   MAT PHS.INV.REC='';MAT INV.CNV.REC='';MAT CATG.REC=''
   CONO    = PMCProperty<1,4>
   OPER.ID = PMCProperty<1,3>
   LN1 = LN_VALS<1,1>
   LN2 = LN_VALS<1,2>
   DELIMCHAR = "ð"

*
   MATPARSE PHS.INV.REC FROM PHY_INV_REC, DELIMCHAR
   MATREAD ISTK.REC FROM INV_SERIAL, CONO:SERIAL_NUM ELSE MAT ISTK.REC = ""
   MATREAD INV.REC FROM INVENTORY, CONO:ISTK.PROD ELSE MAT INV.REC = ""
   MATREAD CATG.REC FROM CATEGORY, CONO:INV.LINE ELSE MAT CATG.REC = ""
*
   PROD_NUM = ISTK.PROD
   PROD_LINE = INV.LINE
   PROD_TYPE = INV.PAP.TYPE
   CATG_TYPE = CATG.TYPE
   WHSE_CODE = ISTK.WHSE
   LOC_CODE = ISTK.LOC
   PHY_INV_REC = ""
*
   MATREAD IWLO.REC FROM INV.WHSE.LOC,CONO: PROD_NUM:'!':WHSE_CODE:'!':LOC_CODE ELSE
      MAT IWLO.REC = ""
      IWLO.LOC.ON.HAND=0
   END
   MATREAD IWH.REC FROM INV.WHSE,CONO:PROD_NUM:'!':WHSE_CODE ELSE MAT IWH.REC = ""
   GOSUB SET.CONV.VALUES 
*

1000 *
   MATREAD IADJ.REC FROM INV.ADJ.CODES, CONO:ADJ.VALUE THEN
      PHS.ADJ.CODE<1,LN1,LN2> = ADJ.VALUE
      PHS.ADJ.TYPE<1,LN1,LN2> = IADJ.TYPE
   END ELSE
      ERRMSG = 'INVALID ADJUSTMENT REASON CODE ' : ADJ.VALUE
      GOTO 91000
   END
   GOSUB SERIAL.LINES.ENTRY
   GOSUB ENT.ADJ.QTY
   GOSUB SET_PROPERTIES
RETURN
*
SERIAL.LINES.ENTRY: 
   PHS.CUR.WGHT<1,LN1,LN2> = ISTK.CUR.QTY
   PHS.INV.PROD<1,LN1> = ISTK.PROD
   WGHT = ISTK.CUR.QTY
   DIAM = ISTK.CUR.DIAM
   SHTS = ISTK.CUR.STK.QTY
   GOSUB GET.DIAM
   PHS.CUR.DIAM<1,LN1,LN2> = DIAM
*   STATUS = RBO.setProperty('','ISTK_CUR_DIAM',DIAM)
   PHS.CUR.SHEET<1,LN1,LN2> = ISTK.CUR.STK.QTY
   CUR_WGHT = OCONV(INT(((PHS.CUR.WGHT<1,LN1,LN2>/ICR.DV1<LN1>)*ICR.MT1<LN1>)/ICR.DV2<LN1>+.5), ICR.CNV<LN1>)
   DIAM_VAL = OCONV(PHS.CUR.DIAM<1,LN1,LN2>,"MD2")
RETURN
*
GET.DIAM: 
   IF INV.PAP.TYPE='ROLL' OR INV.PAP.TYPE='LROLL' OR INV.PAP.TYPE='PC' THEN
      DIAM = CALC_DIAM(WGHT,SHTS+0,MAT INV.REC)
   END ELSE
      DIAM = 0
   END
RETURN
*
ENT.ADJ.QTY:
   FOCUS = ""
   ERRMSG='' ; SKIP =0
   ROND='.5'
   BEGIN CASE
      CASE PHS.ADJ.TYPE<1,LN1,LN2>='R'
         O.R ='R'
         IF PHS.NEW.SHEET<1,LN1,LN2> # '' THEN O.R="O"
         DEFAULT=OCONV(PHS.NEW.SHEET<1,LN1,LN2>, "MD":ICR.SCAL<LN1>)
         FOCUS<1,1> = "ADJ"
         FOCUS<1,2> = DEFAULT
         FOCUS<1,3> = O.R
         FOCUS<1,4> = 0
         FOCUS<1,5> = OCONV(999999999,"MD":ICR.SCAL<LN1>)
         FOCUS<1,6> = ICR.SCAL<LN1>
      CASE PHS.ADJ.TYPE<1,LN1,LN2>='P'
         O.R='R'
         IF DIFF.SHEET<1,LN1,LN2> # '' THEN O.R="O"
         DEFAULT=ABS(OCONV(DIFF.SHEET<1,LN1,LN2>,"MD":ICR.SCAL<LN1>))
         FOCUS<1,1> = "DIFF"
         FOCUS<1,2> = DEFAULT
         FOCUS<1,3> = O.R
         FOCUS<1,4> = 1
         FOCUS<1,5> = OCONV(999999999,"MD":ICR.SCAL<LN1>)
         FOCUS<1,6> = ICR.SCAL<LN1>
      CASE 1
         IF IWH.ON.HAND-IWH.RESV>1 THEN
            IF ISTK.RSVB.QTY>1 THEN
               O.R="R"
               IF DIFF.SHEET<1,LN1,LN2> # '' THEN O.R="O"
               DEFAULT=OCONV(ABS(DIFF.SHEET<1,LN1,LN2>),"MD":ICR.SCAL<LN1>)
               BEGIN CASE
                  CASE INV.PAP.TYPE = "SHEET"
                     MAXV=PHS.CUR.SHEET<1,LN1,LN2>
                  CASE 1
                     MAXV=CALC_STK_QTY(PHS.CUR.WGHT<1,LN1,LN2>,MAT INV.CNV.REC,'',LN1)
               END CASE
               FOCUS<1,1> = 'DIFF'
               FOCUS<1,2> = DEFAULT
               FOCUS<1,3> = O.R
               FOCUS<1,4> = 1
               FOCUS<1,5> = OCONV(MAXV,"MD":ICR.SCAL<1,LN1>)
               FOCUS<1,6> = ICR.SCAL<LN1>
            END ELSE
               ERRMSG='SERIAL AVAILABLE QUANTITY IS ZERO'
               SKIP = 1
            END
         END ELSE
            ERRMSG='AVAILABLE QUANTITY IS ZERO'
            SKIP = 1
         END
   END CASE
RETURN
*
SET.CONV.VALUES: 
   BEGIN CASE
      CASE INV.UNIT<1,2>='SHT' AND INV.UNIT<1,3>='LBS'
         ICR.CNV<LN1>="MD0";ICR.SCAL<LN1>=0;ICR.TYPE<LN1>=3
         ICR.DV1<LN1>=INV.M.WT;ICR.MT1<LN1>=1;ICR.DV2<LN1>=1
      CASE INV.UNIT<1,2>='PC' AND INV.UNIT<1,3>='MSI'
         ICR.CNV<LN1>="MD0";ICR.SCAL<LN1>=0;ICR.TYPE<LN1>=3
         ICR.DV1<LN1>=INV.PAP.WIDTH/100;ICR.MT1<LN1>=10;ICR.DV2<LN1>=1
      CASE INV.UNIT<1,2>='FT' AND INV.UNIT<1,3>='MSI'
         ICR.CNV<LN1>="MD0";ICR.SCAL<LN1>=0;ICR.TYPE<LN1>=3
         ICR.DV1<LN1>=INV.PAP.WIDTH/100;ICR.MT1<LN1>=100;ICR.DV2<LN1>=12
      CASE 1
         ICR.CNV<LN1>="MD2";ICR.SCAL<LN1>=2;ICR.TYPE<LN1>=4
         ICR.DV1<LN1>=10;ICR.MT1<LN1>=1;ICR.DV2<LN1>=1
   END CASE
RETURN
*
SET_PROPERTIES:
   MATBUILD PHY_INV_REC FROM PHS.INV.REC USING DELIMCHAR
   STATUS = RBO.setProperty('','IP_PROMPT',FOCUS)
   STATUS = RBO.setProperty('','ServerMessage',ERRMSG)
   STATUS = RBO.setProperty('','SKIP_PROMPT',SKIP)
   STATUS = RBO.setProperty('','PHY_INV_REC',PHY_INV_REC)
RETURN
*
91000*
   STATUS = RBO.setProperty('','ServerMessage',ERRMSG)
   STATUS = RBO.setProperty('','ServerStatus',1)
RETURN
