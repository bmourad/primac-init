  SUBROUTINE SERTRINQ_POSTREAD
*********************************************************************
*
* REVISION - [12.0]
*
* PROGRAM  - SERTRINQ_POSTREAD
*
* AUTHOR   - ALEJANDRO DELGADO
*
* DATE     - 09/30/2002
*
* DESCRIPTION
*
* This program builds the data from INVENTORY file to load into 
* Serial Tracking Inquiry screen.
*
*********************************************************************
*
*---- FILE COPY STATEMENTS
*
  $INCLUDE WWINSERT RBO.H
  $INCLUDE ICS.CPYLIB INVENTORY
  $INCLUDE ICS.CPYLIB INV.CNV
  $INCLUDE ICS.CPYLIB INV_RECEIPTS
  $INCLUDE ICS.CPYLIB INV_SERIAL
  $INCLUDE ICS.CPYLIB CATEGORY
  $INCLUDE PMC.CPYLIB PO
  $INCLUDE CPYLIB FILE.VARS
  $INCLUDE CPYLIB CHAR

*
*---- INITIALIZATION
*
  ERRMSG = RBO.getProperty('','ID',ID)
  CONO = ID[1,3]
  SERIAL.NUM = ID[4,99]

  $INCLUDE ICSBP INV.UM.CNV

*
  ERRMSG = "" ; IN_PARAM = "" ; OUT_PARAM = ""
  IN_PARAM<1,1> = 'INVENTORY'
  IN_PARAM<1,2> = 'INV_RECEIPTS'
  IN_PARAM<1,3> = 'INV_SERIAL'
  IN_PARAM<1,4> = 'CATEGORY'
  IN_PARAM<1,5> = 'PO'
  CALL GetInvOpenFiles(ERRMSG,IN_PARAM,OUT_PARAM,MAT FILE.VARS)
*T501 v
  OPEN 'INV_SERIAL_DELETED' TO INV_SERIAL_DELETED ELSE  ERRMSG='INV_SERIAL_DELETED FILE IS MISSING' ; GOTO SET.ERROR
*T501 ^
  IF ERRMSG # "" THEN GOTO SET.ERROR
*T501 
  RECV.DATE = OCONV(INVR.ENT.DATE,'D4/')
  RECV.PRICE = OCONV(INVR.UNIT.COST,'MD4')

  SERIAL.MSG = ''
*  MATREAD ISTK.REC FROM INV_SERIAL,CONO:SERIAL.NUM THEN
*  END
*T501 SERIAL.MSG = 'ACTIVE'
    RECV.PRICE = OCONV(INVR.UNIT.COST,'MD4')
    SERIAL.MSG = ''
  MATREAD ISTK.REC FROM INV_SERIAL,CONO:SERIAL.NUM THEN
  SERIAL.MSG = 'ACTIVE'

  END ELSE
    MATREAD ISTK.REC FROM INV_SERIAL_DELETED,CONO:SERIAL.NUM THEN
      SERIAL.MSG = 'DELETED'
   END     
  END

*
*---- PROCESSING
*
  MATREAD ISTK.REC FROM INV_SERIAL, CONO:SERIAL.NUM ELSE
    ERRMSG = SERIAL.NUM:" is not a valid serial tracking ID."
    GOTO SET.ERROR
  END
  MATREAD INV.REC FROM INVENTORY, CONO:ISTK.PROD ELSE MAT INV.REC=""
  MATREAD CATG.REC FROM CATEGORY, CONO:INV.LINE ELSE MAT CATG.REC=""
  ERRMSG = "" ; IN_PARAM = "" ; OUT_PARAM = "" ; MAT INV.CNV.REC = ""
  CALL GetInvUMCnv(ERRMSG,IN_PARAM,OUT_PARAM,MAT INV.CNV.REC,MAT INV.REC)
  BEGIN CASE
    CASE INV.PAP.TYPE="SHEET"
      OCNV="MD2"; ODVD=10
      ICR="MD0"
    CASE INV.PAP.TYPE="ROLL"
      OCNV="MD2"; ODVD=10
      ICR="MD2"
    CASE INV.PAP.TYPE="LROLL"
      OCNV="MD0"; ODVD=10
      ICR="MD0"
    CASE INV.PAP.TYPE="PCOAT"
      OCNV="MD0"; ODVD=10
      ICR="MD0"
    CASE 1
      OCNV="MD2"; ODVD=10
      ICR="MD2"
  END CASE

  COST.UOM = INV.UNIT<1,3>
  STOCK.UOM = INV.UNIT<1,2>

  IF COST.UOM="SHT" OR COST.UOM="FT" OR COST.UOM="PC" THEN
    OCNV="MD0"; ODVD=1000
  END ELSE
    OCNV="MD2"; ODVD=10
  END
  RECP.ID = CONO:ISTK.RECP
  MATREAD INVR.REC FROM INV_RECEIPTS,RECP.ID ELSE MAT INVR.REC=""
  ROND = 0.5
  IF ISTK.CUR.QTY < 0 THEN ROND = -0.5
  IF ISTK.CUR.DIAM > 0 THEN ISTK.CUR.STK.QTY = ""
  IF INV.PAP.TYPE NE "SHEET" THEN ISTK.CUR.STK.QTY = ""
  TEMP.CURR.QTY = (ISTK.CUR.QTY/ODVD)
  COST.QTY = OCONV(INT(TEMP.CURR.QTY+.5),OCNV)
  STOCK.QTY = OCONV(INT(((ISTK.CUR.QTY/ICR.DV1)*ICR.MT1)/ICR.DV2+ROND),ICR.CNV)
  MATREAD PO.REC FROM PO, CONO:ISTK.PO.NO ELSE MAT PO.REC = ''
  LOCATE ISTK.PROD IN PO.PROD.NUM<1> SETTING POS ELSE POS = ""
  IF POS THEN
    VENDOR = PO.VEND.NO
  END ELSE
    VENDOR = '' 
  END
VENDOR = INVR.VEND;*ADDED
  RECV.DATE = OCONV(INVR.ENT.DATE,'D4/')
  RECV.PRICE = OCONV(INVR.UNIT.COST,'MD4')

  SERIAL.MSG = ''
  MATREAD ISTK.REC FROM INV_SERIAL,CONO:SERIAL.NUM THEN
    SERIAL.MSG = 'ACTIVE'
  END ELSE
    MATREAD ISTK.REC FROM INV_SERIAL_DELETED,CONO:SERIAL.NUM THEN
      SERIAL.MSG = 'DELETED'
    END ELSE  
      ERRMSG = SERIAL.NUM:" is not a valid serial tracking ID." 
      GOTO SET.ERROR
    END
  END

*
*---- BUILD RBO RECORD
*
  STATUS = RBO.setProperty('','PRODUCT_DESC',INV.FULL.DESC)
  STATUS = RBO.setProperty('','VENDOR',VENDOR)
  STATUS = RBO.setProperty('','RECV_DATE',RECV.DATE)
  STATUS = RBO.setProperty('','RECV_PRICE',RECV.PRICE)
  STATUS = RBO.setProperty('','REC_PERIOD',INVR.PERIOD)
  STATUS = RBO.setProperty('','COST_UOM',COST.UOM)
  STATUS = RBO.setProperty('','STOCK_UOM',STOCK.UOM)
  STATUS = RBO.setProperty('','COST_QTY',COST.QTY)
  STATUS = RBO.setProperty('','STOCK_QTY',STOCK.QTY)
  STATUS = RBO.setProperty('','SERIAL_MSG',SERIAL.MSG)
  STATUS = RBO.setProperty('','ServerStatus',2)
  RETURN
*
SET.ERROR: 
*
  STATUS = RBO.setProperty('','ServerStatus',1)
  STATUS = RBO.setProperty('','ServerMessage',ERRMSG)
  RETURN
*  END


