SUBROUTINE PHYPAPE_READ_DATA
********************************************************************************
*   Program name :- PHYPAPE_READ_DATA
*   Created	   :- 11/02/2006
*   Programmer   :- Suhail Hussain S
********************************************************************************
$INCLUDE WWINSERT RBO.H
$INCLUDE ICS.CPYLIB PHYSICAL.INV
$INCLUDE ICS.CPYLIB INV.ADJ.CODES
$INCLUDE ICS.CPYLIB INVENTORY
$INCLUDE ICS.CPYLIB INV.WHSE
$INCLUDE ICS.CPYLIB INV.WHSE.LOC
$INCLUDE ICS.CPYLIB CATEGORY
$INCLUDE ICS.CPYLIB MILL_TO_SERIAL
$INCLUDE ICS.CPYLIB WAREHOUSE
$INCLUDE ICS.CPYLIB INV_SERIAL
$INCLUDE ICS.CPYLIB INV_RECEIPTS
$INCLUDE ICS.CPYLIB INV_AUDIT_HIST
$INCLUDE ICS.CPYLIB INV_AUDIT_BAL
$INCLUDE ICS.CPYLIB INV.STATS
$INCLUDE ICS.CPYLIB INV.JOB.STATS
$INCLUDE ICS.CPYLIB INV.CNV
$INCLUDE JCS.CPYLIB JOB
$INCLUDE JCS.CPYLIB JOB.STATS
$INCLUDE PMC.CPYLIB PO
$INCLUDE PMC.CPYLIB COMPANY
$INCLUDE PMC.CPYLIB DIVISION
$INCLUDE CPYLIB CHAR

   DEFFUN CALC_DIAM(COST.QTY,STK.QTY,MAT INV.REC)
   DEFFUN CALC_STK_QTY(COST.QTY,MAT INV.CNV.REC,ROND,LN)
   DEFFUN CALC_COST_QTY(STK.QTY,MAT INV.CNV.REC,ROND,LN)

   OPEN '','PHYSICAL.INV' TO PHYSICAL.INV ELSE ERRMSG = 'CANNOT OPEN PHYSICAL.INV FILE';GOTO 91000
   OPEN '','INV.ADJ.CODES' TO INV.ADJ.CODES ELSE ERRMSG = 'CANNOT OPEN INV.ADJ.CODES FILE';GOTO 91000
   OPEN '','INVENTORY' TO INVENTORY ELSE ERRMSG = 'CANNOT OPEN INVENTORY FILE'; GOTO 91000
   OPEN '','INV.WHSE' TO INV.WHSE ELSE ERRMSG = 'CANNOT OPEN INV.WHSE FILE'; GOTO 91000
   OPEN '','INV.WHSE.LOC' TO INV.WHSE.LOC ELSE ERRMSG = 'CANNOT OPEN INV.WHSE.LOC FILE'; GOTO 91000
   OPEN '','CATEGORY' TO CATEGORY ELSE ERRMSG = 'CANNOT OPEN CATEGORY FILE'; GOTO 91000
   OPEN '','MILL_TO_SERIAL' TO MILL_TO_SERIAL ELSE ERRMSG = 'CANNOT OPEN MILL_TO_SERIAL'; GOTO 91000
   OPEN '','WAREHOUSE' TO WAREHOUSE ELSE ERRMSG = 'CANNOT OPEN WAREHOUSE FILE'; GOTO 91000
   OPEN '','INV_SERIAL' TO INV_SERIAL ELSE ERRMSG = 'CANNOT OPEN INV_SERIAL FILE'; GOTO 91000
   OPEN '','INV_RECEIPTS' TO INV_RECEIPTS ELSE ERRMSG = 'CANNOT OPEN INV_RECEIPTS FILE'; GOTO 91000
   OPEN '','INV_AUDIT_HIST' TO INV_AUDIT_HIST ELSE ERRMSG = 'CANNOT OPEN INV_AUDIT_HIST FILE'; GOTO 91000
   OPEN '','INV_AUDIT_BAL' TO INV_AUDIT_BAL ELSE ERRMSG = 'CANNOT OPEN INV_AUDIT_BAL FILE'; GOTO 91000
   OPEN '','INV.STATS' TO INV.STATS ELSE ERRMSG = 'CANNOT OPEN INV.STATS FILE'; GOTO 91000
   OPEN '','INV.JOB.STATS' TO INV.JOB.STATS ELSE ERRMSG = 'CANNOT OPEN INV.JOB.STATS FILE'; GOTO 91000
*   OPEN '','INV.CNV' TO INV.CNV ELSE ERRMSG = 'CANNOT OPEN INV.CNV FILE'; GOTO 91000
   OPEN '','JOB' TO JOB ELSE ERRMSG = 'CANNOT OPEN JOB FILE'; GOTO 91000
   OPEN '','JOB.STATS' TO JOB.STATS ELSE ERRMSG = 'CANNOT OPEN JOB.STATS FILE';GOTO 91000
   OPEN '','PO' TO PO ELSE ERRMSG = 'CANNOT OPEN PO FILE'; GOTO 91000
   OPEN '','COMPANY' TO COMPANY ELSE ERRMSG = 'CANNOT OPEN COMPANY FILE'; GOTO 91000
   OPEN '','DIVISION' TO DIVISION ELSE ERRMSG = 'CANNOT OPEN DIVISION FILE'; GOTO 91000

   STATUS = RBO.getProperty('','SERIAL_NUM',SERIAL.NUM)
   STATUS = RBO.getProperty('','PMCProperty',PMCProperty)

   MAT PHS.INV.REC='';MAT INV.CNV.REC='';MAT CATG.REC=''
   CONO    = PMCProperty<1,4>
   OPER.ID = PMCProperty<1,3>
   MATREAD COMP.REC FROM COMPANY, CONO ELSE ERRMSG = 'CANNOT READ COMPANY RECORD : ' : CONO; GOTO 91000
   ERROR.FLAG=0
   EQU INV.UOM.STK TO INV.UNIT<1,2>
   EQU INV.UOM.CST TO INV.UNIT<1,3>
   DIFF.DIAM = ''; DIFF.SHEET=''; DIFF.WGHT=''; DIFF.QTY=''

GET.SERIAL.DATA: 
   S.ID = CONO:SERIAL.NUM
   PROD_LINE = ""
   PROD_TYPE = ""
   CATG_TYPE = ""
   ODVD = 10
   MATREAD ISTK.REC FROM INV_SERIAL, S.ID ELSE
      ERRMSG = SERIAL.NUM:" is not a valid serial tracking ID."
      GOTO 91000
   END
   MATREAD INV.REC FROM INVENTORY, CONO:ISTK.PROD ELSE MAT INV.REC = ""
   MATREAD CATG.REC FROM CATEGORY, CONO:INV.LINE ELSE MAT CATG.REC = ""
   PROD_NUM = ISTK.PROD
   PROD_LINE = INV.LINE
   PROD_TYPE = INV.PAP.TYPE
   CATG_TYPE = CATG.TYPE
   WHSE_CODE = ISTK.WHSE
   LOC_CODE = ISTK.LOC
   BEGIN CASE
      CASE INV.PAP.TYPE="SHEET"
         OCNV="MD2";ICR="MD0"
      CASE INV.PAP.TYPE="ROLL"
         OCNV="MD2"; ICR="MD2"
      CASE INV.PAP.TYPE="LROLL"
         OCNV="MD0";ICR="MD0"
      CASE INV.PAP.TYPE="PCOAT"
         OCNV="MD0"; ICR="MD0"
      CASE 1
         OCNV="MD2"; ICR="MD2"
   END CASE
   IF INV.UOM.CST="SHT" OR INV.UOM.CST="FT" OR INV.UOM.CST="PC" THEN
      OCNV="MD0"; ODVD=1000
   END ELSE
      OCNV="MD2"; ODVD=10
   END
   MAT IWLO.REC = ""
   MATREAD IWLO.REC FROM INV.WHSE.LOC,CONO: PROD_NUM:'!':WHSE_CODE:'!':LOC_CODE ELSE
      MAT IWLO.REC = ""
      IWLO.LOC.ON.HAND=0
   END
   MATREAD IWH.REC FROM INV.WHSE,CONO:PROD_NUM:'!':WHSE_CODE ELSE
      MAT IWH.REC = ""
   END
   ERR = 0
   IF CATG.MAJ.LINE='FNGD' AND CO.OPS = 'Y' THEN
      ERRMSG="YOU MUST USE THE FINISHED GOODS ADJUSTMENT FUNCTION"
      GOTO 91000
   END ELSE
      IF CATG.TRK.LVL='S' THEN
         BEGIN CASE
            CASE CATG.TYPE="L"
               U.M="LBS"
            CASE CATG.TYPE="S"
               U.M="SHT"
            CASE CATG.TYPE="RL"
               U.M="PC"
            CASE CATG.TYPE="PC"
               U.M="FT"
            CASE 1
               U.M=INV.UNIT<1,2>
         END CASE
         IF NOT(ERR) THEN
            STATUS = RBO.setProperty('','ADJ_LBS',U.M)
            STATUS = RBO.setProperty('','DIFF_LBS',U.M)
         END
      END ELSE
         ERRMSG='THIS IS NOT A SERIALY TRACKED PRODUCT LINE.'
         GOTO 91000
      END
      MATREAD PO.REC FROM PO, CONO:ISTK.PO.NO ELSE MAT PO.REC = ""
      LOCATE ISTK.PROD IN PO.PROD.NUM<1> SETTING POS ELSE POS = ""
      IF POS THEN
         VENDOR = PO.VEND.NO
      END ELSE
         VENDOR = ""
      END
      RECP.ID = CONO:ISTK.RECP
      MATREAD INVR.REC FROM INV_RECEIPTS,RECP.ID ELSE MAT INVR.REC=""
      ROND = 0.5
      IF ISTK.CUR.QTY < 0 THEN ROND = -0.5

*RETURN
DISPLAY.SERIAL.DATA: 
      FND = 0
      MAT PHS.INV.REC = ''
      P.ID = CONO:CATG_TYPE:"!":PROD_TYPE:"!":ISTK.WHSE:"!":ISTK.LOC
      MATREAD PHS.INV.REC FROM PHYSICAL.INV, P.ID ELSE
         MAT PHS.INV.REC=''
      END
      IF PHS.INV.PROD = '' THEN
         LN1 = 1
         LN2 = 1
         GOSUB SET.CONV.VALUES
         GOSUB SET.NEW.REC.DATA
         GOSUB SERIAL.LINES.ENTRY
         PHS.INV.PROD<1,LN1> = PROD_NUM
         PHS.R.S.ID<1,LN1,LN2> = SERIAL.NUM
         ERROR.FLAG = 1
         FND2 = 0
      END ELSE
         LINES.1=DCOUNT(PHS.INV.PROD,VM)
         FOR D=1 TO LINES.1
            IF PHS.INV.PROD<1,D> = PROD_NUM THEN
               LN1 = D
               CNT=DCOUNT(PHS.R.S.ID<1,D>,SVM)
               FND2 = 0
               FOR DD=1 TO CNT
                  IF PHS.R.S.ID<1,D,DD> = SERIAL.NUM THEN
                     LN2 = DD
                     FND2 = 1
                     DIFF.DIAM<1,D,DD>=PHS.NEW.DIAM<1,D,DD> - PHS.CUR.DIAM<1,D,DD>
                     DIFF.WGHT<1,D,DD>=PHS.NEW.WGHT<1,D,DD> - PHS.CUR.WGHT<1,D,DD>
                     DIFF.SHEET<1,D,DD>=PHS.NEW.SHEET<1,D,DD> - PHS.CUR.SHEET<1,D,DD>
                  END
               NEXT DD
               FND = 1
            END
         NEXT D
         IF FND = 0 THEN
            FND2 = 0
            LN1 = LINES.1 + 1
            LN2 = 1
         END
         IF FND = 1 AND FND2 = 0 THEN
            CNT=DCOUNT(PHS.R.S.ID<1,LN1>,SVM); *T27919
            LN2 = CNT + 1
         END
         ERROR.FLAG = 0
         GOSUB SET.CONV.VALUES
         ON.HAND = IWLO.LOC.ON.HAND
         PHS.R.S.ID<1,LN1,LN2> = SERIAL.NUM
         GOSUB SET.NEW.REC.DATA
      END
      DIFF.DIAM<1,LN1,LN2> = PHS.NEW.DIAM<1,LN1,LN2> - PHS.CUR.DIAM<1,LN1,LN2>
      DIFF.WGHT<1,LN1,LN2> = PHS.NEW.WGHT<1,LN1,LN2> - PHS.CUR.WGHT<1,LN1,LN2>
      STATUS = RBO.setProperty('','ADJ_CODE',PHS.ADJ.CODE<1,LN1,LN2>)
      OLDADJCODE = PHS.ADJ.CODE<1,LN1,LN2>
      GOSUB SERIAL.LINES.ENTRY
   END
   
   TEMP.CURR.QTY = (ISTK.CUR.QTY/ODVD)
   WGHT=ISTK.CUR.QTY
   ISTK.CUR.STK.QTY=CALC_STK_QTY(ISTK.CUR.QTY,MAT INV.CNV.REC,ROND,LN1)
   SWAP '"' WITH "'" IN INV.FULL.DESC
   
   STATUS = RBO.setProperty('','SERIAL_NUM',SERIAL.NUM)
   STATUS = RBO.setProperty('','ISTK_PROD',ISTK.PROD)
   STATUS = RBO.setProperty('','INV_FULL_DESC',INV.FULL.DESC)
   STATUS = RBO.setProperty('','ISTK_MILL_ID',ISTK.MILL.ID)
   STATUS = RBO.setProperty('','ISTK_PO_NO',ISTK.PO.NO)
   STATUS = RBO.setProperty('','ISTK_WHSE',ISTK.WHSE)
   STATUS = RBO.setProperty('','VENDOR',VENDOR)
   STATUS = RBO.setProperty('','ISTK_LOC',ISTK.LOC)
   STATUS = RBO.setProperty('','ISTK_RECP',ISTK.RECP)
   STATUS = RBO.setProperty('','COST_QTY',OCONV(INT(TEMP.CURR.QTY+.5),OCNV))
   STATUS = RBO.setProperty('','RECV_DATE',OCONV(INVR.ENT.DATE,'D2/'))
   STATUS = RBO.setProperty('','ISTK_CUR_DIAM',OCONV(ISTK.CUR.DIAM,'MD2'))
   STATUS = RBO.setProperty('','RECV_PERIOD',INVR.PERIOD)
   STATUS = RBO.setProperty('','STOCK_QTY',OCONV(INT(((ISTK.CUR.QTY/ICR.DV1<LN1>)*ICR.MT1<LN1>)/ICR.DV2<LN1>+ROND),ICR.CNV<LN1>))
   STATUS = RBO.setProperty('','RECV_PRICE',OCONV(INVR.UNIT.COST,'MD4'))
   STATUS = RBO.setProperty('','PROD_LINE',PROD_LINE)
   STATUS = RBO.setProperty('','PROD_TYPE',PROD_TYPE)
   STATUS = RBO.setProperty('','INV_UOM_CST',INV.UNIT<1,3>)
   STATUS = RBO.setProperty('','INV_UOM_STK',INV.UNIT<1,2>)
   IF FND2 THEN 
      GOSUB DISPLAY.DATA
      STATUS = RBO.setProperty('','ADJ',TRIM(RET<1,1>))
      STATUS = RBO.setProperty('','DIFF',TRIM(RET<1,2>))
      STATUS = RBO.setProperty('','ADJ_DIAM',TRIM(RET<1,3>))
   END
   FOCUS_ELEMENT = 0
   IF ERROR.FLAG = 1 OR FND = 0 OR FND2 = 0 THEN FOCUS_ELEMENT = 1
   STATUS = RBO.setProperty('','FOCUS_ELEMENT',FOCUS_ELEMENT)

** vv PHYSICAL.INV properties
   STATUS = RBO.setProperty('','ID',P.ID)
   STATUS = RBO.setProperty('','PHS_INV_PROD',PHS.INV.PROD)
   STATUS = RBO.setProperty('','PHS_INV_DESC',PHS.INV.DESC)
   STATUS = RBO.setProperty('','PHS_R_S_ID',PHS.R.S.ID)
   STATUS = RBO.setProperty('','PHS_CUR_QTY',PHS.CUR.QTY)
   STATUS = RBO.setProperty('','PHS_NEW_QTY',PHS.NEW.QTY)
   STATUS = RBO.setProperty('','PHS_CUR_WGHT',PHS.CUR.WGHT)
   STATUS = RBO.setProperty('','PHS_NEW_WGHT',PHS.NEW.WGHT)
   STATUS = RBO.setProperty('','PHS_CUR_SHEET',PHS.CUR.SHEET)
   STATUS = RBO.setProperty('','PHS_NEW_SHEET',PHS.NEW.SHEET)
   STATUS = RBO.setProperty('','PHS_CUR_DIAM',PHS.CUR.DIAM)
   STATUS = RBO.setProperty('','PHS_NEW_DIAM',PHS.NEW.DIAM)
   STATUS = RBO.setProperty('','PHS_M_WGHT',PHS.M.WGHT)
   STATUS = RBO.setProperty('','PHS_NO_POST',PHS.NO.POST)
   STATUS = RBO.setProperty('','PHS_ADJ_CODE',PHS.ADJ.CODE)
   STATUS = RBO.setProperty('','PHS_ADJ_TYPE',PHS.ADJ.TYPE)
   STATUS = RBO.setProperty('','PHS_OPER_ID',PHS.OPER.ID)
   STATUS = RBO.setProperty('','PHS_DATE_ENT',PHS.DATE.ENT)
   STATUS = RBO.setProperty('','PHS_UN_COST',PHS.UN.COST)
   STATUS = RBO.setProperty('','PHS_UN_MAG ',PHS.UN.MAG)
** ^^
   STATUS = RBO.setProperty('','LN_VALS',LN1:VM:LN2)
   STATUS = RBO.setProperty('','DIFF_DIAM',DIFF.DIAM)
   STATUS = RBO.setProperty('','DIFF_SHEET',DIFF.SHEET)
   STATUS = RBO.setProperty('','DIFF_WGHT',DIFF.WGHT)
   STATUS = RBO.setProperty('','DIF_QTY',DIFF.QTY)
RETURN

SET.CONV.VALUES: 
   BEGIN CASE
      CASE INV.UNIT<1,2>='SHT' AND INV.UNIT<1,3>='LBS'
         ICR.CNV<LN1>="MD0";ICR.SCAL<LN1>=0;ICR.TYPE<LN1>=3
         ICR.DV1<LN1>=INV.M.WT;ICR.MT1<LN1>=1;ICR.DV2<LN1>=1
      CASE INV.UNIT<1,2>='PC' AND INV.UNIT<1,3>='MSI'
         ICR.CNV<LN1>="MD0";ICR.SCAL<LN1>=0;ICR.TYPE<LN1>=3
         ICR.DV1<LN1>=INV.PAP.WIDTH/100;ICR.MT1<LN1>=10;ICR.DV2<LN1>=1
      CASE INV.UNIT<1,2>='FT' AND INV.UNIT<1,3>='MSI'
         ICR.CNV<LN1>="MD0";ICR.SCAL<LN1>=0;ICR.TYPE<LN1>=3
         ICR.DV1<LN1>=INV.PAP.WIDTH/100;ICR.MT1<LN1>=100;ICR.DV2<LN1>=12
      CASE 1
         ICR.CNV<LN1>="MD2";ICR.SCAL<LN1>=2;ICR.TYPE<LN1>=4
         ICR.DV1<LN1>=10;ICR.MT1<LN1>=1;ICR.DV2<LN1>=1
   END CASE
RETURN

SET.NEW.REC.DATA: 
   IF FND = 0 THEN
      PHS.INV.PROD<1,LN1> = ISTK.PROD
      PHS.CUR.QTY<1,LN1> = IWLO.LOC.ON.HAND
      PHS.NEW.QTY<1,LN1> = PHS.CUR.QTY<1,LN1>
      DIFF.QTY<1,LN1> = PHS.NEW.QTY<1,LN1> - PHS.CUR.QTY<1,LN1>
      PHS.INV.DESC<1,LN1>=INV.DESC
      PHS.M.WGHT<1,LN1>=INV.M.WT
   END
   PHS.UN.COST<1,LN1,LN2> = ISTK.UNIT.COST
   PHS.DATE.ENT<1,LN1,LN2> = DATE()
   PHS.OPER.ID<1,LN1,LN2> = OPER.ID
RETURN

SERIAL.LINES.ENTRY: 
   PHS.CUR.WGHT<1,LN1,LN2> = ISTK.CUR.QTY
   PHS.INV.PROD<1,LN1> = ISTK.PROD
   WGHT = ISTK.CUR.QTY
   DIAM = ISTK.CUR.DIAM
   SHTS = ISTK.CUR.STK.QTY ;*T27928
   GOSUB GET.DIAM
   PHS.CUR.DIAM<1,LN1,LN2> = DIAM
   STATUS = RBO.setProperty('','ISTK_CUR_DIAM',DIAM)
   PHS.CUR.SHEET<1,LN1,LN2> = ISTK.CUR.STK.QTY
   CUR_WGHT = OCONV(INT(((PHS.CUR.WGHT<1,LN1,LN2>/ICR.DV1<LN1>)*ICR.MT1<LN1>)/ICR.DV2<LN1>+.5), ICR.CNV<LN1>)
   DIAM_VAL = OCONV(PHS.CUR.DIAM<1,LN1,LN2>,"MD2")
RETURN

GET.DIAM: 
   IF INV.PAP.TYPE='ROLL' OR INV.PAP.TYPE='LROLL' OR INV.PAP.TYPE='PC' THEN
      DIAM = CALC_DIAM(WGHT,SHTS+0,MAT INV.REC)
   END ELSE
      DIAM = 0
   END
RETURN

DISPLAY.DATA:
   RET = ""
   IF PHS.NEW.WGHT<1,LN1,LN2> < 0 THEN ROND="-.5" ELSE ROND=".5"
   P_VALUE = OCONV(INT(((PHS.NEW.WGHT<1,LN1,LN2>/ICR.DV1<LN1>)*ICR.MT1<LN1>)/ICR.DV2<LN1>+ROND), ICR.CNV<LN1>)
   P_VALUE := STR(' ',9-LEN(P_VALUE))
   RET<1,1> = P_VALUE
   IF DIFF.WGHT<1,LN1,LN2> < 0 THEN ROND="-.5" ELSE ROND=".5"   
   IF DIFF.WGHT<1,LN1,LN2> < 0 THEN
     TMP = DIFF.WGHT<1,LN1,LN2> * (-1)
   END ELSE
     TMP = DIFF.WGHT<1,LN1,LN2>
   END
   ROND='.5'
   P_VALUE = OCONV(INT(((TMP/ICR.DV1<LN1>)*ICR.MT1<LN1>)/ICR.DV2<LN1>+ROND), ICR.CNV<LN1>)
   P_VALUE := STR(' ',9-LEN(P_VALUE)) ;*T27928
   DEFDIFF = TRIM(P_VALUE)
   RET<1,2> = P_VALUE
   IF U.M = "LBS" OR U.M = "PC" THEN
      P_X = 59; P_Y=18;P_OPT=''
      DIFF_VAL = OCONV(PHS.NEW.DIAM<1,LN1,LN2>,"MD2")'R#5'
      RET<1,3> = DIFF_VAL
   END
RETURN

91000:
   STATUS = RBO.setProperty('','ServerStatus',1)
   STATUS = RBO.setProperty('','ServerMessage',ERRMSG)
RETURN
