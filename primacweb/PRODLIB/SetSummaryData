SUBROUTINE SetSummaryData(ERRMSG,IN_PARAM,OUT_PARAM,MAT FILE.VARS,MAT JES.FILE.VARS,MAT EST.REC)
********************************************************************************
*   Program name :- SetSummaryData

*   Created:- 6/3/2003
*
*   Author:- Irfan M Saleem		
*------------------------------------------------------------------------------*
*
*---- FILE COPY STATEMENTS
*
   $INCLUDE WWINSERT RBO.H
   $INCLUDE JES.CPYLIB JES.FILE.VARS
   $INCLUDE CPYLIB FILE.VARS
   $INCLUDE JES.CPYLIB ESTIMATE
   $INCLUDE JES.CPYLIB ESTIMATE.DEPT
   $INCLUDE JES.CPYLIB EST.COST.TYPE.SUM
   $INCLUDE JES.CPYLIB ESTIMATE.PAPER.GROUP
   $INCLUDE JES.CPYLIB EQUIPMENT
   $INCLUDE CPYLIB CHAR
*
   DIM SAVE.CSUM.REC(40)
   EQU SAVE.LB.HRS           TO SAVE.CSUM.REC(2)    ;* Labor hours
   EQU SAVE.LB.DCOST         TO SAVE.CSUM.REC(3)    ;* Labor direct cost
   EQU SAVE.LB.COST          TO SAVE.CSUM.REC(4)    ;* Labor total cost
   EQU SAVE.LB.SALE          TO SAVE.CSUM.REC(5)    ;* Labor sale
   EQU SAVE.MT.DCOST         TO SAVE.CSUM.REC(6)    ;* Material direct cost
   EQU SAVE.MT.COST          TO SAVE.CSUM.REC(7)    ;* Material total cost
   EQU SAVE.MT.SALE          TO SAVE.CSUM.REC(8)    ;* Material sale
   EQU SAVE.OS.DCOST         TO SAVE.CSUM.REC(9)    ;* O/P direct cost
   EQU SAVE.OS.COST          TO SAVE.CSUM.REC(10)   ;* O/P total cost
   EQU SAVE.OS.SALE          TO SAVE.CSUM.REC(11)   ;* O/P sale
   EQU SAVE.SP.DCOST         TO SAVE.CSUM.REC(12)   ;* Shipping direct cost
   EQU SAVE.SP.COST          TO SAVE.CSUM.REC(13)   ;* Shipping total cost
   EQU SAVE.SP.SALE          TO SAVE.CSUM.REC(14)   ;* Shipping sale
   EQU SAVE.MS.DCOST         TO SAVE.CSUM.REC(15)   ;* Misc direct cost
   EQU SAVE.MS.COST          TO SAVE.CSUM.REC(16)   ;* Misc total cost
   EQU SAVE.MS.SALE          TO SAVE.CSUM.REC(17)   ;* Misc sale
   EQU SAVE.TOT.DCOST        TO SAVE.CSUM.REC(18)   ;* Total direct cost
   EQU SAVE.TOT.COST         TO SAVE.CSUM.REC(19)   ;* Total cost
   EQU SAVE.TOT.SALE         TO SAVE.CSUM.REC(20)   ;* Total sale
   EQU SAVE.MT.DCOST.DET     TO SAVE.CSUM.REC(21)   ;* (MV1) Material direct cost detail
*                                                   ;* 1 = paper
*                                                   ;* 2 = ink
*                                                   ;* 3 = film
*                                                   ;* 4 = plates
*                                                   ;* 5 = other
   EQU SAVE.MT.COST.DET      TO SAVE.CSUM.REC(22)   ;* (MV1) Material total cost detail
   EQU SAVE.MT.SALE.DET      TO SAVE.CSUM.REC(23)   ;* (MV1) Material sale detail
*
   OPEN '','EQUIPMENT' TO EQUIPMENT ELSE ERRMSG = 'CANNOT LOCATE EQUIPMENT FILE'; GOTO 90000
   OPEN '','ESTIMATE.DEPT' TO ESTIMATE.DEPT ELSE ERRMSG = 'CANNOT LOCATE ESTIMATE.DEPT FILE'; GOTO 90000
   OPEN '','EQUIPMENT' TO EQUIPMENT ELSE ERRMSG = 'CANNOT LOCATE EQUIPMENT FILE'; GOTO 90000
   OPEN '','ESTIMATE.PAPER.GROUP' TO ESTIMATE.PAPER.GROUP ELSE ERRMSG = 'CANNOT LOCATE ESTIMATE.PAPER.GROUP FILE'; GOTO 90000
   OPEN '','CONTROL' TO CONTROL ELSE ERRMSG = 'CANNOT LOCATE CONTROL FILE'; GOTO 90000
*---- INITIALIZATION
*
   CONO = IN_PARAM<1>
   EST.ID = IN_PARAM<2>
   DSEL = IN_PARAM<3>
   CSEL = IN_PARAM<4>
   QSEL = IN_PARAM<5>
   ESTIMATE.ID = CONO:EST.ID
   MAT SAVE.CSUM.REC = ""
   EstSummStr=""
   TOTAL.SALE = ''
   EST.KEY = EST.ID  
*
*---- PROCESSING
*
*T27716 v
   READ EST.PP FROM CONTROL,CONO:'EST.RES.PRE.PRESS' ELSE EST.PP=''
*T27716 ^
   QCNT = DCOUNT(EST.QTY,VM)
   FOR QPTR = 1 TO QCNT
      QSEL = EST.QTY<1,QPTR>
      MAT CSUM.REC = ""
      DCNT = DCOUNT(EST.DEPT.COMP,VM)
      FOR DP = 1 TO DCNT
         ESTD.ID = EST.DEPT.COMP<1,DP>
	  IF DSEL # "ALL" AND DSEL # EST.DEPT<1,FIELD(ESTD.ID,"!",1)> THEN GOTO 190
         IF CSEL # "ALL" AND CSEL # FIELD(ESTD.ID,"!",2) THEN GOTO 190
         IF QSEL # FIELD(ESTD.ID,"!",3) THEN GOTO 190
         MATREAD ESTD.REC FROM ESTIMATE.DEPT, CONO:EST.ID:"!":ESTD.ID ELSE GOTO 190
         TCNT = DCOUNT(ESTD.TYPE,VM)
         FOR TP = 1 TO TCNT
            TYPE = ESTD.TYPE<1,TP>[1,1]
            IF TYPE = "G" THEN GOTO 180
            TSUB = ESTD.TYPE<1,TP>[2,1]
            HRS = ESTD.HRS<1,TP>
            DCOST = ESTD.DCOST<1,TP>
            COST = ESTD.COST<1,TP>
*T27716 v
*           SALE = ESTD.TSALE<1,TP>
            IF EST.PP.INCLUDE#'Y' THEN
               LOCATE ESTD.DEPT IN EST.PP<1>,1 SETTING DPOS THEN
                  SALE = 0
               END ELSE
                  SALE = ESTD.TSALE<1,TP>
               END
            END ELSE
               SALE = ESTD.TSALE<1,TP>
            END
*T27716 ^
            BEGIN CASE
               CASE TYPE = "L"
                  CSUM.LB.HRS = CSUM.LB.HRS + HRS
                  CSUM.LB.DCOST = CSUM.LB.DCOST + DCOST
                  CSUM.LB.COST = CSUM.LB.COST + COST
                  CSUM.LB.SALE = CSUM.LB.SALE + SALE
               CASE TYPE = "M" OR TYPE = "I"
                  CSUM.MT.DCOST = CSUM.MT.DCOST + DCOST
                  CSUM.MT.COST = CSUM.MT.COST + COST
                  CSUM.MT.SALE = CSUM.MT.SALE + SALE
                  BEGIN CASE
                     CASE TSUB = "S" OR TSUB = "R" OR TSUB = "L"
                        DET = 1
                     CASE TSUB = "I"
                        DET = 2
                     CASE TSUB = "F"
                        DET = 3
                     CASE TSUB = "P"
                        DET = 4
                     CASE TSUB = "C"
                        DET = 5
                     CASE 1
                        DET = 6
                  END CASE
                  CSUM.MT.DCOST.DET<1,DET> = CSUM.MT.DCOST.DET<1,DET> + DCOST
                  CSUM.MT.COST.DET<1,DET> = CSUM.MT.COST.DET<1,DET> + COST
                  CSUM.MT.SALE.DET<1,DET> = CSUM.MT.SALE.DET<1,DET> + SALE
               CASE TYPE = "P"
                  CSUM.OS.DCOST = CSUM.OS.DCOST + DCOST
                  CSUM.OS.COST = CSUM.OS.COST + COST
                  CSUM.OS.SALE = CSUM.OS.SALE + SALE
               CASE TYPE = "S"
                  CSUM.SP.DCOST = CSUM.SP.DCOST + DCOST
                  CSUM.SP.COST = CSUM.SP.COST + COST
                  CSUM.SP.SALE = CSUM.SP.SALE + SALE
               CASE TYPE = "O"
                  CSUM.MS.DCOST = CSUM.MS.DCOST + DCOST
                  CSUM.MS.COST = CSUM.MS.COST + COST
                  CSUM.MS.SALE = CSUM.MS.SALE + SALE
            END CASE
            CSUM.TOT.DCOST = CSUM.TOT.DCOST + DCOST
            CSUM.TOT.COST = CSUM.TOT.COST + COST
            CSUM.TOT.SALE = CSUM.TOT.SALE + SALE
180      NEXT TP
190   NEXT DP
      SAVE.LB.SALE<1,QPTR> = CSUM.LB.SALE
      SAVE.MT.SALE<1,QPTR> = CSUM.MT.SALE
      SAVE.OS.SALE<1,QPTR> = CSUM.OS.SALE
      SAVE.SP.SALE<1,QPTR> = CSUM.SP.SALE
      SAVE.MS.SALE<1,QPTR> = CSUM.MS.SALE
      *IF(CSUM.TOT.SALE = '') THEN	
	*  TOTAL.SALE<1,QPTR> = CSUM.TOT.SALE :VM
      * END ELSE	
     	 TOTAL.SALE<1,QPTR> = CSUM.TOT.SALE
      *END

200 NEXT QPTR

********************* BY RAZI  CHANGES DONE TO GET PROPER Estimate Summary Screen VALUES *********************************
IF EST.FINAL.PRICE = '' THEN
*       GOSUB 25500
	EstSummStr=SAVE.LB.SALE :SVM: SAVE.MT.SALE :SVM: SAVE.OS.SALE :SVM: SAVE.SP.SALE :SVM: SAVE.MS.SALE :SVM: TOTAL.SALE :SVM: EST.OM.PCT :SVM: EST.FINAL.PRICE :SVM: EST.OM.PRICE.M :SVM: EST.PRT.PRICE.THOU :SVM: EST.PRT.PRICE.UOM  :SVM: EST.PRICE.THOU
	STATUS = RBO.setProperty('','EstSummStr',EstSummStr)
END ELSE
*	GOSUB 26000
	EstSummStr=SAVE.LB.SALE :SVM: SAVE.MT.SALE :SVM: SAVE.OS.SALE :SVM: SAVE.SP.SALE :SVM: SAVE.MS.SALE :SVM: TOTAL.SALE :SVM: EST.OM.PCT :SVM: EST.FINAL.PRICE :SVM: EST.OM.PRICE.M :SVM: EST.PRT.PRICE.THOU :SVM: EST.PRT.PRICE.UOM  :SVM: EST.PRICE.THOU 
	STATUS = RBO.setProperty('','EstSummStr',EstSummStr)
END

25500 *
   CALL EST_QTY_GEN(CONO,"A",EST.KEY,"ALL")
   EST.OM.PCT = '000000'
   EST.FINAL.PRICE = ''
   EST.PRICE.THOU = ''
   EST.COST.THOU = ''
   EST.PRT.PRICE.THOU = ''
   EST.OM.PRICE.M = ''
   EST.PRT.PRICE.UOM = ''
   EST.PRICE.UOM = ''
   TOTAL.TCOST = ''
   TOTAL.VCOST = ''
   TOTAL.FCOST = ''
   TOTAL.TSALE = ''
   TOTAL.VSALE = ''
   TOTAL.FSALE = ''
   QC = DCOUNT(EST.QTY,VM)
   DC = DCOUNT(EST.DEPT.COMP,VM)
   FOR DP = 1 TO DC
      ESTD.ID=EST.DEPT.COMP<1,DP>
      EQTY=FIELD(ESTD.ID,"!",3)
      LOCATE EQTY IN EST.QTY<1>,1 SETTING EP THEN
         TOTAL.TCOST<1,EP>=TOTAL.TCOST<1,EP>+EST.DEPT.COMP.COST<1,DP>
         TOTAL.VCOST<1,EP>=TOTAL.VCOST<1,EP>+EST.DEPT.COMP.VCOST<1,DP>
         TOTAL.FCOST<1,EP>=TOTAL.TCOST<1,EP>-TOTAL.VCOST<1,EP>
         TOTAL.TSALE<1,EP>=TOTAL.TSALE<1,EP>+EST.DEPT.COMP.TSALE<1,DP>
         TOTAL.VSALE<1,EP>=TOTAL.VSALE<1,EP>+EST.DEPT.COMP.VSALE<1,DP>
         TOTAL.FSALE<1,EP>=TOTAL.TSALE<1,EP>-TOTAL.VSALE<1,EP>
      END
   NEXT DP
   EST.PRT.PRICE.THOU = 'Y'
   EST.PRT.PRICE.UOM = 'M'
   ECNT=COUNT(EST.QTY,VM)+1
   FOR EP = 1 TO ECNT
      EST.OM.PCT<1,EP> = '000000'
      EST.FINAL.PRICE<1,EP> = TOTAL.TSALE<1,EP>
      EST.PRICE.THOU<1,EP>=INT(TOTAL.VSALE<1,EP>/(EST.QTY<1,EP>/1000)+0.5)
      EST.COST.THOU<1,EP>=INT(TOTAL.VCOST<1,EP>/(EST.QTY<1,EP>/1000)+0.5)
      EST.OM.PRICE.M<1,EP> = INT(EST.FINAL.PRICE<1,EP> / EST.QTY<1,EP> * 1000 + .5)
      EST.PRICE.UOM<1,EP> = EST.OM.PRICE.M<1,EP>
   NEXT EP
RETURN

*---- CALCULATE OTHER MARKUP PERCENT BASED ON FINAL PRICE
26000 *
   CALL EST_QTY_GEN(CONO,"A",EST.KEY,"ALL")
   EST.OM.PCT = ''
   EST.PRICE.THOU = ''
   EST.COST.THOU = ''
   EST.OM.PRICE.M = ''
   TOTAL.TCOST = ''
   TOTAL.VCOST = ''
   TOTAL.FCOST = ''
   TOTAL.TSALE = ''
   TOTAL.VSALE = ''
   TOTAL.FSALE = ''
   QC = DCOUNT(EST.QTY,VM)
   DC=COUNT(EST.DEPT.COMP,VM)+(EST.DEPT.COMP#"")
*      DC = DCOUNT(EST.DEPT.COMP,VM)
   FOR DP = 1 TO DC
      ESTD.ID=EST.DEPT.COMP<1,DP>
      EQTY=FIELD(ESTD.ID,"!",3)
      LOCATE EQTY IN EST.QTY<1>,1 SETTING EP THEN
         TOTAL.TCOST<1,EP>=TOTAL.TCOST<1,EP>+EST.DEPT.COMP.COST<1,DP>
         TOTAL.VCOST<1,EP>=TOTAL.VCOST<1,EP>+EST.DEPT.COMP.VCOST<1,DP>
         TOTAL.FCOST<1,EP>=TOTAL.TCOST<1,EP>-TOTAL.VCOST<1,EP>
         TOTAL.TSALE<1,EP>=TOTAL.TSALE<1,EP>+EST.DEPT.COMP.TSALE<1,DP>
         TOTAL.VSALE<1,EP>=TOTAL.VSALE<1,EP>+EST.DEPT.COMP.VSALE<1,DP>
         TOTAL.FSALE<1,EP>=TOTAL.TSALE<1,EP>-TOTAL.VSALE<1,EP>
      END
   NEXT DP
   ECNT=COUNT(EST.QTY,VM)+1
   FOR EP = 1 TO ECNT
   * Need to setup final price if new qty added.
      IF (EST.FINAL.PRICE<1,EP> + 0 = 0) OR (EST.OM.ENTERED # 'Y') THEN
         EST.OM.PCT<1,EP> = '000000'
         EST.FINAL.PRICE<1,EP> = TOTAL.TSALE<1,EP>
         EST.PRICE.THOU<1,EP>=INT(TOTAL.VSALE<1,EP>/(EST.QTY<1,EP>/1000)+0.5)
         EST.COST.THOU<1,EP>=INT(TOTAL.VCOST<1,EP>/(EST.QTY<1,EP>/1000)+0.5)
         EST.OM.PRICE.M<1,EP> = INT(EST.FINAL.PRICE<1,EP> / EST.QTY<1,EP> * 1000 + .5)
         EST.PRICE.UOM<1,EP> = ''
         GOSUB 26500
      END ELSE
         IF TOTAL.TSALE<1,EP> = "" OR TOTAL.TSALE<1,EP> = 0 THEN
            TOTTSALE = 1   ;* FIX DIVDE BY 0 ERRORS
         END ELSE
            TOTTSALE = TOTAL.TSALE<1,EP>
         END
         EST.OM.PCT<1,EP> = INT(((EST.FINAL.PRICE<1,EP> - TOTAL.TSALE<1,EP>) / TOTTSALE) * 1000000 + .5)
         PRICE.THOU.MKUP = TOTAL.VSALE<1,EP> + (INT(OCONV(TOTAL.VSALE<1,EP>,'MD2') * OCONV(EST.OM.PCT<1,EP>,'MD4') + .005 / 100))
         EST.PRICE.THOU<1,EP>=INT(PRICE.THOU.MKUP/(EST.QTY<1,EP>/1000)+0.5)
         EST.COST.THOU<1,EP>=INT(TOTAL.VCOST<1,EP>/(EST.QTY<1,EP>/1000)+0.5)
         EST.OM.PRICE.M<1,EP> = INT(EST.FINAL.PRICE<1,EP> / EST.QTY<1,EP> * 1000 + .5)
         EST.PRICE.UOM<1,EP> = ''
         GOSUB 26500
      END
   NEXT EP
RETURN

*---- Calculate Price per UOM
*
26500 *
   BEGIN CASE
      CASE EST.PRT.PRICE.UOM = 'EA'
        *EST.PRICE.UOM<1,EP> = INT(EST.FINAL.PRICE<1,EP> / EST.QTY<1,EP> + .5)
         EST.PRICE.UOM<1,EP> = INT(EST.FINAL.PRICE<1,EP> / EST.QTY<1,EP> * 100 + .5)
      CASE EST.PRT.PRICE.UOM = 'MSF'
         WIDTH = EST.PROD.TS.WIDTH<1,1,1>
         XXLENGTH = EST.PROD.TS.LENGTH<1,1,1>
         PGS=EST.PROD.PG.CNT<1,1,1>
	  *SQ.FT=INT(WIDTH/10000 * XXLENGTH/10000 / 144 * PGS * 100 + 0.99)
         SQ.FT=OCONV(WIDTH,'MD4') * OCONV(XXLENGTH,'MD4') / 144 * PGS
         EST.PRICE.UOM<1,EP> = INT(OCONV(EST.FINAL.PRICE<1,EP>,'MD2') / (EST.QTY<1,EP> * SQ.FT / 1000) * 100 + .5)
      CASE EST.PRT.PRICE.UOM = 'CWT'
         PROD.QTY = EST.QTY<1,EP>
         TOT.WGT = 0
         FOR C = 1 TO EST.COMPONENT.CNT
            IF EST.PROD.OS.TYPE<1,C> = "" THEN GOTO 26590
            IF EST.PROD.OS.TYPE<1,C> # "S" THEN
               MATREAD EQUIPMENT.REC FROM EQUIPMENT, CONO:EST.PROD.PRESS.ID<1,C> ELSE
                  ERRMSG = "Invalid press ID - ":EST.PROD.PRESS.ID<1,C>
                  GOTO 26590
               END
            END
            WEB.CNT = EST.PROD.WEB.CNT<1,C>+0
            IF WEB.CNT = 0 THEN WEB.CNT = 1
            FOR MPTR = 1 TO WEB.CNT
               MATREAD ESTPG.REC FROM ESTIMATE.PAPER.GROUP, CONO:EST.PROD.OS.USAGE<1,C,MPTR> ELSE
                  ERRMSG = "Invalid paper group"
                  GOTO 26580
               END
               BW = EST.PROD.BASIS.WT<1,C,MPTR>
               BSW = ESTPG.WIDTH/10000
               BSL = ESTPG.LENGTH/10000
               PSW = EST.PROD.PS.WIDTH<1,C,MPTR>/10000
               IF EST.PROD.OS.TYPE<1,C> = "S" THEN
                  MAT EQUIPMENT.REC = ""
                  PSL = EST.PROD.PS.LENGTH<1,C,MPTR>/10000
               END ELSE
                  PSL = EQP.PRESS.CUTOFF.LEN/10000
               END
               M.WEIGHT = 2 * BW * (PSW * PSL) / (BSW * BSL)
               M.WEIGHT = INT(M.WEIGHT * 100 + 0.5) / 100
               NUMBER.UP = EST.PROD.NO.UP<1,C,1>+0
               IF NUMBER.UP = 0 THEN NUMBER.UP = 1
               FORMS = EST.PROD.FORMS<1,C,1>+0
               IF FORMS = 0 THEN FORMS = 1
               TOT.SHT = INT(PROD.QTY / NUMBER.UP * FORMS + 0.99)
               TOT.WGT = TOT.WGT + (TOT.SHT / 1000 * M.WEIGHT)
26580       NEXT MPTR
26590    NEXT C
         EST.PRICE.UOM<1,EP> = INT(EST.FINAL.PRICE<1,EP> / (TOT.WGT / 100))
      CASE EST.PRT.PRICE.UOM = 'M'
         EST.PRICE.UOM<1,EP> = EST.OM.PRICE.M<1,EP>
   END CASE
RETURN

************************END OF CHANGES FROM RAZI******************************************************

*EstSummStr=SAVE.LB.SALE :SVM: SAVE.MT.SALE :SVM: SAVE.OS.SALE :SVM: SAVE.SP.SALE :SVM: SAVE.MS.SALE :SVM: TOTAL.SALE :SVM: EST.OM.PCT :SVM: EST.FINAL.PRICE :SVM: EST.OM.PRICE.M :SVM: EST.PRT.PRICE.THOU :SVM: EST.PRT.PRICE.UOM  :SVM: EST.PRICE.THOU
*STATUS = RBO.setProperty('','EstSummStr',EstSummStr)

RETURN

90000*
	STATUS = RBO.setProperty('','ServerStatus',1)
	STATUS = RBO.setProperty('','ServerMessage',ERRMSG)
RETURN
