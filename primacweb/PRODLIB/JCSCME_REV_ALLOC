SUBROUTINE JCSCME_REV_ALLOC
********************************************************************************
*   Program name :- JCSCME_REV_ALLOC
*   Created:- 8/29/2003
*------------------------------------------------------------------------------*
*
* In Properties:
* --------------
*  
*
* Out Properties:
* ---------------
*  
********************************************************************************
$INCLUDE WWINSERT RBO.H

$INCLUDE PMC.CPYLIB COMPANY
$INCLUDE JCS.CPYLIB INVOICE
$INCLUDE PMC.CPYLIB SHIP.VIA
$INCLUDE JCS.CPYLIB JOB
$INCLUDE PMC.CPYLIB COA
$INCLUDE CPYLIB CHAR
$INCLUDE JES.CPYLIB ESTIMATE.JOB
$INCLUDE PMC.CPYLIB INVOICE.CODE
$INCLUDE PMC.CPYLIB GLTABLE
$INCLUDE PMC.CPYLIB DIVISION
$INCLUDE PMC.CPYLIB DEPARTMENT
$INCLUDE PMC.CPYLIB COST.CNTR
$INCLUDE PMC.CPYLIB SALES.CODE
* Insert method code here
ERRMSG = ''

OPEN 'CONTROL' TO CONTROL ELSE ERRMSG='CANNOT OPEN CONTROL FILE';GOTO 99999
OPEN 'COMPANY' TO COMPANY ELSE ERRMSG='CANNOT OPEN COMPANY FILE';GOTO 99999
OPEN 'ESTIMATE.JOB' TO ESTIMATE.JOB ELSE ERRMSG='CANNOT OPEN ESTIMATE.JOB FILE';GOTO 99999
OPEN 'COA' TO COA ELSE ERRMSG='CANNOT OPEN COA FILE';GOTO 99999
OPEN 'JOB' TO JOB ELSE ERRMSG='CANNOT OPEN JOB FILE';GOTO 99999
OPEN 'INVOICE' TO INVOICE ELSE ERRMSG='CANNOT OPEN INVOICE FILE'; GOTO 99999
OPEN 'INVOICE.CODE' TO INVOICE.CODE ELSE ERRMSG='CANNOT OPEN INVOICE.CODE FILE';GOTO 99999
OPEN 'ESTIMATE.JOB' TO ESTIMATE.JOB ELSE ERRMSG='CANNOT OPEN ESTIMATE.JOB FILE';GOTO 99999
OPEN 'DIVISION' TO DIVISION ELSE ERRMSG='CANNOT OPEN DIVISION FILE';GOTO 99999
OPEN 'DEPARTMENT' TO DEPARTMENT ELSE ERRMSG='CANNOT OPEN DEPARTMENT FILE';GOTO 99999
OPEN 'COST.CNTR' TO COST.CNTR ELSE ERRMSG='CANNOT OPEN COST.CNTR FILE';GOTO 99999
OPEN "","SALES.CODE" TO SALES.CODE ELSE ERRMSG="SALES.CODE FILE IS MISSING"; GOTO 99999

DIM ALLOC.REC(7)
EQU ALL.SEQ TO ALLOC.REC(1)
EQU ALL.DIV TO ALLOC.REC(2)
EQU ALL.DEP TO ALLOC.REC(3)
EQU ALL.CCT TO ALLOC.REC(4)
EQU ALL.EST TO ALLOC.REC(5)
EQU ALL.DIS TO ALLOC.REC(6)
EQU ALL.PER TO ALLOC.REC(7)

MAT ALLOC.REC = ""
GCCT = "000"
GDEP = "00"
GDIV = "00"

TEMP_JOB_TOT1 = ''
TEMP_JOB_TOT2 = ''
TEMP_EST_TOT1 = ''
TEMP_EST_TOT2 = ''

*VAL = RBO.getProperty('','Cono',CONO)

STATUS=RBO.getProperty('','PMCProperty',PMCProperty)
CONO = PMCProperty<1,4>

MATREAD GLTABLE.REC FROM CONTROL, CONO:'GLTABLE' ELSE MAT GLTABLE.REC = ''
VAL = RBO.getProperty('','JOB_EST',JOB.EST) ; * has to get JOB.ESTIMATE
VAL = RBO.getProperty('','JOB_NO',JOB.NO) ; * job no
VAL = RBO.getProperty('','REF_NO',REF.NO) ; * is the row no
VAL = RBO.getProperty('','JOB_INV_BAL',LINE.AMT); * amount
VAL = RBO.getProperty('','IVC_NO',IVC.NO); * invoice no

*ICNT = 1
*MYMSG<ICNT> = 'IVC NO - ' :IVC.NO
*ICNT = ICNT + 1

MATREAD IVC.REC FROM INVOICE,CONO:IVC.NO ELSE
	MAT IVC.REC = ''
END

MATREAD COMP.REC FROM COMPANY, CONO ELSE
	ERRMSG='CANNOT READ COMPANY FILE'
      	GOTO 99999
END

VAL = RBO.getProperty('','DUP_CRD_NO',IVC.CHG.CODE); * GRID CODE (FROM 2ND GRID)


MATREAD INC.REC FROM INVOICE.CODE,CONO:IVC.CHG.CODE ELSE MAT INC.REC = ''

VAL = RBO.getProperty('','SHIP_TO_CNTY',IVC.CHG.JOB); * JOB NO (in some cases the Grid code asks for Job No)
* IVC.CHG.CODE AND IVC.CHG.CAT ARE SAME ; SO 
*VAL = RBO.getProperty('','CRD_MODE',IVC.CHG.CAT); * invoice no category (GRID C0DE CATEGORY)
IVC.CHG.CAT = IVC.CHG.CODE
***************

MATREAD SLC.REC FROM SALES.CODE, CONO:IVC.CHG.CODE ELSE
	MAT SLC.REC = ""
END

COA.LEVEL = 0

IF IVC.ALLOC.DIV<1,REF.NO> # "" THEN
	COA.LEVEL = 2
END ELSE
	COA.LEVEL = 0
END



*STATUS = RBO.setProperty('','ServerMessage','MYMSG - ' : MYMSG)
*RETURN

BEGIN CASE
      	CASE IVC.CHG.CODE = "JOB" OR IVC.CHG.CODE = "JOB1" OR IVC.CHG.CAT = "OTH"
      		IF SLC.GL.ACCT = "" OR SLC.GL.ACCT = 0 THEN
              	MATREAD COA.REC FROM COA, CONO:GLTB.SALES ELSE COA.LEVEL = 0
            	END ELSE
             		MATREAD COA.REC FROM COA, CONO:SLC.GL.ACCT ELSE COA.LEVEL = 0
            	END
      	CASE IVC.CHG.CODE = "DSC" OR INC.CATEGORY = "DSC"
* T20298
            IF SLC.DS.ACCT = "" OR SLC.DS.ACCT = 0 THEN
               MATREAD COA.REC FROM COA, CONO:GLTB.TRADE.DISC ELSE COA.LEVEL = 0
            END ELSE
               MATREAD COA.REC FROM COA, CONO:SLC.DS.ACCT ELSE COA.LEVEL = 0
            END
      	CASE IVC.CHG.CAT = "MSC"
            MATREAD SLC.REC FROM SALES.CODE, CONO:IVC.TAX.JURS ELSE
               MAT SLC.REC = ""
            END
            BEGIN CASE
               CASE SLC.GL.ACCT # ""
                  MATREAD COA.REC FROM COA, CONO : SLC.GL.ACCT ELSE COA.LEVEL = 0
               CASE 1
                  MATREAD COA.REC FROM COA, CONO:GLTB.SALES ELSE COA.LEVEL = 0
            END CASE
       CASE 1
            IF SLC.GL.ACCT # "" THEN
               MATREAD COA.REC FROM COA, CONO:SLC.GL.ACCT  ELSE COA.LEVEL = 0
            END ELSE
               MATREAD COA.REC FROM COA, CONO:GLTB.SALES ELSE COA.LEVEL = 0
            END
END CASE


*MYMSG<ICNT> = 'COA.LEVEL - ' : COA.LEVEL
*ICNT = ICNT + 1
*WRITE MYMSG ON CONTROL, '001ERR_ZUBAIR'

* 22870
IF IVC.CHG.JOB # "" THEN
	JOBNO = IVC.CHG.JOB
END

IF CO.REV.DIST # "" THEN
	BEGIN CASE
      		CASE CO.REV.DIST = "E" 
        		IF JOB.EST # "" THEN
          			GOTO 4000
        		END ELSE
          			IF JOB.NO # "" THEN
					GOTO 5000
          			END ELSE
            				GOTO 6000
          			END
        		END
      		CASE CO.REV.DIST = "J" 
        		IF JOB.NO # "" THEN
          			GOTO 5000
        		END ELSE
          			GOTO 6000
        		END
      		CASE 1
        		GOTO 6000
    	END CASE
END ELSE
	BEGIN CASE
      		CASE COA.LEVEL = 0 ;* IF IVC.ALLOC.DIV<1,REF.NO> = ""
        		BEGIN CASE 
          			CASE JOB.EST # ""
            				GOTO 4000
          			CASE JOB.NO # ""
            				GOTO 5000
        		END CASE
      		CASE 1
        		GOTO 6000
    	END CASE
END



4000 * GET ESTIMATE
MATREAD ESTJ.REC FROM ESTIMATE.JOB, CONO:JOB.NO ELSE
	ERRMSG = "No estimate for this job"
	GOTO 99999
END

LB.CNT = DCOUNT(ESTJ.LB.DEPT,VM)
MT.CNT = DCOUNT(ESTJ.MT.DEPT,VM)
OS.CNT = DCOUNT(ESTJ.OS.DEPT,VM)
SP.CNT = DCOUNT(ESTJ.SP.DEPT,VM)
MS.CNT = DCOUNT(ESTJ.MS.DEPT,VM)
*
DIM EST.TOT(2)
MAT EST.TOT = ""
IF COA.LEVEL = 0 THEN 
	HOLD.DIV = GDIV
END ELSE
	HOLD.DIV = JOB.DIV
END

4200 *
IF LB.CNT = 0 THEN GOTO 4210
FOR X = 1 TO LB.CNT
	BEGIN CASE
		CASE COA.LEVEL = 3
       		DEPT.CCST = ESTJ.LB.DEPT<1,X>:ESTJ.LB.CCTR<1,X>
      		CASE COA.LEVEL = 2
        		DEPT.CCST = ESTJ.LB.DEPT<1,X>:GCCT
      		CASE COA.LEVEL < 2
        		DEPT.CCST = GDEP:GCCT
    	END CASE
    	DEPT.CCST.SALE = ESTJ.LB.SALE<1,X>
    	GOSUB 4500
NEXT X



4210 *
IF MT.CNT = 0 THEN GO 4220
FOR Y = 1 TO MT.CNT
	BEGIN CASE
      		CASE COA.LEVEL = 3
        		DEPT.CCST = ESTJ.MT.DEPT<1,Y>:ESTJ.MT.CCTR<1,Y>
      		CASE COA.LEVEL = 2
        		DEPT.CCST = ESTJ.MT.DEPT<1,Y>:GCCT
      		CASE COA.LEVEL < 2
        		DEPT.CCST = GDEP:GCCT
    	END CASE
    	DEPT.CCST.SALE = ESTJ.MT.SALE<1,Y>
    	GOSUB 4500
NEXT Y

4220 *
IF OS.CNT = 0 THEN GOTO 4230
FOR Z = 1 TO OS.CNT
	BEGIN CASE
      		CASE COA.LEVEL = 3
        		DEPT.CCST = ESTJ.OS.DEPT<1,Z>:ESTJ.OS.CCTR<1,Z>
      		CASE COA.LEVEL = 2
        		DEPT.CCST = ESTJ.OS.DEPT<1,Z>:GCCT
      		CASE COA.LEVEL < 2
        		DEPT.CCST = GDEP:GCCT
    	END CASE
    	DEPT.CCST.SALE = ESTJ.OS.SALE<1,Z>
    	GOSUB 4500
NEXT Z

4230 *
IF SP.CNT = 0 THEN GOTO 4240
FOR R = 1 TO SP.CNT
	BEGIN CASE
      		CASE COA.LEVEL = 3
        		DEPT.CCST = ESTJ.SP.DEPT<1,R>:ESTJ.SP.CCTR<1,R>
      		CASE COA.LEVEL = 2
        		DEPT.CCST = ESTJ.SP.DEPT<1,R>:GCCT
      		CASE COA.LEVEL < 2
        		DEPT.CCST = GDEP:GCCT
    	END CASE
    	DEPT.CCST.SALE = ESTJ.SP.SALE<1,R>
    	GOSUB 4500
NEXT R

4240 *
IF MS.CNT = 0 THEN GOTO 4250
FOR S = 1 TO MS.CNT
	BEGIN CASE
		CASE COA.LEVEL = 3
       		DEPT.CCST = ESTJ.MS.DEPT<1,S>:ESTJ.MS.CCTR<1,S>
	      	CASE COA.LEVEL = 2
       		DEPT.CCST = ESTJ.MS.DEPT<1,S>:GCCT
	      	CASE COA.LEVEL < 2
       		DEPT.CCST = GDEP:GCCT
	END CASE
	DEPT.CCST.SALE = ESTJ.MS.SALE<1,S>
	GOSUB 4500
NEXT S

4250 *
GOTO 4520
*

4500 * LOAD EST IN ARRAY
LOCATE HOLD.DIV:DEPT.CCST IN EST.TOT(1)  SETTING DCP ELSE GOTO 4510
*EST.TOT(2)<DCP> = EST.TOT(2)<DCP> + DEPT.CCST.SALE
GOTO 4515
*

4510 * INSERT NEW DEPT.CSST
*  EST.TOT(1)<DCP> = HOLD.DIV:DEPT.CCST
*  EST.TOT(2)<DCP> = DEPT.CCST.SALE

4515 *
GOTO 99999
RETURN

4520 *
IF EST.TOT(1) = "" THEN GOTO 4599
DONE = 0
E = 0
LOOP
	WHILE DONE = 0
	E = E + 1
	IF EST.TOT(1)<E> = "" THEN DONE = 1
	ALL.SEQ<1,E> = E
	ALL.DIV<1,E> = EST.TOT(1)<E>[1,2]
	ALL.DEP<1,E> = EST.TOT(1)<E>[3,2]
	ALL.CCT<1,E> = EST.TOT(1)<E>[5,3]
	ALL.EST<1,E> = OCONV(EST.TOT(2)<E>,'MD2')
	EST.PER = EST.TOT(2)<E> / ESTJ.TOT.SALE
*T25874 ALL.DIS<1,E> = INT(LINE.AMT * EST.PER)
	
	*ALL.DIS<1,E> = OCONV((LINE.AMT * EST.PER),'MD0')
	ALL.DIS<1,E> = OCONV((LINE.AMT * EST.PER),'MD2')

	ALL.PER<1,E> = OCONV(EST.PER * 1000000,'MD4')
	
	* added to get the entire set in one field
	
REPEAT
TEMP_JOB_TOT1 = EST.TOT(1)
*TEMP_EST_TOT2 = EST.TOT(2)


TOT.DIS = SUM(ALL.DIS)
AMT.REM = LINE.AMT - TOT.DIS
IF AMT.REM # 0 THEN
	ALL.DIS<1,1> = ALL.DIS<1,1> + AMT.REM
END
ALL.SEQ = DELETE(ALL.SEQ,1,E,0)
LINES = E - 1
LN = 1
4599 *
GOTO 99999
*RETURN
*

5000 * GET JOB ACTUAL
MATREAD JOB.REC FROM JOB, CONO:JOB.NO ELSE
	ERRMSG = "No record for this job"
    	GOTO 99999
END
HOLD.DIV = 0

IF COA.LEVEL = 0 THEN 
	HOLD.DIV = GDIV
END ELSE
	HOLD.DIV = JOB.DIV
END

LB.CNT = DCOUNT(JOB.LB.DEPT,VM)
MT.CNT = DCOUNT(JOB.MT.DEPT,VM)
OS.CNT = DCOUNT(JOB.OS.DEPT,VM)
SP.CNT = DCOUNT(JOB.SP.DEPT,VM)
MS.CNT = DCOUNT(JOB.MS.DEPT,VM)
*

DIM JOB.TOT(2)
MAT JOB.TOT = ""
5200 *
IF LB.CNT = 0 THEN GOTO 5210
FOR X = 1 TO LB.CNT
	BEGIN CASE
		CASE COA.LEVEL = 3
			DEPT.CCST = JOB.LB.DEPT<1,X>:JOB.LB.CCTR<1,X>
		CASE COA.LEVEL = 2
       		DEPT.CCST = JOB.LB.DEPT<1,X>:GCCT
      		CASE COA.LEVEL < 2
       		DEPT.CCST = GDEP:GCCT
    	END CASE
    	DEPT.CCST.SALE = JOB.LB.SALE<1,X>
    	GOSUB 5500
NEXT X

5210 *
IF MT.CNT = 0 THEN GO 5220
FOR Y = 1 TO MT.CNT
	BEGIN CASE
      		CASE COA.LEVEL = 3
        		DEPT.CCST = JOB.MT.DEPT<1,Y>:JOB.MT.CCTR<1,Y>
      		CASE COA.LEVEL = 2
        		DEPT.CCST = JOB.MT.DEPT<1,Y>:GCCT
      		CASE COA.LEVEL < 2
        		DEPT.CCST = GDEP:GCCT
    	END CASE
    	DEPT.CCST.SALE = JOB.MT.SALE<1,Y>
	GOSUB 5500
NEXT Y

5220 *
IF OS.CNT = 0 THEN GOTO 5230
FOR Z = 1 TO OS.CNT
	BEGIN CASE
		CASE COA.LEVEL = 3
			DEPT.CCST = JOB.OS.DEPT<1,Z>:JOB.OS.CCTR<1,Z>
		CASE COA.LEVEL = 2
       		DEPT.CCST = JOB.OS.DEPT<1,Z>:GCCT
      		CASE COA.LEVEL < 2
        		DEPT.CCST = GDEP:GCCT
    	END CASE
	DEPT.CCST.SALE = JOB.OS.SALE<1,Z>
    	GOSUB 5500
NEXT Z

5230 *
IF SP.CNT = 0 THEN GOTO 5240
FOR R = 1 TO SP.CNT
	BEGIN CASE
		CASE COA.LEVEL = 3
			DEPT.CCST = JOB.SP.DEPT<1,R>:JOB.SP.CCTR<1,R>
      		CASE COA.LEVEL = 2
       		DEPT.CCST = JOB.SP.DEPT<1,R>:GCCT
      		CASE COA.LEVEL < 2
       		DEPT.CCST = GDEP:GCCT
    	END CASE
	DEPT.CCST.SALE = JOB.SP.SALE<1,R>
	GOSUB 5500
NEXT R

5240 *
IF MS.CNT = 0 THEN GOTO 5250
FOR S = 1 TO MS.CNT
	BEGIN CASE
		CASE COA.LEVEL = 3
			DEPT.CCST = JOB.MS.DEPT<1,S>:JOB.MS.CCTR<1,S>
      		CASE COA.LEVEL = 2
       		DEPT.CCST = JOB.MS.DEPT<1,S>:GCCT
      		CASE COA.LEVEL < 2
       		DEPT.CCST = GDEP:GCCT
    	END CASE
    	DEPT.CCST.SALE = JOB.MS.SALE<1,S>
    	GOSUB 5500
NEXT S

5250 *
GOTO 5520
*

5500 * LOAD EST IN ARRAY
LOCATE HOLD.DIV:DEPT.CCST IN JOB.TOT(1)  SETTING DCP ELSE GOTO 5510
JOB.TOT(2)<DCP> = JOB.TOT(2)<DCP> + DEPT.CCST.SALE

GOTO 5515
*

5510 * INSERT NEW DEPT.CSST
JOB.TOT(1)<DCP> = HOLD.DIV:DEPT.CCST
JOB.TOT(2)<DCP> = DEPT.CCST.SALE

5515*
GOTO 99999
*RETURN

5520 *
IF SUM(JOB.TOT(2)) = 0 THEN GOTO 5599
DONE = 0
E = 0
LOOP
	WHILE DONE = 0
		E = E + 1
		IF JOB.TOT(1)<E> = "" THEN DONE = 1
		ALL.SEQ<1,E> = E
		ALL.DIV<1,E> = JOB.TOT(1)<E>[1,2]
		ALL.DEP<1,E> = JOB.TOT(1)<E>[3,2]
		ALL.CCT<1,E> = JOB.TOT(1)<E>[5,3]
		ALL.EST<1,E> = OCONV(JOB.TOT(2)<E>,'MD2')

		IF JOB.TOT.SALE+0 # 0 THEN
			JOB.PER = JOB.TOT(2)<E> / JOB.TOT.SALE
		END ELSE
			JOB.PER = 1
		END
		*T25874 ALL.DIS<1,E> = INT(LINE.AMT * JOB.PER) here
		ALL.DIS<1,E> = LINE.AMT * JOB.PER ; * COMMENTED AND ADDED NEXT LINE TO ADD OCONV WITH MD2
		
		*ALL.DIS<1,E> = OCONV(ALL.DIS<1,E>,'MD2')

		ALL.PER<1,E> = OCONV(JOB.PER * 1000000,'MD4')
	**********************************
		READV DIV.DESC FROM DIVISION,CONO:ALL.DIV<1,E>,1 THEN
			DIV_DESC<1,E>=DIV.DESC
		END
		READV DEPT.DESC FROM DEPARTMENT,CONO:ALL.DEP<1,E>,2 THEN
			DEPT_DESC<1,E>=DEPT.DESC
		END
		READV CCTR.DESC FROM COST.CNTR,CONO:ALL.CCT<1,E>,1 THEN
			CCT_DESC<1,E>=CCTR.DESC
		END

		IF ALL.DIV<1,E>='00' THEN 	DIV_DESC<1,E>='GEN DIV'
		
		IF ALL.DEP<1,E>='00' THEN	DEPT_DESC<1,E>='GEN DEPT'
		
		IF ALL.CCT<1,E>='000' THEN	CCT_DESC<1,E>='GEN CCTRS'
		
	******************************************************************
REPEAT
TEMP_JOB_TOT1 = JOB.TOT(1)
*TEMP_JOB_TOT2 = JOB.TOT(2)

TOT.DIS = SUM(ALL.DIS)
AMT.REM = LINE.AMT - TOT.DIS
IF AMT.REM # 0 THEN
	ALL.DIS<1,1> = ALL.DIS<1,1> + AMT.REM
END
ALL.SEQ = DELETE(ALL.SEQ,1,E,0)
LINES = E - 1
LN = 1
5599 *
GOTO 99999

6000 * GET INVOICE ALLOCATION
ICNT = DCOUNT(IVC.ALLOC.DIV<1,REF.NO>,SVM)
T.ALL = SUM(IVC.ALLOC.AMT<1,REF.NO>)

FOR I = 1 TO ICNT
	ALL.SEQ<1,I> = I
      	ALL.DIV<1,I> = IVC.ALLOC.DIV<1,REF.NO,I>[1,2]
      	ALL.DEP<1,I> = IVC.ALLOC.DIV<1,REF.NO,I>[3,2]

      	ALL.CCT<1,I> = IVC.ALLOC.DIV<1,REF.NO,I>[5,3]
      	ALL.EST<1,I> = 0
 	*READV NAME FROM INVENTORY ,ID,1 ELSE NAME = ID
	*
      	T.PER = IVC.ALLOC.AMT<1,REF.NO,I>/ T.ALL
*T25874   IVC.ALLOC.AMT<1,REF.NO,I> = (LINE.AMT * T.PER)
      	IVC.ALLOC.AMT<1,REF.NO,I> = OCONV((LINE.AMT * T.PER),'MD0')
*
      	*ALL.DIS<1,I> = OCONV(IVC.ALLOC.AMT<1,REF.NO,I>,'MD0')
	ALL.DIS<1,I> = OCONV(IVC.ALLOC.AMT<1,REF.NO,I>,'MD2')

      	ALL.PER<1,I> = OCONV(IVC.ALLOC.AMT<1,REF.NO,I> / LINE.AMT,'MD2')
      	ALL.PER<1,I> = OCONV(ALL.PER<1,I> * 1000000,'MD4')
NEXT I
LINES = ICNT
LN = 1
*
	
7000 * TOTAL ALLOC
TOT.EST = SUM(ALL.EST)
TOT.DIS = SUM(ALL.DIS)
TOT.PER = SUM(ALL.PER)
AMT.REM = LINE.AMT - TOT.DIS

99999 *

VAL = RBO.setProperty('','ALL_DIV',ALL.DIV<1>)
VAL = RBO.setProperty('','ALL_DEP',ALL.DEP<1>)
VAL = RBO.setProperty('','ALL_CCT',ALL.CCT<1>)
VAL = RBO.setProperty('','ALL_EST',ALL.EST<1>)

FOR I  =  1 TO DCOUNT(ALL.DIS,@VM)
	ALL_DIS<1,I> = OCONV(ALL_DIS<1,I>,'MD2')
NEXT I

VAL = RBO.setProperty('','ALL_DIS',ALL.DIS<1>)
VAL = RBO.setProperty('','ALL_PER',ALL.PER<1>)
VAL = RBO.setProperty('','DIV_DESC',DIV_DESC<1>)
VAL = RBO.setProperty('','DEPT_DESC',DEPT_DESC<1>)
VAL = RBO.setProperty('','CCT_DESC',CCT_DESC<1>)

*VAL = RBO.setProperty('','ADD_EST_TOT1',TEMP_EST_TOT1)
VAL = RBO.setProperty('','ADD_JOB_TOT1',TEMP_JOB_TOT1)

IF ERRMSG # '' THEN
	VAL = RBO.setProperty('','ServerStatus','1')
	VAL = RBO.setProperty('','ServerMessage',ERRMSG)
END ELSE
	VAL = RBO.setProperty('','ServerStatus','')
	VAL = RBO.setProperty('','ServerMessage','')
END

* End of method code
RETURN
END
