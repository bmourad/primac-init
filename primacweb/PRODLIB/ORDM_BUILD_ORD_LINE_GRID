SUBROUTINE ORDM_BUILD_ORD_LINE_GRID
********************************************************************************
*   Program name :- ORDM_BUILD_ORD_LINE_GRID
*   Created:- 2/28/2006
*   Programmer :- Suhail Hussain S
********************************************************************************
$INCLUDE WWINSERT RBO.H

$INCLUDE CPYLIB COMMON1
$INCLUDE JCS.CPYLIB COM.JCS.LINK  
$INCLUDE ICS.CPYLIB COM.INV.MAIN  
$INCLUDE ICS.CPYLIB COM.INV.SERIAL
$INCLUDE JCS.CPYLIB COM.INV.STATS 
$INCLUDE PMC.CPYLIB COM.CUST 
$INCLUDE OPS.CPYLIB COM.ORDER
$INCLUDE OPS.CPYLIB COM.OPS.LINK

$DEFINE INVENTORY
$DEFINE ORDER
$DEFINE ORDERDETAILINQ
$DEFINE COMPOPS
$DEFINE CUSTOMER
$DEFINE CATEGORY
$DEFINE INVWHSE
$DEFINE FNGDSTATS
$DEFINE FNGDORDERSTATS
$DEFINE JOB
$DEFINE FILEVARS

$INCLUDE PMC.CPYLIB COMP.OPS
$INCLUDE PMC.CPYLIB CUSTOMER
$INCLUDE OPS.CPYLIB ORDER
$INCLUDE OPS.CPYLIB ORDER.DETAIL
$INCLUDE OPS.CPYLIB ORDER.DETAIL.INQ
$INCLUDE OPS.CPYLIB ORDER.RELEASE
$INCLUDE ICS.CPYLIB INVENTORY
$INCLUDE ICS.CPYLIB CATEGORY
$INCLUDE ICS.CPYLIB INV.WHSE
$INCLUDE ICS.CPYLIB INV.FNGD
$INCLUDE ICS.CPYLIB INV.CNV
$INCLUDE ICS.CPYLIB FNGD.BOM
$INCLUDE ICS.CPYLIB FNGD.STATS
$INCLUDE ICS.CPYLIB FNGD.ORDER.STATS
$INCLUDE ICS.CPYLIB FNGD.JOB.STATS
$INCLUDE ICS.CPYLIB PRICE.TABLE
$INCLUDE ICS.CPYLIB WAREHOUSE
$INCLUDE JES.CPYLIB ESTIMATE
$INCLUDE JCS.CPYLIB JOB
$INCLUDE PMC.CPYLIB SHIP.TO
$INCLUDE CPYLIB FILE.VARS
$INCLUDE CPYLIB CHAR

   OPEN "","CUSTOMER" TO CUSTOMER ELSE ERRMSG = "CANNOT OPEN CUSTOMER FILE";GOTO 91000
   OPEN "","ORDER" TO ORDER ELSE ERRMSG = "CANNOT OPEN ORDER FILE";GOTO 91000
   OPEN "","ORDER.DETAIL" TO ORDER.DETAIL ELSE ERRMSG = "CANNOT OPEN ORDER.DETAIL FILE";GOTO 91000
   OPEN "","ORDER.RELEASE" TO ORDER.RELEASE ELSE ERRMSG = "CANNOT OPEN ORDER.RELEASE FILE";GOTO 91000
   OPEN "","INVENTORY" TO INVENTORY ELSE ERRMSG = "CANNOT OPEN INVENTORY FILE";GOTO 91000
   OPEN "","CATEGORY" TO CATEGORY ELSE ERRMSG = "CANNOT OPEN CATEGORY FILE";GOTO 91000
   OPEN "","INV.WHSE" TO INV.WHSE ELSE ERRMSG = "CANNOT OPEN INV.WHSE FILE";GOTO 91000
   OPEN "","INV.FNGD" TO INV.FNGD ELSE ERRMSG = "CANNOT OPEN INV.FNGD FILE";GOTO 91000
   OPEN "","FNGD.BOM" TO FNGD.BOM ELSE ERRMSG = "CANNOT OPEN FNGD.BOM FILE";GOTO 91000
   OPEN "","FNGD.STATS" TO FNGD.STATS ELSE ERRMSG = "CANNOT OPEN FNGD.STATS FILE";GOTO 91000
   OPEN "","FNGD.ORDER.STATS" TO FNGD.ORDER.STATS ELSE ERRMSG = "CANNOT OPEN  FILE";GOTO 91000
   OPEN "","FNGD.JOB.STATS" TO FNGD.JOB.STATS ELSE ERRMSG = "CANNOT OPEN FNGD.JOB.STATS FILE";GOTO 91000
   OPEN "","PRICE.TABLE" TO PRICE.TABLE ELSE ERRMSG = "CANNOT OPEN PRICE.TABLE FILE";GOTO 91000
   OPEN "","WAREHOUSE" TO WAREHOUSE ELSE ERRMSG = "CANNOT OPEN WAREHOUSE FILE";GOTO 91000
   OPEN "","ESTIMATE" TO ESTIMATE ELSE ERRMSG = "CANNOT OPEN ESTIMATE FILE";GOTO 91000
   OPEN "","JOB" TO JOB ELSE ERRMSG = "CANNOT OPEN JOB FILE";GOTO 91000
   OPEN "","CONTROL" TO CONTROL ELSE ERRMSG = "CANNOT OPEN CONTROL FILE";GOTO 91000  
   OPEN "","SHIP.TO" TO SHIP.TO ELSE ERRMSG = "CANNOT OPEN SHIP.TO FILE";GOTO 91000

STATUS = RBO.getProperty("","INARR",INARR)
STATUS = RBO.getProperty("","PMCProperty",PMCProperty)
STATUS = RBO.getProperty("","GRIDARR",OSD_FULL_ARR)
STATUS = RBO.getProperty("","RETARR",OSDARR)

CONO           = PMCProperty<1,4>
SHIPTO         = INARR<1,1>
ORD.REL.NO     = INARR<1,2>
ORD.SHIP.TO    = INARR<1,3>
DISPARR        = ""
SWAP "#" WITH VM IN ORD.SHIP.TO
SWAP "#" WITH VM IN ORD.REL.NO

S.IND = 0

   FOR X = 1 TO DCOUNT(ORD.SHIP.TO,VM) 
      TEMPORD_REC = FIELD(OSD_FULL_ARR,"¥",X,1)
      IF SHIPTO = ORD.SHIP.TO<1,X> THEN S.IND= X;TEMPORD_REC = OSDARR
      IF TEMPORD_REC = "" THEN 
         MAT ORD.DET.REC = ""
      END ELSE
         MATPARSE ORD.DET.REC FROM TEMPORD_REC,"ð"
      END
      FOR P = 1 TO ORD.DET.REC.SIZE
        ORD.DET.SUM(P,X) = ORD.DET.REC(P)
      NEXT P
   NEXT X
   FOR X = 1 TO DCOUNT(ORD.SHIP.TO,VM)
      STATUS   = "L";SHPNO = ORD.SHIP.TO<1,X> 
      CALL ORDER_LINE_UPD(CONO,ORDNO,SHPNO,STATUS)
   NEXT X

   FOR P = 1 TO ORD.DET.REC.SIZE
      ORD.DET.REC(P) = ORD.DET.SUM(P,S.IND)
   NEXT P

ORDER.LINE.SUB:

   DISPARR<1,1> = SHIPTO
   DISPARR<1,2> = OSD.PO
   DISPARR<1,3> = OSD.SHP.TERMS

   PRODCNT = DCOUNT(OSD.PROD,@VM)
   FOR INDX = 1 TO PRODCNT
     MATREAD INV.REC FROM INVENTORY, CONO:OSD.PROD<1,INDX> ELSE
       MAT INV.REC = "";INV.FULL.DESC = "Unknown"
     END

     $INCLUDE ICSBP INV.UM.CNV

     IF OSD.KIT<1,INDX> = "K" THEN
       RESV.PRINT = OSD.KIT.R.QTY<1,INDX>
       ORDER.PRICE = OSD.KIT.PRICE<1,INDX>
       ORDER.PRINT = OSD.KIT.G.QTY<1,INDX>
     END ELSE
       RESV.PRINT = OSD.R.QTY<1,INDX>
       ORDER.PRICE = OSD.PRICE<1,INDX>
       ORDER.PRINT = OSD.G.QTY<1,INDX>
     END

     TMP.ID=CONO:OSD.PROD<1,INDX>:"!":OSD.WHSE<1,INDX>

     DISPARR<1,4,INDX> = OSD.PROD<1,INDX>
     DISPARR<1,5,INDX> = OSD.WHSE<1,INDX>
     DISPARR<1,6,INDX> = INV.UNIT<1,3>
     DISPARR<1,7,INDX> = OCONV(INT(((ORDER.PRINT / ICR.DV1) * ICR.MT1) / ICR.DV2 + .5),ICR.CNV1)
     DISPARR<1,8,INDX> = OCONV(INT(((RESV.PRINT / ICR.DV1) * ICR.MT1) / ICR.DV2 + .5),ICR.CNV1)
     DISPARR<1,9,INDX> = OCONV(INT(((OSD.A.QTY<1,INDX> / ICR.DV1) * ICR.MT1) / ICR.DV2 + .5),ICR.CNV1)
     IF ORDER.PRICE > 0 THEN
       DISPARR<1,10,INDX> = OCONV(ORDER.PRICE,"MD4")
     END ELSE
       DISPARR<1,10,INDX> = ""
     END
     GOSUB 7920
     DISPARR<1,15,INDX> = INV.FULL.DESC
     IF OSD.JOB<1,INDX,2> # "" THEN
       DISPARR<1,16,INDX> = "MULTI"
     END ELSE
       DISPARR<1,16,INDX> = OSD.JOB<1,INDX>
     END
   NEXT INDX
   GOTO 93000
RETURN

7920*
  IF OSD.COMMENT<1,INDX> = "" THEN
    STATUS = ""
  END ELSE
    STATUS = "*"
  END
  DISPARR<1,11,INDX> =  STATUS
  DISPARR<1,17,INDX> =  OSD.COMMENT<1,INDX>
  PTR = 1

  LOOP
    LOCATE OSD.PROD<1,INDX> IN ODQ.PROD<1>,PTR SETTING PPTR THEN
      BEGIN CASE
        CASE (OSD.WHSE<1,INDX> # ODQ.WHSE<1,PPTR>) OR (OSD.KIT<1,INDX> # ODQ.KIT<1,PPTR>) OR (OSD.PROD.SEQ<1,INDX> # ODQ.PROD.SEQ<1,PPTR>)
        CASE ODQ.G.QTY<1,PPTR>+0 > 0;*T20234
          STATUS = "*"
          PTR = 0
        CASE 1
          STATUS = ""
          PTR = 0
      END CASE
    END ELSE
      STATUS = ""
      PTR = 0
    END
  WHILE PTR DO
    PTR = PPTR + 1
  REPEAT
  DISPARR<1,12,INDX> =  STATUS

  STATUS = ""
  IF OSD.REL.NO<1,INDX> # "" THEN
    STATUS = "*"
  END ELSE
    OCNT = DCOUNT(ORD.REL.NO,@VM)
    FOR O = 1 TO OCNT UNTIL STATUS # ""
      MATREAD ORR.REC FROM ORDER.RELEASE, CONO:ORD.REL.NO<1,O> THEN
        IF ORR.STATUS<1,1> # "COMPLETED" AND ORR.SHIP.TO = SHIPTO AND ORR.QTY<1,INDX>+0 > 0 THEN
          STATUS = "*"
        END
      END
    NEXT O
  END
  DISPARR<1,13,INDX> =  STATUS

  IF OSD.KIT<1,INDX> = "N" THEN
    BEGIN CASE
      CASE OSD.O.QTY<1,INDX> < 1
        STATUS = "O"
      CASE OSD.I.QTY<1,INDX> >= OSD.O.QTY<1,INDX>
        STATUS = "I"
      CASE OSD.S.QTY<1,INDX> >= OSD.O.QTY<1,INDX>
        STATUS = "S"
      CASE OSD.A.QTY<1,INDX> < 1
        STATUS = "O"
      CASE OSD.F.QTY<1,INDX> >= OSD.A.QTY<1,INDX>
        STATUS = "F"
      CASE 1
        STATUS = "M"
    END CASE
  END
  IF OSD.KIT<1,INDX> = "K" THEN
    BEGIN CASE
      CASE OSD.KIT.O.QTY<1,INDX> < 1
        STATUS = "O"
      CASE OSD.KIT.I.QTY<1,INDX> >= OSD.KIT.O.QTY<1,INDX>
        STATUS = "I"
      CASE OSD.KIT.S.QTY<1,INDX> >= OSD.KIT.O.QTY<1,INDX>
        STATUS = "S"
      CASE OSD.KIT.A.QTY<1,INDX> < 1
        STATUS = "O"
      CASE OSD.KIT.F.QTY<1,INDX> >= OSD.KIT.A.QTY<1,INDX>
        STATUS = "F"
      CASE 1
        STATUS = "M"
    END CASE
  END
  DISPARR<1,14,INDX> =  STATUS

   GRID_FLAG = "0"
   BEGIN CASE
      CASE OSD.KIT<1,INDX> = "M"
         GRID_FLAG = "M"
      CASE SUM(OSD.P.QTY<1,INDX>)
         GRID_FLAG = "5"
      CASE OSD.KIT<1,INDX> = "K"
         IF (SUM(OSD.FI.QTY<1,INDX>) + SUM(OSD.FI.QTY<1,INDX+1>)) > 0 THEN
            GRID_FLAG = "3"
         END
      CASE OSD.I.QTY<1,INDX> > 0
         GRID_FLAG = "1"
      CASE OSD.S.QTY<1,INDX> > 0
         GRID_FLAG = "2"
      CASE OSD.R.QTY<1,INDX> > 0 OR OSD.RECP.NO<1,INDX> # ""
         GRID_FLAG = "3"
      CASE OSD.KIT.R.QTY<1,INDX> > 0
         GRID_FLAG = "3"
      CASE OSD.A.QTY<1,INDX> > 0 OR OSD.JOB<1,INDX> # ""
         GRID_FLAG = "4"
   END CASE
  DISPARR<1,18,INDX> =  GRID_FLAG
RETURN

93000
   STATUS = RBO.setProperty("","DISPARR",DISPARR)
RETURN

91000
   STATUS = RBO.setProperty("","ServerStatus",1)
   STATUS = RBO.setProperty("","ServerMessage",ERRMSG)
RETURN
