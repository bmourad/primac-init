SUBROUTINE ICSRSRE_GRIDDATA
********************************************************************************
*   Program name :- ICSRSRE_GRIDDATA
*   Created:- 5/19/2004  RAZI MOHIUDDIN
*------------------------------------------------------------------------------*
* In Properties:
* --------------
* Out Properties:
* ---------------
*  
********************************************************************************
$INCLUDE WWINSERT RBO.H
$INCLUDE PMC.CPYLIB PO
$INCLUDE ICS.CPYLIB PO.MAN.XREF
$INCLUDE ICS.CPYLIB PO.RSKI.XREF 
$INCLUDE ICS.CPYLIB CATEGORY
$INCLUDE ICS.CPYLIB INVENTORY
$INCLUDE ICS.CPYLIB DAILY_STOCK
$INCLUDE ICS.CPYLIB INV_SERIAL
$INCLUDE CPYLIB CHAR

ERRMSG=''
OPEN '','DAILY_STOCK' TO DAILY_STOCK ELSE
   ERRMSG = 'DAILY_STOCK FILE IS MISSING'
   GOTO 93000
END

OPEN '','PO' TO PO ELSE
   ERRMSG = 'PO FILE IS MISSING'
   GOTO 93000
END
OPEN '','PO.RSKI.XREF' TO PO.RSKI.XREF ELSE
   ERRMSG = 'PO.RSKI.XREF FILE IS MISSING'
   GOTO 93000
END
OPEN '','PO.MAN.XREF' TO PO.MAN.XREF ELSE
   ERRMSG = 'PO.RSMAN.XREF FILE IS MISSING'
   GOTO 93000
END
OPEN '','INVENTORY' TO INVENTORY ELSE
   ERRMSG = 'INVENTORY FILE IS MISSING'
   GOTO 93000
END
OPEN '','CATEGORY' TO CATEGORY ELSE
   ERRMSG = 'CATEGROY FILE IS MISSING'
   GOTO 93000
END
OPEN '','INV_SERIAL' TO INV_SERIAL ELSE
   ERRMSG = 'INV_SERIAL FILE IS MISSING'
   GOTO 93000
END
OPEN "","INV_SERIAL_DELETED" TO INV_SERIAL_DELETED ELSE
  ERRMSG = "CANNOT OPEN INV_SERIAL_DELETED FILE";GOTO 93000
END
   OPEN "","CONTROL" TO CONTROL ELSE
      ERRMSG = "CANNOT OPEN CONTROL FILE";GOTO 93000 
   END
STATUS = RBO.getProperty('','ID',ID)

POS = INDEX(ID,"!",1)
PO_NO = ID[1,POS-1]
MAN_NO =ID[POS+1,99]
CONO = ID[1,3]
S$VALUE =MAN_NO
RSMAN.RS.NO=''
NEW.MANIFEST=''

STATUS = RBO.setProperty('','MTEST2',POS :"~":MAN_NO:"~":PO_NO)



MATREADU RSXRF.REC FROM PO.RSKI.XREF,PO_NO LOCKED 
  ERRMSG = 'P/O record is locked by user - ':GETUSERNAME(STATUS())
  GOTO 93000
END ELSE
  MAT RSXRF.REC = ""
  IF PO_NO = "*BAD*" THEN
   * ERRMSG ="No errors present!"
   * GOTO 93000
  END ELSE
  * ERRMSG ="Invalid P/O for this function"
    MANUAL.ENTRY = 1
  END
END

MATREADU RSMAN.REC FROM PO.MAN.XREF,PO_NO:"!":S$VALUE ELSE 
  MANIFEST = S$VALUE
  IF NOT(NEW.MANIFEST) THEN
    IF S$VALUE = 'N' THEN
      RELEASE PO.MAN.XREF,PO_NO:"!":S$VALUE
    END
    NEW.MANIFEST = 1
  END
* Creating new manifest with roll/skids that are not assigned to a manifest yet.
  MAT RSMAN.REC = ''
  S$VALUE = MANIFEST
  RSMAN.RS.NO = RSXRF.RS.NO
RSMAN.LINE.NO = RSXRF.LN.NO
  RCNT = DCOUNT(RSXRF.RS.NO,VM)
 ** MAT HOLD.ISTK.REC = MAT ISTK.REC
  *FOR RPTR = 1 TO RCNT
FOR RPTR=RCNT TO 1 STEP -1
    ISTK.ID=CONO:RSXRF.RS.NO<1,RPTR>
    MATREAD ISTK.REC FROM INV_SERIAL_DELETED,ISTK.ID THEN
      LOCATE RSXRF.RS.NO<1,RPTR> IN RSMAN.RS.NO<1>,1 SETTING SPTR THEN
        RSMAN.RS.NO = DELETE(RSMAN.RS.NO,1,SPTR,0)
        RSMAN.LINE.NO = DELETE(RSMAN.LINE.NO,1,SPTR,0)
      END
    END ELSE
      MATREAD ISTK.REC FROM INV_SERIAL,ISTK.ID THEN
        IF ISTK.MANIFEST.NO # '' THEN
          LOCATE RSXRF.RS.NO<1,RPTR> IN RSMAN.RS.NO<1>,1 SETTING SPTR THEN
            RSMAN.RS.NO = DELETE(RSMAN.RS.NO,1,SPTR,0)
            RSMAN.LINE.NO = DELETE(RSMAN.LINE.NO,1,SPTR,0)
          END
        END
      END
    END
  NEXT RPTR
  *MAT ISTK.REC = MAT HOLD.ISTK.REC
  NEW.MANIFEST = 1
  RSMAN.MAN.NO = MANIFEST
END
S.SERIAL = RSMAN.RS.NO
S.PO.LINE.NO=RSMAN.LINE.NO
MANIFEST = S$VALUE
SERIALVAL=S.SERIAL
M=DCOUNT(S.SERIAL,VM)
S.UOM=""
S.LOC=""
FOR I=1 TO M
  MATREAD ISTK.REC FROM INV_SERIAL,CONO:SERIALVAL<1,I> THEN
     S.UOM<1,-1>=ISTK.UOM
     S.LOC<1,-1>=ISTK.LOC
  END
NEXT I
MATREAD DSR.REC FROM DAILY_STOCK,ID THEN
  * S.LOC=DSR.LOC
END
STATUS = RBO.setProperty('','MTEST',S.SERIAL:"~":DCOUNT(S.SERIAL,VM))
STATUS = RBO.setProperty('','POPSERAILS',S.SERIAL)
STATUS = RBO.setProperty('','POPUOM',S.UOM)
STATUS = RBO.setProperty('','POPLOC',S.LOC)

93000
IF ERRMSG # "" THEN
	STATUS = RBO.setProperty('','ServerStatus',1)
	STATUS = RBO.setProperty('','ServerMessage',ERRMSG)
END
RETURN



