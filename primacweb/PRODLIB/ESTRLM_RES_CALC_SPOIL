SUBROUTINE ESTRLM_RES_CALC_SPOIL(CONO,ACTION,COMP,QQTY,BASE.PC,PR.SPOIL.PC,FIN.SPOIL.PC,MR.PC)
********************************************************************************
*   Program name :- ESTRLM_RES_CALC_SPOIL
*   Created:- 9/21/2005
*------------------------------------------------------------------------------*
*

* In Properties:
* --------------
*  
*
* Out Properties:
* ---------------
*  
********************************************************************************

$INCLUDE JES.CPYLIB SCOMMON.ESTIMATE
$INCLUDE WWINSERT RBO.H
$DEFINE ESTIMATE
$INCLUDE JES.CPYLIB ESTIMATE
$DEFINE ESTIMATEMATL
$INCLUDE JES.CPYLIB ESTIMATE.MATL
$INCLUDE JES.CPYLIB ESTIMATE.BIND.SPOIL
$INCLUDE JES.CPYLIB ESTIMATE.RES.PRESS.SPOIL
$DEFINE ESTIMATERES
$INCLUDE JES.CPYLIB ESTIMATE.RES
$INCLUDE ICS.CPYLIB INVENTORY
$INCLUDE ICS.CPYLIB INV.WHSE
$DEFINE JESFILEVARS
$INCLUDE JES.CPYLIB JES.FILE.VARS
$DEFINE COMPANY
$INCLUDE PMC.CPYLIB COMPANY
$DEFINE FILEVARS
$INCLUDE CPYLIB FILE.VARS
$INCLUDE CPYLIB CHAR
$INCLUDE PMC.CPYLIB COST.CNTR

*--- OPEN FILES
*
ERRMSG = RBO.getProperty('','ID',ID)

	OPEN '','ESTIMATE.RES.PRESS.SPOIL' TO ESTIMATE.RES.PRESS.SPOIL ELSE
	ERRMSG = 'CANNOT OPEN ESTIMATE.RES.PRESS.SPOIL FILE'
	END

	*OPEN "","ESTIMATE" TO ESTIMATE ELSE
	*	ERRMSG="CAN NOT OPEN ESTIMATE FILE"
	*END
	
	*OPEN "","ESTIMATE.RES" TO ESTIMATE.RES ELSE
	*	ERRMSG="CAN NOT OPEN ESTIMATE FILE"
	*END

	OPEN "","ESTIMATE.BIND.SPOIL" TO ESTIMATE.BIND.SPOIL ELSE
		ERRMSG = "CAN NOT OPEN ESTIMATE.BIND.SPOIL FILE"
	END

	OPEN "","COST.CNTR" TO COST.CNTR ELSE
		ERRMSG = "CAN NOT OPEN COST.CNTR FILE"
	END

	MATREAD EST.REC FROM ESTIMATE,CONO:ID ELSE MAT EST.REC =''
	MATREAD EST.RL.REC FROM ESTIMATE.RES,CONO:ID ELSE MAT EST.RL.REC = ''
	
NO.PASS = DCOUNT(EST.RL.PRESS.CCTR<1,COMP>,SM)

*
*--- Calculate Spoilage
*
      TOT.PR.SPOIL.PC=0
      MR.PC=0
      FOR MPTR=1 TO NO.PASS
         NO.COLS=0
         NO.COLS=EST.PROD.COLORS.1<1,COMP,MPTR>+EST.RL.BACKPRINT<1,COMP,MPTR>
         NO.COLS=NO.COLS + (EST.RL.ADHESIVE<1,COMP,MPTR>+0)
         NO.COLS=NO.COLS + (EST.RL.SSCREEN<1,COMP,MPTR>+0)
         NO.COLS=NO.COLS + (EST.RL.GRAVURE<1,COMP,MPTR>+0)
         IF EST.RL.FULL.SPOT<1,COMP,MPTR> = 'S' THEN
            NO.COLS=NO.COLS+1
         END
         PRESS.ID=EST.RL.PRESS.CCTR<1,COMP,MPTR>
         MATREAD PST.REC FROM ESTIMATE.RES.PRESS.SPOIL,CONO:PRESS.ID:"*":NO.COLS:"*":EST.RL.FOIL<1,COMP,MPTR> ELSE
	  ERRMSG = 'Cannot locate Press Spoilage Table, Press: ':PRESS.ID:', Colors: ':NO.COLS:', Foil: ':EST.RL.FOIL<1,COMP,MPTR>
            MAT PST.REC=''
         END

         READV PRESS.TYPE FROM COST.CNTR,CONO:PRESS.ID,3 ELSE PRESS.TYPE='W'

*
*--- Reduce Number Of Colours by 1 as Base M/R includes 1 Colour
*
         NO.COLS=NO.COLS-1
         IF NO.COLS <0 THEN NO.COLS=0
         VAR1=PST.INIT.QTY                         ;* Base Setup Spoils
         VAR2=PST.COLOUR * NO.COLS                 ;* Colour Spoilage
         VAR3=(PST.COL.CHNGE+0)*(EST.RL.COLOR.CHANGES<1,COMP,MPTR>+0)
         VAR4=(PST.PLATE+0)*(EST.RL.PLATE.CHANGES<1,COMP,MPTR>+0)
*         VAR5=(PST.COL.PLATE+0)*(EST.RL.COL.PLATE<1,COMP,MPTR>+0)
         IF EST.RL.SPROCKET='Y' THEN
            VAR5=PST.SPROCKET+0
         END ELSE
            VAR5=0
         END
         IF EST.RL.FOIL<1,COMP,MPTR>='Y' THEN
            VAR6=PST.FOIL
         END ELSE
            VAR6=0
         END
         MR.PC=MR.PC+VAR1+VAR2+VAR3+VAR4+VAR5+VAR6
*
*--- Convert Make Ready to Paper Unit of Measure (LMS or MSI)
*
         IF PRESS.TYPE='S' THEN
*         IMPMTS=(EST.RL.DIE.REPEAT<1,COMP,1>/10000)*EST.RL.DIE.NO.ARD<1,COMP,1>
            IMPMTS=EST.RL.DIE.REPEAT<1,COMP,1>/10000
*           MR.PC=INT(MR.PC*(IMPMTS/1000)) ;* METRIC
            MR.PC=INT(MR.PC*IMPMTS)        ;* IMPERIAL
         END ELSE
            MR.PC=MR.PC * 12   ;* IMPERIAL
         END
         PR.SPOIL.PC=""
         FIN.SPOIL.PC=""
*
*--- Now Calculate Using Factor Tables
*
         SPOIL.BRK.CNT=DCOUNT(PST.QTY,VM)
         FLG=0
* T22084
           VAL.PC = INT(BASE.PC/12)
            LOCATE VAL.PC IN PST.QTY<1>,1 BY "AR" SETTING P ELSE NULL
            BEGIN CASE
            CASE P = 1
               PSPCT = PST.PCT<1,P>
            CASE P > COUNT(PST.QTY,VM) + 1
               PSPCT = PST.PCT<1,P-1>
            CASE PST.EXTR = "Y"
               PSPCT = INT(PST.PCT<1,P>-(PST.QTY<1,P>-VAL.PC)/(PST.QTY<1,P>-PST.QTY<1,P-1>)*(PST.PCT<1,P>-PST.PCT<1,P-1>)+0.5)
            CASE 1
               PSPCT = PST.PCT<1,P>
            END CASE
            PR.SPOIL.PC = INT(BASE.PC*PSPCT/100000+0.99)
         IF PR.SPOIL.PC="" THEN PR.SPOIL.PC=BASE.PC*PST.PCT<1,SPOIL.BRK.CNT>/100000
*T22084
         IF PR.SPOIL.PC="" THEN PR.SPOIL.PC=BASE.PC*PST.PCT<1,SPOIL.BRK.CNT>/100000
         IF EST.RL.SSCREEN<1,COMP,MPTR>+0 >0 THEN PR.SPOIL.PC=PR.SPOIL.PC+(BASE.PC*(PST.SSCREEN<1>/10000))
         IF EST.RL.GRAVURE<1,COMP,MPTR>+0 >0 THEN PR.SPOIL.PC=PR.SPOIL.PC+(BASE.PC*(PST.GRAVURE<1>/10000))
         IF EST.RL.EMBOSS<1,COMP,MPTR>='Y' THEN PR.SPOIL.PC=PR.SPOIL.PC+(BASE.PC*(PST.EMBOSS<1>/10000))
         TOT.PR.SPOIL.PC=TOT.PR.SPOIL.PC+PR.SPOIL.PC
      NEXT MPTR
      PR.SPOIL.PC=TOT.PR.SPOIL.PC
*
*--- Calculate Finishing Spoilage's
*
      IF NUM(EST.PROD.BIND.SPOIL<1,COMP,1>) THEN
         FIN.SPOIL.PC=BASE.PC*EST.PROD.BIND.SPOIL<1,COMP,1>/100
      END ELSE
         MATREAD BST.REC FROM ESTIMATE.BIND.SPOIL,CONO:EST.PROD.BIND.SPOIL<1,COMP,1> ELSE
		ERRMSG = 'Cannot locate Bindery Spoilage Table: ':EST.PROD.BIND.SPOIL<1,COMP,1>
		 MAT BST.REC=""
	  END
         FIN.BRK.CNT=DCOUNT(BST.QTY,VM)
         FLG=0
         FOR X=1 TO FIN.BRK.CNT UNTIL FLG
            IF QQTY <= BST.QTY<1,X> THEN
               FIN.SPOIL.PC=BASE.PC*BST.PCT<1,X>/10000
               FLG=1
            END
         NEXT X
         IF FIN.SPOIL.PC="" THEN FIN.SPOIL.PC=BASE.PC*BST.PCT<1,FIN.BRK.CNT>/10000
         IF PRESS.TYPE='S' THEN
            IMPMTS=(EST.RL.DIE.REPEAT<1,COMP,1>/10000)*EST.RL.DIE.NO.ARD<1,COMP,1>
            FIN.SPOIL.PC=INT(FIN.SPOIL.PC*(IMPMTS/1000))
         END
      END
*
*---- ERROR ROUTINE
*

IF ERRMSG # '' THEN
	STATUS = RBO.setProperty('','ESTRLM_Recal_MSG',ERRMSG )
	RETURN
END

93000 *

  STATUS = RBO.setProperty('','ServerStatus',1)
  STATUS = RBO.setProperty('','ServerMessage',ERRMSG)
  RETURN

