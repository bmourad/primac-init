SUBROUTINE PHYPAPE_DIFF_ADJ_QTY
********************************************************************************
*   Program name :- PHYPAPE_DIFF_ADJ_QTY
*   Created	   :- 11/06/2006
*   Programmer   :- Suhail Hussain S
********************************************************************************
$INCLUDE WWINSERT RBO.H
$INCLUDE ICS.CPYLIB PHYSICAL.INV
$INCLUDE ICS.CPYLIB INV.ADJ.CODES
$INCLUDE ICS.CPYLIB INVENTORY
$INCLUDE ICS.CPYLIB INV.WHSE
$INCLUDE ICS.CPYLIB INV.WHSE.LOC
$INCLUDE ICS.CPYLIB CATEGORY
$INCLUDE ICS.CPYLIB INV_SERIAL
$INCLUDE ICS.CPYLIB INV.CNV
$INCLUDE PMC.CPYLIB COMPANY
$INCLUDE CPYLIB CHAR

   DEFFUN CALC_DIAM(COST.QTY,STK.QTY,MAT INV.REC)
   DEFFUN CALC_STK_QTY(COST.QTY,MAT INV.CNV.REC,ROND,LN)

   OPEN '','PHYSICAL.INV' TO PHYSICAL.INV ELSE ERRMSG = 'CANNOT OPEN PHYSICAL.INV FILE';GOTO 91000
   OPEN '','INV.ADJ.CODES' TO INV.ADJ.CODES ELSE ERRMSG = 'CANNOT OPEN INV.ADJ.CODES FILE';GOTO 91000
   OPEN '','INVENTORY' TO INVENTORY ELSE ERRMSG = 'CANNOT OPEN INVENTORY FILE'; GOTO 91000
   OPEN '','INV.WHSE' TO INV.WHSE ELSE ERRMSG = 'CANNOT OPEN INV.WHSE FILE'; GOTO 91000
   OPEN '','INV.WHSE.LOC' TO INV.WHSE.LOC ELSE ERRMSG = 'CANNOT OPEN INV.WHSE.LOC FILE'; GOTO 91000
   OPEN '','CATEGORY' TO CATEGORY ELSE ERRMSG = 'CANNOT OPEN CATEGORY FILE'; GOTO 91000
   OPEN '','INV_SERIAL' TO INV_SERIAL ELSE ERRMSG = 'CANNOT OPEN INV_SERIAL FILE'; GOTO 91000

   STATUS = RBO.getProperty('','PMCProperty',PMCProperty)
   STATUS = RBO.getProperty('','LN_VALS',LN_VALS)
   STATUS = RBO.getProperty('','SERIAL_NUM',SERIAL_NUM)
   STATUS = RBO.getProperty('','DIFF_SHEET',DIFF.SHEET)
   STATUS = RBO.getProperty('','DIFF_QTY',DIFF.QTY)
   STATUS = RBO.getProperty('','DIFF_WGHT',DIFF.WGHT)
   STATUS = RBO.getProperty('','DIFF_DIAM',DIFF.DIAM)
   STATUS = RBO.getProperty('','PHY_INV_REC',PHY_INV_REC)
   STATUS = RBO.getProperty('','IP_PROMPT',IP_VAL)
   STATUS = RBO.getProperty('','ADJ_DIAM',ADJ_DIAM)

   MAT PHS.INV.REC='';MAT INV.CNV.REC='';MAT CATG.REC=''
   CONO    = PMCProperty<1,4>
   OPER.ID = PMCProperty<1,3>
   LN1 = LN_VALS<1,1>
   LN2 = LN_VALS<1,2>
   DELIMCHAR = "ð"

   MATPARSE PHS.INV.REC FROM PHY_INV_REC, DELIMCHAR
   MATREAD ISTK.REC FROM INV_SERIAL, CONO:SERIAL_NUM ELSE MAT ISTK.REC = ""
   MATREAD INV.REC FROM INVENTORY, CONO:ISTK.PROD ELSE MAT INV.REC = ""
   MATREAD CATG.REC FROM CATEGORY, CONO:INV.LINE ELSE MAT CATG.REC = ""

   PROD_NUM = ISTK.PROD
   PROD_LINE = INV.LINE
   PROD_TYPE = INV.PAP.TYPE
   CATG_TYPE = CATG.TYPE
   WHSE_CODE = ISTK.WHSE
   LOC_CODE = ISTK.LOC
   PHY_INV_REC = ""

   IF CATG.TRK.LVL='S' THEN
      BEGIN CASE
         CASE CATG.TYPE="L"
            U.M="LBS"
         CASE CATG.TYPE="S"
            U.M="SHT"
         CASE CATG.TYPE="RL"
            U.M="PC"
         CASE CATG.TYPE="PC"
            U.M="FT"
         CASE 1
            U.M=INV.UNIT<1,2>
      END CASE
   END

   MATREAD IWLO.REC FROM INV.WHSE.LOC,CONO: PROD_NUM:'!':WHSE_CODE:'!':LOC_CODE ELSE
      MAT IWLO.REC = ""
      IWLO.LOC.ON.HAND=0
   END
   MATREAD IWH.REC FROM INV.WHSE,CONO:PROD_NUM:'!':WHSE_CODE ELSE MAT IWH.REC = ""
   GOSUB SET.CONV.VALUES 
   IF IP_VAL<1,1> # "" THEN IP_VAL<1,1> = ICONV(IP_VAL<1,1>,"MD" : ICR.SCAL<LN1>)
   IF IP_VAL<1,2> # "" THEN IP_VAL<1,2> = ICONV(IP_VAL<1,2>,"MD" : ICR.SCAL<LN1>)
1000 *
   GOSUB SERIAL.LINES.ENTRY

ENT.ADJ.QTY:
   ERRMSG='' ; SKIP =0
   ROND='.5'
   BEGIN CASE
      CASE PHS.ADJ.TYPE<1,LN1,LN2>='R'
         VALUE=INT(((IP_VAL<1,1>/ICR.MT1<LN1>)*ICR.DV1<LN1>)*ICR.DV2<LN1>+ROND)
         VALUE -=PHS.CUR.WGHT<1,LN1,LN2>
      CASE PHS.ADJ.TYPE<1,LN1,LN2>='P'
         IF PHS.CUR.SHEET<1,LN1,LN2> + IP_VAL<1,2> > ISTK.ORG.STK.QTY THEN
            ERRMSG='ADJUSTED QTY. EXCEEDS ORIGINALY RECEIVED QTY. USE RECEIPT ADJUSTMENTS.'
            GOTO 91000
         END
         VALUE = INT(((IP_VAL<1,2>/ICR.MT1<LN1>)*ICR.DV1<LN1>)*ICR.DV2<LN1>+ROND)
      CASE 1
         IF IWH.ON.HAND-IWH.RESV>1 THEN
            IF ISTK.RSVB.QTY>1 THEN
               VALUE = INT(((IP_VAL<1,2>/ICR.MT1<LN1>)*ICR.DV1<LN1>)*ICR.DV2<LN1>+ROND)
               IF ABS(VALUE-IWH.ON.HAND-IWH.RESV)<=9 THEN VALUE=PHS.CUR.WGHT<1,LN1,LN2>
               IF ABS(VALUE-PHS.CUR.WGHT<1,LN1,LN2>) <= 9 THEN VALUE = PHS.CUR.WGHT<1,LN1,LN2>
               
               IF IWH.ON.HAND - IWH.RESV < VALUE THEN
                  TMP=CALC_STK_QTY(IWH.ON.HAND-IWH.RESV,MAT INV.CNV.REC,'',LN1)
                  TMP=OCONV(TMP,ICR.CNV<LN1>)
                  ERRMSG='AVAILABLE QUANTITY IS ONLY ':TMP
                  GOTO 91000
               END ELSE
                  IF ISTK.RSVB.QTY<VALUE THEN
                     TMP=CALC_STK_QTY(ISTK.RSVB.QTY,MAT INV.CNV.REC,'',LN1)
                     TMP=OCONV(TMP,ICR.CNV<LN1>)
                     ERRMSG='SERIAL AVAILABLE QTY IS ONLY ':TMP
                     GOTO 91000
                  END ELSE
                     IF VALUE > PHS.CUR.WGHT<1,LN1,LN2> THEN
                        VALUE = PHS.CUR.WGHT<1,LN1,LN2>
                     END
                     VALUE=VALUE*(-1)
                  END
               END
            END ELSE
               ERRMSG='SERIAL AVAILABLE QUANTITY IS ZERO'
               GOTO 91000
            END
         END ELSE
            ERRMSG=' AVAILABLE QUANTITY IS ZERO'
            GOTO 91000
         END
   END CASE
   IF VALUE > 0 AND PHS.UN.COST<1,LN1>='' THEN
      SAVE.VALUE=VALUE
      VALUE=SAVE.VALUE
   END
*RETURN

CALC.ADJUSTMENTS: 
   RET_VALUE = ""
   DIFF.QTY<1,LN1>=DIFF.QTY<1,LN1> - DIFF.WGHT<1,LN1,LN2>
   IF PHS.NEW.WGHT<1,LN1,LN2>='' THEN
      PHS.NEW.QTY<1,LN1>=PHS.NEW.QTY<1,LN1> - PHS.CUR.WGHT<1,LN1,LN2>
   END ELSE
      PHS.NEW.QTY<1,LN1> = PHS.NEW.QTY<1,LN1>-PHS.NEW.WGHT<1,LN1,LN2>
   END
   DIFF.WGHT<1,LN1,LN2> = VALUE
   IF DIFF.WGHT<1,LN1,LN2> < 0 THEN ROND="-.5" ELSE ROND=".5"
   DIFF.SHEET<1,LN1,LN2> = INT(((DIFF.WGHT<1,LN1,LN2>/ICR.DV1<LN1>)*ICR.MT1<LN1>)/ICR.DV2<LN1>+ROND)
   PHS.NEW.WGHT<1,LN1,LN2>=PHS.CUR.WGHT<1,LN1,LN2>+VALUE
   ROND='.5'
   PHS.NEW.SHEET<1,LN1,LN2>=INT(((PHS.NEW.WGHT<1,LN1,LN2>/ICR.DV1<LN1>)*ICR.MT1<LN1>)/ICR.DV2<LN1>+ROND)
   IF PHS.NEW.WGHT<1,LN1,LN2> = 0 AND ABS(PHS.NEW.SHEET<1,LN1,LN2>) <= 9 THEN PHS.NEW.SHEET<1,LN1,LN2> = 0
   DIFF.QTY<1,LN1> = SUM(PHS.NEW.WGHT<1,LN1>) - SUM(PHS.CUR.WGHT<1,LN1>)
   PHS.NEW.QTY<1,LN1> = PHS.CUR.QTY<1,LN1> + DIFF.QTY<1,LN1>
   
   IF DIFF.WGHT<1,LN1,LN2> < 0 THEN ROND="-.5" ELSE ROND=".5"
   RET_VALUE<1,1> = OCONV(INT(((DIFF.WGHT<1,LN1,LN2>/ICR.DV1<LN1>)*ICR.MT1<LN1>)/ICR.DV2<LN1>+ROND), ICR.CNV<LN1>)
   
   IF PHS.NEW.WGHT<1,LN1,LN2> < 0 THEN ROND="-.5" ELSE ROND=".5"
   RET_VALUE<1,2> = OCONV(INT(((PHS.NEW.WGHT<1,LN1,LN2>/ICR.DV1<LN1>)*ICR.MT1<LN1>)/ICR.DV2<LN1>+ROND), ICR.CNV<LN1>)
   FOCUS = ""
   IF U.M # "SHT" THEN
      BEGIN CASE
         CASE PHS.ADJ.TYPE<1,LN1,LN2>='R'
            WGHT=PHS.NEW.WGHT<1,LN1,LN2>
            SHTS=PHS.NEW.SHEET<1,LN1,LN2>
            DIAM=""
            GOSUB GET.DIAM
            IF DIAM # "" THEN
               PHS.NEW.DIAM<1,LN1,LN2>=DIAM
               VALUE=DIAM
            END ELSE
               VALUE=OCONV(PHS.NEW.DIAM<1,LN1>,"MD2")
            END
            VALUE=VALUE-PHS.CUR.DIAM<1,LN1,LN2>
         CASE 1
            WGHT=PHS.NEW.WGHT<1,LN1,LN2>
            SHTS=PHS.NEW.SHEET<1,LN1,LN2>
            DIAM=""
            GOSUB GET.DIAM
            IF DIAM # "" THEN
               PHS.NEW.DIAM<1,LN1,LN2>=DIAM
               VALUE=ABS(DIAM-PHS.CUR.DIAM<1,LN1,LN2>)
            END ELSE
               DEFAULT = OCONV(ABS(DIFF.DIAM<1,LN1,LN2>),"MD2")
               IF ADJ_DIAM = "" THEN
                  FOCUS<1,1> = "ADJ_DIAM"
                  FOCUS<1,2> = DEFAULT
                  GOTO SET_PROPERTIES
               END ELSE
                  VALUE = ADJ_DIAM
               END
            END
            IF PHS.ADJ.TYPE<1,LN1,LN2>='M' THEN VALUE=VALUE*(-1)
      END CASE
      DIFF.DIAM<1,LN1,LN2> = VALUE
      PHS.NEW.DIAM<1,LN1,LN2> = PHS.CUR.DIAM<1,LN1,LN2> + VALUE
      RET_VALUE<1,3> = OCONV(PHS.NEW.DIAM<1,LN1,LN2>,"MD2")      
   END
   DEFDIFF=DIFF.SHEET<1,LN1,LN2>

   MATBUILD PHY_INV_REC FROM PHS.INV.REC USING DELIMCHAR
   STATUS = RBO.setProperty('','PHY_INV_REC',PHY_INV_REC)
   STATUS = RBO.setProperty('','DIFF_QTY',DIFF.QTY)
   STATUS = RBO.setProperty('','DIFF_SHEET',DIFF.SHEET)
   STATUS = RBO.setProperty('','DIFF_WGHT',DIFF.WGHT)
   STATUS = RBO.setProperty('','DIFF_DIAM',DIFF.DIAM)
SET_PROPERTIES:
   STATUS = RBO.setProperty('','IP_PROMPT',FOCUS)
   STATUS = RBO.setProperty('','SKIP_PROMPT',RET_VALUE)
RETURN

SERIAL.LINES.ENTRY: 
   PHS.CUR.WGHT<1,LN1,LN2> = ISTK.CUR.QTY
   PHS.INV.PROD<1,LN1> = ISTK.PROD
   WGHT = ISTK.CUR.QTY
   DIAM = ISTK.CUR.DIAM
   SHTS = ISTK.CUR.STK.QTY
   GOSUB GET.DIAM
   PHS.CUR.DIAM<1,LN1,LN2> = DIAM
*   STATUS = RBO.setProperty('','ISTK_CUR_DIAM',DIAM)
   PHS.CUR.SHEET<1,LN1,LN2> = ISTK.CUR.STK.QTY
   CUR_WGHT = OCONV(INT(((PHS.CUR.WGHT<1,LN1,LN2>/ICR.DV1<LN1>)*ICR.MT1<LN1>)/ICR.DV2<LN1>+.5), ICR.CNV<LN1>)
   DIAM_VAL = OCONV(PHS.CUR.DIAM<1,LN1,LN2>,"MD2")
RETURN

GET.DIAM: 
   IF INV.PAP.TYPE='ROLL' OR INV.PAP.TYPE='LROLL' OR INV.PAP.TYPE='PC' THEN
      DIAM = CALC_DIAM(WGHT,SHTS+0,MAT INV.REC)
   END ELSE
      DIAM = 0
   END
RETURN

SET.CONV.VALUES: 
   BEGIN CASE
      CASE INV.UNIT<1,2>='SHT' AND INV.UNIT<1,3>='LBS'
         ICR.CNV<LN1>="MD0";ICR.SCAL<LN1>=0;ICR.TYPE<LN1>=3
         ICR.DV1<LN1>=INV.M.WT;ICR.MT1<LN1>=1;ICR.DV2<LN1>=1
      CASE INV.UNIT<1,2>='PC' AND INV.UNIT<1,3>='MSI'
         ICR.CNV<LN1>="MD0";ICR.SCAL<LN1>=0;ICR.TYPE<LN1>=3
         ICR.DV1<LN1>=INV.PAP.WIDTH/100;ICR.MT1<LN1>=10;ICR.DV2<LN1>=1
      CASE INV.UNIT<1,2>='FT' AND INV.UNIT<1,3>='MSI'
         ICR.CNV<LN1>="MD0";ICR.SCAL<LN1>=0;ICR.TYPE<LN1>=3
         ICR.DV1<LN1>=INV.PAP.WIDTH/100;ICR.MT1<LN1>=100;ICR.DV2<LN1>=12
      CASE 1
         ICR.CNV<LN1>="MD2";ICR.SCAL<LN1>=2;ICR.TYPE<LN1>=4
         ICR.DV1<LN1>=10;ICR.MT1<LN1>=1;ICR.DV2<LN1>=1
   END CASE
RETURN

91000*
   STATUS = RBO.setProperty('','ServerMessage',ERRMSG)
   STATUS = RBO.setProperty('','ServerStatus',1)
RETURN
