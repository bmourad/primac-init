SUBROUTINE SET_PROD_DESC_UM
********************************************************************************
*   Program name :- SET_PROD_DESC_UM
*   Created:- 3/22/2004
*------------------------------------------------------------------------------*
*

* In Properties:
* --------------
*  
*
* Out Properties:
* ---------------
*  
********************************************************************************
$INCLUDE WWINSERT RBO.H
$INCLUDE ICS.CPYLIB INVENTORY
$INCLUDE ICS.CPYLIB CATEGORY
$INCLUDE APS.CPYLIB VEND.PO.STATS
$INCLUDE JCS.CPYLIB JOB
$INCLUDE POS.CPYLIB MISC.PO
$INCLUDE JCS.CPYLIB CATEGORY.OSP
$INCLUDE ICS.CPYLIB WAREHOUSE
$INCLUDE CPYLIB CHAR

* Insert method code here
ERRMSG   = ""
	OPEN '','VEND.PO.STATS' TO VEND.PO.STATS ELSE ERRMSG="VEND.PO.STATS FILE IS MISSING"; GOTO 1000
	OPEN '','INVENTORY' TO INVENTORY ELSE ERRMSG="INVENTORY FILE IS MISSING"; GOTO 1000
	OPEN '','CATEGORY' TO CATEGORY ELSE ERRMSG="CATEGORY FILE IS MISSING"; GOTO 1000
	OPEN '','MISC.PO' TO MISC.PO ELSE ERRMSG="MISC.PO FILE IS MISSING"; GOTO 1000
	OPEN '','JOB' TO JOB ELSE ERRMSG="JOB FILE IS MISSING"; GOTO 1000
	OPEN '','CATEGORY.OSP' TO CATEGORY.OSP ELSE ERRMSG="CATEGORY.OSP FILE IS MISSING"; GOTO 1000
	OPEN '','WAREHOUSE' TO WAREHOUSE ELSE ERRMSG="WAREHOUSE FILE IS MISSING"; GOTO 1000

	STATUS  = RBO.getProperty('', 'ID', ID)

	CHECK.FLG	= FIELD(ID,'~',3)
	VALUE   	= FIELD(ID,'~',2)
	ID	 	= FIELD(ID,'~',1)
	CONO    	= ID[1,3]
	TVO.PO.TYPE	= FIELD(ID,'!',2)
       OPT_OR_REQ = "R"
	MATREAD VPS.REC FROM VEND.PO.STATS , ID ELSE      
      		MAT VPS.REC = ""
   	END
   BEGIN CASE
	CASE TVO.PO.TYPE = "R"	      		
     		MATREAD INV.REC FROM INVENTORY , CONO:VALUE ELSE
	        	ERRMSG = "Product # (":VALUE:") not on file."; GOTO 1000
	      	END
      		IF INV.LINE = "" THEN
           		ERRMSG = "Product does not have a product line."
	           	GOTO 1000
      		END
	      	MATREAD CATG.REC FROM CATEGORY, CONO : INV.LINE ELSE
       	    	ERRMSG = "Product line (":INV.LINE:") is not on file."         
	           	GOTO 1000
      		END
	      	IF CATG.ACCRU.LIAB = "" OR CATG.AP.ACCT = "" THEN
       	    	ERRMSG = "Invalid Account on Product Line."
	           	GOTO 1000
		END

      		TEMP.VALUES<2> = VALUE
		TEMP.VALUES<3> = INV.FULL.DESC

*      	IF INV.COST.WT + 0 = 0 THEN INV.COST.WT = 100
 *     	IF INV.SBR + 0 = 0 THEN INV.SBR = 1
		*
		**** ENTER WAREHOUSE
		*	      	   	
   		WHSE_DIV = ""
		FOR JJ = 1 TO DCOUNT(INV.WHSE.CODE,VM)	
			READV WHSE.DIV FROM WAREHOUSE,CONO:INV.WHSE.CODE<1,JJ>,9 ELSE WHSE.DIV = ""
			WHSE_DIV<1,-1> = WHSE.DIV
		NEXT JJ
		WHSE_DIV 	= LOWER(WHSE_DIV)
		INV.WHSE.CODE = LOWER(INV.WHSE.CODE)
		*
		**** ENTER ORDERING UNITS
		*		
       	  TEMP.VALUES<5> = INV.UNIT<1,2>        
		  BEGIN CASE      
      			CASE INV.UNIT<1,2> = "SHT" AND INV.UNIT<1,3> = "LBS"
         			TEMP.CNV<1> = "MD0"; TEMP.DV2<1> = 1
	         		TEMP.DV1<1> = INV.M.WT; TEMP.MT1<1> = 10
      			CASE INV.UNIT<1,2> = "PC" AND INV.UNIT<1,3> = "MSI"
		       	  TEMP.CNV<1> = "MD0"; TEMP.DV2<1> = 1
			         TEMP.DV1<1> = INV.PAP.WIDTH/100; TEMP.MT1<1> = 100
			CASE INV.UNIT<1,2> = "FT" AND INV.UNIT<1,3> = "MSI"
			         TEMP.CNV<1> = "MD0"; TEMP.DV2<1> = 12
		       	  TEMP.DV1<1> = INV.PAP.WIDTH/100; TEMP.MT1<1> = 1000
			CASE 1
			         TEMP.CNV<1> = "MD2"; TEMP.DV2<1> = 1
			         TEMP.DV1<1> = 1; TEMP.MT1<1> = 1
	   	 END CASE
   	 	 BEGIN CASE	
	        	CASE TEMP.VALUES<5> = "SHT" AND INV.UNIT<1,3> = "LBS"
			         TEMP.CNV<2> = "MD0"; TEMP.DV2<2> = 1
			         TEMP.DV1<2> = INV.M.WT; TEMP.MT1<2> = 10
			CASE TEMP.VALUES<5> = "PC" AND INV.UNIT<1,3> = "MSI"
		       	  TEMP.CNV<2> = "MD0"; TEMP.DV2<2> = 1
		         	  TEMP.DV1<2> = INV.PAP.WIDTH/100; TEMP.MT1<2> = 100
			CASE TEMP.VALUES<5> = "FT" AND INV.UNIT<1,3> = "MSI"
			         TEMP.CNV<2> = "MD0"; TEMP.DV2<2> = 12
			         TEMP.DV1<2> = INV.PAP.WIDTH/100; TEMP.MT1<2> = 1000
			CASE 1
		         	  TEMP.CNV<2> = "MD2"; TEMP.DV2<2> = 1
  			         TEMP.DV1<2> = 1
			         IF TEMP.VALUES<5> # INV.UNIT<1,3> THEN
			            TEMP.MT1<2> = INV.SBR
		       	  END ELSE
		         		TEMP.MT1<2> = 1
	         		  END
   	 	 END CASE
		*
		**** ENTER VOUCHERED QUANTITY
		*
		QTY.CALC.VALUES = TEMP.CNV<2> :"^": TEMP.MT1<2> :"^": TEMP.DV1<2> :"^": TEMP.DV2<2> :"^": TEMP.CNV<1>		

		LOCATE VALUE IN VPS.PROD<1>,1 SETTING FNDPD ELSE FNDPD = 0
	      	IF FNDPD = 0 AND CHECK.FLG = "P" THEN
      		   	ERRMSG 	 = "This product is not setup for this PO. Ok to use? (Y/N)"
			TEMP.VALUES<3> = TEMP.VALUES<2>:VM:TEMP.VALUES<3>:VM:WHSE_DIV:VM:INV.WHSE.CODE:VM:TEMP.VALUES<5>:VM:QTY.CALC.VALUES
	 		GOTO 1000
	      	END

		STATUS = RBO.setProperty('', 'COLS', TEMP.VALUES<2>:VM:TEMP.VALUES<3>:VM:WHSE_DIV:VM:INV.WHSE.CODE:VM:TEMP.VALUES<5>:VM:QTY.CALC.VALUES)
************************ END OF REGULAR PO CODE **************************************
	CASE TVO.PO.TYPE = "O"
		 MATREAD JOB.REC FROM JOB, CONO:VALUE ELSE
		       ERRMSG = "JOB # (":VALUE:") not on file."    
    		       GOTO 1000
  		 END
		 LOCATE VALUE IN VPS.PROD<1>,1 SETTING FNDPD ELSE FNDPD = 0
  		 IF FNDPD = 0 AND CHECK.FLG = "P" THEN
	  	  	ERRMSG = "This job is not setup for this PO. Ok to use? (Y/N)"
 	 		TEMP.VALUES<3> = JOB.DESC<1,1>
    			GOTO 1000    
  		 END	 	 
  		 TEMP.VALUES<2> = VALUE
  		 TEMP.VALUES<3> = JOB.DESC<1,1>
  
		*
		**** ENTER OSP CATEGORY
		*
  		LIST.O.JOBS='' ; OTH.DEFAULT='' ;NUM.THIS.PROD=0
  		IF VPS.PROD # "" THEN
	    		NUM.PROD=DCOUNT(VPS.PROD,VM)
    			PROD.OFFSET=''
    			FOR KK = 1 TO NUM.PROD
      				IF VPS.PROD<1,KK> = TEMP.VALUES<2> THEN
        				NUM.THIS.PROD = NUM.THIS.PROD+1
        				OTH.DEFAULT<1,NUM.THIS.PROD>=FIELD(VPS.WHSE<1,KK>,"@",1)
        				PROD.OFFSET<1,NUM.THIS.PROD>=KK
      				END
	    		NEXT KK
    			IF NUM.THIS.PROD>1 THEN
      				FOR KK=1 TO NUM.THIS.PROD
        				OFF.PTR=PROD.OFFSET<1,KK>
        				IF KK=1 THEN
          					LIST.O.JOBS=OTH.DEFAULT<1,OFF.PTR>
        				END ELSE
          					LIST.O.JOBS=LIST.O.JOBS:", ":OTH.DEFAULT<1,OFF.PTR>
        				END
      				NEXT KK
    			END
  		END
  		POS.DEF.OFFSET=0
  		IF NUM.THIS.PROD=1 THEN 
      			DEFAULT = OTH.DEFAULT ; O.R = 'O'
  		END
  		TEMP.VALUES<4> = DEFAULT

		*
		*   Enter Unit of Measure
		*
		 NUM.THIS.PROD=0 ; OTH.DEFAULT='' ; LIST.O.JOBS='' ; POS.DEF.OFFSET=0
		* calculate the um from what has been entered
	    	LOCATE TEMP.VALUES<2> IN VPS.PROD<1>,1 SETTING FPOS THEN
      			NUM.PROD=DCOUNT(VPS.PROD<1>,VM)
      			NUM.FOUND=0
      			PROD.OFFSET=''
      			FOR KK = FPOS TO NUM.PROD
        			IF VPS.PROD<1,KK> = TEMP.VALUES<2> THEN
          				NUM.THIS.PROD = NUM.THIS.PROD+1
          				OTH.DEFAULT<1,NUM.THIS.PROD>=VPS.U.M<1,KK>
          				PROD.OFFSET<1,NUM.THIS.PROD>=KK
        			END
      			NEXT KK
      			IF NUM.THIS.PROD>1 THEN
        			FOR KK=1 TO NUM.THIS.PROD
 			       	OFF.PTR=PROD.OFFSET<1,KK>
          				IF KK=1 THEN
            					LIST.O.JOBS=OTH.DEFAULT<1,OFF.PTR>
          				END ELSE
            					LIST.O.JOBS=LIST.O.JOBS:", ":OTH.DEFAULT<1,OFF.PTR>
          				END
        			NEXT KK
      			END
	       	IF NUM.THIS.PROD = 1 THEN
        			SET.VALUES=OTH.DEFAULT<1,1>
        			POS.DEF.OFFSET=PROD.OFFSET<1,1>
      			END
    		END ELSE
      			FPOS=0
    		END
 
  		IF SET.VALUES # "" THEN 
    			VALUE=SET.VALUES
  		END ELSE
    			VALUE=''    
  		END
	  	TEMP.VALUES<7>=VALUE
		*
		**** ENTER VOUCHERED QUANTITY
		*

      		IF VPS.REC.AMT<1,POS.DEF.OFFSET> > 0 AND VPS.REC.QTY<1,POS.DEF.OFFSET> > 0 THEN
        		DEFAULT = VPS.REC.QTY<1,POS.DEF.OFFSET> ; O.R = 'O'
      		END ELSE
        		IF VPS.ORD.QTY<1,POS.DEF.OFFSET> > 0 THEN
          			DEFAULT = VPS.ORD.QTY<1,POS.DEF.OFFSET> ; O.R = 'O'
        		END
      		END
		TEMP.VALUES<5> = DEFAULT	
		*
		*   ENTER UNIT PRICE
		*
		BEGIN CASE
		  CASE POS.DEF.OFFSET # 0		
			BEGIN CASE                                   
        			CASE TEMP.VALUES<7> = 'M' ; ADJVAL = 100000
			       CASE TEMP.VALUES<7> = 'C' ; ADJVAL = 10000 
        			CASE 1 ; ADJVAL = 100                      
	      		END CASE                                     
	
      			IF VPS.REC.AMT<1,POS.DEF.OFFSET> > 0 AND VPS.REC.QTY<1,POS.DEF.OFFSET> > 0 THEN
        			NVAL = VPS.REC.AMT<1,POS.DEF.OFFSET> / VPS.REC.QTY<1,POS.DEF.OFFSET>* ADJVAL * 100
        			DEFAULT = NVAL ; O.R = 'O'
		       END ELSE
       	       	IF VPS.ORD.AMT<1,POS.DEF.OFFSET> # "" THEN
          				NVAL = VPS.ORD.AMT<1,POS.DEF.OFFSET>  / VPS.ORD.QTY<1,POS.DEF.OFFSET> * ADJVAL * 100
          				DEFAULT = NVAL ; O.R = 'O'
	        		END
      			END
		   CASE 1
			DEFAULT = ""
		END CASE
  		TEMP.VALUES<8>=DEFAULT
		*
		*
		**** VOUCHERED COST
		*  
	  	BEGIN CASE                                                           
    			CASE TEMP.VALUES<7> = 'M'                                          
		      		* the quantity to be used is 1000 time the quantity shown        
      				EXTENDED.AMT = INT(TEMP.VALUES<8> * TEMP.VALUES<5> / 100000 + .5)
    			CASE TEMP.VALUES<7> = 'C'                                          
			      * the quantity to be used is 100 time the quantity shown         
			      EXTENDED.AMT = INT(TEMP.VALUES<8> * TEMP.VALUES<5> / 10000 + .5) 
			CASE 1                                                             
			      EXTENDED.AMT = INT(TEMP.VALUES<8>/100 * TEMP.VALUES<5> + .5)     
		END CASE                                                              
  		EXTENDED.AMT   = INT(EXTENDED.AMT/100+.5)

		IF TEMP.VALUES<4> = 0 OR TEMP.VALUES<4> = "" THEN
			TEMP.VALUES<4> = ""
		END

		IF TEMP.VALUES<7> = 0 OR TEMP.VALUES<7> = "" THEN
			TEMP.VALUES<7> = ""
		END

		IF EXTENDED.AMT = 0 OR EXTENDED.AMT = "" THEN
			EXTENDED.AMT = ""
		END ELSE
			EXTENDED.AMT   = OCONV(EXTENDED.AMT,"MD2")
		END
		IF TEMP.VALUES<5> = 0 OR TEMP.VALUES<5> = "" THEN
			TEMP.VALUES<5> = ""
              END ELSE
			TEMP.VALUES<5> = OCONV(TEMP.VALUES<5>,"MD2")
		END
		IF TEMP.VALUES<8> = 0 OR TEMP.VALUES<8> = "" THEN
			TEMP.VALUES<8> = ""
		END ELSE
			TEMP.VALUES<8> = OCONV(TEMP.VALUES<8>,"MD4")
		END		
		
		STATUS = RBO.setProperty('', 'COLS', TEMP.VALUES<2>: VM :TEMP.VALUES<3> : VM :TEMP.VALUES<4>: VM :TEMP.VALUES<7>: VM :TEMP.VALUES<5>: VM :TEMP.VALUES<8>: VM :EXTENDED.AMT)
************************ END OF OUTSIDE PO CODE **************************************
	CASE 1
		PO.VALUE   	= FIELD(ID,'!',3)
		MATREAD MPO.REC FROM MISC.PO, CONO:PO.VALUE ELSE
	    		MAT MPO.REC = ""    
  		END
	  	IF MPO.PROD.NUM THEN
      			LOCATE VALUE IN MPO.PROD.NUM<1>,1 SETTING MPO.OFFSET ELSE
	       	ERRMSG = "Invalid Product Code for this Voucher"
	       	GOTO 1000
    	  	END
  	  	END ELSE MPO.OFFSET = 1
  	  	IF VPS.PROD.DESC # "" THEN
    			TVO.MISC.CAT=MPO.MISC.CAT<1,MPO.OFFSET>
  	  	END

		TEMP.VALUES<2> = VALUE  

		LOCATE TEMP.VALUES<2> IN MPO.PROD.NUM<1>,1 SETTING POFF THEN
        		VALUE = MPO.PROD.DESC<1,POFF>
      		END ELSE        	        
			ERRMSG = "NEWPROD"
     			MATREAD INV.REC FROM INVENTORY , CONO:VALUE ELSE	       		
				INV.FULL.DESC = ""			
		      	END
			TEMP.VALUES<3> = INV.FULL.DESC
			GOTO 1000	
      		END

  		LOCATE VALUE IN VPS.PROD.DESC<1>,1 SETTING FNDPD ELSE FNDPD = 0

		TEMP.VALUES<3> = VALUE
		TEMP.VALUES<9> = MPO.SEQ.NO<1,MPO.OFFSET>
		*IF INV.COST.WT + 0 = 0 THEN INV.COST.WT = 100
		*IF INV.SBR + 0 = 0 THEN INV.SBR = 1
		*
		**** ENTER category
		*		
		IF MPO.MISC.CAT<1,MPO.OFFSET> # "" THEN
		    VALUE = MPO.MISC.CAT<1,MPO.OFFSET>
		    TEMP.VALUES<4> = VALUE
		END		
		*
		**** ENTER ORDERING UNITS
		*	
	  	IF MPO.UNIT.MAG<1,MPO.OFFSET> # "" THEN
		    VALUE = MPO.UNIT.MAG<1,MPO.OFFSET>	    	    
  		END ELSE    	
            	    VALUE = "EA"                
  		END
		TEMP.VALUES<5> = VALUE
		TEMP.CNV<1> = "MD2"; TEMP.DV2<1> = 1
		TEMP.DV1<1> = 1; TEMP.MT1<1> = 1
		TEMP.CNV<2> = "MD2"; TEMP.DV2<2> = 1
		TEMP.DV1<2> = 1; TEMP.MT1<2> = 1
		*
		**** ENTER VOUCHERED QUANTITY
		*
		QTY.CALC.VALUES = TEMP.CNV<2> :"^": TEMP.MT1<2> :"^": TEMP.DV1<2> :"^": TEMP.DV2<2> :"^": TEMP.CNV<1> 		
  		IF FNDPD = 0 AND CHECK.FLG = "P"  THEN
   	 		ERRMSG = "This product is not setup for this PO.  Ok to use? (Y/N)"
			TEMP.VALUES<3> = TEMP.VALUES<2>:VM:TEMP.VALUES<3>:VM:TEMP.VALUES<4>:VM:TEMP.VALUES<9>:VM:TEMP.VALUES<5>:VM:QTY.CALC.VALUES
			GOTO 1000   
 		END
		*
		**** ENTER VOUCHERED UNIT OF PRICE
		*	
		STATUS = RBO.setProperty('', 'COLS', TEMP.VALUES<2>:VM:TEMP.VALUES<3>:VM:TEMP.VALUES<4>:VM:TEMP.VALUES<9>:VM:TEMP.VALUES<5>:VM:QTY.CALC.VALUES)
************************ END OF MISC PO CODE **************************************
     END CASE
IF INV.UNIT<1,1> # INV.UNIT<1,2> THEN
   OPT_OR_REQ = "R"
END ELSE
   OPT_OR_REQ = "O"
END
STATUS = RBO.setProperty('', 'OPT_OR_REQ', OPT_OR_REQ)
1000*
	IF ERRMSG # "" THEN
		STATUS = RBO.setProperty('', 'ServerStatus', "ERR")
	      	STATUS = RBO.setProperty('', 'ServerMessage', ERRMSG)
	      	STATUS = RBO.setProperty('', 'COLS', TEMP.VALUES<3>)
              STATUS = RBO.setProperty('', 'OPT_OR_REQ', OPT_OR_REQ)
	END
* End of method code
RETURN

