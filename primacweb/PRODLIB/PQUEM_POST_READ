SUBROUTINE PQUEM_POST_READ
********************************************************************************
*   Program name :- PQUEM_POST_READ
*   Created:- 5/25/2006
*------------------------------------------------------------------------------*
* In Properties:
* --------------
*  
*
* Out Properties:
* ---------------
*  
********************************************************************************
$INCLUDE WWINSERT RBO.H
$INCLUDE PMC.CPYLIB PMC_PRINTERS
$INCLUDE CPYLIB CHAR
* Insert method code here

* Insert method code here
ERRMSG = ""
OPEN '','PMC_PRINTERS' TO PMC_PRINTERS ELSE ERRMSG = "PMC_PRINTERS FILE IS MISSING"; GOTO 1000
OPEN '','CONTROL' TO CONTROL ELSE ERRMSG = "CONTROL FILE IS MISSING"; GOTO 1000
OPEN '','PUG.SCREENS' TO PUG.SCREENS ELSE ERRMSG = "PUG.SCREENS FILE IS MISSING"; GOTO 1000

STATUS = RBO.getProperty('', 'ID', PTRID)

OS = "OS"
OS = SYSTEM(33)
IF OS[1,7] = 'Windows' THEN WIN = 1 ELSE WIN = 0
IF WIN THEN
  READ PQS FROM CONTROL, "PRINT.QUEUES" THEN
    PQS = ""
    WRITE PQS ON CONTROL, "PRINT.QUEUES"
  END ELSE
    NULL
  END
END ELSE
  PQS = ""
  OSREAD BB.QUEUES FROM '/etc/qconfig' ELSE
*   PRINT "NO QUEUES ARE ASSIGNED FOR THE SYSTEM"
    ERRMSG = "NO QUEUES ARE ASSIGNED FOR THE SYSTEM"
  END
  SWAP LF WITH VM IN BB.QUEUES
  DCNT = COUNT(BB.QUEUES,VM)
  CNT = 1
  FOR I = 1 TO DCNT
    BEGIN CASE
     CASE BB.QUEUES<1,I>[1,1] = "*"
     CASE NOT(INDEX(BB.QUEUES<1,I>,CHAR(058),1))
     CASE 1
        POS = INDEX(BB.QUEUES<1,I>,CHAR(058),1)
        IF TRIM(BB.QUEUES<1,I>[1,POS-1]) # PQS<1,CNT-1> THEN
          FOR B = 1 TO 4
             POS2 = INDEX(BB.QUEUES<1,I+B>,"device",1)
             IF POS2 > 0 THEN
                PQS<1,CNT> = TRIM(BB.QUEUES<1,I>[1,POS-1])
                POS3 = INDEX(BB.QUEUES<1,I+B>,"=",1)
                PQS<2,CNT> = TRIM(BB.QUEUES<1,I+B>[POS3+1,99])
             END
          NEXT B
          CNT = CNT + 1
        END
    END CASE
  NEXT I
  IF PQS # "" THEN WRITE PQS ON CONTROL, "PRINT.QUEUES"
END


       READ TEMP FROM PUG.SCREENS,"PMC.PRINTER.MAINT*FLD" ELSE
            TEMP = ""
       END
     
        

        MATREADU PRTRS.REC FROM PMC_PRINTERS,PTRID THEN
           STATUS = RBO.setProperty('', 'PRTRS_DESC', PRTRS_DESC)
           STATUS = RBO.setProperty('', 'PRTRS_COLUMN', PRTRS_COLUMN)
           STATUS = RBO.setProperty('', 'PRTRS_PATH', PRTRS_PATH)
           STATUS = RBO.setProperty('', 'PRTRS_LASER', PRTRS_LASER)
           STATUS = RBO.setProperty('', 'PRTRS_ORIENT', PRTRS_ORIENT)
           STATUS = RBO.setProperty('', 'PRTRS_FONT', PRTRS_FONT)
           STATUS = RBO.setProperty('', 'PRTRS_FONTSIZE', PRTRS_FONTSIZE)
           PRTRS_TOP = OCONV(PRTRS_TOP,"MD2")
           PRTRS_BOTTOM = OCONV(PRTRS_BOTTOM,"MD2")
           STATUS = RBO.setProperty('', 'PRTRS_TOP', PRTRS_TOP)
           STATUS = RBO.setProperty('', 'PRTRS_BOTTOM', PRTRS_BOTTOM)
           STATUS = RBO.setProperty('', 'PRTRS_DEVICE', PRTRS_DEVICE)

        END ELSE 
            ERRMSG="Cannot Locate ID ":PTRID 
            MAT PRTRS.REC=''            
*           GOTO 1000
        END        
        TEST = DCOUNT(TEMP<8>,@VM)
        TEST1 = DCOUNT(TEMP<9>,@VM)
        STATUS = RBO.setProperty('', 'WIN',WIN)
        STATUS = RBO.setProperty('', 'VALID_ORIENTATION',TEMP<8,TEST>)
        STATUS = RBO.setProperty('', 'VALID_FONT',TEMP<9,TEST1>)	

RETURN
1000*
   IF ERRMSG # "" THEN
      STATUS = RBO.setProperty('', 'WIN',WIN)
      STATUS = RBO.setProperty('', 'ServerMessage',ERRMSG)
   END
* End of method code
RETURN


