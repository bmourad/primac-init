SUBROUTINE CLEAR_JOB_ALLOC(CONO,JOBNO)
$INCLUDE CPYLIB COMMON1
*T917 v
$INCLUDE JCS.CPYLIB COM.JCS.LINK
$INCLUDE ICS.CPYLIB COM.INV.MAIN
$INCLUDE ICS.CPYLIB COM.INV.SERIAL
*$INCLUDE JCS.CPYLIB COM.JOB
$INCLUDE JCS.CPYLIB COM.INV.STATS
$INCLUDE PMC.CPYLIB COM.CUST
$INCLUDE OPS.CPYLIB COM.ORDER
*T917 ^
*T917 $INCLUDE ICS.CPYLIB COM.INV.INQ
*********************************************************************
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* PROGRAM     - CLEAR.JOB.ALLOC
* BY          - L ROSS , C.B.A
* DATE        - 06/22/01
* DESCRIPTION -
* TASK 25900
* Subroutine called from JOB.MAINT.UPD
* This program is used to clear PO Alloc in (JOB), (INV.STATS), (INV.JOB.STATS)
* & (PO) file.
* Main Logic taken from POSBP PO.UPDATE.
*T25900 lanny 07/25/2001 * Subroutine to clear PO Allocations from JOB.
*       lanny 09/26/2001 * Problem addressed by CSF 38487 Re-opened.
*T917  03/10/05 RedBack TestTrack Issue
*ENDDOC
*********************************************************************
**** INSERT FILES EQUETES
$INCLUDE PMC.CPYLIB PO
$DEFINE INVENTORY
$INCLUDE ICS.CPYLIB INVENTORY
$DEFINE INVWHSE
$INCLUDE ICS.CPYLIB INV.WHSE
$DEFINE INVSTATS
$INCLUDE ICS.CPYLIB INV.STATS
*T917 $DEFINE INVJOBSTATS
*T917 $INCLUDE ICS.CPYLIB INV.JOB.STATS
$DEFINE JOB
$INCLUDE JCS.CPYLIB JOB
$DEFINE FILEVARS
$INCLUDE CPYLIB FILE.VARS
$INCLUDE CPYLIB CHAR

OPEN "","PO" TO PO ELSE
   ERRMSG="CANNOT OPEN PO FILE"; GOTO 99999
	
END

DIM PROD.DEL(5)
EQU PD.PROD TO PROD.DEL(1)
EQU PD.WHSE TO PROD.DEL(2)
EQU PD.USED TO PROD.DEL(3)
MAT PROD.DEL = ''
ERRMSG = ""

FOR I = 1 TO DCOUNT(JOB.RESV.MATL,VM)
*  IF JOB.ALOC.QTY<1,I>+0 # 0 OR JOB.RESV.QTY<1,I>+0 # 0 THEN
      PTR=1
      LOOP
         LOCATE JOB.RESV.MATL<1,I> IN PD.PROD<1>,PTR SETTING PFND ELSE
            INS JOB.RESV.MATL<1,I> BEFORE PD.PROD<1,PFND>
            INS JOB.RESV.WHSE<1,I> BEFORE PD.WHSE<1,PFND>
            INS "" BEFORE PD.USED<1,PFND>
         END
         IF JOB.RESV.WHSE<1,I> # PD.WHSE<1,PFND> THEN PTR = PFND+1 ELSE PTR = 0
         IF PTR = 0 THEN PD.USED<1,PFND> += JOB.USED.QTY<1,I>
      WHILE PTR DO
      REPEAT
*  END
NEXT I

PD.CNT = DCOUNT(PD.PROD,VM)
FOR P = 1 TO PD.CNT
   MATREADU INV.STAT.REC FROM INV.STATS, CONO:PD.PROD<1,P>:"!":PD.WHSE<1,P> ELSE GOTO 150
   MATREADU IWH.REC FROM INV.WHSE , CONO:PD.PROD<1,P>:"!":PD.WHSE<1,P> ELSE GOTO 150
   FOR I = DCOUNT(ISTAT.PO,VM) TO 1 STEP -1
      LOCATE JOBNO IN ISTAT.PO.JOB<1,I>,1 SETTING JFND THEN
         PO.CODE = ISTAT.PO<1,I>
         MATREADU INV.JS.REC FROM INV.JOB.STATS, CONO:PD.PROD<1,P>:"!":PD.WHSE<1,P>:"!":JOBNO ELSE
            ERRMSG='Cannot Locate INV.JOB.STATS ':PD.PROD<1,P>:"!":PD.WHSE<1,P>:"!":JOBNO
            RELEASE INV.JOB.STATS , CONO:PD.PROD<1,P>:"!":PD.WHSE<1,P>:"!":JOBNO
            GOTO 120
         END
         MATREADU PO.REC FROM PO, CONO:PO.CODE ELSE
            ERRMSG='Cannot Locate PO ':PO.CODE
            RELEASE PO, CONO:PO.CODE
            GOTO 120
         END
         PTR = 1
         LOOP
            LOCATE PD.PROD<1,P> IN JOB.RESV.MATL<1>,PTR SETTING MFND ELSE MFND = 0
            IF MFND THEN
               IF PD.WHSE<1,P> = JOB.RESV.WHSE<1,MFND> THEN PTR = 0 ELSE PTR = MFND + 1
            END
         WHILE PTR AND MFND DO REPEAT
         IF MFND = 0 THEN
            ERRMSG = "PRODUCT ":PD.PROD<1,P>:", WHSE ":PD.WHSE<1,P>:" IS NOT ON JOB ":JOBNO
            GOTO 120
         END
         LOCATE PO.CODE IN IJS.PO<1>,1 SETTING POF ELSE POF = 0
         IF POF THEN
            IJS.JOB.ALOC = IJS.JOB.ALOC - IJS.PO.JOB.QTY<1,POF,0>
            IF IJS.JOB.ALOC < 0 THEN IJS.JOB.ALOC = 0
            IWH.ALLOC = IWH.ALLOC - IJS.PO.JOB.QTY<1,POF,0>
            IF IWH.ALLOC < 0 THEN IWH.ALLOC = 0
            IJS.PO = DELETE(IJS.PO,1,POF,0)
            IJS.PO.JOB.QTY = DELETE(IJS.PO.JOB.QTY,1,POF,0)
            IJS.PO.JOB.AMT = DELETE(IJS.PO.JOB.AMT,1,POF,0)
         END
         FOR POPROD = DCOUNT(PO.PROD.NUM,VM) TO 1 STEP -1
            IF PD.PROD<1,P> = PO.PROD.NUM<1,POPROD> THEN
               IF PD.WHSE<1,P> = PO.WHSE<1,POPROD> THEN
                  LOCATE JOBNO IN PO.JOB.NO<1,POPROD>,1 SETTING PJFND THEN
*C38487 v            IF PD.USED<1,P>+0 < PO.JB.RECEVED<1,POPROD,PJFND>+0 THEN
*                      PO.JB.RECEVED<1,POPROD,PJFND> = PD.USED<1,P>
*                      PD.USED<1,P> = 0
*                    END ELSE
*                      PD.USED<1,P> -= PO.JB.RECEVED<1,POPROD,PJFND>
*                    END
                     PO.JB.ONORD<1,POPROD,PJFND> = PO.JB.RECEVED<1,POPROD,PJFND>+0
                     PO.JB.OPEN<1,POPROD,PJFND> = 0
                     IF PO.JB.ONORD<1,POPROD,PJFND> - PO.JB.RECEVED<1,POPROD,PJFND> - PO.JB.OPEN<1,POPROD,PJFND> = 0 THEN
                        DEL PO.JB.DEPT<1,POPROD,PJFND>
                        DEL PO.JB.CCTR<1,POPROD,PJFND>
                        DEL PO.JB.UNITS<1,POPROD,PJFND>
                        DEL PO.JB.ONORD<1,POPROD,PJFND>
                        DEL PO.JB.RECEVED<1,POPROD,PJFND>
                        DEL PO.JB.OPEN<1,POPROD,PJFND>
                        DEL PO.JOB.NO<1,POPROD,PJFND>
                     END
                  END
               END
            END
         NEXT POPROD
         MATWRITE PO.REC ON PO, CONO:PO.CODE
*C38487 Leave deletion of stats to REVERSE.JOB.WIP & JOB.RESV.SUB
*        IF IJS.JOB.ALOC+0=0 AND IJS.JOB.QTY+0=0 AND IJS.JOB.USED+0=0 AND IJS.JMT.SEQ="" AND IJS.PO="" AND IJS.REQ.QTY+0=0 THEN
*           PROD = PD.PROD<1,P> ; WHSE = PD.WHSE<1,P> ; GOSUB 6000
*        END ELSE
            JOB.ALOC.QTY<1,MFND> = JOB.ALOC.QTY<1,MFND> - ISTAT.PO.JOB.QTY<1,I,JFND>
            IF JOB.ALOC.QTY<1,MFND> < 0 THEN JOB.ALOC.QTY<1,MFND> = 0
            JOB.ALOC.AMT<1,MFND> = JOB.ALOC.AMT<1,MFND> - ISTAT.PO.JOB.AMT<1,I,JFND>
            IF JOB.ALOC.AMT<1,MFND> < 0 THEN JOB.ALOC.AMT<1,MFND> = 0
            MATWRITE INV.JS.REC ON INV.JOB.STATS , CONO:PD.PROD<1,P>:"!":PD.WHSE<1,P>:"!":JOBNO
*        END
         DEL ISTAT.PO.JOB<1,I,JFND>
         DEL ISTAT.PO.JOB.QTY<1,I,JFND>
         DEL ISTAT.PO.JOB.AMT<1,I,JFND>
      END
120*
   NEXT I
*  IF ISTAT.JOB = "" AND ISTAT.PO = "" THEN
*     DELETE INV.STATS, CONO:PD.PROD<1,P>:"!":PD.WHSE<1,P>
*  END ELSE
      MATWRITE INV.STAT.REC ON INV.STATS, CONO:PD.PROD<1,P>:"!":PD.WHSE<1,P>
*  END
   MATWRITE IWH.REC ON INV.WHSE , CONO:PD.PROD<1,P>:"!":PD.WHSE<1,P>
150*
   RELEASE INV.STATS, CONO:PD.PROD<1,P>:"!":PD.WHSE<1,P>
   RELEASE INV.WHSE , CONO:PD.PROD<1,P>:"!":PD.WHSE<1,P>
NEXT P
GOTO 99999
*
**** DELETE ROUTINE
6000*
*DELETE INV.JOB.STATS , CONO:PROD:"!":WHSE:"!":JOBNO
*IF JFND THEN
*   ISTAT.JOB = DELETE(ISTAT.JOB,1,JFND,0)
*END
*IF MFND THEN
*   JOB.RESV.MATL = DELETE(JOB.RESV.MATL,1,MFND,0)
*   JOB.RESV.WHSE = DELETE(JOB.RESV.WHSE,1,MFND,0)
*   JOB.RESV.DATE = DELETE(JOB.RESV.DATE,1,MFND,0)
*   JOB.ALOC.QTY = DELETE(JOB.ALOC.QTY,1,MFND,0)
*   JOB.RESV.QTY = DELETE(JOB.RESV.QTY,1,MFND,0)
*   JOB.USED.QTY = DELETE(JOB.USED.QTY,1,MFND,0)
*   JOB.ALOC.AMT = DELETE(JOB.ALOC.AMT,1,MFND,0)
*   JOB.RESV.AMT = DELETE(JOB.RESV.AMT,1,MFND,0)
*   JOB.USED.AMT = DELETE(JOB.USED.AMT,1,MFND,0)
*END
RETURN
**** ERROR ROUTINE
99999 RETURN
END

