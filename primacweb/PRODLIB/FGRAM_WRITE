SUBROUTINE FGRAM_WRITE
*********************************************************************
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - EPRIMAC
* PROGRAM     - FGRAM_WRITE
* BY          - KHAJA ZIAUDDIN
* DATE        - 07/16/2003  (mm/dd/yyyy)
* DESCRIPTION   
*		   
*ENDDOC
*************************************************************
$INCLUDE CPYLIB COMMON1
$INCLUDE JCS.CPYLIB COM.JCS.LINK  
$INCLUDE ICS.CPYLIB COM.INV.MAIN  
$INCLUDE ICS.CPYLIB COM.INV.SERIAL
$INCLUDE JCS.CPYLIB COM.INV.STATS 
$INCLUDE PMC.CPYLIB COM.CUST
$INCLUDE OPS.CPYLIB COM.ORDER

$INCLUDE PMC.CPYLIB COMPANY
$DEFINE COMPOPS
$INCLUDE PMC.CPYLIB COMP.OPS
$DEFINE CUSTOMER
$INCLUDE PMC.CPYLIB CUSTOMER
$INCLUDE PMC.CPYLIB SHIP.TO
$INCLUDE PMC.CPYLIB FISCAL
$INCLUDE PMC.CPYLIB SALESDATES
$DEFINE JOB
$INCLUDE JCS.CPYLIB JOB
$DEFINE INVENTORY
$INCLUDE ICS.CPYLIB INVENTORY
$DEFINE CATEGORY
$INCLUDE ICS.CPYLIB CATEGORY
$INCLUDE ICS.CPYLIB WAREHOUSE
$DEFINE INVWHSE
$INCLUDE ICS.CPYLIB INV.WHSE
$DEFINE INVWHSELOC
$INCLUDE ICS.CPYLIB INV.WHSE.LOC
$INCLUDE ICS.CPYLIB INV.ADJ.CODES
****INE INVCNV
$INCLUDE ICS.CPYLIB INV.CNV
$DEFINE JOBFNGDSTATS
$INCLUDE OPS.CPYLIB JOB.FNGD.STATS
$INCLUDE OPS.CPYLIB FNGD.WIP.HIST
$DEFINE ORDER
$INCLUDE OPS.CPYLIB ORDER
$INCLUDE OPS.CPYLIB ORDER.DETAIL
$DEFINE FILEVARS
$INCLUDE CPYLIB FILE.VARS
$DEFINE DAILYFNGDRECEIPT
$INCLUDE OPS.CPYLIB DAILY_FNGD_RECEIPT
$DEFINE INVRECEIPTS
$INCLUDE ICS.CPYLIB INV_RECEIPTS
$DEFINE INVRECPWHSE
$INCLUDE ICS.CPYLIB INV_RECP_WHSE
$DEFINE INVSERIAL
$INCLUDE ICS.CPYLIB INV_SERIAL
$DEFINE INVAUDITHIST
$INCLUDE ICS.CPYLIB INV_AUDIT_HIST

$INCLUDE WWINSERT RBO.H

DEFFUN CALC_COST_QTY(COST.QTY,MAT INV.CNV.REC,ROND,LN)

DIM O.INVR.REC(45)
DIM S.INVR.REC(45)
MAT INV.REC = ""

GOSUB OPEN.FILES

STATUS = RBO.getProperty('','ID',ID)
CONO = ID[1,3]
MAT INVR.REC = ""

STATUS = RBO.getProperty('','AdjCode', ADJ.CODE)
STATUS = RBO.getProperty('','AdjPeriod', ADJ.PERIOD)
STATUS = RBO.getProperty('','Period', CUR.PERIOD)

MATREAD INVR.REC FROM INV_RECEIPTS, ID ELSE MAT INVR.REC = ''; GOTO 93000
MAT O.INVR.REC = MAT INVR.REC

MAT INVR.REC = ""
GOSUB 1000			;* POPULATE INVR.REC FROM THE VALUES PASSED FROM ASP PAGE
MAT S.INVR.REC = MAT INVR.REC
IWH.ID=CONO:INVR.PROD:"!":INVR.ORG.WHSE
MATREAD IWH.REC FROM INV.WHSE, IWH.ID ELSE  MAT IWH.REC = ""

ERR.FLG='';ERRMSG='';PERIOD='';OPEN.FLAG = 1
CALL BUILD_IWH_FI(IWH.ID,MAT IWH.REC,PERIOD,ERR.FLG,ERRMSG,OPEN.FLAG)

RCPTNO = ID[4,99]
INVR.ID = ID
ERRMSG = ""
TEMP.QTY=0
IRW.ID=CONO:RCPTNO:"!":INVR.ORG.WHSE
MATREADU IRW.REC FROM INV_RECP_WHSE,IRW.ID THEN
  SCNT=DCOUNT(IRW.SERIAL.NO,@VM)
  IF SCNT=1 THEN
    ISTK.ID = CONO:IRW.SERIAL.NO
    MATREADU ISTK.REC FROM INV_SERIAL,ISTK.ID ELSE
      ERRMSG="Tracking record for receipt ":RCPTNO:" is missing."
      GOTO 93000
    END
  END ELSE
    ERRMSG = "Cannot adjust a receipt that has been transferred "
    GOTO 93000
  END
END ELSE
  ERRMSG="INV_RECP_WHSE record is missing for receipt ":RCPTNO
  GOTO 93000
END

LOCATE RCPTNO IN IWH.RECP.NO<1>,1 SETTING RPOS THEN
  TEMP.QTY=SUM(INVR.ORD.QTY)
END
NEW.ON.HAND = TEMP.QTY - (IWH.ORG.FI<1,RPOS> - IWH.QTY.FI<1,RPOS>)
BEGIN CASE
  CASE TEMP.QTY = ""
  CASE NEW.ON.HAND < 0
    ERRMSG = "Cannot adjust lower than shipped quantity"
  CASE (NEW.ON.HAND-(IWH.QTY.FI<1,RPOS>-IWH.RSV.FI<1,RPOS>)) < 0
     ERRMSG = "Cannot adjust lower than available quantity"
END CASE

IF ERRMSG = "" THEN
  INVR.ID = CONO:RCPTNO

  CALL POST_FNGD_ADJ_SUB(INVR.ID,ERRMSG,MAT O.INVR.REC,ADJ.CODE,ADJ.PERIOD,CUR.PERIOD)
  RELEASE
  IF ERRMSG = "" THEN
  END ELSE
    GOTO 93000
  END
END ELSE
  GOTO 93000
END

STATUS = RBO.setProperty('','ServerStatus',0)
STATUS = RBO.setProperty('','ServerMessage','')
RETURN


***************
OPEN.FILES: 
***************
*
OPEN "","INV_AUDIT_HIST" TO INV_AUDIT_HIST ELSE ERRMSG = "INV_AUDIT_HIST"; GOTO 93000
OPEN "","FNGD_AUDIT_TAG" TO FNGD_AUDIT_TAG ELSE ERRMSG = "FNGD_AUDIT_TAG"; GOTO 93000
OPEN "","COMPANY" TO COMPANY ELSE ERRMSG = "COMPANY"; GOTO 93000
OPEN "","CONTROL" TO CONTROL ELSE ERRMSG = "CONTROL"; GOTO 93000
OPEN "","CUSTOMER" TO CUSTOMER ELSE ERRMSG = "CUSTOMER"; GOTO 93000
OPEN "","SHIP.TO" TO SHIP.TO ELSE ERRMSG = "SHIP.TO"; GOTO 93000
OPEN "","CURR.CODE" TO CURR.CODE ELSE ERRMSG = "CURR.CODE"; GOTO 93000
OPEN "","PREFIX" TO PREFIX ELSE ERRMSG = "PREFIX"; GOTO 93000
OPEN "","INVENTORY" TO INVENTORY ELSE ERRMSG = "INVENTORY"; GOTO 93000
OPEN "","INV.FNGD" TO INV.FNGD ELSE ERRMSG = "INV.FNGD"; GOTO 93000
OPEN "","CATEGORY" TO CATEGORY ELSE ERRMSG = "CATEGORY"; GOTO 93000
OPEN "","INV.WHSE" TO INV.WHSE ELSE ERRMSG = "INV.WHSE"; GOTO 93000
OPEN "","INV.WHSE.LOC" TO INV.WHSE.LOC ELSE ERRMSG = "INV.WHSE.LOC"; GOTO 93000
OPEN "","JOB" TO JOB ELSE ERRMSG = "JOB"; GOTO 93000
OPEN "","ORDER" TO ORDER ELSE ERRMSG = "ORDER"; GOTO 93000
OPEN "","ORDER.DETAIL" TO ORDER.DETAIL ELSE ERRMSG = "ORDER.DETAIL"; GOTO 93000
OPEN "","FNGD.STATS" TO FNGD.STATS ELSE ERRMSG = "FNGD.STATS"; GOTO 93000
OPEN "","JOB.FNGD.STATS" TO JOB.FNGD.STATS ELSE ERRMSG = "JOB.FNGD.STATS"; GOTO 93000
OPEN "","FNGD.JOB.STATS" TO FNGD.JOB.STATS ELSE ERRMSG = "FNGD.JOB.STATS"; GOTO 93000
OPEN "","FNGD.WIP.HIST" TO FNGD.WIP.HIST ELSE ERRMSG = "FNGD.WIP.HIST"; GOTO 93000
OPEN "","FNGD.ORDER.STATS" TO FNGD.ORDER.STATS ELSE ERRMSG = "FNGD.ORDER.STATS"; GOTO 93000
OPEN "","PICK.TICKET.PRT" TO PICK.TICKET.PRT ELSE ERRMSG = "PICK.TICKET.PRT"; GOTO 93000
OPEN "","INV.ADJ.CODES" TO INV.ADJ.CODES ELSE ERRMSG = "INV.ADJ.CODES"; GOTO 93000
OPEN "","WAREHOUSE" TO WAREHOUSE ELSE ERRMSG = "WAREHOUSE"; GOTO 93000
OPEN "","INV_RECEIPTS" TO INV_RECEIPTS ELSE ERRMSG="INV_RECEIPTS" ; GOTO 93000
OPEN "","INV_RECP_WHSE" TO INV_RECP_WHSE ELSE ERRMSG="INV_RECP_WHSE" ; GOTO 93000
OPEN "","INV_SERIAL" TO INV_SERIAL ELSE ERRMSG="INV_SERIAL" ; GOTO 93000
OPEN "","INV_AUDIT_HIST" TO INV_AUDIT_HIST ELSE ERRMSG="INV_AUDIT_HIST" ; GOTO 93000
RETURN

****************
1000
****************
STATUS = RBO.getProperty('','Prod', INVR.PROD)
STATUS = RBO.getProperty('','', INVR.CUST)
STATUS = RBO.getProperty('','Cust', INVR.PO)    
STATUS = RBO.getProperty('','Job', INVR.JOB)     
*INVR.PO.LN    
STATUS = RBO.getProperty('','EntDate', INVR.ENT.DATE)
STATUS = RBO.getProperty('','PostDate', INVR.POST.DATE)
STATUS = RBO.getProperty('','Period', INVR.PERIOD)
*INVR.DIV      
*INVR.PO.ACCR  
*INVR.UOM      
STATUS = RBO.getProperty('','OrgQty', INVR.ORG.QTY) 
STATUS = RBO.getProperty('','UnitCost', INVR.UNIT.COST)
STATUS = RBO.getProperty('','OrgWhse', INVR.ORG.WHSE)
STATUS = RBO.getProperty('','AuditNo', INVR.AUDIT.NO)
STATUS = RBO.getProperty('','SerialNo', INVR.SERIAL.NO)
STATUS = RBO.getProperty('','DeplQty', INVR.DEPL.QTY)

STATUS = RBO.getProperty('','Order', INVR.ORDER)
STATUS = RBO.getProperty('','ShipTo', INVR.SHIP.TO)     
STATUS = RBO.getProperty('','OrdSQty', INVR.ORD.SQTY)

MATREAD INV.REC FROM INVENTORY, CONO:INVR.PROD ELSE MAT INV.REC = ''
$INCLUDE ICSBP INV.UM.CNV
K=1
FOR X = 1 TO DCOUNT(INVR.ORD.SQTY,@VM)
	INVR.ORD.QTY<1,K> = CALC_COST_QTY(INVR.ORD.SQTY<1,X>, MAT INV.CNV.REC, '.5', '')
	K = K + 1
NEXT

STATUS = RBO.getProperty('','PickFlg', INVR.PICK.FLG)   
STATUS = RBO.getProperty('','UnSale', INVR.UN.SALE)   
STATUS = RBO.getProperty('','TotCost', INVR.TOT.COST)    
STATUS = RBO.getProperty('','TotAmt', INVR.TOT.AMT)   
STATUS = RBO.getProperty('','AdjPrtDate', INVR.ADJ.PRT.DATE)
STATUS = RBO.getProperty('','Status', INVR.STATUS)
STATUS = RBO.getProperty('','StatusDate', INVR.STATUS.DATE) 
STATUS = RBO.getProperty('','StatusPeriod', INVR.STATUS.PERIOD)
RETURN

*****
93000
*****
STATUS = RBO.setProperty('','ServerStatus',1)
STATUS = RBO.setProperty('','ServerMessage',ERRMSG)
RETURN
