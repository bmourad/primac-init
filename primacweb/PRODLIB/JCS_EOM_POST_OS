   SUBROUTINE JCS_EOM_POST_OS(MAT EOM.ACCT.REC,MAT GLTABLE.REC,MAT JOB.REC,TRANFILE,REJECTFILE,WIPFILE,ERRMSG)
*********************************************************************
* REVISION    - [12.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - JCSBP
* PROGRAM     - JCS.EOM.POST.OS
* BY          - ZIAD YAMOUT, C.B.A
* DATE        - 02/28/87
* DESCRIPTION -
*********************************************************************
$INCLUDE PMC.CPYLIB GLTABLE
$INCLUDE PMC.CPYLIB POST.REJECTS
$INCLUDE JCS.CPYLIB EOM.ACCT
$INCLUDE JCS.CPYLIB JOB
$INCLUDE JCS.CPYLIB JOB.OSP
$INCLUDE PMC.CPYLIB WIP.SALES.STATS
$INCLUDE PMC.CPYLIB EOM.TRANS
$INCLUDE JCS.CPYLIB CATEGORY.OSP
$INCLUDE PMC.CPYLIB COA
$INCLUDE POS.CPYLIB OUTSIDE.PO
$INCLUDE CPYLIB CHAR
   MAT ETR.REC = ''
OPEN 'JOB' TO JOB ELSE ERRMSG='Cannot open JOB File'; GOTO 9999
OPEN 'COA' TO COA ELSE ERRMSG='Cannot open COA File'; GOTO 9999
OPEN 'JOB.OSP' TO JOB.OSP ELSE ERRMSG='Cannot open JOB.OSP File'; GOTO 9999
OPEN 'OUTSIDE.PO' TO OUTSIDE.PO ELSE ERRMSG='Cannot open OUTSIDE.PO File'; GOTO 9999
OPEN 'CATEGORY.OSP' TO CATEGORY.OSP ELSE ERRMSG='Cannot open CATEGORY.OSP File'; GOTO 9999
OPEN '',TRANFILE TO EOM.TRANS ELSE ERRMSG=TRANFILE:' FILE MISSING';GOTO 9999
OPEN '',REJECTFILE TO POST.REJECTS ELSE ERRMSG=REJECTFILE:' FILE IS MISSING';GOTO 9999
OPEN '',WIPFILE TO WIP.SALES.STATS ELSE ERRMSG=WIPFILE:' FILE IS MISSING';GOTO 9999
   MCNT = COUNT(JOB.OS.SEQ,VM) + (JOB.OS.SEQ # '')
   CHECK.WIP = 0; NEW.REC = 0
   FOR M = 1 TO MCNT
      DPNO = JOB.OS.DEPT<1,M>; CCNO = JOB.OS.CCTR<1,M>
      PLNO = JOB.OS.PLINE<1,M>; GLS.DEPT = DPNO[1,2]
      OS.ID = CONO:JOBNO:"!":DPNO:"!":CCNO:"!":PLNO:"!"
      MATREAD CAOS.REC FROM CATEGORY.OSP, CONO : PLNO ELSE MAT CAOS.REC = ""
      BEGIN CASE
      CASE CAOS.WIP = OS.WIP.ACCT<1>
      CASE CAOS.WIP # ""
         CAOS.WIP = CAOS.WIP : STR("0",IN.ACCT.LEN-LEN(CAOS.WIP))
         CAOS.WIP = CAOS.WIP[1,IN.ACCT.LEN]
         MATREAD COA.REC FROM COA, CONO : CAOS.WIP ELSE COA.LEVEL = 0
         OS.WIP.ACCT<1> = CAOS.WIP
         OS.WIP.LEVEL<1> = COA.LEVEL
      CASE GLTB.OS.DIR.WIP = OS.WIP.ACCT<1>
      CASE 1
         MATREAD COA.REC FROM COA, CONO : GLTB.OS.DIR.WIP ELSE COA.LEVEL = 0
         OS.WIP.ACCT<1> = GLTB.OS.DIR.WIP
         OS.WIP.LEVEL<1> = COA.LEVEL
      END CASE
      BEGIN CASE
      CASE CAOS.COG = OS.COG.ACCT<1>
      CASE CAOS.COG # ""
         CAOS.COG = CAOS.COG : STR("0",IN.ACCT.LEN-LEN(CAOS.COG))
         CAOS.COG = CAOS.COG[1,IN.ACCT.LEN]
         MATREAD COA.REC FROM COA, CONO : CAOS.COG ELSE COA.LEVEL = 0
         OS.COG.ACCT<1> = CAOS.COG
         OS.COG.LEVEL<1> = COA.LEVEL
      CASE GLTB.OS.DIR.COG = OS.COG.ACCT<1>
      CASE 1
         MATREAD COA.REC FROM COA, CONO : GLTB.OS.DIR.COG ELSE COA.LEVEL = 0
         OS.COG.ACCT<1> = GLTB.OS.DIR.COG
         OS.COG.LEVEL<1> = COA.LEVEL
      END CASE
      BEGIN CASE
      CASE CAOS.FOH.WIP = OS.WIP.ACCT<2>
      CASE CAOS.FOH.WIP # ""
         CAOS.FOH.WIP = CAOS.FOH.WIP : STR("0",IN.ACCT.LEN-LEN(CAOS.FOH.WIP))
         CAOS.FOH.WIP = CAOS.FOH.WIP[1,IN.ACCT.LEN]
         MATREAD COA.REC FROM COA, CONO : CAOS.FOH.WIP ELSE COA.LEVEL = 0
         OS.WIP.ACCT<2> = CAOS.FOH.WIP
         OS.WIP.LEVEL<2> = COA.LEVEL
      CASE GLTB.OS.FOH.WIP = OS.WIP.ACCT<2>
      CASE 1
         MATREAD COA.REC FROM COA, CONO : GLTB.OS.FOH.WIP ELSE COA.LEVEL = 0
         OS.WIP.ACCT<2> = GLTB.OS.FOH.WIP
         OS.WIP.LEVEL<2> = COA.LEVEL
      END CASE
      BEGIN CASE
      CASE CAOS.FOH.APL = OS.APL.ACCT<2>
      CASE CAOS.FOH.APL # ""
         CAOS.FOH.APL = CAOS.FOH.APL : STR("0",IN.ACCT.LEN-LEN(CAOS.FOH.APL))
         CAOS.FOH.APL = CAOS.FOH.APL[1,IN.ACCT.LEN]
         MATREAD COA.REC FROM COA, CONO : CAOS.FOH.APL ELSE COA.LEVEL = 0
         OS.APL.ACCT<2> = CAOS.FOH.APL
         OS.APL.LEVEL<2> = COA.LEVEL
      CASE GLTB.OS.FOH.APL = OS.APL.ACCT<2>
      CASE 1
         MATREAD COA.REC FROM COA, CONO : GLTB.OS.FOH.APL ELSE COA.LEVEL = 0
         OS.APL.ACCT<2> = GLTB.OS.FOH.APL
         OS.APL.LEVEL<2> = COA.LEVEL
      END CASE
      BEGIN CASE
      CASE CAOS.FOH = OS.COG.ACCT<2>
      CASE CAOS.FOH # ""
         CAOS.FOH = CAOS.FOH : STR("0",IN.ACCT.LEN-LEN(CAOS.FOH))
         CAOS.FOH = CAOS.FOH[1,IN.ACCT.LEN]
         MATREAD COA.REC FROM COA, CONO : CAOS.FOH ELSE COA.LEVEL = 0
         OS.COG.ACCT<2> = CAOS.FOH
         OS.COG.LEVEL<2> = COA.LEVEL
      CASE GLTB.OS.FOH.COG = OS.COG.ACCT<2>
      CASE 1
         MATREAD COA.REC FROM COA, CONO : GLTB.OS.FOH.COG ELSE COA.LEVEL = 0
         OS.COG.ACCT<2> = GLTB.OS.FOH.COG
         OS.COG.LEVEL<2> = COA.LEVEL
      END CASE
      FOR S = 1 TO JOB.OS.SEQ<1,M>
         MATREADU JOS.REC FROM JOB.OSP, OS.ID:S ELSE
            MAT PRR.REC = ''
            PRR.JOB = JOBNO
            PRR.FILE = 'JOB.OSP'
            PRR.ID = OS.ID[4,999]:S
            PRR.ERR = 'CANNOT LOCATE'
            PRR.SEQ = PRR.SEQ + 1
            MATWRITE PRR.REC ON POST.REJECTS, PRR.SEQ
            GOTO 800
         END
         MATREAD OPO.REC FROM OUTSIDE.PO, CONO:JOS.PO ELSE
            MAT OPO.REC = ''
*              MAT PRR.REC = ''
*              PRR.JOB = JOBNO
*              PRR.FILE = 'OUTSIDE.PO'
*              PRR.ID = JOS.PO
*              PRR.ERR = 'CANNOT LOCATE'
*              PRR.SEQ = PRR.SEQ + 1
*              MATWRITE PRR.REC ON POST.REJECTS, PRR.SEQ
*              GOTO 800
         END
         IF OPO.ACCRUE = "Y" THEN
            BEGIN CASE
            CASE CAOS.ACCRU.LIAB = OS.APL.ACCT<1>     ;* Task 17919
            CASE CAOS.ACCRU.LIAB # ""                 ;* Task 17919
               CAOS.ACCRU.LIAB = CAOS.ACCRU.LIAB : STR("0",IN.ACCT.LEN-LEN(CAOS.ACCRU.LIAB))
               CAOS.ACCRU.LIAB = CAOS.ACCRU.LIAB[1,IN.ACCT.LEN]
               MATREAD COA.REC FROM COA, CONO : CAOS.ACCRU.LIAB ELSE COA.LEVEL = 0
               OS.APL.ACCT<1> = CAOS.ACCRU.LIAB
               OS.APL.LEVEL<1> = COA.LEVEL
            CASE GLTB.OS.ACCRU.LIAB = OS.APL.ACCT<1>
            CASE 1
               MATREAD COA.REC FROM COA, CONO : GLTB.OS.ACCRU.LIAB ELSE COA.LEVEL = 0
               OS.APL.ACCT<1> = GLTB.OS.ACCRU.LIAB
               OS.APL.LEVEL<1> = COA.LEVEL
            END CASE
         END ELSE
            BEGIN CASE
            CASE CAOS.APL = OS.APL.ACCT<1>
            CASE CAOS.APL # ""
               CAOS.APL = CAOS.APL : STR("0",IN.ACCT.LEN-LEN(CAOS.APL))
               CAOS.APL = CAOS.APL[1,IN.ACCT.LEN]
               MATREAD COA.REC FROM COA, CONO : CAOS.APL ELSE COA.LEVEL = 0
               OS.APL.ACCT<1> = CAOS.APL
               OS.APL.LEVEL<1> = COA.LEVEL
            CASE GLTB.OS.DIR.APL = OS.APL.ACCT<1>
            CASE 1
               MATREAD COA.REC FROM COA, CONO : GLTB.OS.DIR.APL ELSE COA.LEVEL = 0
               OS.APL.ACCT<1> = GLTB.OS.DIR.APL
               OS.APL.LEVEL<1> = COA.LEVEL
            END CASE
         END
         WIP.COST = JOS.WIP
         BEGIN CASE
         CASE JOS.MON = ""
            GOTO 800
         CASE JOS.MON<1,1> # PERIOD OR (JOS.GLA.DATE<1,1> # "" AND JOS.GLA.DATE<1,1> # "P")
            WCNT = COUNT(WIP.COST,VM) + 1
            WPTR = COUNT(WIP.COST<1,1>,SVM) + 1
            FOR W = 1 TO WPTR
               CHECK.WIP = CHECK.WIP + WIP.COST<1,1,W>
            NEXT W
            GOTO 600
         CASE WIP.COST = ""
            WCNT = 0; WPTR = 0
            WIP.CNTR = 0
         CASE JOS.COST < 0
            WCNT = COUNT(WIP.COST,VM) + 1
            WPTR = COUNT(WIP.COST<1,1>,SVM) + 1
            TOT.WIP = 0
            FOR W = 1 TO WPTR
               TOT.WIP = TOT.WIP + WIP.COST<1,1,W>
            NEXT W
            CHECK.WIP = CHECK.WIP + TOT.WIP
            FOR I = 2 TO WCNT
               IF JOS.MON<1,I> = PERIOD AND (JOS.GLA.DATE<1,I> = "" OR JOS.GLA.DATE<1,I> = "P") THEN
                  FOR W = 1 TO WPTR
                     TOT.WIP = TOT.WIP + WIP.COST<1,I,W>
                  NEXT W
               END
               JOS.GLA.DATE<1,I> = "P"
            NEXT I
            IF TOT.WIP = 0 THEN
               WIP.CNTR = 2
               WCNT = 0; WPTR = 0
               WIP.COST = ""
            END ELSE
               WIP.CNTR = 1
            END
         CASE 1
            WCNT = COUNT(WIP.COST,VM) + 1
            WPTR = COUNT(WIP.COST<1,1>,SVM) + 1
            WIP.CNTR = 1
            FOR W = 1 TO WPTR
               CHECK.WIP = CHECK.WIP + WIP.COST<1,1,W>
            NEXT W
         END CASE
         COG.COST = JOS.DCOST; COG.COST<2> = JOS.COST - JOS.DCOST
         FOR W = 1 TO 2
            BEGIN CASE
            CASE COG.COST<W> + 0 = 0 AND WIP.COST<1,1,W> + 0 = 0
               GOTO 500
            CASE WIP.COST<1,1,W> + 0 = 0
               BEGIN CASE
               CASE OS.COG.LEVEL<W> < 1
                  DB.ID = GEN.DIV : GEN.DEPT : GEN.CCTR : OS.COG.ACCT<W>
               CASE OS.COG.LEVEL<W> < 2
                  DB.ID = JOS.DIV : GEN.DEPT : GEN.CCTR : OS.COG.ACCT<W>
               CASE OS.COG.LEVEL<W> < 3
                  DB.ID = JOS.DIV : GLS.DEPT : GEN.CCTR : OS.COG.ACCT<W>
               CASE 1
                  DB.ID = JOS.DIV : GLS.DEPT : CCNO : OS.COG.ACCT<W>
               END CASE
               WIP.AMT = COG.COST<W>
            CASE 1
               BEGIN CASE
               CASE OS.WIP.LEVEL<W> < 1
                  DB.ID = GEN.DIV : GEN.DEPT : GEN.CCTR : OS.WIP.ACCT<W>
               CASE OS.WIP.LEVEL<W> < 2
                  DB.ID = JOS.DIV : GEN.DEPT : GEN.CCTR : OS.WIP.ACCT<W>
               CASE OS.WIP.LEVEL<W> < 3
                  DB.ID = JOS.DIV : GLS.DEPT : GEN.CCTR : OS.WIP.ACCT<W>
               CASE 1
                  DB.ID = JOS.DIV : GLS.DEPT : CCNO : OS.WIP.ACCT<W>
               END CASE
               WIP.AMT = WIP.COST<1,1,W>
            END CASE
            BEGIN CASE
            CASE OS.APL.LEVEL<W> < 1
               CR.ID = GEN.DIV : GEN.DEPT : GEN.CCTR : OS.APL.ACCT<W>
            CASE OS.APL.LEVEL<W> < 2
               CR.ID = JOS.DIV : GEN.DEPT : GEN.CCTR : OS.APL.ACCT<W>
            CASE OS.APL.LEVEL<W> < 3
               CR.ID = JOS.DIV : GLS.DEPT : GEN.CCTR : OS.APL.ACCT<W>
            CASE 1
               CR.ID = JOS.DIV : GLS.DEPT : CCNO : OS.APL.ACCT<W>
            END CASE
            GOSUB 1000
            JOS.GLA.DATE<1,1> = "P"
500      NEXT W
         GOSUB 2000     ;* COLLECT WIP FOR SALES STATS
600      FOR I = 2 TO WCNT
            IF JOS.MON<1,I> # PERIOD OR (JOS.GLA.DATE<1,I> # "" AND JOS.GLA.DATE<1,I> # "P") THEN
               GOTO 700
            END
            WIP.CNTR = 1
            FOR W = 1 TO WPTR
               IF JOS.FNGD<1,I> = "*" THEN
                  BEGIN CASE
                  CASE WIP.CLR.LEVEL < 1
                     DB.ID = GEN.DIV : GEN.DEPT : GEN.CCTR : WIP.CLR.ACCT
                  CASE WIP.CLR.LEVEL < 2
                     DB.ID = JOS.DIV : GEN.DEPT : GEN.CCTR : WIP.CLR.ACCT
                  CASE WIP.CLR.LEVEL < 3
                     DB.ID = JOS.DIV : GLS.DEPT : GEN.CCTR : WIP.CLR.ACCT
                  CASE 1
                     DB.ID = JOS.DIV : GLS.DEPT : CCNO : WIP.CLR.ACCT
                  END CASE
               END ELSE
                  BEGIN CASE
                  CASE OS.COG.LEVEL<W> < 1
                     DB.ID = GEN.DIV : GEN.DEPT : GEN.CCTR : OS.COG.ACCT<W>
                  CASE OS.COG.LEVEL<W> < 2
                     DB.ID = JOS.DIV : GEN.DEPT : GEN.CCTR : OS.COG.ACCT<W>
                  CASE OS.COG.LEVEL<W> < 3
                     DB.ID = JOS.DIV : GLS.DEPT : GEN.CCTR : OS.COG.ACCT<W>
                  CASE 1
                     DB.ID = JOS.DIV : GLS.DEPT : CCNO : OS.COG.ACCT<W>
                  END CASE
               END
               BEGIN CASE
               CASE OS.WIP.LEVEL<W> < 1
                  CR.ID = GEN.DIV : GEN.DEPT : GEN.CCTR : OS.WIP.ACCT<W>
               CASE OS.WIP.LEVEL<W> < 2
                  CR.ID = JOS.DIV : GEN.DEPT : GEN.CCTR : OS.WIP.ACCT<W>
               CASE OS.WIP.LEVEL<W> < 3
                  CR.ID = JOS.DIV : GLS.DEPT : GEN.CCTR : OS.WIP.ACCT<W>
               CASE 1
                  CR.ID = JOS.DIV : GLS.DEPT : CCNO : OS.WIP.ACCT<W>
               END CASE
               WIP.AMT = 0 - WIP.COST<1,I,W>
               GOSUB 1000
               JOS.GLA.DATE<1,I> = "P"
            NEXT W
700      NEXT I
         MATWRITE JOS.REC ON JOB.OSP, OS.ID:S
800      RELEASE JOB.OSP, OS.ID:S
      NEXT S
   NEXT M
   CHK.WIP = 0
   FOR W = 1 TO 2
      CHK.WIP = CHK.WIP + JOB.OS.WIP<1,2,W> + JOB.OS.WIP<1,3,W>
   NEXT W
   IF CHECK.WIP <> CHK.WIP THEN
      MAT PRR.REC = ''
      PRR.JOB = JOBNO
      PRR.ERR = 'TOTAL OS = ':CHK.WIP:' AND SEQ SUM = ':CHECK.WIP
      PRR.SEQ = PRR.SEQ + 1
      MATWRITE PRR.REC ON POST.REJECTS, PRR.SEQ
   END
   GOTO 9999
1000 BEGIN CASE
   CASE WIP.AMT > 0
      ETR.DB = CONO : DB.ID : JOBNO : "!OS-D*" : NEW.REC
      ETR.CR = CONO : CR.ID : JOBNO : "!OS-C*" : NEW.REC
   CASE WIP.AMT + 0 < 0
      ETR.DB = CONO : DB.ID : JOBNO : "!OS-C*" : NEW.REC
      ETR.CR = CONO : CR.ID : JOBNO : "!OS-D*" : NEW.REC
   CASE 1
      GOTO 1999
   END CASE
   MATREAD ETR.REC FROM EOM.TRANS, ETR.DB ELSE
      MAT ETR.REC = ''
      ETR.AMT = 0
      ETR.REF = JOB.CUST
   END
   ETR.CNTR = ETR.CNTR + WIP.CNTR
   WIP.CNTR = 0
   ETR.AMT = ETR.AMT + WIP.AMT
   IF NO.DETAIL OR WIP.AMT + 0 = 0 THEN
      MATWRITE ETR.REC ON EOM.TRANS, ETR.DB
      MATREAD ETR.REC FROM EOM.TRANS, ETR.CR ELSE
         MAT ETR.REC = ''
         ETR.AMT = 0
         ETR.REF = JOB.CUST
      END
      ETR.AMT = ETR.AMT - WIP.AMT
      MATWRITE ETR.REC ON EOM.TRANS, ETR.CR
      GOTO 1999
   END
   LOCATE JOS.SEQ IN ETR.TRAN<W>,1 BY "AR" SETTING PTR ELSE NULL
   INS JOS.SEQ BEFORE ETR.TRAN<1,PTR>
   INS JOS.DATE BEFORE ETR.DATE<1,PTR>
   INS WIP.AMT BEFORE ETR.TAMT<1,PTR>
   MATWRITE ETR.REC ON EOM.TRANS, ETR.DB
   MATREAD ETR.REC FROM EOM.TRANS, ETR.CR ELSE
      MAT ETR.REC = ''
      ETR.AMT = 0
      ETR.REF = JOB.CUST
   END
   ETR.AMT = ETR.AMT - WIP.AMT
   LOCATE JOS.SEQ IN ETR.TRAN<W>,1 BY "AR" SETTING PTR ELSE NULL
   INS JOS.SEQ BEFORE ETR.TRAN<1,PTR>
   INS JOS.DATE BEFORE ETR.DATE<1,PTR>
   INS (0 - WIP.AMT) BEFORE ETR.TAMT<1,PTR>
   MATWRITE ETR.REC ON EOM.TRANS, ETR.CR
   IF PTR > 99 THEN NEW.REC = NEW.REC + 1
1999 RETURN
*--------
*
2000  * GET AND UPDATE THE WIP.SALES.STATS RECORD
*
*--------
   WSS.KEY = CONO:"_J_":JOBNO:"_":PERIOD:"XX_0_0"
   MATREADU WSS.REC FROM WIP.SALES.STATS, WSS.KEY ELSE
      MAT WSS.REC=''
   END
   IF JOS.DCOST > JOS.WIP<1,1,1> THEN
      WSS.OSP.DCOST = WSS.OSP.DCOST + (JOS.DCOST - JOS.WIP<1,1,1>)
   END
   T.FIXED = JOS.COST - JOS.DCOST
   IF T.FIXED > JOS.WIP<1,1,2> THEN
      WSS.OSP.FFOH = WSS.OSP.FFOH + (T.FIXED - JOS.WIP<1,1,2>)
   END
   WSS.INVOICE.DATE = DATE()
   WSS.CUST.ID = JOB.CUST
   WSS.SLSM.ID = JOB.SLSMN
   WSS.SALES.CODE = JOB.SALES.CODE
   WSS.JOB.CAT = JOB.CATG
   WSS.MASTER = JOB.MASTER
   WSS.NO.COLORS = JOB.COLORS
   WSS.POSTING.MONTH = PERIOD
   MATWRITE WSS.REC ON WIP.SALES.STATS, WSS.KEY
9999 RETURN
**************************************************************************
**************************************************************************
****************************** EOP ***************************************
**************************************************************************
**************************************************************************

