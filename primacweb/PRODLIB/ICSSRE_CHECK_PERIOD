SUBROUTINE ICSSRE_CHECK_PERIOD(CONO,DATE,PERIOD,DIVISION,ERR.FLG,ERR,COMPANY,CONTROL)
********************************************************************************
*   Program name :- ICSSRE_CHECK_PERIOD
*   Created:- 11/18/2003
*------------------------------------------------------------------------------*
*

* In Properties:
* --------------
*  
*
* Out Properties:
* ---------------
*  
********************************************************************************

$INCLUDE WWINSERT RBO.H
$INCLUDE PMC.CPYLIB SALESDATES
$INCLUDE PMC.CPYLIB FISCAL
$INCLUDE PMC.CPYLIB COMPANY
*
  DEFFUN DIVISION_POSITION(COMP.NO,CONTROL.FILE,DIV.NO)
  ERR.FLG='' 
  ERR=''

  MATREAD FISCAL.REC FROM CONTROL, CONO:"ICFISCAL" ELSE
    ERR.FLG = 2
    ERR = "ICS Control Fiscal record is missing"
    GOTO 93000
  END
  MATREAD SALESDATES.REC FROM CONTROL, CONO:"SALESDATES" ELSE
    ERR.FLG = 2
    ERR = "Salesdates Control Record Is Missing"
    GOTO 93000
  END
  READ OREC FROM CONTROL, CONO:"OPENDATES" ELSE
    ERR.FLG = 2
    ERR = "Opendates Control Record Is Missing"
    GOTO 93000
  END
  MATREAD COMP.REC FROM COMPANY, CONO ELSE
    ERR.FLG = 2
    ERR = "Company Record Is Missing"
    GOTO 93000
  END
  READV JCS.YR4 FROM CONTROL, CONO:"JCFISCAL",1 ELSE
    ERR.FLG = 2
    ERR = "JCFISCAL Control Record Is Missing"
    GOTO 93000
  END
*
  IF DIVISION='ALL' THEN
    CNT=DCOUNT(FR.CURR.PER<1>,@VM)
  END ELSE
    CNT=1
    DIV.POS=DIVISION_POSITION(CONO,CONTROL,DIVISION)
*    DIV.POS=1

    BEGIN CASE
      CASE DIV.POS<1,1>=''
        DIV.POS=DIV.POS<1,2>
      CASE DIV.POS<1,1>='-2' 
        ERR=DIV.POS<1,2>
        ERR.FLG=2
        GOTO 99999
    END CASE
  END
  IF NOT(ERR.FLG) THEN
    FOR CC=1 TO CNT UNTIL (ERR.FLG)
      IF CNT#1 THEN DIV.POS=CNT
      NUM.PERIODS = DCOUNT(OREC,@AM)
      CURRENT.PERIOD=FR.CURR.PER<1,DIV.POS>
      CUR.MON=CURRENT.PERIOD[5,2]
*      CUR.MON=03
      CUR.YEAR = CURRENT.PERIOD[1,4]
      CURR.YR = CURRENT.PERIOD[1,4]
      IF PERIOD # "" THEN
          GOSUB CHECK.PERIOD
      END
    NEXT CC
  END
GOTO 99999

***************
CHECK.PERIOD: 
***************
*
  ERR.FLG = 0
  MON = PERIOD[5,2];YEAR = PERIOD[1,4]
  BEGIN CASE
    CASE LEN(PERIOD) # 6
      ERR = "INVALID PERIOD (MUST BE 6 DIGITS)"
      ERR.FLG = 1
    CASE PERIOD < FR.CURR.PER<1,DIV.POS>
      ERR = "PERIOD MUST BE EQUAL TO OR GREATER THAN CURRENT PERIOD ":FR.CURR.PER<1,DIV.POS>
      ERR.FLG = 1
    CASE MON > 0 AND MON < NUM.PERIODS + 1
      BEGIN CASE
        CASE NUM.PERIODS - CUR.MON = 1 AND MON < 2
          CURR.YR = CURR.YR + 1
        CASE NUM.PERIODS - CUR.MON = 0 AND MON < 3
          CURR.YR = CURR.YR + 1
      END CASE
      IF CURR.YR # YEAR THEN ERR.FLG = 1
      IF CUR.MON + 2 < MON THEN ERR.FLG = 1
    CASE 1
      ERR.FLG = 1
  END CASE

  IF ERR.FLG AND ERR = "" THEN
    ERR = "PERIOD CAN BE UP TO TWO PERIODS GREATER THAN CURRENT PERIOD OF ":FR.CURR.PER<1,DIV.POS>
    GOTO 93000
  END


  IF ERR = "" AND DATE # "" THEN
    SAVE.PERIOD = PERIOD
    *PERIOD = ""    
    ERR.FLG = 0;ERR = ""
*STATUS = RBO.setProperty('','ServerMessage','PERIOD-':PERIOD:'SAVE.PERIOD-':SAVE.PERIOD)
*RETURN
    IF (PERIOD # "") THEN
    *IF (PERIOD # "" AND PERIOD # SAVE.PERIOD) THEN
      ERR.FLG = 0;ERR = "WARNING, This Period Does Not Match Date Entered"
      GOTO 93000
    END
*   PERIOD = SAVE.PERIOD
  END
RETURN
* End of method code

93000 
  STATUS = RBO.setProperty('','ServerStatus',1)
  STATUS = RBO.setProperty('','ServerMessage',ERR)
RETURN

99999
RETURN

