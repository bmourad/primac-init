SUBROUTINE getEstDeptMaint
********************************************************************************
*   Program name :- getEstDeptMaint

*   Created:- 6/13/2003
*
*   Author Irfan M Saleem

*   DESCRIPTION
*
* This program gets the data from the ESTIMATE file to load into the
* Estimate Department Selection screen.
*
*********************************************************************
*
*---- FILE COPY STATEMENTS
*
   $INCLUDE WWINSERT RBO.H
   $INCLUDE JES.CPYLIB JES.FILE.VARS
   $INCLUDE CPYLIB FILE.VARS
   $INCLUDE JES.CPYLIB ESTIMATE
   $INCLUDE JES.CPYLIB ESTIMATE.DEPT
   $INCLUDE CPYLIB CHAR
*
*---- OPEN ALL FILES
*
   IN_PARAM = "" ; OUT_PARAM = ""
   ERRMSG = "CALL openEstimateFiles PROBLEM"
   CALL openEstimateFiles(ERRMSG,IN_PARAM,OUT_PARAM,MAT FILE.VARS,MAT JES.FILE.VARS)
   IF ERRMSG # "" THEN GOTO 93000
*
*---- INITIALIZATION
*
   ERRMSG = RBO.getProperty('','BUILDIDS',BLDSTR)
   ERRMSG = RBO.getProperty('','DREFCREF',DREFCREF)
   ERRMSG = RBO.getProperty('','PMCProperty',PMCProperty)
   SUMMARY.CNT=DCOUNT(BLDSTR,VM)
   ESTD.TSALE	 = ''
   ESTD.TSALE.LABOR = ""
   ESTD.TSALE.MATL = ""
   ESTD.TSALE.OSP = ""
   ESTD.TSALE.SHIP = ""
   ESTD.TSALE.MISC = ""
   ESTD.TSALE.TOTAL = ""
   ESTDDESC=""
   BUILDIDS=""
   DEPCOMPDETAILS=""
   CONO              = PMCProperty<1,4>
   ACTION            = FIELD(DREFCREF,"^",1)
   DREF              = FIELD(DREFCREF,"^",2)
   CREF              = FIELD(DREFCREF,"^",3)
   EST.DEPT          = FIELD(DREFCREF,"^",4)
   EST.COMP.FLAG     = FIELD(DREFCREF,"^",5)
   EST.COMPONENT.CNT = FIELD(DREFCREF,"^",6)

   DEPT.CNT       = DCOUNT(EST.DEPT,VM)
   EXIT           = 0
   DEPT 	    = 15
   
*
*---- PROCESSING
*
*ERRMSGFFF =  CONO :"  " ACTION :" " :DREF :"   " :CREF : "  ":EST.DEPT:"   " :EST.COMP.FLAG :"  " : DEPT.CNT

FOR SET=1 TO SUMMARY.CNT
   MATREAD ESTD.REC FROM ESTIMATE.DEPT, BLDSTR<1,SET> THEN
	 BUILDIDS<1,SET>=BLDSTR<1,SET>
*	 ESTDDESC=ESTD.DESC
	 LINE.CNT=DCOUNT(ESTD.TYPE,VM)
   		FOR L=1 TO LINE.CNT
      		   LTYPE=ESTD.TYPE<1,L>                 
         	BEGIN CASE
        	 CASE LTYPE[1,1]="L"
            		ESTD.TSALE.LABOR<1,SET>=ESTD.TSALE.LABOR<1,SET>+ESTD.TSALE<1,L>
         	 CASE LTYPE[1,1]="M"
           	 	ESTD.TSALE.MATL<1,SET>=ESTD.TSALE.MATL<1,SET>+ESTD.TSALE<1,L>
        	 CASE LTYPE[1,1]="I"
            		ESTD.TSALE.MATL<1,SET>=ESTD.TSALE.MATL<1,SET>+ESTD.TSALE<1,L>
         	 CASE LTYPE[1,1]="P"
            		ESTD.TSALE.OSP<1,SET>=ESTD.TSALE.OSP<1,SET>+ESTD.TSALE<1,L>
         	 CASE LTYPE[1,1]="S"
            		ESTD.TSALE.SHIP<1,SET>=ESTD.TSALE.SHIP<1,SET>+ESTD.TSALE<1,L>
         	 CASE LTYPE[1,1]="O"
            		ESTD.TSALE.MISC<1,SET>=ESTD.TSALE.MISC<1,SET>+ESTD.TSALE<1,L>
         	 CASE 1
            		ESTD.TSALE.MISC<1,SET>=ESTD.TSALE.MISC<1,SET>+ESTD.TSALE<1,L>
         	END CASE
      			ESTD.TSALE.TOTAL<1,SET>=ESTD.TSALE.TOTAL<1,SET>+ESTD.TSALE<1,L>
              
   		NEXT L
        NN = DCOUNT(ESTD.TYPE,VM)
        FOR NN=1 TO LINE.CNT
            TQ=ESTD.QTY<1,NN>
            IF INT(TQ/100)=TQ/100 THEN
               ESTD.QTY<1,NN>=INT(TQ/100)
            END ELSE
               ESTD.QTY<1,NN>=TQ/100
            END
            IF ESTD.TYPE<1,NN>#"G" THEN
               TS=ESTD.STD<1,NN>
               IF INT(TS/100)=TS/100 THEN
                  ESTD.STD<1,NN>=INT(TS/100)
               END ELSE
                  ESTD.STD<1,NN>=TS/100
               END
            END
        NEXT NN

   END ELSE
    		ESTD.TSALE.LABOR<1,SET>=''
		ESTD.TSALE.MATL<1,SET>=''
		ESTD.TSALE.OSP<1,SET>=''
		ESTD.TSALE.SHIP<1,SET>=''
		ESTD.TSALE.MISC<1,SET>=''
		ESTD.TSALE.TOTAL<1,SET>=''
		MAT ESTD.REC = ""
   END
*
*DEPCOMPDETAILS=DEPCOMPDETAILS :ESTD.TSALE.LABOR<1,SET> :"!":ESTD.TSALE.MATL<1,SET>:"!":ESTD.TSALE.OSP<1,SET>:"!":ESTD.TSALE.SHIP<1,SET>:"!":ESTD.TSALE.MISC<1,SET>:"!":ESTD.TSALE.TOTAL<1,SET>:"!":ESTD.CCTR:"!":ESTD.TYPE:"!":ESTD.CODE:"!":ESTD.OPV:"!":ESTD.QTY:"!":ESTD.FCTR:"!":ESTD.STD:"!":ESTD.STD.TYPE :"!":ESTD.TSALE:"!":ESTD.DESC:"!":ESTD.GRP.ID:"~"
DEPCOMPDETAILS=DEPCOMPDETAILS : ESTD.TSALE.LABOR<1,SET> :"!":ESTD.TSALE.MATL<1,SET>:"!":ESTD.TSALE.OSP<1,SET>:"!":ESTD.TSALE.SHIP<1,SET>:"!":ESTD.TSALE.MISC<1,SET>:"!":ESTD.TSALE.TOTAL<1,SET>:"!":ESTD.CCTR:"!":ESTD.TYPE:"!":ESTD.CODE:"!":ESTD.OPV:"!":ESTD.QTY:"!":ESTD.FCTR:"!":ESTD.STD:"!":ESTD.STD.TYPE :"!":ESTD.TSALE:"!":ESTD.DESC:"!":ESTD.GRP.ID
DEPCOMPDETAILS=DEPCOMPDETAILS :"!":ESTD.DEPT.TYPE :"!": ESTD.GRP.SEQ :"!": ESTD.CCTR.TYPE :"!": ESTD.OPV.TYPE
DEPCOMPDETAILS=DEPCOMPDETAILS :"!":ESTD.VEND:"!":ESTD.INV.ID:"!":ESTD.UM:"!":ESTD.HRS:"!":ESTD.RATE:"!":ESTD.DCOST:"!":ESTD.IND.1:"!":ESTD.IND.2:"!":ESTD.IND.3:"!":ESTD.IND.4:"!":ESTD.COST:"!":ESTD.MARKUP:"!":ESTD.SALE:"!":ESTD.GRP.QTY:"!":ESTD.GRP.FCTR:"!":ESTD.GRP.CCTR:"!":ESTD.GRP.QCALC:"!":ESTD.GRP.QPARAM:"!":ESTD.GRP.QOR:"!":ESTD.GRP.FCALC:"!":ESTD.GRP.FPARAM:"!":ESTD.GRP.FOR:"!":ESTD.VSALE:"~"

	IF SET = 1 THEN	
		DEPT = ESTD.DEPT
		STATUS = RBO.setProperty('','ESTD_SUMMARIES',DEPCOMPDETAILS)
		RETURN 
	END
NEXT SET
  

READV ESTGX.GRP FROM ESTIMATE.GRP.XREF,CONO:DEPT,1 ELSE ESTGX.GRP=""; RELEASE ESTIMATE.GRP.XREF,CONO:DEPT
*  FOLLOWING CODE IS FOR SUB 44000 EST.DEPT.MAINT
   XREF.CNT = DCOUNT(ESTGX.GRP,VM)
   FOR NX=1 TO XREF.CNT
	READV DESC FROM ESTIMATE.GRP,CONO:DEPT:"!":ESTGX.GRP<1,NX>,1 ELSE DESC=""; RELEASE ESTIMATE.GRP,CONO:DEPT:"!":ESTGX.GRP<1,NX>
	ESTG.DESC<1,NX>  = DESC
   NEXT NX
*  ABOVE CODE IS FOR SUB 44000  EST.DEPT.MAINT
   
   STATUS = RBO.setProperty('','ESTGX_GRP',ESTGX.GRP)
   STATUS = RBO.setProperty('','ESTG_DESC',ESTG.DESC)

STATUS = RBO.setProperty('','ESTD_SUMMARIES',DEPCOMPDETAILS)
STATUS = RBO.setProperty('','BUILDIDS',BUILDIDS)
RETURN
93000 *
   STATUS = RBO.setProperty('','ServerStatus',1)
   STATUS = RBO.setProperty('','ServerMessage',ERRMSG)
   RETURN

