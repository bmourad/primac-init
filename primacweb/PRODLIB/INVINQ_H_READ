  SUBROUTINE GET.INV.HIST.INQ.INFO
*********************************************************************
*
* REVISION - [12.0]
*
* PROGRAM  - GET.INV.HIST.INQ.INFO
*
* AUTHOR   - ALEJANDRO DELGADO
*
* DATE     - 09/26/2002
*
* DESCRIPTION
*
* This program builds the data from INVENTORY file to load into 
* Inventory History screen.
*
*********************************************************************
*
*---- FILE COPY STATEMENTS
*
  $INCLUDE WWINSERT RBO.H
  $INCLUDE ICS.CPYLIB INVENTORY
*  $INCLUDE ICS.CPYLIB COM.INV.INQ
  $INCLUDE ICS.CPYLIB WAREHOUSE
  $INCLUDE ICS.CPYLIB INV_AUDIT_BAL
  $INCLUDE ICS.CPYLIB INV.CNV
  $INCLUDE CPYLIB FILE.VARS
  $INCLUDE CPYLIB CHAR
*
*---- INITIALIZATION
*
  DEFFUN CALC.PTD(CONO,PRODUCT.ID,WHSE.ID,CUR.PERIOD)
  DEFFUN CALC.YTD(CONO,PRODUCT.ID,WHSE.ID,CUR.PERIOD)
  DEFFUN CALC.STK.QTY(COST.QTY,MAT INV.CNV.REC,ROND,LN)
  DEFFUN DIVISION.POSITION (CONO,CONTROL.FILE,DIV.CODE)
  DEFFUN CURRENT.PERIOD(CONO,CONTROL.FILE,DIV.POS,FISCAL.FLAG)
  *
  ERRMSG = RBO.getProperty('','ID',PRODUCT.ID)
  ERRMSG = RBO.getProperty('','WHSE_ID',WHSE.ID)
  CONO = PRODUCT.ID[1,3]
  PRODUCT.ID = PRODUCT.ID[4,99]

  *
  ERRMSG = "" ; IN_PARAM = "" ; OUT_PARAM = ""
TEMPVAL=""
COSTVAL=""
  IN_PARAM<1,1> = 'CONTROL'
  IN_PARAM<1,2> = 'INVENTORY'
  IN_PARAM<1,3> = 'WAREHOUSE'
  CALL GetInvOpenFiles(ERRMSG,IN_PARAM,OUT_PARAM,MAT FILE.VARS)
  IF ERRMSG # '' THEN GOTO SET.ERROR
  MATREAD INV.REC FROM INVENTORY, CONO:PRODUCT.ID THEN
     $INCLUDE ICSBP INV.UM.CNV
  END ELSE
    ERRMSG = 'Inventory is not on file.  Try again'
    GOTO SET.ERROR
  END
  MATREAD WHSE.REC FROM WAREHOUSE, CONO:WHSE.ID ELSE
    ERRMSG = 'Warehouse is not on file.  Try again'
    GOTO SET.ERROR
  END
  IF WHS.DIV='' THEN WHS.DIV='00'
  DIV.POS=DIVISION.POSITION(CONO,CONTROL,WHS.DIV)
  BEGIN CASE                                              
    CASE DIV.POS<1,1>=''                                  
      DIV.POS=DIV.POS<1,2>                                
      CUR.PERIOD=CURRENT.PERIOD(CONO,CONTROL,DIV.POS,"IC")
      IF CUR.PERIOD<1,1>='' THEN                          
        CUR.PERIOD=CUR.PERIOD<1,2>                        
      END ELSE                                            
        IF CUR.PERIOD<1,2>='-2' THEN                      
          ERRMSG=CUR.PERIOD<1,2>                          
          GOTO SET.ERROR
        END                                               
      END                                                 
    CASE DIV.POS<1,1>='-1'                                
      ERRMSG=DIV.POS<1,2>                                 
      GOTO SET.ERROR
    CASE DIV.POS<1,1>='-2'                                
      ERRMSG=DIV.POS<1,2>                                 
      GOTO SET.ERROR
  END CASE                                                
  ERRMSG = "" ; IN_PARAM = "" ; OUT_PARAM = "" ; MAT INV.CNV.REC = ""
  CALL GetInvUMCnv(ERRMSG,IN_PARAM,OUT_PARAM,MAT INV.CNV.REC,MAT INV.REC)
*
*---- PROCESSING
*
  PTD=CALC.PTD(CONO,PRODUCT.ID,WHSE.ID,CUR.PERIOD)
  MAT ITB.REC = ''
  MATPARSE ITB.REC FROM PTD,@AM
  ;*
  ;*quantities
  ;*

  BEG.PTD.QTY= OCONV(CALC.STK.QTY(ITB.BEG,MAT INV.CNV.REC,'',''),ICR.CNV)
  RECV.PTD.QTY= OCONV(CALC.STK.QTY(ITB.RECV,MAT INV.CNV.REC,'',''),ICR.CNV)
  TRAN.IN.PTD.QTY= OCONV(CALC.STK.QTY(ITB.TRAN.IN,MAT INV.CNV.REC,'',''),ICR.CNV)
  SALE.PTD.QTY= OCONV(CALC.STK.QTY(ITB.SALE,MAT INV.CNV.REC,'',''),ICR.CNV)
  TRAN.OUT.PTD.QTY= OCONV(CALC.STK.QTY(ITB.TRAN.OUT,MAT INV.CNV.REC,'',''),ICR.CNV)
  ADJ.PTD.QTY= OCONV(CALC.STK.QTY(ITB.SHRNK,MAT INV.CNV.REC,'',''),ICR.CNV)
  ;*
  ;*amounts
  ;*
  BEG.PTD.AMT = ITB.BEG.AMT+0
  RECV.PTD.AMT = ITB.RECV.AMT+0
  TRAN.IN.PTD.AMT = ITB.TRAN.IN.AMT+0
  SALE.PTD.AMT = ITB.SALE.AMT+0
  TRAN.OUT.PTD.AMT = ITB.TRAN.OUT.AMT+0
  ADJ.PTD.AMT = ITB.SHRNK.AMT+0
*
  YTD=CALC.YTD(CONO,PRODUCT.ID,WHSE.ID,CUR.PERIOD)
  MAT ITB.REC=''
  MATPARSE ITB.REC FROM YTD,@AM
  ;*
  ;* quantities
  ;*
  BEG.YTD.QTY= OCONV(CALC.STK.QTY(ITB.BEG,MAT INV.CNV.REC,'',''),ICR.CNV)
  RECV.YTD.QTY= OCONV(CALC.STK.QTY(ITB.RECV,MAT INV.CNV.REC,'',''),ICR.CNV)
  TRAN.IN.YTD.QTY= OCONV(CALC.STK.QTY(ITB.TRAN.IN,MAT INV.CNV.REC,'',''),ICR.CNV)
  SALE.YTD.QTY= OCONV(CALC.STK.QTY(ITB.SALE,MAT INV.CNV.REC,'',''),ICR.CNV)
  TRAN.OUT.YTD.QTY= OCONV(CALC.STK.QTY(ITB.TRAN.OUT,MAT INV.CNV.REC,'',''),ICR.CNV)
  ADJ.YTD.QTY= OCONV(CALC.STK.QTY(ITB.SHRNK,MAT INV.CNV.REC,'',''),ICR.CNV)
  ;*
  ;*amounts
  ;*
  BEG.YTD.AMT = ITB.BEG.AMT+0
  RECV.YTD.AMT = ITB.RECV.AMT+0
  TRAN.IN.YTD.AMT = ITB.TRAN.IN.AMT+0
  SALE.YTD.AMT = ITB.SALE.AMT+0
  TRAN.OUT.YTD.AMT = ITB.TRAN.OUT.AMT+0
  ADJ.YTD.AMT = ITB.SHRNK.AMT+0
*
*---- BUILD RBO RECORD
*
  STATUS = RBO.setProperty('','CUR_PERIOD',CUR.PERIOD)
  STATUS = RBO.setProperty('','BEG_PTD_QTY',BEG.PTD.QTY)
  STATUS = RBO.setProperty('','BEG_PTD_AMT',OCONV(BEG.PTD.AMT,'MD2'))
  STATUS = RBO.setProperty('','BEG_YTD_QTY',BEG.YTD.QTY)
  STATUS = RBO.setProperty('','BEG_YTD_AMT',OCONV(BEG.YTD.AMT,'MD2'))

  STATUS = RBO.setProperty('','RECV_PTD_QTY',RECV.PTD.QTY)
  STATUS = RBO.setProperty('','RECV_PTD_AMT',OCONV(RECV.PTD.AMT,'MD2'))
  STATUS = RBO.setProperty('','RECV_YTD_QTY',RECV.YTD.QTY)
  STATUS = RBO.setProperty('','RECV_YTD_AMT',OCONV(RECV.YTD.AMT,'MD2'))

  STATUS = RBO.setProperty('','TRAN_IN_PTD_QTY',TRAN.IN.PTD.QTY)
  STATUS = RBO.setProperty('','TRAN_IN_PTD_AMT',OCONV(TRAN.IN.PTD.AMT,'MD2'))
  STATUS = RBO.setProperty('','TRAN_IN_YTD_QTY',TRAN.IN.YTD.QTY)
  STATUS = RBO.setProperty('','TRAN_IN_YTD_AMT',OCONV(TRAN.IN.YTD.AMT,'MD2'))

  STATUS = RBO.setProperty('','SALE_PTD_QTY',SALE.PTD.QTY)
  STATUS = RBO.setProperty('','SALE_PTD_AMT',OCONV(SALE.PTD.AMT,'MD2'))
  STATUS = RBO.setProperty('','SALE_YTD_QTY',SALE.YTD.QTY)
  STATUS = RBO.setProperty('','SALE_YTD_AMT',OCONV(SALE.YTD.AMT,'MD2'))

  STATUS = RBO.setProperty('','TRAN_OUT_PTD_QTY',TRAN.OUT.PTD.QTY)
  STATUS = RBO.setProperty('','TRAN_OUT_PTD_AMT',OCONV(TRAN.OUT.PTD.AMT,'MD2'))
  STATUS = RBO.setProperty('','TRAN_OUT_YTD_QTY',TRAN.OUT.YTD.QTY)
  STATUS = RBO.setProperty('','TRAN_OUT_YTD_AMT',OCONV(TRAN.OUT.YTD.AMT,'MD2'))

  STATUS = RBO.setProperty('','ADJ_PTD_QTY',ADJ.PTD.QTY)
  STATUS = RBO.setProperty('','ADJ_PTD_AMT',OCONV(ADJ.PTD.AMT,'MD2'))
  STATUS = RBO.setProperty('','ADJ_YTD_QTY',ADJ.YTD.QTY)
  STATUS = RBO.setProperty('','ADJ_YTD_AMT',OCONV(ADJ.YTD.AMT,'MD2'))

*THE TOTALS
TEMPVAL=ICONV(BEG.PTD.QTY + RECV.PTD.QTY + TRAN.IN.PTD.QTY + SALE.PTD.QTY + TRAN.OUT.PTD.QTY + ADJ.PTD.QTY,'MD2')
COSTVAL=ICONV(BEG.YTD.QTY + RECV.YTD.QTY + TRAN.IN.YTD.QTY + SALE.YTD.QTY + TRAN.OUT.YTD.QTY + ADJ.YTD.QTY,'MD2')
STATUS=RBO.setProperty('','TOT_PTD_QTY',OCONV(TEMPVAL,'MD2'))
  STATUS = RBO.setProperty('','TOT_PTD_AMT',OCONV(BEG.PTD.AMT + RECV.PTD.AMT + TRAN.IN.PTD.AMT + SALE.PTD.AMT + TRAN.OUT.PTD.AMT + ADJ.PTD.AMT,'MD2'))
  *STATUS = RBO.setProperty('','TOT_YTD_QTY',OCONV(BEG.YTD.QTY + RECV.YTD.QTY + TRAN.IN.YTD.QTY + SALE.YTD.QTY + TRAN.OUT.YTD.QTY + ADJ.YTD.QTY,'MD2'))
  STATUS=RBO.setProperty('','TOT_YTD_QTY',OCONV(COSTVAL,'MD2'))
  STATUS = RBO.setProperty('','TOT_YTD_AMT',OCONV(BEG.YTD.AMT + RECV.YTD.AMT + TRAN.IN.YTD.AMT + SALE.YTD.AMT + TRAN.OUT.YTD.AMT + ADJ.YTD.AMT,'MD2'))


  RETURN
*
SET.ERROR: 
*
  STATUS = RBO.setProperty('','ServerStatus',1)
  STATUS = RBO.setProperty('','ServerMessage',ERRMSG)
  RETURN
  END


