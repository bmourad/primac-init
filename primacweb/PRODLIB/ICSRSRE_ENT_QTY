SUBROUTINE ICSRSRE_ENT_QTY
********************************************************************************
*   Program name :- ICSRSRE_ENT_QTY
*   Created:- 3/15/2005
*------------------------------------------------------------------------------*
*

* In Properties:
* --------------
*  
*
* Out Properties:
* ---------------
*  
********************************************************************************
$INCLUDE WWINSERT RBO.H

* Insert method code here
$INCLUDE ICS.CPYLIB INVENTORY
$INCLUDE PMC.CPYLIB PO
$INCLUDE ICS.CPYLIB INV.CNV
$INCLUDE ICS.CPYLIB CATEGORY
$INCLUDE ICS.CPYLIB PO.MAN.XREF

$INCLUDE ICS.CPYLIB INV_SERIAL
$INCLUDE ICS.CPYLIB DAILY_STOCK

   DIM S.REC(25)
   EQU S.SERIAL        TO S.REC(1);*
   EQU S.PO.LINE.NO    TO S.REC(2)
   EQU S.QTY           TO S.REC(3);*
   EQU S.LOC           TO S.REC(4);*
   EQU S.MILL.ID       TO S.REC(5);*
   EQU S.QTY.ENTERED   TO S.REC(6)
   EQU S.WHSE          TO S.REC(7);*
   EQU S.PROD.NO       TO S.REC(9)
   EQU S.INV.FULL.DESC TO S.REC(10);*
   EQU S.INV.PAP.TYPE  TO S.REC(11)
   EQU S.TOT.WEIGHT    TO S.REC(12)
   EQU S.UNIT          TO S.REC(13);*UOM
   EQU S.INV.UNIT      TO S.REC(14)
   EQU S.INV.M.WT      TO S.REC(15)
   EQU S.STK.QTY       TO S.REC(16)
   EQU S.INV.PAP.WIDTH TO S.REC(17)
   EQU S.POST.DATE     TO S.REC(19);*
   EQU S.STATUS        TO S.REC(20)
   EQU S.EDIT.DATE     TO S.REC(21)
   EQU S.UN.PRICE      TO S.REC(24)
   EQU S.INV.SBR       TO S.REC(25) ;*T28300
   
   S.SERIAL = ''
   S.PO.LINE.NO = ''
   S.QTY = ''
   S.LOC = ''
   S.MILL.ID = ''
   S.QTY.ENTERED = ''
   S.WHSE = ''       
   S.PROD.NO = ''    
   S.INV.FULL.DESC = ''
   S.INV.PAP.TYPE = ''
   S.TOT.WEIGHT = ''   
   S.UNIT = ''          
   S.INV.UNIT = ''     
   S.INV.M.WT = ''     
   S.STK.QTY = ''      
   S.INV.PAP.WIDTH = ''
   S.POST.DATE = ''    
   S.STATUS = ''       
   S.EDIT.DATE = ''    
   S.UN.PRICE = ''     
   S.INV.SBR = ''      
   RQX=''; OQX='' ;*T28300


*STATUS = RBO.getProperty('','CONO',CONO)
STATUS = RBO.getProperty('','PMCProperty',PMCPROPERTY)
STATUS = RBO.getProperty('','PONUM',PONUM)
STATUS = RBO.getProperty('','PoLineList',POLINE)
STATUS = RBO.getProperty('','ManifestNo',ManifestNo)
STATUS = RBO.getProperty('','ManifestTotal',RSMAN.MAN.TOT.WGT)
STATUS = RBO.getProperty('','RECNO',REF.NO)
STATUS = RBO.getProperty('','Quantity',QTY)
STATUS = RBO.getProperty('','PO_UNIT',UNIT)
STATUS = RBO.getProperty('','PostDateList',PostDateList)
*STATUS = RBO.getProperty('','Total',Total)
STATUS = RBO.getProperty('','QntVals',QntVals)



*S.QTY.ENTERED = QntVals
QTCNT = DCOUNT(QntVals,@VM)
FOR I=1 TO QTCNT
	S.QTY.ENTERED<1,I>=QntVals<1,I>
	S.UNIT<1,I> = UNIT<1,I>
	S.POST.DATE<1,I> = PostDateList<1,I>
NEXT I

ERRMSG = ERRMSG:S.QTY.ENTERED

CONO = PMCPROPERTY<1,4>
*S.QTY = QTY

 


OPEN "","CONTROL" TO CONTROL ELSE
	ERRMSG = "CANNOT OPEN CONTROL FILE";GOTO 91000 
END
OPEN "","PO" TO PO ELSE
   ERRMSG = "CANNOT OPEN PO FILE"; GOTO 91000
END
OPEN "","PO.MAN.XREF" TO PO.MAN.XREF ELSE
   ERRMSG ="CANNOT OPEN PO.MAN.XREF FILE";GOTO 91000 
END
OPEN '','INVENTORY' TO INVENTORY ELSE 
	ERRMSG = 'INVENTORY FILE IS MISSING'; GOTO 91000
END
OPEN "","INV_SERIAL" TO INV_SERIAL ELSE
      ERRMSG = "CANNOT OPEN INV_SERIAL FILE";GOTO 91000
END
OPEN "","CATEGORY" TO CATEGORY ELSE
      ERRMSG = "CATEGORY FILE IS MISSING"; GOTO 91000
END
OPEN "","DAILY_STOCK" TO DAILY_STOCK ELSE
      ERRMSG="CANNOT OPEN DAILY_STOCK FILE";GOTO 91000
END
OPEN "","INV_SERIAL_DELETED" TO INV_SERIAL_DELETED ELSE
      ERRMSG = "CANNOT OPEN INV_SERIAL_DELETED FILE";GOTO 91000
END
OPEN "","INV_SERIAL" TO INV_SERIAL ELSE
      ERRMSG = "CANNOT OPEN INV_SERIAL FILE";GOTO 91000
END

MATREAD PO.REC FROM PO, CONO:PONUM THEN
BCFLAG=0
PO.LINE.CNT = DCOUNT(PO.PROD.NUM,@VM)
       FOR PO.LINE.PTR=1 TO PO.LINE.CNT WHILE BCFLAG=0
         MATREAD INV.REC FROM INVENTORY, CONO:PO.PROD.NUM<1,PO.LINE.PTR> ELSE MAT INV.REC = ""
         MATREAD CATG.REC FROM CATEGORY,CONO:INV.LINE ELSE MAT CATG.REC=''
            IF CATG.TRK.LVL='S' THEN
               BCFLAG=1
            END ELSE
		 STATS = 1
		 ERRMSG = 'PO line item is not a serial track item.' 
 	     END
       NEXT PO.LINE.PTR
       IF BCFLAG=0 THEN
	  STATS = 1
         ERRMSG = "Invalid P/O for this function"
         GOTO 91000
       END
	GOSUB LOAD.S.REC
	GOSUB UPDATE.TOTALS
	
	MATREAD INV.REC FROM INVENTORY, CONO:PO.PROD.NUM<1,POLINE> THEN
	       MATREAD CATG.REC FROM CATEGORY,CONO:INV.LINE ELSE MAT CATG.REC=''
		*GOSUB NEW.RECORD	
		GOSUB ENT.QTY
	END ELSE 
		MAT INV.REC = ""
		ERRMSG = ERRMSG:"NEW RECORD NOT OPENED"
	END
*	GOSUB LOAD.S.REC
*	GOSUB UPDATE.TOTALS
	
	
END ELSE
		ERRMSG="CANNOT READ PO"   
		GOTO 91000  
END

*********
ENT.QTY: 
*********
*
TEMP.QTY.ENTERED=0
S$VALUE = S.QTY.ENTERED<1,REF.NO>
   BEGIN CASE
      CASE OQX<1,REF.NO> AND ICR.DV1<REF.NO,2>=''
            S$VALUE=S$VALUE * S.INV.SBR<1,REF.NO>
            S$VALUE=S$VALUE * 10
            RQ.VALUE=INT(((S$VALUE/ICR.DV1<REF.NO,1>)*ICR.MT1<REF.NO,1>)/ICR.DV2<REF.NO,1>+.5)
            WT.VALUE=INT(((RQ.VALUE/ICR.MT1<REF.NO,1>)*ICR.DV1<REF.NO,1>)*ICR.DV2<REF.NO,1>+.5)
            OQ.VALUE=INT(WT.VALUE/10/S.INV.SBR<1,REF.NO>+.5)
*            S$DATA(14)<S$SCR,REF.NO> = OQ.VALUE
 	     SCREENDATA = OQ.VALUE      
      CASE OQX<1,REF.NO>
            WT.VALUE=INT(((S$VALUE/ICR.MT1<REF.NO,2>)*ICR.DV1<REF.NO,2>)*ICR.DV2<REF.NO,2>+.5)
            RQ.VALUE=INT(((WT.VALUE/ICR.DV1<REF.NO,1>)*ICR.MT1<REF.NO,1>)/ICR.DV2<REF.NO,1>+.5)
            WT.VALUE=INT(((RQ.VALUE/ICR.MT1<REF.NO,1>)*ICR.DV1<REF.NO,1>)*ICR.DV2<REF.NO,1>+.5)
            OQ.VALUE=INT(((WT.VALUE/ICR.DV1<REF.NO,2>)*ICR.MT1<REF.NO,2>)/ICR.DV2<REF.NO,2>+.5)
            SCREENDATA = OQ.VALUE
      CASE RQX<1,REF.NO>
            WT.VALUE=INT(((S$VALUE/ICR.MT1<REF.NO,1>)*ICR.DV1<REF.NO,1>)*ICR.DV2<REF.NO,1>+.5)
            OQ.VALUE=0
            RQ.VALUE=INT(((WT.VALUE/ICR.DV1<REF.NO,1>)*ICR.MT1<REF.NO,1>)/ICR.DV2<REF.NO,1>+.5)
	     SCREENDATA = RQ.VALUE	
   END CASE

TEMP.QTY.ENTERED = SCREENDATA 
IF TEMP.QTY.ENTERED = 0 THEN TEMP.QTY.ENTERED=S.QTY.ENTERED<1,REF.NO>
   S.QTY.ENTERED<1,REF.NO> = TEMP.QTY.ENTERED

RETURN;*ADDED

***************
UPDATE.TOTALS: 
***************
ENTERED = ""
TCNT = QTCNT
*TCNT = DCOUNT(S.SERIAL,@VM)
   FOR TPTR = 1 TO TCNT
      IF S.POST.DATE<1,TPTR> = "" THEN
         IF S.UNIT<1,TPTR> = "LBS" OR S.UNIT<1,TPTR> = "MSI" THEN
           		ENTERED+=S.QTY.ENTERED<1,TPTR>
         END ELSE
	            ENTERED+=S.QTY.ENTERED<1,TPTR>*100
         END
      END
   NEXT TPTR

   Total = ENTERED
   IF RSMAN.MAN.TOT.WGT = "" THEN
      BALANCE = ""
   END ELSE
      BALANCE = RSMAN.MAN.TOT.WGT - ENTERED
   END
*BALANCE = OCONV(((BALANCE+0)*100) ,"MD2")
*QTY = OCONV(((QTY+0)*100) ,"MD2")
*Total = OCONV(((Total+0)*100) ,"MD2")

*   S$DATA(29)<S$SCR> = BALANCE
*ERRMSG = ERRMSG:RSMAN.MAN.TOT.WGT
STATUS = RBO.setProperty("","ServerMessage",ERRMSG)
STATUS = RBO.setProperty('','Quantity',QTY)
STATUS = RBO.setProperty('','Total',Total)
STATUS = RBO.setProperty('','BALANCE',BALANCE)
RETURN
************************************
***********
GET.CONV: 
***********
*SS = REF.NO
*T28300 v
   BEGIN CASE
      CASE S.INV.UNIT<1,SS,2> = "SHT" AND S.INV.UNIT<1,SS,3> = "LBS"
         ICR.CNV<SS,1> = "MD0"; ICR.DV2<SS,1> = 1
         ICR.DV1<SS,1> = S.INV.M.WT<1,SS>; ICR.MT1<SS,1> = 1
         IF S.UNIT<1,SS> = S.INV.UNIT<1,SS,2> THEN RQX<1,SS> = 1
         IF S.UNIT<1,SS> = 'LBS' THEN OQX<1,SS> = 1; RQX<1,SS> = 1
      CASE S.INV.UNIT<1,SS,2> = "PC" AND S.INV.UNIT<1,SS,3> = "MSI"
         ICR.CNV<SS,1> = "MD0"; ICR.DV2<SS,1> = 1
         ICR.DV1<SS,1>=S.INV.PAP.WIDTH<1,SS>/100;ICR.MT1<SS,1>=10
         IF S.UNIT<1,SS> = 'PC' THEN RQX<1,SS> = 1
         IF S.UNIT<1,SS> = 'MSI' THEN OQX<1,SS> = 1; RQX<1,SS> = 1
         IF S.UNIT<1,SS> = 'FT' THEN
           ICR.DV1<SS,2>=S.INV.PAP.WIDTH<1,SS>/100; ICR.MT1<SS,2>=100
           ICR.DV2<SS,2>=12; OQX<1,SS> = 1; RQX<1,SS> = 1
         END
      CASE S.INV.UNIT<1,SS,2> = "FT" AND S.INV.UNIT<1,SS,3> = "MSI"
         ICR.CNV<SS,1> = "MD0"; ICR.DV2<SS,1> = 12
         ICR.DV1<SS,1>=S.INV.PAP.WIDTH<1,SS>/100;ICR.MT1<SS,1>=100
         IF S.UNIT<1,SS> = 'FT' THEN RQX<1,SS> = 1
         IF S.UNIT<1,SS> = 'MSI' THEN OQX<1,SS> = 1; RQX<1,SS> = 1
         IF S.UNIT<1,SS> = 'PC' THEN
           ICR.DV1<SS,2>=S.INV.PAP.WIDTH<1,SS>/100;ICR.MT1<SS,2>=10
           ICR.DV2<SS,2>=1; OQX<1,SS> = 1; RQX<1,SS> = 1
         END
      CASE 1
         ICR.CNV<SS,1> = "MD2"; ICR.DV2<SS,1> = 1
         ICR.DV1<SS,1> = 10; ICR.MT1<SS,1> = S.INV.SBR<1,SS>
         IF S.UNIT<1,SS> # S.INV.UNIT<1,SS,2> THEN
           OQX<1,SS>=1 ; RQX<1,SS> =1
         END ELSE RQX<1,SS> = 1
*T28300 ^
   END CASE

*T28300 v
*GOSUB 45000


*   IF S.UNIT<1,SS> = "LBS" OR S.UNIT<1,SS> = "MSI" THEN 
*      S.QTY.ENTERED<1,REF.NO> = OCONV(S.QTY.ENTERED<1,REF.NO>,"MD2")
*   END


RETURN
***********

LOAD.S.REC:
***********
MATREAD RSMAN.REC FROM PO.MAN.XREF, CONO:PONUM:"!":ManifestNo THEN
   S.SERIAL = RSMAN.RS.NO
   DSR.ID = CONO:PONUM:"!":ManifestNo
   MATREADU DSR.REC FROM DAILY_STOCK,DSR.ID THEN
      LINE.CNT = 0
      S.CNT = DCOUNT(S.SERIAL,@VM)
      LINE.CNT = S.CNT
* 	STATUS = RBO.setProperty("","ServerMessage",'IN S.CNT':S.CNT)
*	RETURN 
      FOR SS=1 TO S.CNT
         MATREAD ISTK.REC FROM INV_SERIAL,CONO:S.SERIAL<1,SS> ELSE
            MATREAD ISTK.REC FROM INV_SERIAL_DELETED,CONO:S.SERIAL<1,SS> ELSE  
               MAT ISTK.REC = ""                                                  
               ERRMSG = "Serial information record cannot be found":S.SERIAL<1,SS>
               GOTO 91000                                                         
            END                                                                  
         END
         INV.ID=CONO:ISTK.PROD
         IWH.ID=INV.ID:"!":ISTK.WHSE
*         GOSUB CHECK.DATA
         FIND S.SERIAL<1,SS> IN DSR.SERIAL SETTING FLD,VL,SVL THEN
            S.EDIT.DATE<1,SS> = DSR.EDIT.DATE
            S.PROD.NO<1,SS> = DSR.PROD<1,VL>
            S.WHSE<1,SS> = DSR.WHSE<1,VL>
            S.UN.PRICE<1,SS> = DSR.UN.PRICE<1,VL>
            S.UNIT<1,SS> = DSR.UOM<1,VL>
            S.STATUS=DSR.STATUS
            S.QTY<1,SS> = DSR.QTY<1,VL,SVL>
            S.STK.QTY<1,SS> =DSR.STK.QTY<1,VL,SVL>
            S.LOC<1,SS> = DSR.LOC<1,VL,SVL>
            S.MILL.ID<1,SS> = DSR.MILL.ID<1,VL,SVL>
            S.POST.DATE<1,SS> =  ISTK.POST.DATE
            S.INV.FULL.DESC<1,SS> = INV.FULL.DESC
            S.QTY.ENTERED<1,SS> = ISTK.QTY.ENTERED
*T27904 v
            IF S.QTY.ENTERED<1,SS> = "" THEN
               S.QTY.ENTERED<1,SS> = DSR.QTY.ENTERED<1,VL,SVL>
            END
*T27904 ^
            S.INV.PAP.TYPE<1,SS> = INV.PAP.TYPE     
            S.INV.M.WT<1,SS> = INV.M.WT             
            S.INV.PAP.WIDTH<1,SS> = INV.PAP.WIDTH   
	    FOR I = 1 TO 4                          
               S.INV.UNIT<1,SS,-1>=INV.UNIT<1,I>
            NEXT I
            S.INV.SBR<1,SS> = INV.SBR ;*T28300
            GOSUB GET.CONV                          
         END
      NEXT SS
   END 
END
RETURN




************************************

91000*
	STATUS = RBO.setProperty("","ServerStatus",S$VALUE)
	STATUS = RBO.setProperty("","ServerMessage",ERRMSG)
*STATUS = RBO.setProperty("","ServerMessage",TEMP.ROLL.WEIGHT)
* End of method code
RETURN



