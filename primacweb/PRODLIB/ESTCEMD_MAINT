SUBROUTINE ESTCEMD_MAINT
********************************************************************************
*   Program name :- ESTCEMD_MAINT
*   WRITTEN BY SYED ALEEM
*   Created:- 4/7/2005
*------------------------------------------------------------------------------*
*

* In Properties:
* --------------
* 
*
* Out Properties:
* ---------------
*  
********************************************************************************
$INCLUDE WWINSERT RBO.H
$INCLUDE JES.CPYLIB ESTIMATE
$INCLUDE PMC.CPYLIB DEPARTMENT
$INCLUDE JES.CPYLIB ESTIMATE.DEPT
$INCLUDE PMC.CPYLIB COST.CNTR
$INCLUDE CPYLIB CHAR

* Insert method code here
ERRMSG          = ""
DEPT.CCTRS.DESC = ""
ESTG.DESC       = ""
ESTG.QFLAG      = ""
ESTG.FFLAG	  = ""
   OPEN "ESTIMATE" TO ESTIMATE ELSE 
	ERRMSG="CANNOT OPEN ESTIMATE FILE"
	GOTO 93000
   END
   OPEN '','ESTIMATE.GRP.XREF' TO ESTIMATE.GRP.XREF ELSE 
	ERRMSG = 'Cannot open ESTIMATE.GRP.XREF file!'
	GOTO 93000      
   END

   OPEN '','DEPARTMENT' TO DEPARTMENT ELSE
       ERRMSG = 'Cannot open DEPARTMENT file!' 
	GOTO 93000
   END

   OPEN '','COST.CNTR' TO COST.CNTR ELSE
       ERRMSG = 'Cannot open COST.CNTR file!' 
	GOTO 93000
   END


   OPEN '','ESTIMATE.DEPT' TO ESTIMATE.DEPT ELSE
       ERRMSG = 'Cannot open ESTIMATE.DEPT file!'
	GOTO 93000
   END

   OPEN '','ESTIMATE.GRP' TO ESTIMATE.GRP ELSE
       ERRMSG = 'Cannot open ESTIMATE.GRP file!'
	GOTO 93000
   END
   OPEN '','CONTROL' TO CONTROL ELSE
       ERRMSG = 'Cannot open CONTROL file!' 
	GOTO 93000
   END
   ERR = RBO.getProperty('','DREFCREF',DREFCREF)
   ERR = RBO.getProperty('','PMCProperty',PMCProperty)

*   ACTION            = FIELD(DREFCREF,"^",1)
*   EST.KEY           = FIELD(DREFCREF,"^",2)
*   EST.DEPT.DESC     = FIELD(DREFCREF,"^",3)
*   DREF              = FIELD(DREFCREF,"^",4)
*   CREF              = FIELD(DREFCREF,"^",5)
*   EQTY              = FIELD(DREFCREF,"^",6)
*   EST.QTY           = FIELD(DREFCREF,"^",7)
*   EST.DEPT          = FIELD(DREFCREF,"^",8)
*   EST.COMP.FLAG     = FIELD(DREFCREF,"^",9)
*   EST.COMPONENT.CNT = FIELD(DREFCREF,"^",10)
*   DEPT.CNT          = DCOUNT(EST.DEPT,VM)

   CONO              = PMCProperty<1,4>
   ACTION            = FIELD(DREFCREF,"^",1)
   EST.KEY           = FIELD(DREFCREF,"^",2)
   DREF              = FIELD(DREFCREF,"^",3)
   CREF              = FIELD(DREFCREF,"^",4)
   EQTY              = FIELD(DREFCREF,"^",5)
   NEW_ITEM		= FIELD(DREFCREF,"^",6)

   EXIT              = 0 
   DEPT 		= 0

   TOTAL.HRS=0
   TOTAL.LABOR=0
   TOTAL.MATL=0
   TOTAL.OSP=0
   TOTAL.SHIP=0
   TOTAL.MISC=0
   TOTAL.DCOST=0
   TOTAL.COST=0
   TOTAL.SALE=0
   TOTAL.TSALE=0
   TOTAL.VSALE=0
   TOTAL.VCOST=0


   MATREAD EST.REC FROM ESTIMATE, CONO:EST.KEY ELSE
       ERRMSG = "Invalid ESTIMATE id ":CONO:EST.KEY
	MAT EST.REC = ""
	DPTR = 1
	COMP = 1
	GOTO 100	
   END
   DEPT.CNT          = DCOUNT(EST.DEPT,VM)
   FOR DPTR=1 TO DEPT.CNT UNTIL EXIT
      IF DREF="ALL" OR DREF=DPTR THEN
         FOR COMP=1 TO EST.COMPONENT.CNT UNTIL EXIT
            IF CREF="ALL" OR CREF=COMP THEN
               IF ACTION="A" OR EST.COMP.FLAG<1,DPTR,COMP> # "" THEN
                  DEPT=EST.DEPT<1,DPTR>		    
		    GOTO 100
               END
            END
         NEXT COMP
      END
   NEXT DPTR

100*
IF DEPT = 0 THEN
	DEPT = FIELD(DREFCREF,"^",6)
END
   IF DEPT="CON" THEN
      MAT DEPT.REC=""
      DEPT.DESC="CONSOLIDATED"
   END ELSE
      MATREAD DEPT.REC FROM DEPARTMENT,CONO:DEPT ELSE
         ERRMSG="Invalid department - ":CONO:DEPT 
*         GOTO 93000         
      END
   END

   READV ESTGX.GRP FROM ESTIMATE.GRP.XREF,CONO:DEPT,1 ELSE ESTGX.GRP=""; RELEASE ESTIMATE.GRP.XREF,CONO:DEPT


*  FOLLOWING CODE IS FOR SUB 44000 EST.DEPT.MAINT
   XREF.CNT = DCOUNT(ESTGX.GRP,VM)

   FOR NX=1 TO XREF.CNT
	READV DESC FROM ESTIMATE.GRP,CONO:DEPT:"!":ESTGX.GRP<1,NX>,1 ELSE DESC="??????????"; RELEASE CONO:DEPT:"!":ESTGX.GRP<1,NX>
	READV QFLAG FROM ESTIMATE.GRP,CONO:DEPT:"!":ESTGX.GRP<1,NX>,2 ELSE QFLAG="??????????"; RELEASE CONO:DEPT:"!":ESTGX.GRP<1,NX>
	READV FFLAG FROM ESTIMATE.GRP,CONO:DEPT:"!":ESTGX.GRP<1,NX>,3 ELSE FFLAG="??????????"; RELEASE CONO:DEPT:"!":ESTGX.GRP<1,NX>
	ESTG.DESC<1,NX>  = DESC
	ESTG.QFLAG<1,NX> = QFLAG
	ESTG.FFLAG<1,NX> = FFLAG
   NEXT NX


*  ABOVE CODE IS FOR SUB 44000  EST.DEPT.MAINT
   
   STATUS = RBO.setProperty('','ESTGX_GRP',ESTGX.GRP)
   STATUS = RBO.setProperty('','ESTG_DESC',ESTG.DESC)
   NEW.REC=0
   ESTD.ID=DPTR:"!":COMP:"!":EQTY

   IF ACTION="A" OR ACTION="M" THEN
      MATREADU ESTD.REC FROM ESTIMATE.DEPT,CONO:EST.KEY:"!":ESTD.ID ELSE
         NEW.REC=1
         MAT ESTD.REC=""
      END
   END ELSE
      MATREAD ESTD.REC FROM ESTIMATE.DEPT,CONO:EST.KEY:"!":ESTD.ID ELSE
         NEW.REC=1
         MAT ESTD.REC=""
      END
   END

   IF (ACTION="A" OR ACTION="M") AND EQTY # EST.QTY<1,1> AND NEW.REC THEN
*      CALL EST.QTY.CALC(CONO,"E",EST.KEY,DPTR,COMP,EQTY)
	ESTDEPTINFO = CONO:"^":"E":"^":EST.KEY:"^":DPTR:"^":COMP:"^":EQTY:"^":"1":"^":COMP:"^":NEW_ITEM
	STATUS = RBO.setProperty('', 'ESTDEPTINFO',ESTDEPTINFO)
	CALL ESTCEM_QTY_CALC
    	STATUS = RBO.getProperty('', 'ESTDEPTINFO',ESTDEPTINFO)
	RET_VALUES = ESTDEPTINFO
	ESTDEPTINFO = ""
	GOSUB ASSIGN_VALUES
       NEW.REC=0
       MATREADU ESTD.REC FROM ESTIMATE.DEPT,CONO:EST.KEY:"!":ESTD.ID ELSE
         RELEASE ESTIMATE.DEPT,CONO:EST.KEY:"!":ESTD.ID
*	  GOTO 93000
      END
   END
   DDESC=EST.DEPT.DESC<1,DPTR>
   IF NEW.REC THEN
      LINE.CNT=0
      CURR.REF.NO=1
      OPTION="A"
*      GOTO 510
   END ELSE
      DATA.FLAG=1
*START OF      GOSUB 41000
      XREF.LINE.COUNT = DCOUNT(DEPT.CCTRS,VM)   
      FOR N=1 TO XREF.LINE.COUNT         
         READV DESC FROM COST.CNTR,CONO:DEPT.CCTRS<1,N>,1 ELSE DESC="??????????"
         DEPT.CCTRS.DESC<1,N>=DESC
      NEXT N      
*END OF      GOSUB 41000
      LINE.CNT=DCOUNT(ESTD.TYPE,VM)

      REF.NO=1
      CURR.REF.NO=""
   END

*
*-- CALCULATE TOTALS
*
900*!
   FOR L=1 TO LINE.CNT
      LTYPE=ESTD.TYPE<1,L>
      BEGIN CASE
         CASE LTYPE[1,1]="L"
            TOTAL.HRS=TOTAL.HRS+ESTD.HRS<1,L>
            TOTAL.LABOR=TOTAL.LABOR+ESTD.TSALE<1,L>
         CASE LTYPE[1,1]="M"
            TOTAL.MATL=TOTAL.MATL+ESTD.TSALE<1,L>
         CASE LTYPE[1,1]="I"
            TOTAL.MATL=TOTAL.MATL+ESTD.TSALE<1,L>
         CASE LTYPE[1,1]="P"
            TOTAL.OSP=TOTAL.OSP+ESTD.TSALE<1,L>
         CASE LTYPE[1,1]="S"
            TOTAL.SHIP=TOTAL.SHIP+ESTD.TSALE<1,L>
         CASE LTYPE[1,1]="O"
            TOTAL.MISC=TOTAL.MISC+ESTD.TSALE<1,L>
      END CASE
      TOTAL.DCOST=TOTAL.DCOST+ESTD.DCOST<1,L>
      TOTAL.COST=TOTAL.COST+ESTD.COST<1,L>
      TOTAL.SALE=TOTAL.SALE+ESTD.SALE<1,L>
      TOTAL.TSALE=TOTAL.TSALE+ESTD.TSALE<1,L>
      BEGIN CASE
         CASE ESTD.VSALE<1,L>="Y"
            TOTAL.VSALE=TOTAL.VSALE+ESTD.TSALE<1,L>
            TOTAL.VCOST=TOTAL.VCOST+ESTD.COST<1,L>
         CASE ESTD.VSALE<1,L>=""
            NULL
         CASE NUM(ESTD.VSALE<1,L>)
            PCT=ESTD.VSALE<1,L>/100
            TOTAL.VSALE=TOTAL.VSALE+INT(ESTD.TSALE<1,L>*PCT/100+0.5)
            TOTAL.VCOST=TOTAL.VCOST+INT(ESTD.COST<1,L>*PCT/100+0.5)
      END CASE
* DMT
*   ESTD.TSALE<1,L> = OCONV(ESTD.TSALE<1,L>,"MD2")
*   ESTD.FCTR<1,L>  = OCONV(ESTD.FCTR<1,L>,"MD3")
   NEXT L
WRITE "HRS ":ESTD.HRS:" DCOST ":ESTD.DCOST ON CONTROL,"01MAINT"
DEPTGRIDSTR = ESTD.TYPE : "^" : ESTD.CCTR : "^" : ESTD.OPV : "^" : ESTD.CODE : "^" : ESTD.QTY : "^" : ESTD.FCTR : "^" : ESTD.STD : "^" : ESTD.STD.TYPE : "^" : ESTD.TSALE : "^" : ESTD.DESC 
DEPTGRIDSTR = DEPTGRIDSTR : "^" : ESTD.GRP.QTY : "^" : ESTD.GRP.FCTR : "^" : ESTD.GRP.QCALC : "^" : ESTD.GRP.QPARAM : "^" : ESTD.GRP.QOR : "^" : ESTD.GRP.FCALC : "^" : ESTD.GRP.FPARAM : "^" : ESTD.GRP.FOR : "^" : ESTD.GRP.ID
DEPTGRIDSTR = DEPTGRIDSTR : "^" : ESTD.OPV.TYPE: "^" :ESTD.UM: "^" :ESTD.HRS: "^" :ESTD.RATE: "^" :ESTD.DCOST: "^" :ESTD.IND.1: "^" :ESTD.IND.2: "^" :ESTD.IND.3: "^" :ESTD.IND.4: "^" :ESTD.COST: "^" :ESTD.MARKUP: "^" :ESTD.SALE: "^" :ESTD.TSALE

OUTPARASTR  = DEPT.CCTRS : "~" : DEPT.CCTRS.DESC : "~" : SPACE((20-LEN(DDESC))/2):DDESC : "~" : EST.KEY : "~" :  COMP : "~" : OCONV(EQTY,'MD0,') 
OUTPARASTR  = OUTPARASTR : "~" : DEPTGRIDSTR
OUTPARASTR  = OUTPARASTR : "~" : OCONV(TOTAL.LABOR,'MD2,') : "~" : OCONV(TOTAL.MATL,'MD2,') : "~" : OCONV(TOTAL.OSP,'MD2,') : "~" : OCONV(TOTAL.SHIP,'MD2,') : "~" : OCONV(TOTAL.MISC,'MD2,') : "~" : OCONV(TOTAL.TSALE,'MD2,') : "~" : ESTG.QFLAG : "~" : ESTG.FFLAG : "~" : ESTD.GRP.SEQ

STATUS = RBO.setProperty('', 'OUTPARASTR',OUTPARASTR)	

RETURN
90000*
93000*
	STATUS = RBO.setProperty('','ESTGX_GRP',ESTGX.GRP)
	STATUS = RBO.setProperty('','ESTG_DESC',ESTG.DESC)
	IF ERRMSG # "" THEN
		STATUS = RBO.setProperty('', 'ServerStatus',1)
	      	STATUS = RBO.setProperty('', 'ServerMessage',ERRMSG)	   
	END
* End of method code
RETURN
ASSIGN_VALUES:
	ESTD.TYPE 	= FIELD(RET_VALUES,"~",2)
	IF FIELD(RET_VALUES,"~",3) <> "" THEN
	   TOTAL.HRS	= FIELD(RET_VALUES,"~",3)
	END ELSE
	   TOTAL.HRS = 0
	END
	IF FIELD(RET_VALUES,"~",4) <> "" THEN
	   TOTAL.DCOST = FIELD(RET_VALUES,"~",4)
	END ELSE
	   TOTAL.DCOST = 0
	END
	TOTAL.COST	= FIELD(RET_VALUES,"~",5)
	TOTAL.SALE	= FIELD(RET_VALUES,"~",6)
	TOTAL.TSALE	= FIELD(RET_VALUES,"~",7)
	TOTAL.VSALE	= FIELD(RET_VALUES,"~",8)
	TOTAL.VCOST	= FIELD(RET_VALUES,"~",9)
RETURN

