SUBROUTINE OUTREQ_POSTREAD
********************************************************************************
*   Program name :- OUTREQ_POSTREAD
*   Created:- 11/17/2003
*------------------------------------------------------------------------------*
*
*  This server event is triggered from within the {m:WW:uObject=ReadData}, {m- *
*  :WW:uObject=ReadLockData}, {m:WW:uObject=DeleteData} and {m:WW:uObject=Wri- *
*  teData} server events. In each case, this {m:WW:uObject=PostRead} event oc- *
*  curs after the physical database read, but before values are extracted fro- *
*  m the database record. This provides a window of opportunity in which the - *
*  database values may be directly manipulated. The API functions
*  RBO.setDBVa- *
*  ls() and RBO.getDBVals() are used to do this.
*  
*                                             - *

* In Properties:
* --------------
*  
*
* Out Properties:
* ---------------
*  
********************************************************************************
$INCLUDE WWINSERT RBO.H
$INCLUDE CPYLIB CHAR
$INCLUDE POS.CPYLIB SPECIAL.INST
* Insert method code here
ERRMSG = ""
   OPEN '','CONTROL' TO CONTROL ELSE
      ERRMSG = 'CONTROL FILE IS MISSING'
      GOTO 1000
   END
   STATUS = RBO.getProperty('', 'PMCProperty', PMCProperty)
   CONO = PMCProperty<1,4>
   MATREAD SI.REC FROM CONTROL , CONO:"SPEC.INST" ELSE
      MAT SI.REC = ''
   END   

  * STATUS = RBO.setProperty('', 'SI_CNT',DCOUNT(SI.INST,VM))
   STATUS = RBO.setProperty('', 'SI_INST',SI.INST)
   STATUS = RBO.setProperty('', 'SI_TYP',SI.TYP)
   STATUS = RBO.setProperty('', 'SI_MAX',SI.MAX)
   STATUS = RBO.setProperty('', 'SI_DEF',SI.DEF)
   STATUS = RBO.setProperty('', 'SI_USED',SI.USED)
   STATUS = RBO.setProperty('', 'SI_SCALER',SI.SCALER)

1000*
IF ERRMSG # "" THEN
	STATUS = RBO.setProperty('', 'ServerStatus', 1)
       STATUS = RBO.setProperty('', 'ServerMessage', ERRMSG)	
END 
* End of method code
RETURN

