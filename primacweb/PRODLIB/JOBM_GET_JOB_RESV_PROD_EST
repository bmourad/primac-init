SUBROUTINE JOBM_GET_JOB_RESV_PROD_EST
********************************************************************************
*   Program name :- JOBM_GET_JOB_RESV_PROD_EST
*   Created:- 6/22/2004
*------------------------------------------------------------------------------*
*
* In Properties:
* --------------
*  
*
* Out Properties:
* ---------------
*  
********************************************************************************
$INCLUDE WWINSERT RBO.H
$INCLUDE JCS.CPYLIB JOB
$INCLUDE OPS.CPYLIB JOB.FNGD.STATS
$INCLUDE JES.CPYLIB ESTIMATE
$INCLUDE JES.CPYLIB ESTIMATE.RES
$INCLUDE ICS.CPYLIB WAREHOUSE
$INCLUDE ICS.CPYLIB INV.JOB.STATS
$INCLUDE ICS.CPYLIB INVENTORY
$INCLUDE ICS.CPYLIB CATEGORY
$INCLUDE PMC.CPYLIB COMPANY
$INCLUDE ICS.CPYLIB INV.WHSE
$INCLUDE ICS.CPYLIB INV.CNV
$INCLUDE CPYLIB CHAR

* Insert method code here
OPEN "","JOB.FNGD.STATS" TO JOB.FNGD.STATS ELSE
	ERRMSG = "CANNOT OPEN JOB.FNGD.STATS FILE"
	GOTO 999999
END

OPEN "","JOB" TO JOB ELSE
	ERRMSG = "CANNOT OPEN JOB FILE"
	GOTO 999999
END
OPEN '','ESTIMATE' TO ESTIMATE ELSE
	ERRMSG = "CANNOT OPEN ESTIMATE FILE"
	GOTO 999999
END
OPEN '','COMPANY' TO COMPANY ELSE
	ERRMSG = "CANNOT OPEN COMPANY FILE!"
	GOTO 999999
END

OPEN "","ESTIMATE.RES" TO ESTIMATE.RES ELSE
      ERRMSG = "CANNOT OPEN ESTIMATE.RES FILE"
      GOTO 999999
END
OPEN "","WAREHOUSE" TO WAREHOUSE ELSE
	ERRMSG = "CANNOT OPEN WAREHOUSE FILE"
      	GOTO 999999
END
OPEN "","INV.JOB.STATS" TO INV.JOB.STATS ELSE
	ERRMSG = "CANNOT OPEN INV.JOB.STATS FILE"
      	GOTO 999999
END
OPEN "","INVENTORY" TO INVENTORY ELSE
	ERRMSG = "CANNOT OPEN INVENTORY FILE"
	GOTO 999999
END
OPEN "","INV.WHSE" TO INV.WHSE ELSE
	ERRMSG = "CANNOT OPEN INV.WHSE FILE"
	GOTO 999999
END

OPEN "","CATEGORY" TO CATEGORY ELSE
	ERRMSG = "CANNOT OPEN CATEGORY FILE"
	GOTO 999999
END
DEFFUN CALC_STK_QTY(BALANCE,MAT INV.CNV.REC,ROND,LN)

VAL = RBO.getProperty('','Cono',CONO)
VAL = RBO.getProperty('','JOB_NO',JOB.NO)
VAL = RBO.getProperty('','JOB_EST',NEW.EST)

EST.NO = NEW.EST

MATREAD JOB.REC FROM JOB,CONO:JOB.NO ELSE MAT JOB.REC = ""
MATREAD JFS.REC FROM JOB.FNGD.STATS, CONO:JOB.NO ELSE MAT JFS.REC = ""
MATREAD EST.REC FROM ESTIMATE,CONO:NEW.EST ELSE MAT EST.REC = ""

VAL = RBO.getProperty('','JOB_TRACK_DATE',JOB.TRACK.DATE)
VAL = RBO.getProperty('','JOB_EST',JOB.EST)
VAL = RBO.getProperty('','JOB_EST_TYPE',JOB.EST.TYPE)
VAL = RBO.getProperty('','JOB_QTY',JOB.QTY)
VAL = RBO.getProperty('','EST_PAR',EST.PAR1)
VAL = RBO.getProperty('','JOB_MASTER',JOB.MASTER)
VAL = RBO.getProperty('','JOB_PRICE_PER_THOU',JOB.PRICE.PER.THOU)
VAL = RBO.getProperty('','JOB_EST_COST',JOB.EST.COST)
VAL = RBO.getProperty('','JOB_EST_SALE',JOB.EST.SALE)
VAL = RBO.getProperty('','JOB_COMMENTS',JOB.COMMENTS)
VAL = RBO.getProperty('','JOB_DESC',JOB.DESC)
VAL = RBO.getProperty('','ESTAT',ESTAT) ;* 0 - VALUE AND ALSO RETURN THIS VALUE

VAL = RBO.getProperty('','SAVE_INV_JS_REC',SAVE.INV.JS.REC) ;* 0 - RETURN
SAVE.INV.JS.REC = RAISE(SAVE.INV.JS.REC)

VAL = RBO.getProperty('','EST_MATL',EST.MATL) ;* -> 1 OR 0 HERE WE HAVE TO PASS 1

JOB.EST.COST = ICONV(JOB.EST.COST,'MD2')
JOB.EST.SALE = ICONV(JOB.EST.SALE,'MD2')
JOB.PRICE.PER.THOU = ICONV(JOB.PRICE.PER.THOU,'MD2')

EST.PAR1 = RAISE(EST.PAR1)
CMATCH = 0

DIM EST.PAR(10)
EQU EST.PAR.QTY    TO EST.PAR(1)
EQU EST.PAR.COMP   TO EST.PAR(2)
EQU EST.PAR.DEPT   TO EST.PAR(3)
EQU EST.PAR.UPDM   TO EST.PAR(4)
EQU EST.PAR.MATL   TO EST.PAR(5)

EST.PAR(1) = EST.PAR1<1>
EST.PAR(2) = EST.PAR1<2>
EST.PAR(3) = EST.PAR1<3>
EST.PAR(4) = EST.PAR1<4>
EST.PAR(5) = EST.PAR1<5>

VAL = RBO.getProperty('','VISITED_FLG',VISITED.MOD.FLG) ;* THIS FLAG INDICATES WHICH MODULES ARE VISITED -- 1-RS,RS 2-FG 3-GANG
IF VISITED.MOD.FLG # 0 THEN
	VAL = RBO.getProperty('','JOB_RESV_MATL',JOB.RESV.MATL) ;*RETURN
	VAL = RBO.getProperty('','JOB_RESV_WHSE',JOB.RESV.WHSE) ;*RETURN
	VAL = RBO.getProperty('','JOB_ALOC_QTY',JOB.ALOC.QTY) ;*RETURN
	VAL = RBO.getProperty('','JOB_RESV_QTY',JOB.RESV.QTY) ;*RETURN
	VAL = RBO.getProperty('','JOB_USED_QTY',JOB.USED.QTY) ;*RETURN
	VAL = RBO.getProperty('','JOB_ALOC_AMT',JOB.ALOC.AMT) ;*RETURN
	VAL = RBO.getProperty('','JOB_RESV_AMT',JOB.RESV.AMT) ;*RETURN
	VAL = RBO.getProperty('','JOB_USED_AMT',JOB.USED.AMT) ;*RETURN
	*INTERNAL CONVERSION
       FOR LN = 1 TO DCOUNT(JOB.RESV.MATL,VM)
		MATREAD INV.REC FROM INVENTORY,CONO:JOB.RESV.MATL<1,LN> ELSE
    			INV.FULL.DESC = 'Unknown'
		END
		$INCLUDE ICSBP INV.UM.CNV
		ROND = ''
		JOB.ALOC.QTY<1,LN> = ICONV((((JOB.ALOC.QTY<1,LN>/ICR.MT1)*ICR.DV1)*ICR.DV2),ICR.CNV)
		JOB.RESV.QTY<1,LN> = ICONV((((JOB.RESV.QTY<1,LN>/ICR.MT1)*ICR.DV1)*ICR.DV2),ICR.CNV)
		JOB.USED.QTY<1,LN> = ICONV((((JOB.USED.QTY<1,LN>/ICR.MT1)*ICR.DV1)*ICR.DV2),ICR.CNV)

		JOB.ALOC.AMT<1,LN> = ICONV(JOB.ALOC.AMT<1,LN>,"MD2")
		JOB.RESV.AMT<1,LN> = ICONV(JOB.RESV.AMT<1,LN>,"MD2")
		JOB.USED.AMT<1,LN> = ICONV(JOB.USED.AMT<1,LN>,"MD2")
	NEXT LN
END

SAVE.COMP.CNT = 0

2000 *
JOB.TRACK.DATE<1,1> = EST.DATE.ENTERED
JOB.EST = EST.NO
JOB.EST.TYPE = EST.TYPE
JOB.QTY<1,1> = EST.PAR.QTY
IF JOB.MASTER = "" THEN JOB.MASTER = EST.JOB
LOCATE EST.PAR.QTY IN EST.QTY<1>,1 SETTING QP ELSE QP = 0
IF QP > 0 THEN
	JOB.PRICE.PER.THOU = EST.PRICE.THOU<1,QP>
END
JOB.EST.COST = ""
JOB.EST.SALE = ""
DC.CNT = COUNT(EST.DEPT.COMP,VM) + (EST.DEPT.COMP # "")
TOTAL.VSALE=0;*T21961
FOR LN = 1 TO DC.CNT
	COMP = FIELD(EST.DEPT.COMP<1,LN>,"!",2)
  	LOCATE COMP IN EST.PAR.COMP<1,1>,1 SETTING CMATCH ELSE CMATCH = 0
  	IF EST.PAR.COMP = "ALL" OR CMATCH > 0 THEN
    		IF EST.PAR.QTY = FIELD(EST.DEPT.COMP<1,LN>,"!",3) THEN
      			JOB.EST.COST = JOB.EST.COST + EST.DEPT.COMP.COST<1,LN>
      			JOB.EST.SALE = JOB.EST.SALE + EST.DEPT.COMP.TSALE<1,LN>
      			TOTAL.VSALE=TOTAL.VSALE+EST.DEPT.COMP.VSALE<1,LN>;*T21961
    		END
  	END
NEXT LN

JOB.EST.SALE = JOB.EST.SALE + (INT(OCONV(JOB.EST.SALE,'MD2') * OCONV(EST.OM.PCT<1,QP>,'MD4') + .005 / 100))
CPT = 0
TOTAL.VSALE = TOTAL.VSALE + (INT(OCONV(TOTAL.VSALE,'MD2') * OCONV(EST.OM.PCT<1,QP>,'MD4') + .005 / 100))
IF EST.PAR.COMP # 'ALL' THEN
	JOB.PRICE.PER.THOU = INT(TOTAL.VSALE / (EST.PAR.QTY/1000) + .5)
END
DPT = 0
*T26929 v
*  CCNT1 = COUNT(EST.COMMENT.TYPE,VM) + 1
*  CCNT2 = COUNT(EST.COMMENTS,VM) + 1
*  IF CCNT2 > CCNT1 THEN CCNT = CCNT2 ELSE CCNT = CCNT1
CPT = 0
CCNT1 = COUNT(EST.COMMENT.TYPE,VM) + 1
CCNT2 = COUNT(EST.COMMENTS,VM) + 1
IF CCNT2 > CCNT1 THEN CCNT = CCNT2 ELSE CCNT = CCNT1
FOR CP = 1 TO CCNT
  	IF EST.COMMENT.TYPE<1,CP> = "I" THEN
    		CPT = CPT + 1
    		IF JOB.COMMENTS<1,CPT> = '' THEN
      			JOB.COMMENTS<1,CPT> = EST.COMMENTS<1,CP>
    		END
  	END
NEXT CP
*T26929 ^
FOR CP = 1 TO CCNT
	IF EST.COMMENT.TYPE<1,CP> # "I" THEN
    		IF EST.COMMENT.TYPE<1,CP> = "" OR EST.PAR.COMP = "ALL" THEN
      			DPT = DPT + 1
      			JOB.DESC<1,DPT> = EST.COMMENTS<1,CP>
    		END ELSE
      			LOCATE EST.COMMENT.TYPE<1,CP> IN EST.PAR.COMP<1,1>,1 SETTING FND2 ELSE FND2 = 0
      			IF FND2 THEN
        			DPT = DPT + 1
        			JOB.DESC<1,DPT> = EST.COMMENTS<1,CP>
      			END
    		END
  	END
NEXT CP
JOB.CONF.AMT = JOB.EST.SALE
*
*---- GET RESERVE PRODUCTS FROM ESTIMATE
*
IF EST.MATL THEN
	MATREAD EST.RL.REC FROM ESTIMATE.RES, CONO:EST.NO THEN
    		ROLL.LABEL = 'Y'
  	END ELSE
    		ROLL.LABEL = ''
  	END
  	JRM.CNT = COUNT(JOB.RESV.MATL,VM) + (JOB.RESV.MATL # "")
  	FOR JM = 1 TO JRM.CNT
    		IF SAVE.INV.JS.REC<JM> = '' THEN
      			MATREAD WHSE.REC FROM WAREHOUSE,CONO:JOB.RESV.WHSE<1,JM> ELSE MAT WHSE.REC = ''
      			IF WHS.DIV = JOB.DIV OR WHS.DIV = "00" THEN
        			JSTAT.ID = JOB.RESV.MATL<1,JM>:"!":JOB.RESV.WHSE<1,JM>:"!":JOB.NO
        			MATREAD INV.JS.REC FROM INV.JOB.STATS,CONO:JSTAT.ID ELSE
          				MAT INV.JS.REC = ''
        			END
        			SAVE.INV.JS.REC<JM,1> = IJS.REQ.DATE
        			SAVE.INV.JS.REC<JM,2> = IJS.REQ.AMT
        			SAVE.INV.JS.REC<JM,3> = IJS.REQ.QTY
      			END
    		END
  	NEXT JM
  	EST.PRODS = ""
  	EST.QTYS = ""
	IF EST.PAR.COMP = "ALL" THEN
    		COMP.CNT =EST.COMPONENT.CNT
  	END ELSE
    		COMP.CNT = SAVE.COMP.CNT
  	END
  	FOR CP = 1 TO COMP.CNT
    		IF EST.PAR.COMP = "ALL" THEN COMP = CP ELSE COMP = EST.PAR.COMP<1,1,CP>
    		WEB.CNT = COUNT(EST.PROD.OS.PROD<1,COMP>,SM) + 1
    		FOR WB = 1 TO WEB.CNT
      			IF EST.PROD.INV.ID<1,COMP,WB> # "" THEN
        			PROD = EST.PROD.INV.ID<1,COMP,WB>
        			IF ROLL.LABEL THEN
          				QTY = FIELD(EST.RL.PAP.MSI<1,COMP,WB>,"!",QP)
          				WIDTH = EST.PROD.OS.WIDTH<1,COMP,WB>
          				GOSUB 70000
        			END ELSE
          				QTY = FIELD(EST.PROD.PQTY<1,COMP,WB>,"!",QP)
        			END
        			LOCATE PROD IN EST.PRODS<1>,1 SETTING X ELSE NULL
        			EST.PRODS<1,X> = PROD
        			EST.QTYS<1,X> = EST.QTYS<1,X> + QTY
      			END
    		NEXT WB
  	NEXT CP
	IF ROLL.LABEL THEN
  	END
  	PROD.CNT = COUNT(EST.PRODS,VM) + (EST.PRODS # "")
  	FOR I = 1 TO PROD.CNT
    		MATREAD INV.REC FROM INVENTORY,CONO:EST.PRODS<1,I> ELSE MAT INV.REC = ''
    		GOSUB 80000
    		IF CASE1.FLAG THEN EST.QTYS<1,I> = EST.QTYS<1,I> * 100
    		MATREAD CATG.REC FROM CATEGORY,CONO:INV.LINE ELSE MAT CATG.REC = ''
    		WCNT = DCOUNT(INV.WHSE.CODE,VM)
    		DVCNT=0;WPTR=0
    		GNCNT=0;GPTR=0
   		HMSG='Warehouse - '
    		GMSG=''
    		FOR W = 1 TO WCNT
      			MATREAD WHSE.REC FROM WAREHOUSE,CONO:INV.WHSE.CODE<1,W> THEN
        			IF WHS.DIV = JOB.DIV THEN
          				DVCNT += 1
          				IF WPTR = 0 THEN WPTR = W
          				HMSG=HMSG:INV.WHSE.CODE<1,W>:', '
          				VALDAT=VALDAT:INV.WHSE.CODE<1,W>:VM
        			END	
        			IF WHS.DIV = '00' THEN
          				GMSG=GMSG:INV.WHSE.CODE<1,W>:', '
          				VALDAT=VALDAT:INV.WHSE.CODE<1,W>:VM
          				GNCNT += 1
          				IF GPTR = 0 THEN GPTR = W
        			END
      			END
    		NEXT W
		IF GMSG # '' THEN HMSG=HMSG:GMSG
    		IF HMSG[LEN(HMSG)-1,2]=', ' THEN HMSG=HMSG[1,LEN(HMSG)-2]
    		IF VALDAT[LEN(VALDAT),1]=VM THEN VALDAT=VALDAT[1,LEN(VALDAT)-1]
    		BEGIN CASE
      			CASE DVCNT = 1
        			WHSE = INV.WHSE.CODE<1,WPTR>
      			CASE GNCNT = 1 AND DVCNT = 0
        			WHSE = INV.WHSE.CODE<1,GPTR>
      			CASE 1
        			DISP.PROD = EST.PRODS<1,I>
        			*GOSUB 85000
        			IF ESTAT THEN GOTO 99001
    		END CASE
    		IF WHSE # "" AND CATG.REQ.BOOK = "Y" THEN
      			IWH.ID=CONO:EST.PRODS<1,I>:"!":WHSE
      			GOSUB GET.UNIT.PR
      			JRM.CNT = COUNT(JOB.RESV.MATL,VM) + (JOB.RESV.MATL # "")
      			FND = 0
      			FOR JM = 1 TO JRM.CNT UNTIL FND
        			IF JOB.RESV.MATL<1,JM> = EST.PRODS<1,I> AND JOB.RESV.WHSE<1,JM> = WHSE THEN
          				SAVE.INV.JS.REC<JM,2> = UNIT.PR
          				YEOW.QTY = INT(((EST.QTYS<1,I>/ICR.MT1)*ICR.DV1)*ICR.DV2 + .5)
          				SAVE.INV.JS.REC<JM,3> = SAVE.INV.JS.REC<JM,3> + YEOW.QTY
          				FND = 1
        			END
      			NEXT JM
			IF NOT(FND) THEN
        			JRM.CNT = JRM.CNT + 1
        			JOB.RESV.MATL<1,JRM.CNT> = EST.PRODS<1,I>
        			JOB.RESV.WHSE<1,JRM.CNT> = WHSE
        			JOB.ALOC.QTY<1,JRM.CNT> = 0
        			JOB.RESV.QTY<1,JRM.CNT> = 0
        			JOB.USED.QTY<1,JRM.CNT> = 0
       			JOB.ALOC.AMT<1,JRM.CNT> = 0
        			JOB.RESV.AMT<1,JRM.CNT> = 0
        			JOB.USED.AMT<1,JRM.CNT> = 0
*             		SAVE.INV.JS.REC<JRM.CNT,1> = TODAY + 1 ;* T24675
        			SAVE.INV.JS.REC<JRM.CNT,2> = UNIT.PR
        			SAVE.INV.JS.REC<JRM.CNT,3> = INT(((EST.QTYS<1,I>/ICR.MT1)*ICR.DV1)*ICR.DV2 + .5)
      			END
    		END
  	NEXT I
END

GOTO 99999
* End of method code
RETURN

80000 *
CASE1.FLAG = ""
	BEGIN CASE
      		CASE INV.UNIT<1,2> = 'SHT' AND INV.UNIT<1,3> = 'LBS'
         		ICR.DV1 = INV.M.WT
         		ICR.MT1 = 1
         		ICR.DV2 = 1
         		ICR.CNV = "MD0"
      		CASE INV.UNIT<1,2> = 'PC' AND INV.UNIT<1,3> = 'MSI'
         		ICR.DV1 = INV.PAP.WIDTH/100
         		ICR.MT1 = 10
         		ICR.DV2 = 1
        		ICR.CNV = "MD0"
      		CASE INV.UNIT<1,2> = 'FT' AND INV.UNIT<1,3> = 'MSI'
         		ICR.DV1 = INV.PAP.WIDTH/100
         		ICR.MT1 = 100
         		ICR.DV2 = 12
         		ICR.CNV = "MD0"
      		CASE 1
         		ICR.DV1 = 10
         		ICR.MT1 = 1
         		ICR.DV2 = 1
         		ICR.CNV = "MD2"
         		CASE1.FLAG = "Y"
   	END CASE
RETURN

*****************
GET.UNIT.PR: 
*****************
*
   MATREAD IWH.REC FROM INV.WHSE,IWH.ID ELSE  MAT IWH.REC=''
   BEGIN CASE
      CASE CO.JES.PARAM<1,11> = 'R'
         DIV.POS='';FISCAL.FLAG='JC';TRAN.PERIOD=''
         ERR.FLG='';ERRMSG=''
         CALL GET.LAST.COST (IWH.ID,MAT IWH.REC,WAREHOUSE,CONTROL,ERR.FLG,ERRMSG,DIV.POS,FISCAL.FLAG,TRAN.PERIOD,LAST.PRICE)
         IF ERR.FLG='' THEN
            UNIT.PR=LAST.PRICE
         END ELSE
            UNIT.PR = 0
         END
      CASE CO.JES.PARAM<1,11> = 'S'
         UNIT.PR = IWH.STD.COST
      CASE CO.JES.PARAM<1,11> = 'A'
         UNIT.PR = IWH.AVG.COST
      CASE CO.JES.PARAM<1,11> = 'L'
         UNIT.PR = IWH.LIST.COST
      CASE 1
         UNIT.PR = 0
   END CASE
RETURN

*---- CONVERT ROLL LABEL MSI TO STOCKING UNIT
*
70000 *
MATREAD INV.REC FROM INVENTORY,CONO:PROD ELSE MAT INV.REC = ''
GOSUB 80000
NQTY = QTY
***************   NEED TO USE EST WIDTH FROM PROD DEF SCREEN   ***************
*
BEGIN CASE
	CASE INV.UNIT<1,2> = "MSI"
      	CASE INV.UNIT<1,2> = "FT"
       	IF WIDTH + 0 # 0 THEN
            		NQTY = (NQTY * 1000) / (12 * OCONV(WIDTH,"MD4"))
         	END ELSE
            		NQTY = 0
         	END
      	CASE INV.UNIT<1,2> = "PC"
       	IF WIDTH + 0 # 0 THEN
            		NQTY = (NQTY * 1000) / (10 * OCONV(WIDTH,"MD4"))
         	END ELSE
            		NQTY = 0
         	END
END CASE
QTY = NQTY
RETURN

99001 *
   ESTAT = 1 ;* RETURN VALUE
   GOTO 999999

99999
JOB.EST.COST = OCONV(JOB.EST.COST,'MD2')
JOB.EST.SALE = OCONV(JOB.EST.SALE,'MD2')
JOB.PRICE.PER.THOU = OCONV(JOB.PRICE.PER.THOU,'MD2')
VAL = RBO.setProperty('','JOB_TRACK_DATE',JOB.TRACK.DATE)
VAL = RBO.setProperty('','JOB_EST',JOB.EST)
VAL = RBO.setProperty('','JOB_EST_TYPE',JOB.EST.TYPE)
VAL = RBO.setProperty('','JOB_QTY',JOB.QTY)
VAL = RBO.setProperty('','EST_PAR',EST.PAR1)
VAL = RBO.setProperty('','JOB_MASTER',JOB.MASTER)
VAL = RBO.setProperty('','JOB_PRICE_PER_THOU',JOB.PRICE.PER.THOU)
VAL = RBO.setProperty('','JOB_EST_COST',JOB.EST.COST)
VAL = RBO.setProperty('','JOB_EST_SALE',JOB.EST.SALE)
VAL = RBO.setProperty('','JOB_COMMENTS',JOB.COMMENTS)
VAL = RBO.setProperty('','JOB_DESC',JOB.DESC)
VAL = RBO.setProperty('','ESTAT',ESTAT) ;* 0 - VALUE AND ALSO RETURN THIS VALUE

SAVE.INV.JS.REC = LOWER(SAVE.INV.JS.REC)
VAL = RBO.setProperty('','SAVE_INV_JS_REC',SAVE.INV.JS.REC) ;* 0 - RETURN

VAL = RBO.setProperty('','EST_MATL',EST.MATL) ;* -> 1 OR 0 HERE WE HAVE TO PASS 1

VAL = RBO.setProperty('','JOB_RESV_MATL',JOB.RESV.MATL) ;*RETURN
VAL = RBO.setProperty('','JOB_RESV_WHSE',JOB.RESV.WHSE) ;*RETURN
VAL = RBO.setProperty('','JOB_ALOC_QTY',JOB.ALOC.QTY) ;*RETURN
VAL = RBO.setProperty('','JOB_RESV_QTY',JOB.RESV.QTY) ;*RETURN
VAL = RBO.setProperty('','JOB_USED_QTY',JOB.USED.QTY) ;*RETURN
VAL = RBO.setProperty('','JOB_ALOC_AMT',JOB.ALOC.AMT) ;*RETURN
VAL = RBO.setProperty('','JOB_RESV_AMT',JOB.RESV.AMT) ;*RETURN
VAL = RBO.setProperty('','JOB_USED_AMT',JOB.USED.AMT) ;*RETURN

;* SET PROPERRTIES HERE
999999
  IF (TRIM(ERRMSG) # "") THEN
       STATUS = RBO.setProperty('','ServerStatus','1')
       STATUS = RBO.setProperty('','ServerMessage',ERRMSG)
  END ELSE
       STATUS = RBO.setProperty('','ServerStatus','')
       STATUS = RBO.setProperty('','ServerMessage','')
  END 
END
