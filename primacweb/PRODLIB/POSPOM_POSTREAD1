SUBROUTINE POSPOM_POSTREAD1
********************************************************************************
*   Program name :- POSPOM_POSTREAD1
*   Created:- 10/29/2003
*------------------------------------------------------------------------------*
*

* In Properties:
* --------------
*  
*
* Out Properties:
* ---------------
*  
********************************************************************************
$INCLUDE WWINSERT RBO.H
$INCLUDE CPYLIB CHAR
$INCLUDE PMC.CPYLIB PO
$INCLUDE ICS.CPYLIB INVENTORY
$INCLUDE ICS.CPYLIB INV.CNV
$INCLUDE ICS.CPYLIB CATEGORY
$INCLUDE PMC.CPYLIB CUSTOMER
$INCLUDE JCS.CPYLIB JOB
$INCLUDE ICS.CPYLIB PO.RSKI.XREF

* Insert method code here
OPEN '','PO.RSKI.XREF' TO PO.RSKI.XREF ELSE 
	ERRMSG = 'PO.RSKI.XREF FILE IS MISSING'; GOTO 93000
END

OPEN '','PO' TO PO ELSE 
	ERRMSG = 'PO FILE IS MISSING'; GOTO 93000
END

OPEN '','CATEGORY' TO CATEGORY ELSE 
	ERRMSG = 'CATEGORY FILE IS MISSING'; GOTO 93000
END

OPEN '','INVENTORY' TO INVENTORY ELSE 
	ERRMSG = 'INVENTORY FILE IS MISSING'; GOTO 93000
END
OPEN '','SHIP.VIA' TO SHIP.VIA ELSE 
	ERRMSG = 'SHIP.VIA FILE IS MISSING'; GOTO 93000
END
OPEN '','DIVISION' TO DIV ELSE 
	ERRMSG = 'DIV FILE IS MISSING'; GOTO 93000
END
OPEN '','JOB' TO JOB ELSE 
	ERRMSG = 'JOB FILE IS MISSING'; GOTO 93000
END
OPEN '','CUSTOMER' TO CUST ELSE 
	ERRMSG = 'CUST FILE IS MISSING'; GOTO 93000
END

ID = ''
LINES = ''
RETURN_VALUE = ''
DIFF.UM = ''
ERRMSG = ''
NCNT = 1
COUNT = ''
PO.TOT.CANCEL2 = ''
P_VALUE.AMT.CANCEL = ''
P_VALUE.AMT.ONORD = ''
P_VALUE.AMT.OPEN = ''
P_VALUE.UNIT.FLG = ''
P_VALUE.TOT.ONORD = ''
P_VALUE.TOT.CANCEL = ''
P_VALUE.WHSE = ''
P_VALUE.QTY.OPEN = ''
P_VALUE.DISCOUNT = ''
PO.DISCOUNT = ''
PO.QTY.OPEN1 = ''
PO.WHSE = ''
NEW = 0

PO.TOT.CANCEL1 = ''
PO.TOT.ONORD1 = ''
TermsDis = ''
Discount = ''
MAT PO.REC=''
STATUS = RBO.getProperty('','ID',ID)
STATUS = RBO.getProperty('','ShipVia',SHPVIA.ID)
STATUS = RBO.getProperty('','DivOwner',DIV.ID)

*STATUS = RBO.getProperty('','TermsDis',TermsDis)
*STATUS = RBO.getProperty('','Discount',Discount)
CONO = ID[1,3]






READV DESC FROM SHIP.VIA,CONO:SHPVIA.ID,1 ELSE
	DESC = ""
END

READV DIV.DESC FROM DIV,CONO:DIV.ID,1 ELSE
	DIV.DESC = ""
END

ERR = RBO.setProperty('','PO_SHIPVIA_NAME',DESC) ;* NAME OF THE FILE
ERR = RBO.setProperty('','DIV_NAME',DIV.DESC) ;* NAME OF THE FILE

STATUS = RBO.getProperty('','JobNo',JOB.NOS)
CUST.LIST = ""
DUE.DATE = ""
DESC = ""
DCNT = DCOUNT(JOB.NOS<1>,VM)
FOR I = 1 TO DCNT
	CNT = DCOUNT(JOB.NOS<1,I>,SM)
	FOR J = 1 TO CNT
		MATREAD JOB.REC FROM JOB,CONO:JOB.NOS<1,I,J> THEN
			CUST.LIST<1,I,J> = JOB.CUST
			MATREAD CUST.REC FROM CUST,CONO:JOB.CUST ELSE MAT CUST.REC = ''
			DESC<1,I,J> = CUST.NAME<1,1>
			DUE.DATE<1,I,J> = OCONV(JOB.TRACK.DATE<1,4>,"D4/")
			
		END
	NEXT J
NEXT I

VAL = RBO.setProperty('','JobCust',CUST.LIST<1>)
VAL = RBO.setProperty('','JobDescs',DESC<1>)
VAL = RBO.setProperty('','JobDueDate',DUE.DATE<1>)

* CHECK FOR THE COST/STK CONVERSIONS HERE
MAT INV.CNV.REC = ""

*THIS IS FOR TERMS.DIS; ADD CODE FOR %DIS OVER HERE
*	IF TermsDis # '' THEN
*		TermsDis = OCONV(TermsDis,'MD2')
*	END
*	IF Discount # '' THEN
*		Discount = OCONV(Discount,'MD2')
*	END
*	*IF Discount # '' THEN
*	*NCNT = 1
*	*	*Discount = OCONV(Discount,'MD2')
*	*	NCNT = DCOUNT(Discount,@VM)
*	*	FOR LN = 1 TO NCNT
*	*		Discount<1,LN> = OCONV(Discount<1,LN>,'MD2')
*	*	NEXT LN
*	*LN = 1
*	*NCNT = 1
*	*END
*END


MATREAD PO.REC FROM PO, ID THEN
	LINES = DCOUNT(PO.PROD.NUM,@VM)
	FOR LN = 1 TO LINES
		MATREAD INV.REC FROM INVENTORY, CONO:PO.PROD.NUM<1,LN> THEN

		*ADD CODE FOR THE UOM OVER HERE

		*IF INV.UNIT<1,1> = INV.UNIT<1,2> THEN
		*	TEMP_INV_UNIT<1,LN> = INV.UNIT<1,1> : @VM : ""
		*END ELSE
		*	TEMP_INV_UNIT<1,LN> = INV.UNIT<1,1> : @VM : INV.UNIT<1,2>
		*END

		*END
			*BEGIN CASE
			*	CASE  INV.PAP.TYPE = "LROLL" OR INV.PAP.TYPE = "PCOAT"
			*		RETURN_VALUE<1,LN> = "# Rolls"
				*CASE INV.PAP.TYPE = "SHEET" OR INV.PAP.TYPE = "REGULAR"
			*	CASE INV.PAP.TYPE = "SHEET" 
			*		RETURN_VALUE<1,LN> = "# Skids"
			*	CASE 1	
			*		RETURN_VALUE<1,LN> = ""
			*END CASE	
                   MATREAD CATG.REC FROM CATEGORY,CONO:INV.LINE THEN
                     IF CATG.TRK.LVL='S' AND CATG.BARCODE='Y' THEN
                       BEGIN CASE
                     
			         CASE INV.PAP.TYPE = "ROLL" OR INV.PAP.TYPE = "LROLL" OR INV.PAP.TYPE = "PCOAT"
 				     RETURN_VALUE<1,LN> = "# Rolls"
			         CASE 1	
				     RETURN_VALUE<1,LN> = "# Skids"
                      END CASE
                    END ELSE
                         RETURN_VALUE<1,LN>=""
                    END
	            END
		GOSUB 4000
		GOSUB 10000
		END
	NEXT LN

**************************** Code Added by Abdul Aleem to disable the delet function at client end if the product is Barcoded***********


	READ TESTX FROM PO.RSKI.XREF, ID ELSE NEW = 1
	IF NOT(NEW) THEN
    		BCFLAG=0
	    	FOR PO.LINE.PTR=1 TO LINES WHILE BCFLAG=0
		      MATREAD INV.REC FROM INVENTORY, CONO:PO.PROD.NUM<1,PO.LINE.PTR> ELSE  MAT INV.REC = ""
		      MATREAD CATG.REC FROM CATEGORY,CONO:INV.LINE ELSE MAT CATG.REC=''
      		      IF CATG.TRK.LVL='S' AND CATG.BARCODE='Y' THEN
		        BCFLAG=1
		      END
	       NEXT PO.LINE.PTR
	       IF BCFLAG=1 THEN
		      STATUS = RBO.setProperty('','REMOVEDELETE','Y')
	             *IF POS.INQ THEN ECD.NUM = 37
      		END
  	END



*************************************end of the above Barcode  Code *************************************

END

*STATUS = RBO.setProperty('','ServerMessage','DIFF UM--' : DIFF.UM)
*RETURN

*STATUS = RBO.setProperty('','ServerMessage','P_VALUE.AMT.ONORD--' : P_VALUE.AMT.ONORD)
*RETURN


*---
* Getting the PO Idlist
*---
COUNT=''
*HERE CONVERT PO.GROS.PRICE, PO.TOT.ONORD, PO.TOT.CANCEL, PO.QTY.OPEN
*STATUS = RBO.setProperty('','ServerMessage',ERRMSG)
COUNT = DCOUNT(PO.PROD.NUM,VM)
FOR I = 1 TO COUNT
MATREAD INV.REC FROM INVENTORY,CONO:PO.PROD.NUM<1,I> THEN
   $INCLUDE ICSBP INV.UM.CNV
  SUBCOUNT=DCOUNT(PO.JOB.NO<1,I>,SVM)
   FOR J=1 TO SUBCOUNT
    IF(PO.JB.ONORD<1,I,J> > 0) THEN
          GOSUB 4000
          PO.JB.ONORD<1,I,J>=INT(((PO.JB.ONORD<1,I,J>/ICR.DV1<LN,1>)*ICR.MT1<LN,1>)/ICR.DV2<LN,1> + .5)         
    END
       IF(PO.JB.RECEVED<1,I,J> > 0) THEN
          GOSUB 4000
          PO.JB.RECEVED<1,I,J>=INT(((PO.JB.RECEVED<1,I,J>/ICR.DV1<LN,1>)*ICR.MT1<LN,1>)/ICR.DV2<LN,1> + .5)       
    END
       IF(PO.JB.OPEN<1,I,J> > 0) THEN
          GOSUB 4000
          PO.JB.OPEN<1,I,J>=INT(((PO.JB.OPEN<1,I,J>/ICR.DV1<LN,1>)*ICR.MT1<LN,1>)/ICR.DV2<LN,1> + .5)         
    END
  NEXT J
  END
NEXT I
*STATUS = RBO.setProperty('','JBOnOrd',PO.JB.ONORD)
*STATUS = RBO.setProperty('','JBReceved',PO.JB.RECEVED)
*STATUS = RBO.setProperty('','JBOpen',PO.JB.OPEN)

PO.LIST = ''
PO_OWNDIV.LIST = ''

CMD = "SSELECT PO WITH CONO = '" : CONO : "'"
UDTEXECUTE CMD

PO_REC_ID = ''
LOOP
	EOF = 1
	READNEXT ID ELSE EOF = 0
	PO_REC_ID<1,-1> = ID
WHILE EOF DO	
REPEAT

FOR N = 1 TO DCOUNT(PO_REC_ID,VM)
	MATREAD PO.REC FROM PO,PO_REC_ID<1,N> THEN 
		PO.LIST<1,-1> = PO_REC_ID<1,N>[4,99]
		PO_OWNDIV.LIST<1,-1> = PO_REC_ID<1,N>[4,99] : "~" : PO.DIV.OWNER
	END
NEXT N


*-------
*-- TO FETCH THE CATEGORY ID AND CATG_BARCODE
*-------
CMD = "SSELECT CATEGORY WITH CONO = '" : CONO : "'"
UDTEXECUTE CMD

CATEGORY_REC_ID = ''
CATEGORY_REC.LIST = ''

LOOP
	EOF = 1
	READNEXT ID ELSE EOF = 0
	CATEGORY_REC_ID<1,-1> = ID
WHILE EOF DO	
REPEAT

FOR N = 1 TO DCOUNT(CATEGORY_REC_ID,VM)
	MATREAD CATG.REC FROM CATEGORY,CATEGORY_REC_ID<1,N> THEN 		
		CATEGORY_REC.LIST<1,-1> = CATEGORY_REC_ID<1,N>[4,99] : "~" : CATG.TRK.LVL : "~" : CATG.BARCODE
	END
NEXT N

STATUS = RBO.setProperty('','CategoryBarcodeList',CATEGORY_REC.LIST)


*GOSUB 10000
	*HERE CONVERT PO.GROS.PRICE, PO.TOT.ONORD, PO.TOT.CANCEL, PO.QTY.OPEN
	STATUS = RBO.setProperty('','ServerMessage',ERRMSG)
	STATUS = RBO.setProperty('','RollType',RETURN_VALUE)
*	STATUS = RBO.setProperty('','GrosPrice',PO.GROS.PRICE)
*	STATUS = RBO.setProperty('','QtyOpen',P_VALUE.QTY.OPEN)
*	STATUS = RBO.setProperty('','TotOnOrd',P_VALUE.TOT.ONORD)
*	STATUS = RBO.setProperty('','TotCancel',P_VALUE.TOT.CANCEL)
	*STATUS = RBO.setProperty('','TEMP_CANCEL',P_VALUE.AMT.CANCEL) 
*	STATUS = RBO.setProperty('','TEMP_ONORD',P_VALUE.AMT.ONORD)
*	STATUS = RBO.setProperty('','TEMP_OPEN',P_VALUE.AMT.OPEN)
	STATUS = RBO.setProperty('','PONumberList',PO.LIST)
	STATUS = RBO.setProperty('','POOwnDivList',PO_OWNDIV.LIST)
	*STATUS = RBO.setProperty('','INV_UNIT',TEMP_INV_UNIT)

*STATUS = RBO.setProperty('','TermsDis',TermsDis)
*STATUS = RBO.setProperty('','Discount',Discount)
* End of method code
RETURN

10000:
	N = 1
	FOR N = 1 TO LINES
		PO.DEL.DATE<1,N> = OCONV(PO.DEL.DATE<1,N>, "D2/")
		PO.GROS.PRICE<1,N> = OCONV(PO.GROS.PRICE<1,N> , "MD4")

		IF DIFF.UM<1,N> = "Y" THEN
			PO.JB.UNITS<1,N> = PO.JB.UNITS<1,N>
			IF ICR.CNV<N,1> = "MD0" THEN
				TEMP.TOT.ONORD = ICONV(((PO.TOT.ONORD<1,N>/ICR.DV1<N,1>)*ICR.MT1<N,1>)/ICR.DV2<N,1>,'MD0')
				ERRMSG<1,NCNT> = "IN 1: " : PO.TOT.CANCEL<1,N> : "~" : PO.QTY.OPEN<1,N>
				NCNT = NCNT + 1
				TEMP.TOT.CANCEL = ICONV(((PO.TOT.CANCEL<1,N>/ICR.DV1<N,1>)*ICR.MT1<N,1>)/ICR.DV2<N,1>,'MD0')
				P_VALUE.AMT.ONORD<1,N> = ''
				P_VALUE.AMT.CANCEL<1,N> = ''
				P_VALUE.AMT.OPEN<1,N> = ''
				TEMP.QTY.OPEN = ICONV(((PO.QTY.OPEN<1,N>/ICR.DV1<N,1>)*ICR.MT1<N,1>)/ICR.DV2<N,1>,'MD0')
				P_VALUE.TOT.ONORD<1,N> = TEMP.TOT.ONORD
				P_VALUE.TOT.CANCEL<1,N> = TEMP.TOT.CANCEL
				P_VALUE.QTY.OPEN<1,N> = TEMP.QTY.OPEN
			END ELSE
				P_VALUE.TOT.ONORD<1,N> = OCONV(INT(PO.TOT.ONORD<1,N>/10), "MD2")
				*P_VALUE.AMT.ONORD<1,N> = OCONV(INT(PO.TOT.ONORD<1,N>/10), "MD2")

				ERRMSG<1,NCNT> = "IN 2: " : PO.TOT.CANCEL<1,N> : "~" : PO.QTY.OPEN<1,N>
				NCNT = NCNT + 1

				P_VALUE.TOT.CANCEL<1,N> = OCONV(INT(PO.TOT.CANCEL<1,N>/10), "MD2")				

				ERRMSG<1,NCNT> = "IN 8: " : OCONV(INT(PO.TOT.CANCEL<1,N>/10), "MD2") : "~" : PO.QTY.OPEN<1,N>
				NCNT = NCNT + 1

				P_VALUE.QTY.OPEN<1,N> = OCONV(INT(PO.QTY.OPEN<1,N>/10), "MD2")
				*P_VALUE.AMT.OPEN<1,N> = OCONV(INT(PO.QTY.OPEN<1,N>/10), "MD2")
			END

			P_VALUE.WHSE<1,N> = PO.WHSE<1,N>
			P_VALUE.DISCOUNT<1,N> = OCONV(PO.DISCOUNT<1,N> , "MD2")
			P_VALUE.UNIT.FLG<1,N> = PO.UNIT.FLG<1,N>

			IF ICR.CNV<N,2> = "MD0" THEN
				P_VALUE.AMT.ONORD<1,N> = ''
				P_VALUE.AMT.CANCEL<1,N> = ''
				P_VALUE.AMT.OPEN<1,N> = ''

				TEMP.TOT.ONORD = ICONV(((PO.TOT.ONORD<1,N>/ICR.DV1<N,2>)*ICR.MT1<N,2>)/ICR.DV2<N,2>,'MD0')
				P_VALUE.TOT.ONORD<1,N> = TEMP.TOT.ONORD

				ERRMSG<1,NCNT> = "IN 3: " : PO.TOT.CANCEL<1,N> : "~" : PO.QTY.OPEN1<1,N>
				NCNT = NCNT + 1


				TEMP.TOT.CANCEL<1,N> = ICONV(((PO.TOT.CANCEL<1,N>/ICR.DV1<N,2>)*ICR.MT1<N,2>)/ICR.DV2<N,2>,'MD0')
				P_VALUE.TOT.CANCEL<1,N> = TEMP.TOT.CANCEL
				TEMP.QTY.OPEN = ICONV(((PO.QTY.OPEN<1,N>/ICR.DV1<N,2>)*ICR.MT1<N,2>)/ICR.DV2<N,2>,'MD0')
				P_VALUE.QTY.OPEN<1,N> = TEMP.QTY.OPEN
			END ELSE
				IF ICR.CNV<N,1> = "MD0" THEN
					*P_VALUE.AMT.ONORD<1,N> = ''
					*P_VALUE.AMT.CANCEL<1,N> = ''
					*P_VALUE.AMT.OPEN<1,N> = ''
	
					P_VALUE.TOT.ONORD<1,N> = OCONV(INT(PO.TOT.ONORD<1,N>/10), "MD2")

				ERRMSG<1,NCNT> = "IN 4: " : PO.TOT.CANCEL<1,N> : "~" : PO.QTY.OPEN<1,N>
				NCNT = NCNT + 1

					P_VALUE.TOT.CANCEL<1,N> = OCONV(INT(PO.TOT.CANCEL<1,N>/10), "MD2")
					P_VALUE.QTY.OPEN<1,N> = OCONV(INT(PO.QTY.OPEN<1,N>/10), "MD2")
				END ELSE
					*P_VALUE.AMT.ONORD<1,N> = ''
					*P_VALUE.AMT.CANCEL<1,N> = ''
					*P_VALUE.AMT.OPEN<1,N> = ''	
					*P_VALUE.TOT.ONORD<1,N> = OCONV(INT((PO.TOT.ONORD<1,N>/10)/ICR.MT1<N,1>), "MD2")
					P_VALUE.AMT.ONORD<1,N> = OCONV(INT((PO.TOT.ONORD<1,N>/10)/ICR.MT1<N,1>), "MD2")


				ERRMSG<1,NCNT> = "IN 5: " : PO.TOT.CANCEL<1,N> : "~" : PO.QTY.OPEN<1,N>
				NCNT = NCNT + 1
					
					P_VALUE.AMT.CANCEL<1,N> = OCONV(INT((PO.TOT.CANCEL<1,N>/10)/ICR.MT1<N,1>), "MD2")

					*P_VALUE.QTY.OPEN<1,N> = OCONV(INT((PO.QTY.OPEN<1,N>/10)/ICR.MT1<N,1>), "MD2")
					P_VALUE.AMT.OPEN<1,N> = OCONV(INT((PO.QTY.OPEN<1,N>/10)/ICR.MT1<N,1>), "MD2")

				END
			END
			*P_VALUE.DESC.INV<1,N> = DESC.INV<1,N>
		END ELSE
			P_VALUE.UNIT.FLG<1,N> = PO.UNIT.FLG<1,N>
			IF ICR.CNV<N,1> = "MD0" THEN
				P_VALUE.AMT.ONORD<1,N> = ''
				P_VALUE.AMT.CANCEL<1,N> = ''
				P_VALUE.AMT.OPEN<1,N> = ''

				TEMP.TOT.ONORD = ICONV(((PO.TOT.ONORD<1,N>/ICR.DV1<N,1>)*ICR.MT1<N,1>)/ICR.DV2<N,1>,'MD0')
				P_VALUE.TOT.ONORD<1,N> = TEMP.TOT.ONORD

				ERRMSG<1,NCNT> = "IN 6: " : PO.TOT.CANCEL<1,N> : "~" : PO.QTY.OPEN<1,N>
				NCNT = NCNT + 1

				TEMP.TOT.CANCEL = ICONV(((PO.TOT.CANCEL<1,N>/ICR.DV1<N,1>)*ICR.MT1<N,1>)/ICR.DV2<N,1>,'MD0')
				P_VALUE.TOT.CANCEL<1,N> = TEMP.TOT.CANCEL
				TEMP.QTY.OPEN = ICONV(((PO.QTY.OPEN<1,N>/ICR.DV1<N,1>)*ICR.MT1<N,1>)/ICR.DV2<N,1>,'MD0')
				P_VALUE.QTY.OPEN<1,N> = TEMP.QTY.OPEN
			END ELSE
				P_VALUE.AMT.ONORD<1,N> = ''
				P_VALUE.AMT.CANCEL<1,N> = ''
				P_VALUE.AMT.OPEN<1,N> = ''

				P_VALUE.TOT.ONORD<1,N> = OCONV(INT(PO.TOT.ONORD<1,N>/10), "MD2")

				ERRMSG<1,NCNT> = "IN 7: " : PO.TOT.CANCEL<1,N> : "~" : PO.QTY.OPEN<1,N>
				NCNT = NCNT + 1

				P_VALUE.TOT.CANCEL<1,N> = OCONV(INT(PO.TOT.CANCEL<1,N>/10), "MD2")
				P_VALUE.QTY.OPEN<1,N> = OCONV(INT(PO.QTY.OPEN<1,N>/10), "MD2")
			END
			P_VALUE.WHSE<1,N> = PO.WHSE<1,N>
			P_VALUE.DISCOUNT<1,N> = OCONV(PO.DISCOUNT<1,N> , "MD2")
			*P_VALUE.DESC.INV<1,N> = DESC.INV<1,N>
		END
	NEXT N
RETURN

4000:
  BEGIN CASE
   CASE INV.UNIT<1,2> = "SHT" AND INV.UNIT<1,3> = "LBS"
     ICR.CNV<LN,1> = "MD0"; ICR.DV2<LN,1> = 1
     ICR.DV1<LN,1> = INV.M.WT; ICR.MT1<LN,1> = 1
    CASE INV.UNIT<1,2> = "PC" AND INV.UNIT<1,3> = "MSI"
      ICR.CNV<LN,1> = "MD0"; ICR.DV2<LN,1> = 1
      ICR.DV1<LN,1> = INV.PAP.WIDTH/100; ICR.MT1<LN,1> = 10
    CASE INV.UNIT<1,2> = "FT" AND INV.UNIT<1,3> = "MSI"
      ICR.CNV<LN,1> = "MD0"; ICR.DV2<LN,1> = 12
      ICR.DV1<LN,1> = INV.PAP.WIDTH/100; ICR.MT1<LN,1> = 100
    CASE 1
      ICR.CNV<LN,1> = "MD2"; ICR.DV2<LN,1> = 1
      ICR.DV1<LN,1> = 10; ICR.MT1<LN,1> = INV.SBR
  END CASE
  BEGIN CASE
    CASE PO.UNIT.FLG<1,LN> = "SHT" AND INV.UNIT<1,3> = "LBS"
      ICR.CNV<LN,2> = "MD0"; ICR.DV2<LN,2> = 1
      ICR.DV1<LN,2> = INV.M.WT; ICR.MT1<LN,2> = 1
    CASE PO.UNIT.FLG<1,LN> = "PC" AND INV.UNIT<1,3> = "MSI"
      ICR.CNV<LN,2> = "MD0"; ICR.DV2<LN,2> = 1
      ICR.DV1<LN,2> = INV.PAP.WIDTH/100; ICR.MT1<LN,2> = 10
    CASE PO.UNIT.FLG<1,LN> = "FT" AND INV.UNIT<1,3> = "MSI"
      ICR.CNV<LN,2> = "MD0"; ICR.DV2<LN,2> = 12
      ICR.DV1<LN,2> = INV.PAP.WIDTH/100; ICR.MT1<LN,2> = 100
    CASE 1
      ICR.CNV<LN,2> = "MD2"; ICR.DV2<LN,2> = 1
      ICR.DV1<LN,2> = 10; ICR.MT1<LN,2> = 1
  END CASE
  IF PO.UNIT.FLG<1,LN> # INV.UNIT<1,2> THEN 
	DIFF.UM<1,LN> = "Y" 
  END ELSE 
	DIFF.UM<1,LN> = "N"
  END
RETURN

93000:
  STATUS = RBO.setProperty('','ServerStatus',1)        
  STATUS = RBO.setProperty('','ServerMessage',ERRMSG) 
RETURN
