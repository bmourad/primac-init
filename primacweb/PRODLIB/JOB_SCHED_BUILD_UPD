SUBROUTINE JOB_SCHED_BUILD_UPD (CONO, ACTION, EST.NUM, JOB.NUM, COMP.NUM, CUST.NAME, LOADING.FLG,DUE.DATE,JOB.FLAG)
$INCLUDE CPYLIB COMMON1
$INCLUDE PSS.CPYLIB COM.PSS.FILE.VARS
$INCLUDE PSS.CPYLIB COM.CCTR.SCHED
$INCLUDE PSS.CPYLIB COM.JOB.SCHED
$INCLUDE PMC.CPYLIB COM.COMPANY
$INCLUDE PMC.CPYLIB COM.DIVISION
$INCLUDE JES.CPYLIB COM.ESTIMATE
$INCLUDE JCS.CPYLIB COM.JOB
********************************************************************************
*   Program name :- JOB_SCHED_BUILD_UPD
*   Author :- JAWEED
*   Created:- 8/4/2003
* DESCRIPTION
* This program uses the ESTIMATE record and the booked component to
* create the JOB.SCHED record.
*
* 
********************************************************************************
*
*---- COPY STATEMENTS
*
$DEFINE JOBSCHED
$INCLUDE PSS.CPYLIB JOB.SCHED
$INCLUDE PSS.CPYLIB CCTR.AVAIL
$DEFINE PSSFILEVARS
$INCLUDE PSS.CPYLIB PSS.FILE.VARS
$INCLUDE PSS.CPYLIB PSS.HIERARCHY
$DEFINE COMPANY
$INCLUDE PMC.CPYLIB COMPANY
$INCLUDE JCS.CPYLIB OPERATION
$INCLUDE PMC.CPYLIB COST.CNTR
$DEFINE ESTIMATE
$INCLUDE JES.CPYLIB ESTIMATE
$INCLUDE JES.CPYLIB ESTIMATE.DEPT
$DEFINE JOB
$INCLUDE JCS.CPYLIB JOB
$DEFINE FILEVARS
$INCLUDE CPYLIB FILE.VARS

$INCLUDE WWINSERT RBO.H

  SYS.TYPE = 2
*
*---- INITIALIZATION
*
   OPEN '','OPERATION' TO OPERATION ELSE STOP
   OPEN '','PSS.LOCK' TO PSS.LOCK ELSE STOP
*
   READ DEMODATE FROM CONTROL,"DEMODATE" THEN TODAY=ICONV(DEMODATE,"D") ELSE TODAY=DATE()
   BLK = 0
   ERRMSG = ""
   READ TP.DIV FROM PSS.LOCK, @TTY ELSE TP.DIV = ""
*
*---- MAIN PROCESSING
*
   MAT JBS.REC = ""
   MAT PJBS.REC = ""
   MAT CCTR.REC = ""
   MAT OPER.REC = ""
   JBS.DUE.DATE = DUE.DATE
   JBS.CUST.NAME = CUST.NAME
   JBS.DIV = JOB.DIV
   JBS.SCH.FLAG = JOB.FLAG
   JBS.CUST.ID = JOB.CUST
   JBS.JOB.COMMENT = JOB.COMMENTS<1,1>
*---- TASK 19935
*T25695 v
*     JBS.SCHED.MODE = "S"
*     JBS.SCHED.DATE = TODAY+1
   IF CO.PSS.BACKWARD.FLAG = "Y" THEN
      JBS.SCHED.MODE = "D"
      JBS.SCHED.DATE = DUE.DATE
   END ELSE
      JBS.SCHED.MODE = "S"
      JBS.SCHED.DATE = TODAY+1
   END
*T25695 ^
*---------------
   DCNT = COUNT(EST.DEPT,@VM) + (EST.DEPT # "")
   IF COMP.NUM = "ALL" THEN
      FOR D = 1 TO DCNT UNTIL BLK
         FOR COMP.NUM = 1 TO EST.COMPONENT.CNT UNTIL BLK
            GOSUB 1000
         NEXT COMP.NUM
      NEXT D
   END ELSE
      COMP.AVAIL = COMP.NUM
      COMP.CNT = DCOUNT(COMP.AVAIL<1,1>,@SM)
      FOR D = 1 TO DCNT UNTIL BLK
         FOR C = 1 TO COMP.CNT UNTIL BLK
            COMP.NUM = COMP.AVAIL<1,1,C>
            GOSUB 1000
         NEXT C
      NEXT D
   END
   IF JBS.DEPT = "" OR BLK THEN
      RELEASE JOB.SCHED, CONO : JOB.NUM
      GOTO 999999
   END
*22896      GOSUB 20000
   JCNT = DCOUNT(JBS.DEPT,@VM)
*22896      IF LOADING.FLG = "Y" THEN
*22896         JBS.HOLD.CODE<1,1> = "L"
*22896      END ELSE
*22896         JBS.HOLD.CODE<1,1> = "SS"
*22896      END
*22896      MATREAD CCTR.REC FROM COST.CNTR, CONO:JBS.CCTR<1,1> ELSE
*22896         MAT CCTR.REC = ""
*22896      END
*22896      MATREAD CCTR.AVAIL.REC FROM CCTR.AVAIL, CONO:JBS.DEPT<1,1>:"*":JBS.CCTR<1,1> ELSE
*22896         MATREAD CCTR.AVAIL.REC FROM CCTR.AVAIL, CONO:JBS.DEPT<1,1> ELSE
*22896            MAT CCTR.AVAIL.REC = ""
*22896         END
*22896      END
*22896      IF CCTR.SCHED.FLAG = "O" THEN
*22896         JBS.OVER.LOAD<1,1> = "Y"
*22896      END ELSE
*22896         JBS.CONT.SCH<1,1> = CCA.CONT.SCHD
*22896         JBS.SAME.EQUIP<1,1> = CCA.SAME.EQP
*22896      END
*22896      FOR T = 2 TO JCNT
*22896         BEGIN CASE
*22896         CASE LOADING.FLG = "Y"
*22896            JBS.HOLD.CODE<1,T> = "L"
*22896*        CASE JBS.DEPT<1,T-1>[1,2] # JBS.DEPT<1,T>[1,2]
*22896         CASE JBS.DEPT<1,T-1> # JBS.DEPT<1,T>
*22896            MATREAD PSHR.REC FROM PSS.HIERARCHY, CONO : JBS.DEPT<1,T-1>[1,2] ELSE
*22896               MATREAD PSHR.REC FROM PSS.HIERARCHY, CONO : "HIERARCHY" ELSE
*22896                  MATREAD PSHR.REC FROM PSS.CONTROL, "HIERARCHY" ELSE MAT PSHR.REC = ""
*22896               END
*22896            END
*22896            IF PSHR.TO = "" THEN
*22896               POS = 0
*22896            END ELSE
*22896               LOCATE JBS.DEPT<1,T> IN PSHR.TO<1>,1 SETTING POS ELSE
*22896                  LOCATE JBS.DEPT<1,T>[1,2] IN PSHR.TO<1>,1 SETTING POS ELSE POS = 0
*22896               END
*22896            END
*22896            IF POS THEN
*22896               JBS.HOLD.CODE<1,T> = PSHR.CODE<1,POS>
*22896               JBS.HOLD.DAYS<1,T> = PSHR.DAYS<1,POS>
*22896            END ELSE
*22896               JBS.HOLD.CODE<1,T> = PSHR.DEF.CODE
*22896               JBS.HOLD.DAYS<1,T> = PSHR.DEF.DAYS
*22896            END
*22896         CASE JBS.CCTR<1,T-1> # JBS.CCTR<1,T>
*22896            MATREAD PSHR.REC FROM PSS.HIERARCHY, CONO : JBS.DEPT<1,T>[1,2] :"*": JBS.CCTR<1,T-1> THEN
*22896               LOCATE JBS.CCTR<1,T> IN PSHR.TO<1>,1 SETTING POS ELSE POS = 0
*22896               IF POS THEN
*22896                  JBS.HOLD.CODE<1,T> = PSHR.CODE<1,POS>
*22896               END ELSE
*22896                  JBS.HOLD.CODE<1,T> = PSHR.CCTR.CODE
*22896               END
*22896            END ELSE
*22896               MATREAD PSHR.REC FROM PSS.HIERARCHY, CONO : JBS.DEPT<1,T>[1,2] ELSE
*22896                  MATREAD PSHR.REC FROM PSS.HIERARCHY, CONO : "HIERARCHY" ELSE
*22896                     MATREAD PSHR.REC FROM PSS.CONTROL, "HIERARCHY" ELSE MAT PSHR.REC = ""
*22896                  END
*22896               END
*22896               JBS.HOLD.CODE<1,T> = PSHR.CCTR.CODE
*22896            END
*22896         CASE 1
*22896            JBS.HOLD.CODE<1,T> = "SS"
*22896         END CASE
*22896         BEGIN CASE
*22896         CASE JBS.DEPT<1,T> # JBS.DEPT<1,T-1>
*22896            MATREAD CCTR.REC FROM COST.CNTR, CONO:JBS.CCTR<1,T> ELSE
*22896               MAT CCTR.REC = ""
*22896            END
*22896            MATREAD CCTR.AVAIL.REC FROM CCTR.AVAIL, CONO:JBS.DEPT<1,T>:"*":JBS.CCTR<1,T> ELSE
*22896               MATREAD CCTR.AVAIL.REC FROM CCTR.AVAIL, CONO:JBS.DEPT<1,T> ELSE
*22896                  MAT CCTR.AVAIL.REC = ""
*22896               END
*22896            END
*22896         CASE JBS.CCTR<1,T> # JBS.CCTR<1,T-1>
*22896            MATREAD CCTR.REC FROM COST.CNTR, CONO:JBS.CCTR<1,T> ELSE
*22896               MAT CCTR.REC = ""
*22896            END
*22896            MATREAD CCTR.AVAIL.REC FROM CCTR.AVAIL, CONO:JBS.DEPT<1,T>:"*":JBS.CCTR<1,T> ELSE
*22896               MATREAD CCTR.AVAIL.REC FROM CCTR.AVAIL, CONO:JBS.DEPT<1,T> ELSE
*22896                  MAT CCTR.AVAIL.REC = ""
*22896               END
*22896            END
*22896         CASE 1
*22896         END CASE
*22896         IF CCTR.SCHED.FLAG = "O" THEN
*22896            JBS.OVER.LOAD<1,T> = "Y"
*22896         END ELSE
*22896            JBS.CONT.SCH<1,T> = CCA.CONT.SCHD
*22896            JBS.SAME.EQUIP<1,T> = CCA.SAME.EQP
*22896         END
*22896      NEXT T
***   MATWRITE JBS.REC ON JOB.SCHED, CONO:JOB.NUM
   TPFID = CONO:JOB.NUM
   MATBUILD TPREC FROM JBS.REC
   CALL TRANSACTION_WRITE("WRITE",CONO,TP.DIV,"JOB.SCHED",TPFID,TPREC,JOB.SCHED,PSS.JOURNAL,ERRMSG)
**********************************************************************
*
* Write Job pending record
*
*22896      MAT PJBS.REC = MAT JBS.REC
***   MATWRITE PJBS.REC ON PEND.JOB.SCHED,CONO:JOB.NUM
*22896      TPFID = CONO:JOB.NUM
*22896      MATBUILD TPREC FROM PJBS.REC
*22896      CALL TRANSACTION.WRITE("WRITE",CONO,TP.DIV,"PEND.JOB.SCHED",TPFID,TPREC,PEND.JOB.SCHED,PSS.JOURNAL,ERRMSG)
**********************************************************************
*
   GOTO 999999
*-----------------------*
*---   SUBROUTINES   ---*
*-----------------------*
*
*---- LOAD JBS.REC FROM ESTD.REC
*
1000 *
   KEY = D :"!": COMP.NUM :"!": EST.BOOK.QTY
   LOCATE KEY IN EST.DEPT.COMP<1>,1 SETTING LN ELSE LN = 0
   IF LN = 0 THEN GOTO 1999
   MATREAD ESTD.REC FROM ESTIMATE.DEPT, CONO:EST.NUM:"!":KEY ELSE MAT ESTD.REC = ""
   TYPE.CNT = COUNT(ESTD.TYPE,@VM) + (ESTD.TYPE # "")
   ADD = 1
   FOR T = 1 TO TYPE.CNT UNTIL BLK
      EHOURS = ESTD.HRS<1,T>
      CCTR = ESTD.CCTR<1,T> ; * T26020
      OPER = ESTD.OPV<1,T> ; * T26020
      EQTY = INT(ESTD.QTY<1,T> / 100) * 100 ; * T26020
      IF ESTD.TYPE<1,T> = "L" AND EHOURS+0 > 0 THEN
         MATREAD CCTR.REC FROM COST.CNTR, CONO:ESTD.CCTR<1,T> ELSE
            MAT CCTR.REC = ""
            CCTR.SCHED.FLAG = "N"
         END
         MATREAD OPER.REC FROM OPERATION, CONO:ESTD.OPV<1,T> ELSE
            MAT OPER.REC = ""
            OPER.SCHED.FLG = "N"
         END
         JCNT = COUNT(JBS.DEPT,@VM) + (JBS.DEPT # "")
*T26020 v
         OSUB = 0
         COMBINE.COMP = EST.PROD.COMP.COMBINE<1,COMP.NUM>
         IF COMBINE.COMP # "" THEN
            FOR J = 1 TO JCNT UNTIL OSUB
               CHECK.DEPT = JBS.DEPT<1,J>
               CHECK.CCTR = JBS.CCTR<1,J>
               IF CCTR.DEPT = CHECK.DEPT AND CCTR = CHECK.CCTR THEN
                  LOCATE OPER IN JBS.OPER<1,J>,1 SETTING OSUB ELSE OSUB = 0
                  JSUB = J
               END
            NEXT J
         END
*T26020 ^
         BEGIN CASE
            CASE CCTR.SCHED.FLAG = "N" OR OPER.SCHED.FLG = "N"
               EHOURS = 0
*T26020 v
            CASE OSUB GT 0
               JBS.SCH.HRS<1,JSUB> += EHOURS
               JBS.OPER.SCH.HRS<1,JSUB,OSUB> += EHOURS
               IF ESTD.OPV.TYPE<1,T> = "V" THEN
                  JBS.SCH.IMP<1,JSUB> += EQTY
               END
*T26020 ^
            CASE JCNT = 0 OR ADD = 1
               GOSUB 10100
               ADD = 0
**          CASE JBS.DEPT<1,JCNT> # ESTD.DEPT   ;** NA 11-20-90 **
**             GOSUB 10100
            CASE JBS.COMP.NO<1,JCNT,1> # COMP.NUM;* T22896
               GOSUB 10100;* T22896
            CASE JBS.CCTR<1,JCNT> # ESTD.CCTR<1,T>
               GOSUB 10100
            CASE CO.PSS.OPER.LVL # "Y"
               JBS.OPER<1,JCNT> = "ALL"
               JBS.OPER.SCH.HRS<1,JCNT> = JBS.OPER.SCH.HRS<1,JCNT> + EHOURS
               JBS.SCH.HRS<1,JCNT> = JBS.SCH.HRS<1,JCNT> + EHOURS
               IF ESTD.OPV.TYPE<1,T> = "V" THEN
                  JBS.SCH.IMP<1,JCNT> = JBS.SCH.IMP<1,JCNT> + INT(ESTD.QTY<1,T>/100)*100
                  JBS.OPER.SCH.IMP<1,JCNT> = JBS.OPER.SCH.IMP<1,JCNT> + INT(ESTD.QTY<1,T>/100)*100
               END
            CASE 1
               OCNT = COUNT(JBS.OPER<1,JCNT>,@SVM) + (JBS.OPER<1,JCNT> # "")
               BEGIN CASE
                  CASE OCNT = 0
                     GOSUB 10200
                  CASE JBS.OPER<1,JCNT,OCNT> # ESTD.OPV<1,T>
                     GOSUB 10200
                  CASE 1
                     JBS.OPER.SCH.HRS<1,JCNT,OCNT> = JBS.OPER.SCH.HRS<1,JCNT,OCNT> + EHOURS
                     JBS.SCH.HRS<1,JCNT> = JBS.SCH.HRS<1,JCNT> + EHOURS
                     IF ESTD.OPV.TYPE<1,T> = "V" THEN
                        JBS.SCH.IMP<1,JCNT> = JBS.SCH.IMP<1,JCNT> + INT(ESTD.QTY<1,T>/100)*100
                        JBS.OPER.SCH.IMP<1,JCNT,OCNT> = JBS.OPER.SCH.IMP<1,JCNT,OCNT> + INT(ESTD.QTY<1,T>/100)*100
                     END
               END CASE
         END CASE
      END
      JBS.REQ.HRS = JBS.REQ.HRS + EHOURS
   NEXT T
1999 *
   RETURN
*
*---- ADD A MULTI VALUE
*
10100 *
   MATREAD CCTR.REC FROM COST.CNTR, CONO :ESTD.CCTR<1,T> ELSE
      MAT CCTR.REC = ""
      CCTR.MASTER = ESTD.CCTR<1,T> : "!@#$%&*"
   END
   IF CCTR.MASTER # "" AND CCTR.MASTER # ESTD.CCTR<1,T> THEN
*T26342      BLK = 1
      ERRMSG = "Cost Center ":ESTD.CCTR<1,T>:" is not a master"
      GOSUB 90000
      GOTO 10199
   END
   JCNT = JCNT + 1
   AC = DCOUNT(JBS.A1,",")
   FOR AP = 1 TO AC
      AA = FIELD(JBS.A1,",",AP)
      AA1 = FIELD(AA,"-",1)
      AA2 = FIELD(AA,"-",2)
      IF AA2 = "" THEN AA2 = AA1
      FOR AAP = AA1 TO AA2
         JBS.REC(AAP) = INSERT(JBS.REC(AAP),1,JCNT,0,"")
      NEXT AAP
   NEXT AP
**    JBS.DEPT<1,JCNT> = ESTD.DEPT   ;** NA 11-20-90 **
   JBS.DEPT<1,JCNT> = CCTR.DEPT
   JBS.CCTR<1,JCNT> = ESTD.CCTR<1,T>
   JBS.SCH.HRS<1,JCNT> = EHOURS
   IF ESTD.OPV.TYPE<1,T> = "V" THEN
      JBS.SCH.IMP<1,JCNT> = INT(ESTD.QTY<1,T>/100)*100
      JBS.OPER.SCH.IMP<1,JCNT> = INT(ESTD.QTY<1,T>/100)*100
   END
   IF CO.PSS.OPER.LVL = "Y" THEN
      JBS.OPER<1,JCNT> = ESTD.OPV<1,T>
   END ELSE
      JBS.OPER<1,JCNT> = "ALL"
   END
   JBS.COMP.NO<1,JCNT> = COMP.NUM;*T26328
   JBS.OPER.SCH.HRS<1,JCNT> = EHOURS
10199 *
   RETURN
*
*---- ADD A SUB MULTI VALUE
*
10200 *
   OCNT = OCNT + 1
   JBS.OPER<1,JCNT,OCNT> = ESTD.OPV<1,T>
      * T22102 v
   JBS.COMP.NO<1,JCNT,OCNT> = COMP.NUM
      * T22102 ^
   JBS.OPER.SCH.HRS<1,JCNT,OCNT> = EHOURS
   JBS.SCH.HRS<1,JCNT> = JBS.SCH.HRS<1,JCNT> + EHOURS
   IF ESTD.OPV.TYPE<1,T> = "V" THEN
      JBS.SCH.IMP<1,JCNT> = JBS.SCH.IMP<1,JCNT> + INT(ESTD.QTY<1,T>/100)*100
*T22896
      JBS.OPER.SCH.IMP<1,JCNT,OCNT> = JBS.OPER.SCH.IMP<1,JCNT,OCNT> + INT(ESTD.QTY<1,T>/100)*100
   END
   RETURN
*
*---- ROUND HOURS UP BASED ON DEPARTMENT SPEC
*
20000 *
   ROUND.HRS = ""
   JCNT = DCOUNT(JBS.DEPT,@VM)
   FOR JPTR = 1 TO JCNT
      MDEPT = FIELD(JBS.DEPT<1,JPTR>,"-",1)
      RVAL = ROUND.HRS<MDEPT>
      IF RVAL = "" THEN
         MATREAD CCTR.AVAIL.REC FROM CCTR.AVAIL, CONO:MDEPT THEN
            RVAL = CCA.ROUND.HRS+0
         END
         ROUND.HRS<MDEPT> = RVAL+0
      END
      IF RVAL > 0 THEN
         JBS.SCH.HRS<1,JPTR> = INT((JBS.SCH.HRS<1,JPTR>-1+RVAL)/RVAL)*RVAL
      END
   NEXT JPTR
   RETURN
*
*---- ERROR ROUTINE
*
 90000 *
       RETURN
999999 *
   RETURN

93000
STATUS = RBO.setProperty('','ServerStatus',1)
STATUS = RBO.setProperty('','ServerMessage', ERRMSG)
END
