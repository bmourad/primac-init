*********************************************************************
* REVISION    - [12.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - ARSBP
* PROGRAM     - ARS.EOM.POST
* BY          - ZIAD YAMOUT, C.B.A
* DATE        - 02/28/87
* DESCRIPTION -
*             Create the ARS.EOM.TRANS data.
*MODIFIED	- (01/06/05) BY ZAHOOR AHMED
*		   FOR printflag
*ENDDOC
*********************************************************************
*
***** INSERT FILE EQUATE
*
$INCLUDE WWINSERT RBO.H
$INCLUDE PMC.CPYLIB COMPANY
$INCLUDE PMC.CPYLIB GLTABLE
$INCLUDE PMC.CPYLIB SALESDATES
$INCLUDE PMC.CPYLIB FISCAL
$INCLUDE PMC.CPYLIB EOM.TRANS
$INCLUDE PMC.CPYLIB COA
$INCLUDE PMC.CPYLIB SALES.CODE
$INCLUDE ARS.CPYLIB MANUAL.INVOICE
$INCLUDE PMC.CPYLIB TAX
$INCLUDE PMC.CPYLIB SHIP.VIA
$INCLUDE PMC.CPYLIB POST.REJECTS
$INCLUDE PMC.CPYLIB DIVISION ;* T23278
$INCLUDE CPYLIB CHAR
*
**** INTITIALIZATION
*
***** SETUP ERRMSG ROUTINE
*
ERRMSG=''
MAT FISCAL.REC = ''
Printfalg = ''
EMAIL_ADDR = ''
*
*Printfalg is view/mail/print/file
STATUS = RBO.getProperty('','ID',ID)
STATUS = RBO.getProperty('','PMCProperty',PMCProperty)
STATUS = RBO.getProperty('','PRINT_FLAG',PRINT.FLAG)
STATUS = RBO.getProperty('','EmailAddress',EMAIL_ADDR)
STATUS = RBO.getProperty('','ID',ID)
STATUS = RBO.getProperty('','PMCProperty',PMCProperty)
CONO = ID[1,3]
MODULE=ID[4,3]
BEGIN CASE
   CASE MODULE[1,2] = 'AP'
   CASE MODULE[1,2] = 'AR'
   CASE 1
      MODULE = MODULE[1,2]
END CASE
*
*Get the printflag view/Email/File/Print
*
BEGIN CASE
   CASE PRINT.FLAG = 'PrintData'
	Printfalg = 'View'
   CASE PRINT.FLAG = 'EmailData'
	Printfalg = 'Email'
   CASE PRINT.FLAG = 'File'
	Printfalg = 'Print'
   CASE 1
	Printfalg = 'Print'
END CASE
FISCPFX=MODULE
STATUS = RBO.getProperty('','DivCode',DIV.CODE)
STATUS = RBO.getProperty('','DivPos',POS)
STATUS = RBO.getProperty('','FR_CURR_PER',FR.CURR.PER)
STATUS = RBO.getProperty('','FR_CURR_DATE',FR.CURR.DATE)
STATUS = RBO.getProperty('','FR_NEXT_PER',FR.NEXT.PER)
STATUS = RBO.getProperty('','FR_NEXT_DATE',FR.NEXT.DATE)
STATUS = RBO.getProperty('','FR_D_M_FLG',FR.D.M.FLG)
STATUS = RBO.getProperty('','FR_CLOSE_DATE',FR.CLOSE.DATE)
FOR P = 1 TO DCOUNT(FR.CURR.PER,VM)
   IF INDEX(FR.CURR.DATE<1,P>,'/',1) > 0 THEN FR.CURR.DATE<1,P> = ICONV(FR.CURR.DATE<1,P>,'D2/')
   IF INDEX(FR.NEXT.DATE<1,P>,'/',1) > 0 THEN FR.NEXT.DATE<1,P> = ICONV(FR.NEXT.DATE<1,P>,'D2/')
   IF INDEX(FR.CLOSE.DATE<1,P>,'/',1) > 0 THEN FR.CLOSE.DATE<1,P> = ICONV(FR.CLOSE.DATE<1,P>,'D2/')
NEXT P
*
STATUS = RBO.getProperty('','FngdFlag',FNGD.FLAG)
BEGIN CASE
   CASE MODULE = 'IC'
      IF FNGD.FLAG = 'F' THEN
         MODULE := 'F'
      END ELSE MODULE := 'S'
   CASE MODULE[1,2] = 'AP'
   CASE MODULE[1,2] = 'AR'
   CASE 1
      MODULE := 'S'
END CASE
*
TRANFILE=MODULE:".EOM.TRANS":CONO:DIV.CODE
REJECTFILE=MODULE:".POST.REJECTS":CONO:DIV.CODE
OPEN TRANFILE TO EOM.TRANS ELSE
   STMT='CREATE.FILE ':TRANFILE:' 1,1 101,1'
   UDTEXECUTE STMT CAPTURING JUNK
   STMT='COPY FROM DICT ':MODULE:'.EOM.TRANS TO DICT ':TRANFILE:' ALL'
   UDTEXECUTE STMT CAPTURING JUNK
END
OPEN REJECTFILE TO POST.REJECTS ELSE
   STMT='CREATE.FILE ':REJECTFILE:' 1,1 7,1'
   UDTEXECUTE STMT CAPTURING JUNK
   STMT='COPY FROM DICT ':MODULE:'.POST.REJECTS TO DICT ':REJECTFILE:' ALL'
   UDTEXECUTE STMT CAPTURING JUNK
END
***** OPEN FILES
*
OPEN '','COMPANY' TO COMPANY ELSE ERRMSG='COMPANY FILE MISSING';GOTO 93000
OPEN '','CONTROL' TO CONTROL ELSE ERRMSG='CONTROL FILE MISSING';GOTO 93000
OPEN '','MANUAL.INVOICE' TO MANUAL.INVOICE ELSE ERRMSG='MANUAL.INVOICE FILE IS MISSING';GOTO 93000
OPEN '','SALES.CODE' TO SALES.CODE ELSE ERRMSG='SALES.CODE FILE MISSING';GOTO 93000
OPEN '','TAX' TO TAX ELSE ERRMSG='TAX FILE MISSING';GOTO 93000
OPEN '','SHIP.VIA' TO SHIP.VIA ELSE ERRMSG='SHIP.VIA FILE MISSING';GOTO 93000
OPEN '','COA' TO COA ELSE ERRMSG='COA FILE IS MISSING';GOTO 93000
OPEN '',TRANFILE TO EOM.TRANS ELSE ERRMSG=TRANFILE:' FILE MISSING';GOTO 93000
OPEN '',REJECTFILE TO POST.REJECTS ELSE ERRMSG=REJECTFILE:' FILE IS MISSING';GOTO 93000
*
MATREAD COMP.REC FROM COMPANY, CONO ELSE
   ERRMSG = "COMPANY RECORD IS MISSING"
   GOTO 93000
END
MATREAD GLTABLE.REC FROM CONTROL, CONO:'GLTABLE' ELSE
   RELEASE CONTROL, CONO:MODULE:"FISCAL"
   ERRMSG = 'CANNOT LOCATE CONTROL, GLTABLE'
   GOTO 93000
END
IN.ACCT.LEN=LEN(CO.ACCT.PIC)
GEN.DIV='00'; GEN.DEPT='00'; GEN.CCTR='000'
CLEARFILE EOM.TRANS
CLEARFILE POST.REJECTS
PRR.SEQ = 10000
OLD.CUST = "!@#$%^&*"
MATREAD COA.REC FROM COA, CONO : GLTB.SALES ELSE COA.LEVEL = 0
SA.SAL.ACCT = GLTB.SALES
SA.SAL.LEVEL = COA.LEVEL
MATREAD COA.REC FROM COA, CONO : GLTB.MSC.SALE ELSE COA.LEVEL = 0
SA.MSC.ACCT = GLTB.MSC.SALE
SA.MSC.LEVEL = COA.LEVEL
MATREAD COA.REC FROM COA, CONO : GLTB.AR ELSE COA.LEVEL = 0
SA.INV.ACCT = GLTB.AR
SA.INV.LEVEL = COA.LEVEL
MATREAD COA.REC FROM COA, CONO : GLTB.SALES.TAX ELSE COA.LEVEL = 0
SA.TAX.ACCT = GLTB.SALES.TAX
SA.TAX.LEVEL = COA.LEVEL
MATREAD COA.REC FROM COA, CONO : GLTB.FRT ELSE COA.LEVEL = 0
SA.FRT.ACCT = GLTB.FRT
SA.FRT.LEVEL = COA.LEVEL
MATREAD COA.REC FROM COA, CONO : GLTB.TRADE.DISC ELSE COA.LEVEL = 0
SA.DSC.ACCT = GLTB.TRADE.DISC
SA.DSC.LEVEL = COA.LEVEL
STMT = 'SSELECT MANUAL.INVOICE.TAG BY CUST WITH CONO = "':CONO:'"'
UDTEXECUTE STMT CAPTURING JUNK
DATA = 1
LOOP
   READNEXT MIV.ID ELSE DATA = 0
WHILE DATA DO
   IF CONO # MIV.ID[1,3] THEN GOTO 999
   MIV.NO = MIV.ID[4,99]
   MATREADU MIV.REC FROM MANUAL.INVOICE, MIV.ID ELSE
      MAT PRR.REC = ''
      PRR.FILE = 'MANUAL.INVOICE'
      PRR.ERR = 'CANNOT LOCATE'
      PRR.ID = MIV.NO
      PRR.SEQ = PRR.SEQ + 1
      MATWRITE PRR.REC ON POST.REJECTS, PRR.SEQ
      RELEASE MANUAL.INVOICE, MIV.ID
      GOTO 999
   END
   IF MIV.GLA.DATE # "" AND MIV.GLA.DATE # "P" THEN
      RELEASE MANUAL.INVOICE, MIV.ID
      GOTO 999
   END
   IF MIV.DIV # DIV.CODE AND DIV.CODE # "ALL" THEN 
      RELEASE MANUAL.INVOICE, MIV.ID
      GOTO 999
   END
   IF MIV.PROC.MON <> FR.CURR.PER<1,POS> THEN
      RELEASE MANUAL.INVOICE, MIV.ID
      GOTO 999
   END
   IF OLD.CUST # MIV.CUST.NO THEN
      OLD.CUST = MIV.CUST.NO
      NEW.REC = 0; NEW.PTR = 0
   END
   CNT = COUNT(MIV.AMOUNT,VM) + (MIV.AMOUNT # '')
   TOT.AMT = 0
   FOR I = 1 TO CNT
      BEGIN CASE
         CASE MIV.CHG.CODE<1,I> = "SUB"
         CASE MIV.CHG.CODE<1,I> = "SUBT"
         CASE MIV.CHG.CODE<1,I> = "TOT"
         CASE MIV.CHG.CAT<1,I> = "CMT"
         CASE MIV.CHG.CAT<1,I> = "TAX"
            MATREAD TAX.REC FROM TAX, CONO :MIV.TAX.JURS<1,I> ELSE
               MAT TAX.REC = ''
            END
            BEGIN CASE
               CASE TAX.ACCT = SA.TAX.ACCT
               CASE TAX.ACCT # ""
                  TAX.ACCT = TAX.ACCT : STR("0",IN.ACCT.LEN-LEN(TAX.ACCT))
                  TAX.ACCT = TAX.ACCT[1,IN.ACCT.LEN]
                  MATREAD COA.REC FROM COA, CONO : TAX.ACCT ELSE COA.LEVEL = 0
                  SA.TAX.ACCT = TAX.ACCT
                  SA.TAX.LEVEL = COA.LEVEL
               CASE GLTB.SALES.TAX = SA.TAX.ACCT
               CASE 1
                  MATREAD COA.REC FROM COA, CONO : GLTB.SALES.TAX ELSE COA.LEVEL = 0
                  SA.TAX.ACCT = GLTB.SALES.TAX
                  SA.TAX.LEVEL = COA.LEVEL
            END CASE
            BEGIN CASE
               CASE SA.TAX.LEVEL < 1
                  T.ACCT = GEN.DIV : GEN.DEPT : GEN.CCTR : SA.TAX.ACCT
               CASE SA.TAX.LEVEL < 2
                  T.ACCT = MIV.DIV : GEN.DEPT : GEN.CCTR : SA.TAX.ACCT
               CASE MIV.DEPT<1,I> = ""
                  T.ACCT = MIV.DIV : MIV.DEPT<1,1> : GEN.CCTR : SA.TAX.ACCT
               CASE 1
                  T.ACCT = MIV.DIV : MIV.DEPT<1,I> : GEN.CCTR : SA.TAX.ACCT
            END CASE
            INV.AMT = MIV.AMOUNT<1,I>
            TOT.AMT = TOT.AMT + INV.AMT
            GOSUB 2000
         CASE MIV.CHG.CAT<1,I> = "SHP"
            MATREAD SHIP.VIA.REC FROM SHIP.VIA, CONO :MIV.TAX.JURS<1,I> ELSE
               MAT SHIP.VIA.REC = ''
            END
            BEGIN CASE
               CASE SHPV.GL.NO = SA.FRT.ACCT
               CASE SHPV.GL.NO # ""
                  SHPV.GL.NO = SHPV.GL.NO : STR("0",IN.ACCT.LEN-LEN(SHPV.GL.NO))
                  SHPV.GL.NO = SHPV.GL.NO[1,IN.ACCT.LEN]
                  MATREAD COA.REC FROM COA, CONO : SHPV.GL.NO ELSE COA.LEVEL = 0
                  SA.FRT.ACCT = SHPV.GL.NO
                  SA.FRT.LEVEL = COA.LEVEL
               CASE GLTB.FRT = SA.FRT.ACCT
               CASE 1
                  MATREAD COA.REC FROM COA, CONO : GLTB.FRT ELSE COA.LEVEL = 0
                  SA.FRT.ACCT = GLTB.FRT
                  SA.FRT.LEVEL = COA.LEVEL
            END CASE
            BEGIN CASE
               CASE SA.FRT.LEVEL < 1
                  T.ACCT = GEN.DIV : GEN.DEPT : GEN.CCTR : SA.FRT.ACCT
               CASE SA.FRT.LEVEL < 2
                  T.ACCT = MIV.DIV : GEN.DEPT : GEN.CCTR : SA.FRT.ACCT
               CASE MIV.DEPT<1,I> = ""
                  T.ACCT = MIV.DIV : MIV.DEPT<1,1> : GEN.CCTR : SA.FRT.ACCT
               CASE 1
                  T.ACCT = MIV.DIV : MIV.DEPT<1,I> : GEN.CCTR : SA.FRT.ACCT
            END CASE
            INV.AMT = MIV.AMOUNT<1,I>
            TOT.AMT = TOT.AMT + INV.AMT
            GOSUB 2000
         CASE MIV.CHG.CAT<1,I> = "MSC"
            MATREAD SLC.REC FROM SALES.CODE, CONO : MIV.TAX.JURS<1,I> ELSE
               MAT SLC.REC = ""
            END
            BEGIN CASE
               CASE SLC.GL.ACCT = SA.MSC.ACCT
               CASE SLC.GL.ACCT # ""
                  SLC.GL.ACCT = SLC.GL.ACCT : STR("0",IN.ACCT.LEN-LEN(SLC.GL.ACCT))
                  SLC.GL.ACCT = SLC.GL.ACCT[1,IN.ACCT.LEN]
                  MATREAD COA.REC FROM COA, CONO : SLC.GL.ACCT ELSE COA.LEVEL = 0
                  SA.MSC.ACCT = SLC.GL.ACCT
                  SA.MSC.LEVEL = COA.LEVEL
               CASE GLTB.MSC.SALE = SA.MSC.ACCT
               CASE 1
                  MATREAD COA.REC FROM COA, CONO : GLTB.MSC.SALE ELSE COA.LEVEL = 0
                  SA.MSC.ACCT = GLTB.MSC.SALE
                  SA.MSC.LEVEL = COA.LEVEL
            END CASE
            IF CO.ALLOC.FLG = "Y" AND MIV.ALLOC.DIV<1,I> # "" THEN
               HOLD.ACCT = SA.MSC.ACCT
               GOSUB 7000
               GOTO 520
            END
            BEGIN CASE
               CASE SA.MSC.LEVEL < 1
                  T.ACCT = GEN.DIV : GEN.DEPT : GEN.CCTR : SA.MSC.ACCT
               CASE SA.MSC.LEVEL < 2
                  T.ACCT = MIV.DIV : GEN.DEPT : GEN.CCTR : SA.MSC.ACCT
               CASE MIV.DEPT<1,I> = ""
                  T.ACCT = MIV.DIV : MIV.DEPT<1,1> : GEN.CCTR : SA.MSC.ACCT
               CASE 1
                  T.ACCT = MIV.DIV : MIV.DEPT<1,I> : GEN.CCTR : SA.MSC.ACCT
            END CASE
            INV.AMT = MIV.AMOUNT<1,I>
            TOT.AMT = TOT.AMT + INV.AMT
            GOSUB 2000
520 *
         CASE MIV.CHG.CAT<1,I> = "DSC"
            MATREAD SLC.REC FROM SALES.CODE, CONO : MIV.TAX.JURS<1,I> ELSE
               MAT SLC.REC = ""
            END
            BEGIN CASE
               CASE SLC.DS.ACCT = SA.DSC.ACCT
               CASE SLC.DS.ACCT # ""
                  SLC.DS.ACCT = SLC.DS.ACCT : STR("0",IN.ACCT.LEN-LEN(SLC.DS.ACCT))
                  SLC.DS.ACCT = SLC.DS.ACCT[1,IN.ACCT.LEN]
                  MATREAD COA.REC FROM COA, CONO : SLC.DS.ACCT ELSE COA.LEVEL = 0
                  SA.DSC.ACCT = SLC.DS.ACCT
                  SA.DSC.LEVEL = COA.LEVEL
               CASE GLTB.TRADE.DISC = SA.DSC.ACCT
               CASE 1
                  MATREAD COA.REC FROM COA, CONO : GLTB.TRADE.DISC ELSE COA.LEVEL = 0
                  SA.DSC.ACCT = GLTB.TRADE.DISC
                  SA.DSC.LEVEL = COA.LEVEL
            END CASE
            BEGIN CASE
               CASE SA.DSC.LEVEL < 1
                  T.ACCT = GEN.DIV : GEN.DEPT : GEN.CCTR : SA.DSC.ACCT
               CASE SA.DSC.LEVEL < 2
                  T.ACCT = MIV.DIV : GEN.DEPT : GEN.CCTR : SA.DSC.ACCT
               CASE MIV.DEPT<1,I> = ""
                  T.ACCT = MIV.DIV : MIV.DEPT<1,1> : GEN.CCTR : SA.DSC.ACCT
               CASE 1
                  T.ACCT = MIV.DIV : MIV.DEPT<1,I> : GEN.CCTR : SA.DSC.ACCT
            END CASE
            INV.AMT = MIV.AMOUNT<1,I>
            TOT.AMT = TOT.AMT + INV.AMT
            GOSUB 2000
         CASE 1
            IF MIV.SALES.CODE<1,I> = "" THEN
               MATREAD SLC.REC FROM SALES.CODE, CONO : MIV.SALES.CODE<1,1> ELSE
                  MAT SLC.REC = ""
               END
            END ELSE
               MATREAD SLC.REC FROM SALES.CODE, CONO : MIV.SALES.CODE<1,I> ELSE
                  MAT SLC.REC = ""
               END
            END
            BEGIN CASE
               CASE SLC.GL.ACCT = SA.SAL.ACCT
               CASE SLC.GL.ACCT # ""
                  SLC.GL.ACCT = SLC.GL.ACCT : STR("0",IN.ACCT.LEN-LEN(SLC.GL.ACCT))
                  SLC.GL.ACCT = SLC.GL.ACCT[1,IN.ACCT.LEN]
                  MATREAD COA.REC FROM COA, CONO : SLC.GL.ACCT ELSE COA.LEVEL = 0
                  SA.SAL.ACCT = SLC.GL.ACCT
                  SA.SAL.LEVEL = COA.LEVEL
               CASE GLTB.SALES = SA.SAL.ACCT
               CASE 1
                  MATREAD COA.REC FROM COA, CONO : GLTB.SALES ELSE COA.LEVEL = 0
                  SA.SAL.ACCT = GLTB.SALES
                  SA.SAL.LEVEL = COA.LEVEL
            END CASE
            IF CO.ALLOC.FLG = "Y" AND MIV.ALLOC.DIV<1,I> # "" THEN
               HOLD.ACCT = SA.SAL.ACCT
               GOSUB 7000
               GOTO 540
            END
            BEGIN CASE
               CASE SA.SAL.LEVEL < 1
                  T.ACCT = GEN.DIV : GEN.DEPT : GEN.CCTR : SA.SAL.ACCT
               CASE SA.SAL.LEVEL < 2
                  T.ACCT = MIV.DIV : GEN.DEPT : GEN.CCTR : SA.SAL.ACCT
               CASE MIV.DEPT<1,I> = ""
                  T.ACCT = MIV.DIV : MIV.DEPT<1,1> : GEN.CCTR : SA.SAL.ACCT
               CASE 1
                  T.ACCT = MIV.DIV : MIV.DEPT<1,I> : GEN.CCTR : SA.SAL.ACCT
            END CASE
            INV.AMT = MIV.AMOUNT<1,I>
            TOT.AMT = TOT.AMT + INV.AMT
            GOSUB 2000
540 *
      END CASE
   NEXT I
   BEGIN CASE
      CASE SA.INV.LEVEL < 1
         T.ACCT = GEN.DIV : GEN.DEPT : GEN.CCTR : SA.INV.ACCT
      CASE 1
         T.ACCT = MIV.DIV : GEN.DEPT : GEN.CCTR : SA.INV.ACCT
   END CASE
   INV.AMT = TOT.AMT
   GOSUB 1000
   IF NEW.PTR THEN
      NEW.REC = NEW.REC + 1
      NEW.PTR = 0
   END
   MIV.GLA.DATE = 'P'
   MATWRITE MIV.REC ON MANUAL.INVOICE, MIV.ID
999 REPEAT
READ JUNK FROM POST.REJECTS,'10001' THEN
   UserID = PMCProperty<1,3>
   *IN_PARAM = UserID:"!ARSEOMP!111!AR307!":CONO:"!Print"
   IN_PARAM = UserID:"!ARSEOMP!111!IC306!":CONO:"!":Printfalg
   IN_PARAM<2> = ''
   IN_PARAM<3> = 'EOD.REJECT.LISTING'
   IN_PARAM<4> = 'P'
   IN_PARAM<5> = 'PMCPROCS'
   IN_PARAM<6> = REJECTFILE
   IN_PARAM<7> = 'REJECTS'
   OUT_PARAM=''
   UDTEXECUTE 'SSELECT ':REJECTFILE CAPTURING JUNK
   CALL GenerateReport_Sub(ERRMSG,IN_PARAM,OUT_PARAM)
   IF ERRMSG # "" THEN GOTO 93000
   REJECT.RPT.PRT='WARNING !!! MAKE SURE TO PICKUP POSTING REJECTS REPORT FROM PRINTER'
   STATUS=RBO.setProperty('','RejectRptPrinted',REJECT.RPT.PRT)
   STATUS=RBO.setProperty('','ReportImage',OUT_PARAM<2>)	
END ELSE
	IF Printfalg # "Print" THEN ERRMSG  = "There is no data to ":Printfalg 
	*GOTO 93000
END
STATUS = RBO.setProperty('','FR_CURR_DATE',FR.CURR.DATE)
STATUS = RBO.setProperty('','FR_NEXT_DATE',FR.NEXT.DATE)
STATUS = RBO.setProperty('','FR_CLOSE_DATE',FR.CLOSE.DATE)
FR.PRINT<1,POS> = ""
MATWRITE FISCAL.REC ON CONTROL, CONO:FISCPFX:'FISCAL'
GOTO 99999
1000 BEGIN CASE
   CASE INV.AMT > 0
      ETR.ID = CONO : T.ACCT : OLD.CUST : "!D*" : NEW.REC
   CASE INV.AMT + 0 < 0
      ETR.ID = CONO : T.ACCT : OLD.CUST : "!C*" : NEW.REC
   CASE 1
      GOTO 1999
END CASE
MATREAD ETR.REC FROM EOM.TRANS, ETR.ID ELSE
   MAT ETR.REC = ""
END
ETR.AMT = ETR.AMT + INV.AMT
LOCATE MIV.NO IN ETR.TRAN<1>,1 BY "AR" SETTING PTR ELSE NULL
INS MIV.NO BEFORE ETR.TRAN<1,PTR>
INS MIV.DATE BEFORE ETR.DATE<1,PTR>
INS INV.AMT BEFORE ETR.TAMT<1,PTR>
INS MIV.PO BEFORE ETR.REF<1,PTR>
IF PTR > 99 THEN NEW.PTR = 1
MATWRITE ETR.REC ON EOM.TRANS, ETR.ID
1999 RETURN
2000 BEGIN CASE
   CASE INV.AMT > 0
      ETR.ID = CONO : T.ACCT : OLD.CUST : "!C*" : NEW.REC
   CASE INV.AMT + 0 < 0
      ETR.ID = CONO : T.ACCT : OLD.CUST : "!D*" : NEW.REC
   CASE 1
      GOTO 2999
END CASE
MATREAD ETR.REC FROM EOM.TRANS, ETR.ID ELSE
   MAT ETR.REC = ""
END
ETR.AMT = ETR.AMT - INV.AMT
LOCATE MIV.NO IN ETR.TRAN<1>,1 BY "AR" SETTING PTR ELSE NULL
INS MIV.NO BEFORE ETR.TRAN<1,PTR>
INS MIV.DATE BEFORE ETR.DATE<1,PTR>
INS (0 - INV.AMT) BEFORE ETR.TAMT<1,PTR>
INS MIV.PO BEFORE ETR.REF<1,PTR>
IF PTR > 99 THEN NEW.PTR = 1
MATWRITE ETR.REC ON EOM.TRANS, ETR.ID
2999 RETURN
*
7000 * PROCESS REVENUE ALLOCATION 
PCNT = DCOUNT(MIV.ALLOC.DIV<1,I>,SVM)
FOR P = 1 TO PCNT
   T.ACCT = MIV.ALLOC.DIV<1,I,P>:HOLD.ACCT
   INV.AMT = MIV.ALLOC.AMT<1,I,P>
   TOT.AMT = TOT.AMT + INV.AMT
   GOSUB 2000
NEXT P
RETURN

93000 *
STATUS=RBO.setProperty('','ServerStatus',1)
STATUS=RBO.setProperty('','ServerMessage',ERRMSG)
CMD='DELETE.FILE ': TRANFILE :' FORCE'
UDTEXECUTE CMD CAPTURING JUNK
CMD='DELETE.FILE ': REJECTFILE :' FORCE'
UDTEXECUTE CMD CAPTURING JUNK
*** END OF JOB ***
99999 END
