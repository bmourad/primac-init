SUBROUTINE ORDM_GET_JOB_RESERVE
********************************************************************************
*   Program name :- ORDM_GET_JOB_RESERVE
*   Created:- 1/28/2004
*------------------------------------------------------------------------------*
*

* PROGRAMMER G.PURUSHOTHAM RAO
* In Properties:
* --------------
*  
*
* Out Properties:
* ---------------
*  
********************************************************************************
$INCLUDE CPYLIB COMMON1
$INCLUDE WWINSERT RBO.H
$INCLUDE PMC.CPYLIB CUSTOMER
$INCLUDE ICS.CPYLIB CATEGORY
$INCLUDE ICS.CPYLIB INVENTORY
$INCLUDE ICS.CPYLIB INV.WHSE
$INCLUDE ICS.CPYLIB INV.CNV
$INCLUDE ICS.CPYLIB FNGD.ORDER.STATS
$INCLUDE OPS.CPYLIB ORDER.DETAIL
$INCLUDE OPS.CPYLIB ORDER.DETAIL.INQ
$INCLUDE OPS.CPYLIB ORDER.RELEASE
$INCLUDE CPYLIB CHAR
$INCLUDE ICS.CPYLIB FNGD.STATS

  OPEN.FLAG=1

* Insert method code here
DEFFUN CALC_STK_QTY(COST.QTY,MAT INV.CNV.REC,ROND,LN)
DEFFUN CALC_COST_QTY(STK.QTY,MAT INV.CNV.REC,ROND,LN)

  TM = CHAR(240)

* Insert method code here
  STATUS = RBO.getProperty('', 'PMCProperty', PMCProperty)
  STATUS = RBO.getProperty('', 'ID', ORDER.ID)
  
  OPEN "","ORDER" TO ORDER ELSE
    ERRMSG = "Cannot locate the ORDER file";GOTO 93000
  END

  OPEN "","ORDER.DETAIL" TO ORDER.DETAIL ELSE
    ERRMSG = "Cannot locate the ORDER.DETAIL file";GOTO 93000
  END

  OPEN "","ORDER.RELEASE" TO ORDER.RELEASE ELSE
    ERRMSG = "Cannot locate the ORDER.RELEASE file";GOTO 93000
  END

  OPEN "","INVENTORY" TO INVENTORY ELSE
    ERRMSG = "Cannot locate the INVENTORY file";GOTO 93000
  END

  OPEN "","CATEGORY" TO CATEGORY ELSE
    ERRMSG = "Cannot locate the CATEGORY file";GOTO 93000
  END

  OPEN "","INV.WHSE" TO INV.WHSE ELSE
    ERRMSG = "Cannot locate the INV.WHSE file";GOTO 93000
  END

  OPEN "","CUSTOMER" TO CUSTOMER ELSE
    ERRMSG = "Cannot locate the CUSTOMER file";GOTO 93000
  END

  OPEN "","FNGD.STATS" TO FNGD.STATS ELSE
    ERRMSG = "Cannot locate the FNGD.STATS file";GOTO 93000
  END

  OPEN "","FNGD.JOB.STATS" TO FNGD.JOB.STATS ELSE
    ERRMSG = "Cannot locate the FNGD.JOB.STATS file";GOTO 93000
  END

  OPEN "","FNGD.ORDER.STATS" TO FNGD.ORDER.STATS ELSE
    ERRMSG = "Cannot locate the FNGD.ORDER.STATS file";GOTO 93000
  END

  CONO = PMCProperty<1,4>


*  STATUS = RBO.getProperty('', 'JA_ALLOCATE_QTY', OSD.JOB.QTY);*ALLOCATED QTY --> ALLOC.QTY
*  STATUS = RBO.getProperty('', 'FGS_A_QTY', FGS_A_QTY)

  STATUS = RBO.getProperty('', 'ID', ORDNO)

*  STATUS = RBO.getProperty('', 'OSD_RECP_NO', OSD.RECP.NO) ;*RECEIPTS NUMBERS WHICH ARE RESERVED (EACH RECEIPT WILL HAVE JOB ASSOCIATED)
*  STATUS = RBO.getProperty('', 'OSD_FI_QTY', OSD.FI.QTY) ;*JOBS RESERVED QTY

  STATUS = RBO.getProperty('', 'NEW_RECP_NO', TMP.FI.NO) ;*RECEIPTS NUMBERS WHICH ARE RESERVED (EACH RECEIPT WILL HAVE JOB ASSOCIATED)
  STATUS = RBO.getProperty('', 'NEW_RSV_QTY', TMP.FI.QTY) ;*JOBS RESERVED QTY

  STATUS = RBO.getProperty('', 'OSD_PROD', PDNO)
  STATUS = RBO.getProperty('', 'OSD_WHSE', WHNO)
  STATUS = RBO.getProperty('', 'OSD_SHIP_NO',SHPNO)

  STATUS = RBO.getProperty('', 'PROD_SEQ',PROD.SEQ)

  STATUS = RBO.getProperty('', 'IWH_RSV_FI',IWH_RSV_FI);* WE WILL GET IT IN STK QTY

  STATUS = RBO.getProperty('', 'A_TYPE', A_TYPE)

  KIT.TYPE = ""

 * TMP.FI.QTY = "" ;*RESERVED JOB QTY
 * TMP.FI.NO = "" ;* RESERVED RECEIPTS --> JOBS
  TMP.REL.NO = "" 
  TMP.REL.QTY = ""
  PICK.QTY = ""

IWH.ID = CONO:PDNO
MATREAD INV.REC FROM INVENTORY, IWH.ID THEN
	
	$INCLUDE ICSBP INV.UM.CNV

	R.COUNT = DCOUNT(TMP.FI.QTY<1>,SM)
	FOR R = 1 TO R.COUNT
		TMP.FI.QTY<1,1,R> = ICONV(TMP.FI.QTY<1,1,R>,ICR.CNV)
		TMP.FI.QTY<1,1,R> = CALC_COST_QTY(TMP.FI.QTY<1,1,R>,MAT INV.CNV.REC,ROND,'')	
	NEXT

	R.COUNT = DCOUNT(IWH_RSV_FI<1>,VM)
	FOR R = 1 TO R.COUNT
		IWH_RSV_FI<1,R> = ICONV(IWH_RSV_FI<1,R>,ICR.CNV)
		IWH_RSV_FI<1,R> = CALC_COST_QTY(IWH_RSV_FI<1,R>,MAT INV.CNV.REC,ROND,'')	
	NEXT

MATREAD CATG.REC FROM CATEGORY, CONO:INV.LINE THEN
    IWH.ID = IWH.ID:"!":WHNO
   
  MATREAD IWH.REC FROM INV.WHSE, IWH.ID THEN
    ERR.FLG='';ERRMSG='';PERIOD=''

    CALL BUILD_IWH_FI(IWH.ID,MAT IWH.REC,PERIOD,ERR.FLG,ERRMSG,OPEN.FLAG)
    
	IF IWH_RSV_FI # "" THEN
	  IWH.RSV.FI = IWH_RSV_FI
	  ANNA = "INSIDE : IWH.RSV.FI" : IWH.RSV.FI
	END

    MATREAD FGS.REC FROM FNGD.STATS, IWH.ID ELSE
        MAT FGS.REC = ""
    END
  END ELSE
    ERRMSG = "Cannot locate warehouse (":WHNO:") for item # ":PDNO
    GOTO 93000
  END
 END ELSE
    ERRMSG = "Cannot locate Product Line # ":INV.LINE
    GOTO 93000
 END
END ELSE
    ERRMSG = "Cannot locate finished goods # ":PDNO
    GOTO 93000
END


MATREAD FOS.REC FROM FNGD.ORDER.STATS, CONO:PDNO:"!":WHNO:"!":ORDNO:"!":PROD.SEQ:"!":KIT.TYPE ELSE
  MAT FOS.REC = ""
END

MTOT.RSV = SUM(IWH.RSV.FI)
MTOT.QTY = SUM(IWH.QTY.FI)
*
*
MATREAD ORD.DET.REC FROM ORDER.DETAIL, CONO:ORDNO:"!":SHPNO ELSE
  MAT ORD.DET.REC = ""
END

PTR = 1
LOOP
  LOCATE PDNO IN OSD.PROD<1>,PTR SETTING PPTR ELSE PPTR = 0
  BEGIN CASE
    CASE PPTR = 0
      PTR = 0
    CASE (OSD.WHSE<1,PPTR> = WHNO);* AND (OSD.PROD.SEQ<1,PPTR> = PROD.SEQ) AND (OSD.KIT<1,PPTR> = KIT.TYPE)
      PTR = 0
  END CASE
UNTIL PTR = 0 DO
  PTR = PPTR + 1
REPEAT

ORIG.RSV.QTY = ""

IF PPTR > 0 THEN
  RCNT = DCOUNT(OSD.RECP.NO<1,PPTR>,SM)
  FOR RPTR = 1 TO RCNT
    FREF = OSD.RECP.NO<1,PPTR,RPTR>
    LOCATE FREF IN IWH.RECP.NO<1>,1 SETTING FPTR THEN
      ORIG.RSV.QTY<1,FPTR> = ORIG.RSV.QTY<1,FPTR> + OSD.FI.QTY<1,PPTR,RPTR> ;* OLD QUANTITY RESERVED PREVIOUSLY
    END
  NEXT RPTR
END

*
RSV.QTY = "" ;* NEW RESERVED JOB QTY IN THE RECEIPTS STRUCTURE
REL.FLG = ""
REL.NO  = ""  ;* NEW RESERVED JOB IN THE RECEIPTS STRUCTURE
REL.DATE = ""
REL.QTY = ""
MIN.QTY = "";* T20852
RCNT = DCOUNT(TMP.FI.NO,SM)
FOR RPTR = 1 TO RCNT
  FREF = TMP.FI.NO<1,1,RPTR>
  LOCATE FREF IN IWH.RECP.NO<1>,1 SETTING FPTR THEN
    RSV.QTY<1,FPTR> = RSV.QTY<1,FPTR> + TMP.FI.QTY<1,1,RPTR>
    MIN.QTY<1,FPTR> = MIN.QTY<1,FPTR> + PICK.QTY<1,1,RPTR>;* T20852
    P = DCOUNT(REL.FLG<1,FPTR>,SM)+ 1
    REL.FLG<1,FPTR,P> = "X"
    REL.NO<1,FPTR,P> = TMP.REL.NO<1,1,RPTR>
    REL.QTY<1,FPTR,P> = TMP.REL.QTY<1,1,RPTR>
    IF REL.NO<1,FPTR,P> = "" THEN
      MAT ORR.REC = ""
    END ELSE
      MATREAD ORR.REC FROM ORDER.RELEASE, CONO:REL.NO<1,FPTR,P> ELSE
        MAT ORR.REC = ""
      END
    END
    REL.DATE<1,FPTR,P> = ORR.DATE
  END
NEXT RPTR
*

TOP.LINES = DCOUNT(TMP.FI.NO,SM)

FOR N = 1 TO TOP.LINES
  BLN = DCOUNT(REL.FLG<1,N>,SM)
  BEGIN CASE
    CASE BLN = 0
      REL.FLG<1,N> = "X"
      REL.QTY<1,N> = RSV.QTY<1,N>
    CASE REL.NO<1,N,BLN> = ""
      REL.QTY<1,N,BLN> = ""
      REL.QTY<1,N,BLN> = RSV.QTY<1,N> - SUM(REL.QTY<1,N>)
    CASE 1
      BLN = BLN + 1
      REL.FLG<1,N,BLN> = "X"
      REL.QTY<1,N,BLN> = RSV.QTY<1,N> - SUM(REL.QTY<1,N>)
  END CASE
NEXT N

***********************************************************

CNT = 1
FI.NO = DCOUNT(IWH.RSV.FI,VM)

IF A_TYPE # "B" THEN

FOR N = 1 TO FI.NO
  ACT.FI = N
  AVL = IWH.RSV.FI<1,ACT.FI> + ORIG.RSV.QTY<1,ACT.FI> - RSV.QTY<1,ACT.FI>   ;* NA 03-01-94
  QTY = IWH.QTY.FI<1,ACT.FI>   ;* NA 03-01-94
  RSV = IWH.QTY.FI<1,ACT.FI> - IWH.RSV.FI<1,ACT.FI>   ;* NA 03-01-94
  QTY = SUM(REL.QTY<1,ACT.FI>)
  L = DCOUNT(REL.FLG<1,ACT.FI>,SM)
  IF REL.NO<1,ACT.FI,L> = "" THEN
    QTY = QTY - REL.QTY<1,ACT.FI,L>
  END

  JOB_RECP_NO_LIST<1,ACT.FI> = IWH.RECP.NO<1,ACT.FI>

  JOB_LIST<1,ACT.FI> = IWH.PO.NO.FI<1,ACT.FI>
  JOB_UNIT_PRICE<1,ACT.FI> = OCONV(IWH.COST.FI<1,ACT.FI>,"MD4")
  JOB_RECEIVED_DATE<1,ACT.FI> = OCONV(IWH.RECV.FI<1,ACT.FI>,"D2/")
  JOB_RESERVED_QTY<1,ACT.FI> = OCONV(INT((RSV/ICR.DV1*ICR.MT1)/ICR.DV2+.5),ICR.CNV1)
  JOB_AVAILABLE_QTY<1,ACT.FI> = OCONV(INT((AVL/ICR.DV1*ICR.MT1)/ICR.DV2+.5),ICR.CNV1)
  JOB_RESERVE_QTY<1,ACT.FI> = OCONV(INT((RSV.QTY<1,ACT.FI>/ICR.DV1*ICR.MT1)/ICR.DV2+.5),ICR.CNV1)
  JOB_RELEASE_QTY<1,ACT.FI> = OCONV(INT((QTY/ICR.DV1*ICR.MT1)/ICR.DV2+.5),ICR.CNV1)
  
NEXT N

   STATUS = RBO.setProperty('', 'JOB_LIST',JOB_LIST);* : "___PPTR " : PPTR : "+++OSD.FI.QTY::" : OSD.FI.QTY :" ___:::IWH.RSV.FI :: " : IWH.RSV.FI : "::CONO::":CONO :"::IWH.ID::":IWH.ID)
   STATUS = RBO.setProperty('', 'JOB_UNIT_PRICE',JOB_UNIT_PRICE)
   STATUS = RBO.setProperty('', 'JOB_RECEIVED_DATE',JOB_RECEIVED_DATE)
   STATUS = RBO.setProperty('', 'JOB_RESERVED_QTY',JOB_RESERVED_QTY)
   STATUS = RBO.setProperty('', 'JOB_AVAILABLE_QTY',JOB_AVAILABLE_QTY)
   STATUS = RBO.setProperty('', 'JOB_RESERVE_QTY',JOB_RESERVE_QTY);*:"===RSV.QTY===" : RSV.QTY :"==ORIG.RSV.QTY==":ORIG.RSV.QTY:"::+":CONO:ORDNO:"!":SHPNO:"L_":LEN(SHPNO) :"__":HH:"OSD.PROD:":OSD.PROD)
   STATUS = RBO.setProperty('', 'JOB_RELEASE_QTY',JOB_RELEASE_QTY)

   R.COUNT = DCOUNT(IWH.RSV.FI<1>,VM)
   FOR R = 1 TO R.COUNT
	IWH.RSV.FI<1,R> = OCONV(CALC_STK_QTY(IWH.RSV.FI<1,R>,MAT INV.CNV.REC,ROND,''),ICR.CNV)
   NEXT
   STATUS = RBO.setProperty('', 'IWH_RSV_FI',IWH.RSV.FI)
   STATUS = RBO.setProperty('', 'IWH_RECP_NO',IWH.RECP.NO)

   TOT.STR = ""
   *RESERVED TOTAL
   TEMP = MTOT.QTY - MTOT.RSV
   TOT.STR = OCONV(INT(((TEMP/ICR.DV1) * ICR.MT1) / ICR.DV2 +.5),ICR.CNV1)

   *AVAILABLE TOTAL
   TEMP = MTOT.RSV + SUM((ORIG.RSV.QTY)) - SUM((RSV.QTY)) 
   TOT.STR := VM : OCONV(INT(((TEMP/ICR.DV1) * ICR.MT1) / ICR.DV2 +.5),ICR.CNV1)

   *RESERVE TOTAL
   TEMP = SUM(RSV.QTY)
   TOT.STR := VM : OCONV(INT(((TEMP/ICR.DV1) * ICR.MT1) / ICR.DV2 +.5),ICR.CNV1)

   *RELEASE TOTAL
   TOT.STR := VM : ""

   STATUS = RBO.setProperty('', 'ServerStatus', TOT.STR)

RETURN 
END 

*-----------------------------------------
STATUS = RBO.getProperty('', 'NEW_RESERVE_QTY',RESV.TOT)
RESV.TOT = CALC_COST_QTY(RESV.TOT,MAT INV.CNV.REC,ROND,'')
RESV.TOT = ICONV(RESV.TOT,ICR.CNV)

OLD.RSV.QTY = RSV.QTY ;*RESERVE QTY
OLD.RSV.NO = TMP.FI.NO ;*RECEIPT NUMBERS
RRR = ""
RESV.DIF = RESV.TOT - SUM(RSV.QTY)
TOP.LINES = DCOUNT(IWH.RSV.FI,VM)
BEGIN CASE
  CASE RESV.DIF > 0
    LIMIT = TOP.LINES
*
*---- Adjust current buckets
*
    FOR F = 1 TO LIMIT
      AVL = IWH.RSV.FI<1,F> + ORIG.RSV.QTY<1,F> - RSV.QTY<1,F>   ;* NA 03-01-94
*	RRR<1,-1> = AVL : "::" : IWH.RSV.FI<1,F> : "::" : ORIG.RSV.QTY<1,F>  : "::RSV:" : RSV.QTY<1,F>
      BEGIN CASE
        CASE AVL < 1
        CASE RSV.QTY<1,F> < 1
        CASE AVL < RESV.DIF
          RSV.QTY<1,F> = RSV.QTY<1,F> + AVL
          RESV.DIF = RESV.DIF - AVL
        CASE 1
          RSV.QTY<1,F> = RSV.QTY<1,F> + RESV.DIF
          RESV.DIF = 0; LIMIT = 0
      END CASE
    NEXT F
*
*---- Adjust new buckets
*
    FOR F = 1 TO LIMIT
      AVL = IWH.RSV.FI<1,F> + ORIG.RSV.QTY<1,F> - RSV.QTY<1,F>   ;* NA 03-01-94
*	RRR<1,-1> = "NEW " : AVL : "::" : IWH.RSV.FI<1,F> : "::" : ORIG.RSV.QTY<1,F>  : "::RSV:" : RSV.QTY<1,F>

      BEGIN CASE
        CASE AVL < 1
        CASE AVL < RESV.DIF
          RSV.QTY<1,F> = RSV.QTY<1,F> + AVL
          RESV.DIF = RESV.DIF - AVL
        CASE 1
          RSV.QTY<1,F> = RSV.QTY<1,F> + RESV.DIF
          RESV.DIF = 0; LIMIT = 0
      END CASE
    NEXT F
  CASE RESV.DIF < 0
    RESV.DIF = 0 - RESV.DIF
    LIMIT = TOP.LINES
    FOR F = LIMIT TO 1 STEP -1 UNTIL RESV.DIF = 0
      BEGIN CASE
        CASE RSV.QTY<1,F> < 1
        CASE RSV.QTY<1,F> < RESV.DIF
          RESV.DIF = RESV.DIF - RSV.QTY<1,F>
          RSV.QTY<1,F> = 0
        CASE 1
          RSV.QTY<1,F> = RSV.QTY<1,F> - RESV.DIF
          RESV.DIF = 0
      END CASE
    NEXT F
END CASE
 
 RESV.TOT1  = SUM(RSV.QTY)
 RESV.TOT   = OCONV(INT(((RESV.TOT1/ICR.DV1) * ICR.MT1) / ICR.DV2 +.5),ICR.CNV)

  LIMIT = TOP.LINES

*------------	BUILDING IWH.RSV.FI	------------------------------------------------------------
*---SAME THING HAS TO BE DONE AT CLIENT SIDE WHEN THE DISTRIBUTION IS DONE USING MANUALLY-----
        RECP.CNT = DCOUNT(OLD.RSV.NO,SVM)
	 AA<1,-1>="RECP.CNT : ":RECP.CNT
        FOR N = 1 TO RECP.CNT
          RECP.NO = OLD.RSV.NO<1,1,N>
          LOCATE RECP.NO IN IWH.RECP.NO<1>,1 SETTING FNO THEN
*            AA<1,-1> =FNO:"_":IWH.RSV.FI<1,FNO>:"_":OLD.RSV.QTY<1,FNO> :"_":IWH.RSV.FI<1,FNO> + OLD.RSV.QTY<1,FNO>
            IWH.RSV.FI<1,FNO> = IWH.RSV.FI<1,FNO> + OLD.RSV.QTY<1,FNO>
          END
        NEXT N

	  J = 1
	  FOR R = 1 TO LIMIT
      		IF RSV.QTY<1,R> > 0 THEN
	  		RECEIPTS_LIST<1,J> = IWH.RECP.NO<1,R>
	  		RSV.NO<1,1,J> = IWH.RECP.NO<1,R>
	 		RSV_QTY_LIST<1,J> = RSV.QTY<1,R>
		       RSV_QTY_LIST<1,J> = OCONV(INT(((RSV_QTY_LIST<1,J>/ICR.DV1) * ICR.MT1) / ICR.DV2 +.5),ICR.CNV)
	  		J = J + 1
		END
	  NEXT R

	 *FOR RESERVES NEWLY DONE
        RECP.CNT = DCOUNT(RECEIPTS_LIST,VM)
        FOR N = 1 TO RECP.CNT
          RECP.NO = RECEIPTS_LIST<1,N>
          LOCATE RECP.NO IN IWH.RECP.NO<1>,1 SETTING FNO THEN
*		AA<1,-1> ="tttt" : FNO:"_":IWH.RSV.FI<1,FNO>:"_":RSV.QTY<1,FNO>:"_":IWH.RSV.FI<1,FNO> - RSV.QTY<1,FNO>
       	IWH.RSV.FI<1,FNO> = IWH.RSV.FI<1,FNO> - RSV.QTY<1,FNO>
          END
        NEXT N

	LIMIT = TOP.LINES
	FOR N = LIMIT TO 1 STEP -1 ;*FOR REVERSE
	  IWH.RSV.FI<1,N> = OCONV(INT(((IWH.RSV.FI<1,N>/ICR.DV1) * ICR.MT1) / ICR.DV2 +.5),ICR.CNV)
	NEXT N
*-----------------------------------------------------------------------------------------------
  STATUS = RBO.setProperty('', 'NEW_RESERVE_QTY', RESV.TOT);*REVISED NEW RESERVED QTY
  STATUS = RBO.setProperty('', 'NEW_RECEIPTS', RECEIPTS_LIST)
  STATUS = RBO.setProperty('', 'NEW_RSV_QTY', RSV_QTY_LIST)

  STATUS = RBO.setProperty('', 'NEW_IWH_RSV_FI', IWH.RSV.FI);*NEW IWH.RSV.FI
  STATUS = RBO.setProperty('', 'RESERVE_QTY', RESV.TOT1);*RESV.TOT1

  
  *STATUS = RBO.setProperty('', 'ServerMessage', "OLD.RSV.QTY : " : OLD.RSV.QTY)
  *STATUS = RBO.setProperty('', 'ServerStatus', RRR : "__ANNA :: " : ANNA)
  *STATUS = RBO.setProperty('', 'XML_STR', "__OLD.RSV.QTY :: " : OLD.RSV.QTY : "::RSV.QTY::":RSV.QTY:"AA::":AA)
  *STATUS = RBO.setProperty('', 'IWH_RECP_NO',IWH.RECP.NO)

*-----------------------------------------------------------------------------------------------

* End of method code
RETURN
93000*
   STATUS = RBO.setProperty('', 'ServerStatus', '1')
   STATUS = RBO.setProperty('', 'ServerMessage', ERRMSG)

