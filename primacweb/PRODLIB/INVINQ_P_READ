  SUBROUTINE INVINQ_P_READ
*********************************************************************
*
* REVISION - [12.0]
*
* PROGRAM  - INVINQ_P_READ
*
* AUTHOR   - ALEJANDRO DELGADO
*
* DATE     - 09/27/2002
*
* DESCRIPTION
*
* This program builds the data from INVENTORY file to load into 
* Purchase Order Inquiry screen.
*
*********************************************************************
*
*---- FILE COPY STATEMENTS
*
  $INCLUDE WWINSERT RBO.H
  $INCLUDE ICS.CPYLIB INVENTORY
  $INCLUDE ICS.CPYLIB INV.STATS
  $INCLUDE ICS.CPYLIB INV.CNV
  $INCLUDE PMC.CPYLIB CUSTOMER
  $INCLUDE PMC.CPYLIB VEND
  $INCLUDE PMC.CPYLIB PO
  $INCLUDE JCS.CPYLIB JOB
  $INCLUDE CPYLIB>FILE.VARS
  $INCLUDE CPYLIB CHAR
*
*---- INITIALIZATION
*
  ERRMSG = RBO.getProperty('','ID',PRODUCT.ID)
  ERRMSG = RBO.getProperty('','WHSE_ID',WHSE.ID)
  CONO = PRODUCT.ID[1,3]
  PRODUCT.ID = PRODUCT.ID[4,99]

  *
  ERRMSG = "" ; IN_PARAM = "" ; OUT_PARAM = ""
  IN_PARAM<1,1> = 'INVENTORY'
  IN_PARAM<1,2> = 'INV.STATS'
  IN_PARAM<1,3> = 'VEND'
  IN_PARAM<1,4> = 'JOB'
  IN_PARAM<1,5> = 'CUSTOMER'
  CALL GetInvOpenFiles(ERRMSG,IN_PARAM,OUT_PARAM,MAT FILE.VARS)
  IF ERRMSG # '' THEN GOTO SET.ERROR
  MATREAD INV.REC FROM INVENTORY, CONO:PRODUCT.ID THEN
  $INCLUDE ICSBP INV.UM.CNV
  END ELSE
    ERRMSG = 'Inventory is not on file.  Try again'
    GOTO SET.ERROR
  END
OPEN '','CONTROL' TO CONTROL ELSE
  ERRMSG = 'CONTROL FILE IS MISSING'; GOTO SET.ERROR
END
OPEN '','PO' TO PO ELSE
  ERRMSG = 'PO FILE IS MISSING'; GOTO SET.ERROR
END


  IWH.ID = CONO:PRODUCT.ID:'!':WHSE.ID
  MATREAD INV.STAT.REC FROM INV.STATS,IWH.ID ELSE MAT INV.STAT.REC = ''
  ERRMSG = "" ; IN_PARAM = "" ; OUT_PARAM = "" ; MAT INV.CNV.REC = ""
  CALL GetInvUMCnv(ERRMSG,IN_PARAM,OUT_PARAM,MAT INV.CNV.REC,MAT INV.REC)
*
*---- PROCESSING
*
  UNKNOWN = STR('?',30)
  PO.VENDOR.NAME = '' ; PO.EXP.DATE = ''
  PO.ON.ORDER = '' ; PO.TOT.ON.ORDER = 0
  PO.ALLOCATED = '' ; PO.TOT.ALLOCATED = 0
  PO.BALANCE = '' ; PO.TOT.BALANCE = 0
  JOB.NO=''
  PCNT = DCOUNT(ISTAT.PO,VM)
  FOR I = 1 TO PCNT
  MATREAD PO.REC FROM PO,CONO:ISTAT.PO<1,I> THEN
   CNT=DCOUNT(PO.PROD.NUM,@VM)
   FOR P=1 TO CNT
     IF PO.PROD.NUM<1,I>=PRODUCT.ID THEN
       JOB.NO<1,I,P>=PO.JOB.NO<1,P>
      
       MATREAD JOB.REC FROM JOB,CONO:JOB.NO<1,I,P> THEN
         PO.JOB.CUST<1,I,P>=JOB.CUST
         MATREAD CUST.REC FROM CUSTOMER,CONO:PO.JOB.CUST<1,I,P> THEN
           PO.JOB.CUST.NAME<1,I,P> = CUST.NAME
         END
       END
     END

   NEXT P
  END

    JLINES = DCOUNT(ISTAT.PO.JOB.QTY<1,I>,SVM)
    FOR J = 1 TO JLINES
      MATREAD JOB.REC FROM JOB,CONO:ISTAT.PO.JOB<1,I,J> THEN
      END ELSE
        JOB.CUST = UNKNOWN
        JOB.DESC = UNKNOWN
      END

	PO.JOB.CUST<1,I,J> = JOB.CUST
	PO.JOB.DESC<1,I,J> = JOB.DESC<1,1>

      MATREAD CUST.REC FROM CUSTOMER, CONO:JOB.CUST THEN
      END ELSE
        CUST.NAME = UNKNOWN
      END

      PO.JOB.CUST.NAME<1,I,J> = CUST.NAME
      PO.JOB.ALLOCATED<1,I,J> = OCONV(INT(((ISTAT.PO.JOB.QTY<1,I,J>/ICR.DV1) * ICR.MT1) / ICR.DV2 +.5),ICR.CNV1)
      PO.ALLOCATED<1,I> += ISTAT.PO.JOB.QTY<1,I,J>
    NEXT J
    IF ISTAT.PO.JOB ="" THEN
       PO.JOB.NO=JOB.NO
    END ELSE
       PO.JOB.NO=ISTAT.PO.JOB
    END
    PO.TOT.ON.ORDER += ISTAT.PO.QTY<1,I>
    PO.TOT.ALLOCATED += PO.ALLOCATED<1,I>
    MATREAD VEND.REC FROM VEND, CONO:ISTAT.PO.VEND<1,I> ELSE VEND.DESC = UNKNOWN
    PO.VENDOR.NAME<1,I> = VEND.DESC
    PO.EXP.DATE<1,I> = OCONV(ISTAT.PO.DATE<1,I>,'D2/')
    PO.ON.ORDER<1,I> = OCONV(INT(((ISTAT.PO.QTY<1,I>/ICR.DV1) * ICR.MT1) / ICR.DV2 + .5),ICR.CNV1)
    PO.BALANCE<1,I> = OCONV(INT((((ISTAT.PO.QTY<1,I>-PO.ALLOCATED<1,I>)/ICR.DV1) * ICR.MT1) / ICR.DV2 +.5),ICR.CNV1)
    PO.ALLOCATED<1,I> = OCONV(INT(((PO.ALLOCATED<1,I>/ICR.DV1) * ICR.MT1) / ICR.DV2 +.5),ICR.CNV1)
  NEXT I
  PO.TOT.BALANCE = PO.TOT.ON.ORDER - PO.TOT.ALLOCATED
  PO.TOT.ON.ORDER = OCONV(INT(((PO.TOT.ON.ORDER/ICR.DV1) * ICR.MT1) / ICR.DV2 +.5),ICR.CNV1)
  PO.TOT.ALLOCATED = OCONV(INT(((PO.TOT.ALLOCATED/ICR.DV1) * ICR.MT1) / ICR.DV2 +.5),ICR.CNV1)
  PO.TOT.BALANCE = OCONV(INT(((PO.TOT.BALANCE/ICR.DV1) * ICR.MT1) / ICR.DV2 +.5),ICR.CNV1)
WRITE JOB.NO ON CONTROL,"KK"
*
*---- BUILD RBO RECORD
*
  STATUS = RBO.setProperty('','PO_NUMBER',ISTAT.PO)
  STATUS = RBO.setProperty('','PO_VENDOR',ISTAT.PO.VEND)
  STATUS = RBO.setProperty('','PO_VENDOR_NAME',PO.VENDOR.NAME[1,30])
  STATUS = RBO.setProperty('','PO_EXP_DATE',PO.EXP.DATE)
  STATUS = RBO.setProperty('','PO_ON_ORDER',PO.ON.ORDER)
  STATUS = RBO.setProperty('','PO_ALLOCATED',PO.ALLOCATED)
  STATUS = RBO.setProperty('','PO_BALANCE',PO.BALANCE)
  STATUS = RBO.setProperty('','PO_TOT_ON_ORDER',PO.TOT.ON.ORDER)
  STATUS = RBO.setProperty('','PO_TOT_ALLOCATED',PO.TOT.ALLOCATED)
  STATUS = RBO.setProperty('','PO_TOT_BALANCE',PO.TOT.BALANCE)
  STATUS = RBO.setProperty('','PO_JOB',PO.JOB.NO)
  STATUS = RBO.setProperty('','PO_JOB_DESC',PO.JOB.DESC)
  STATUS = RBO.setProperty('','PO_JOB_CUST',PO.JOB.CUST)
  STATUS = RBO.setProperty('','PO_JOB_CUST_NAME',PO.JOB.CUST.NAME)
  STATUS = RBO.setProperty('','PO_JOB_ALLOCATED',PO.JOB.ALLOCATED)

  RETURN
*
SET.ERROR: 
*
  STATUS = RBO.setProperty('','ServerStatus',1)
  STATUS = RBO.setProperty('','ServerMessage',ERRMSG)
  RETURN



