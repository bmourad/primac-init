SUBROUTINE ORDM_ORDER_RESERVE_SELECTION
********************************************************************************
*   Program name :- ORDM_ORDER_RESERVE_SELECTION
*   Created:- 1/30/2006
*   Programmer :- Suhail Hussain S
********************************************************************************
$INCLUDE WWINSERT RBO.H

$INCLUDE CPYLIB COMMON1
$INCLUDE JCS.CPYLIB COM.JCS.LINK  
$INCLUDE ICS.CPYLIB COM.INV.MAIN  
$INCLUDE ICS.CPYLIB COM.INV.SERIAL
$INCLUDE JCS.CPYLIB COM.INV.STATS 
$INCLUDE PMC.CPYLIB COM.CUST 
$INCLUDE OPS.CPYLIB COM.ORDER
$INCLUDE OPS.CPYLIB COM.OPS.LINK

$DEFINE INVENTORY
$DEFINE ORDER
$DEFINE ORDERDETAILINQ
$DEFINE COMPOPS
$DEFINE CUSTOMER
$DEFINE CATEGORY
$DEFINE INVWHSE
$DEFINE FNGDSTATS
$DEFINE FNGDORDERSTATS
$DEFINE JOB
$DEFINE FILEVARS

$INCLUDE PMC.CPYLIB COMP.OPS
$INCLUDE PMC.CPYLIB CUSTOMER
$INCLUDE OPS.CPYLIB ORDER
$INCLUDE OPS.CPYLIB ORDER.DETAIL
$INCLUDE OPS.CPYLIB ORDER.DETAIL.INQ
$INCLUDE OPS.CPYLIB ORDER.RELEASE
$INCLUDE ICS.CPYLIB INVENTORY
$INCLUDE ICS.CPYLIB CATEGORY
$INCLUDE ICS.CPYLIB INV.WHSE
$INCLUDE ICS.CPYLIB INV.FNGD
$INCLUDE ICS.CPYLIB INV.CNV
$INCLUDE ICS.CPYLIB FNGD.BOM
$INCLUDE ICS.CPYLIB FNGD.STATS
$INCLUDE ICS.CPYLIB FNGD.ORDER.STATS
$INCLUDE ICS.CPYLIB FNGD.JOB.STATS
$INCLUDE ICS.CPYLIB PRICE.TABLE
$INCLUDE ICS.CPYLIB WAREHOUSE
$INCLUDE JES.CPYLIB ESTIMATE
$INCLUDE JCS.CPYLIB JOB
$INCLUDE CPYLIB FILE.VARS
$INCLUDE CPYLIB CHAR

   SET_FOCUS  = 1
   OPEN "","CUSTOMER" TO CUSTOMER ELSE ERRMSG = "CANNOT OPEN CUSTOMER FILE";GOTO 91000
   OPEN "","ORDER" TO ORDER ELSE ERRMSG = "CANNOT OPEN ORDER FILE";GOTO 91000
   OPEN "","ORDER.DETAIL" TO ORDER.DETAIL ELSE ERRMSG = "CANNOT OPEN ORDER.DETAIL FILE";GOTO 91000
   OPEN "","ORDER.RELEASE" TO ORDER.RELEASE ELSE ERRMSG = "CANNOT OPEN ORDER.RELEASE FILE";GOTO 91000
   OPEN "","INVENTORY" TO INVENTORY ELSE ERRMSG = "CANNOT OPEN INVENTORY FILE";GOTO 91000
   OPEN "","CATEGORY" TO CATEGORY ELSE ERRMSG = "CANNOT OPEN CATEGORY FILE";GOTO 91000
   OPEN "","INV.WHSE" TO INV.WHSE ELSE ERRMSG = "CANNOT OPEN INV.WHSE FILE";GOTO 91000
   OPEN "","INV.FNGD" TO INV.FNGD ELSE ERRMSG = "CANNOT OPEN INV.FNGD FILE";GOTO 91000
   OPEN "","FNGD.BOM" TO FNGD.BOM ELSE ERRMSG = "CANNOT OPEN FNGD.BOM FILE";GOTO 91000
   OPEN "","FNGD.STATS" TO FNGD.STATS ELSE ERRMSG = "CANNOT OPEN FNGD.STATS FILE";GOTO 91000
   OPEN "","FNGD.ORDER.STATS" TO FNGD.ORDER.STATS ELSE ERRMSG = "CANNOT OPEN  FILE";GOTO 91000
   OPEN "","FNGD.JOB.STATS" TO FNGD.JOB.STATS ELSE ERRMSG = "CANNOT OPEN FNGD.JOB.STATS FILE";GOTO 91000
   OPEN "","PRICE.TABLE" TO PRICE.TABLE ELSE ERRMSG = "CANNOT OPEN PRICE.TABLE FILE";GOTO 91000
   OPEN "","WAREHOUSE" TO WAREHOUSE ELSE ERRMSG = "CANNOT OPEN WAREHOUSE FILE";GOTO 91000
   OPEN "","ESTIMATE" TO ESTIMATE ELSE ERRMSG = "CANNOT OPEN ESTIMATE FILE";GOTO 91000
   OPEN "","JOB" TO JOB ELSE ERRMSG = "CANNOT OPEN JOB FILE";GOTO 91000
   OPEN "","CONTROL" TO CONTROL ELSE ERRMSG = "CANNOT OPEN CONTROL FILE";GOTO 91000


*** VARIABLES AND PROPERTIES
   STATUS = RBO.getProperty("","PMCProperty",PMCProperty)
   STATUS = RBO.getProperty("","INARR",INARR)
   STATUS = RBO.getProperty("","DISPARR",OSDARR)
   CONO = PMCProperty<1,4>

   DELIM = "ð"
   GEN.SHPNO = "000"
   TODAY = DATE()
   DIM TEMP.MF(25)
   MAT TEMP.MF = ""
   DISPARR = ""
   RETURN_ARR = ""

   ORDNO      = INARR<1,1>
   ISNEW      = INARR<1,8>
   MAT ORD.DET.REC = ""
   IF ISNEW = 0 THEN
     MATREAD ORD.REC FROM ORDER,CONO:ORDNO ELSE MAT ORD.REC = ""
   END
   ORD.CUST   = INARR<1,2>
   ORD.DIV    = INARR<1,3>
   SHIPNO     = INARR<1,4>
   ITEM_NO    = INARR<1,5>
   WHSE_NO    = INARR<1,6>
   ORDER_QTY  = INARR<1,7>
   LN         = INARR<1,9>
   
   MATPARSE ORD.DET.REC FROM OSDARR,DELIM
   MATREAD OPCO.REC FROM CONTROL, CONO:"OPS" ELSE MAT OPCO.REC = ""
   MATREAD CUST.REC FROM CUSTOMER, CONO:ORD.CUST ELSE MAT CUST.REC = ""
* Insert method code here

****** START OF MAIN
GOSUB PRE_PROCESS
SHPNO = SHIPNO
*---- Item
7010*
   WHNO = ""
   VALUE = ITEM_NO
   MATREAD INV.REC FROM INVENTORY, CONO:VALUE ELSE MAT INV.REC = ""
*  
   MATREAD CATG.REC FROM CATEGORY, CONO:INV.LINE ELSE MAT CATG.REC = ""
   WCNT = DCOUNT(INV.WHSE.CODE,VM)
   $INCLUDE ICSBP INV.UM.CNV
   TEMP.MF(1) = VALUE
   PDNO = TEMP.MF(1)
   * SET UP FOR KIT EXPLOSION
   *
     MATREAD IOF.REC FROM INV.FNGD, CONO:PDNO ELSE
       MAT IOF.REC = ""
     END
     BOM.KEY = CONO:IOF.BOM
     MATREAD BOM.REC FROM FNGD.BOM, CONO:IOF.BOM ELSE
       MAT BOM.REC = ""
     END
*---- Warehouse
7020* 
   VALUE = WHSE_NO
   IWH.ID = CONO:TEMP.MF(1):"!":VALUE
   MATREAD IWH.REC FROM INV.WHSE, IWH.ID THEN
      ERR.FLG='';ERRMSG='';PERIOD='';OPEN.FLAG = 1                                        
      CALL BUILD_IWH_FI(IWH.ID,MAT IWH.REC,PERIOD,ERR.FLG,ERRMSG,OPEN.FLAG) 
   END
   ALREADY.RESV = 0
   PCNT = DCOUNT(OSD.PROD,VM)
   PTR = 1  
   LOOP
     LOCATE TEMP.MF(1) IN OSD.PROD<1>,PTR SETTING L THEN
       IF (OSD.WHSE<1,L> = VALUE) AND (OSD.KIT<1,L> = "N" OR OSD.KIT<1,L> = "K") THEN
          PTR = 0
          LOCATE L IN NUM.ON.SCRN<1>,1 SETTING LFND ELSE LFND = L
       END ELSE
          PTR = L + 1
       END
     END ELSE
       PTR = 0
     END
   UNTIL PTR = 0 DO REPEAT
   *
   MATREAD FGS.REC FROM FNGD.STATS, IWH.ID ELSE
     MAT FGS.REC = ""
   END
   *
   TEMP.MF(2) = VALUE
   NUM.PROD = DCOUNT(ODQ.PROD,VM)
   TEMP.KEY = CONO:TEMP.MF(1):"!":TEMP.MF(2)
   LOCATE TEMP.KEY IN ORIG.PROD<1>,1 SETTING LINDX THEN
     TEMP.CONV = CONVERT(SVM,VM,ORIG.IWH.RESV<1,LINDX>)
     IWH.RSV.FI = TEMP.CONV
     TEMP.CONV = CONVERT(SVM,VM,ORIG.ALOC.AVL<1,LINDX>)
     FGS.A.QTY = TEMP.CONV
     IWH.RESV    = ORIG.IWH.QTY<1,LINDX>
   END ELSE
     ORIG.IWH.QTY = INSERT(ORIG.IWH.QTY,1,LINDX,1,IWH.RESV)
     ORIG.PROD   =INSERT(ORIG.PROD,1,LINDX,1,IWH.ID)
     TEMP.STR = CONVERT(VM,SVM,IWH.RSV.FI)
     ORIG.IWH.RESV=INSERT(ORIG.IWH.RESV,1,LINDX,1,TEMP.STR)
     TEMP.STR = CONVERT(VM,SVM,FGS.A.QTY)
     ORIG.ALOC.AVL=INSERT(ORIG.ALOC.AVL,1,LINDX,0,TEMP.STR)
   END
   IF IWH.ON.HAND - IWH.RESV < 0 THEN
     AVL.RESV = OSD.R.QTY<1,L>
   END ELSE
     AVL.RESV = IWH.ON.HAND - IWH.RESV + OSD.R.QTY<1,L>
   END
   AVL.ALOC = SUM(FGS.M.QTY) - SUM(FGS.A.QTY)
   IF AVL.ALOC < 1 THEN AVL.ALOC = 0
   AVL.ALOC = AVL.ALOC + TEMP.MF(16)<1,1,2>
   *
   PDNO = TEMP.MF(1);WHNO = TEMP.MF(2)
   MATREAD WHSE.REC FROM WAREHOUSE,CONO:WHNO ELSE
     MAT WHSE.REC =""
   END
   *
   *---- Order qty
   7030*
     VALUE = ORDER_QTY
     TEMP.MF(3) = INT(((VALUE / ICR.MT1) * ICR.DV1) * ICR.DV2 + .5)
     TEMP.MF(4) = INT((VALUE * (1 + (CUST.ADDL.OPS<1,1> / 10000))) + .5)
     TEMP.MF(4) = INT(((TEMP.MF(4) / ICR.MT1) * ICR.DV1) * ICR.DV2 + .5)
   *** SFC CORRECTION DURING QC IN REV10B
     PDNO = TEMP.MF(1);WHNO = TEMP.MF(2)
     MATREAD IOF.REC FROM INV.FNGD, CONO:PDNO ELSE
       MAT IOF.REC = ""
     END
     BOM.KEY = CONO:IOF.BOM
     MATREAD BOM.REC FROM FNGD.BOM, CONO:IOF.BOM ELSE
       MAT BOM.REC = ""
     END
   *** SFC
     IF BOM.TYPE = "K" THEN
        ERRMSG = "Invalid option for a KIT"
        GOTO 91000
     END
   *
7040*
  IF AVL.RESV < 1 THEN
    ERRMSG = "";GOTO 91000   
  END
   RTYPE = "M"
   RTOT = TEMP.MF(11)
   RQTY = TEMP.MF(09)
   RSV.NO = TEMP.MF(06)
   REL.NO = TEMP.MF(10)
   REL.QTY = TEMP.MF(17)
   PROD.SEQ = TEMP.MF(19)
   KIT.TYPE = TEMP.MF(18)
   PICK.QTY = TEMP.MF(20);* T20852
   
   ACTION = ("R-":LN);CUSTNO = ORD.CUST;RESV.TOT = RTOT;RELNO = "";RELQTY = ""
   TMP.FI.QTY = RQTY;TMP.FI.NO = RSV.NO;TMP.REL.NO = REL.NO;TMP.REL.QTY = REL.QTY

   GOSUB ORDER_RESERVE_SEL

   STATUS = RBO.setProperty("","DISPARR",DISPARR)
   STATUS = RBO.setProperty("","RETARR",RET_ARR)
   STATUS = RBO.setProperty("","INARR",SUBGRID_ARRAY)
RETURN

*** START OF SUBROUTINES
*
ORDER_RESERVE_SEL:
TOP.LINES = DCOUNT(IWH.QTY.FI,VM)

DLN = FIELD(ACTION,"-",2)+0
ACTION = FIELD(ACTION,"-",1)

MATREAD FOS.REC FROM FNGD.ORDER.STATS, CONO:PDNO:"!":WHNO:"!":ORDNO:"!":PROD.SEQ:"!":KIT.TYPE ELSE
  MAT FOS.REC = ""
END
MTOT.RSV = SUM(IWH.RSV.FI)
MTOT.QTY = SUM(IWH.QTY.FI)

MATREAD ORD.DET.REC FROM ORDER.DETAIL, CONO:ORDNO:"!":SHPNO ELSE
  MAT ORD.DET.REC = ""
END
PTR = 1
LOOP
  LOCATE PDNO IN OSD.PROD<1>,PTR SETTING PPTR ELSE PPTR = 0
  BEGIN CASE
    CASE PPTR = 0
      PTR = 0
    CASE (OSD.WHSE<1,PPTR> = WHNO) AND (OSD.PROD.SEQ<1,PPTR> = PROD.SEQ) AND (OSD.KIT<1,PPTR> = KIT.TYPE)
      PTR = 0
  END CASE
UNTIL PTR = 0 DO
  PTR = PPTR + 1
REPEAT
ORIG.RSV.QTY = ""
IF PPTR > 0 THEN
  RCNT = DCOUNT(OSD.RECP.NO<1,PPTR>,SM)
  FOR RPTR = 1 TO RCNT
    FREF = OSD.RECP.NO<1,PPTR,RPTR>
    LOCATE FREF IN IWH.RECP.NO<1>,1 SETTING FPTR THEN
      ORIG.RSV.QTY<1,FPTR> = ORIG.RSV.QTY<1,FPTR> + OSD.FI.QTY<1,PPTR,RPTR>
    END
  NEXT RPTR
END
*
RSV.QTY = ""
REL.FLG = ""
REL.NO  = ""
REL.DATE = ""
REL.QTY = ""
MIN.QTY = "";* T20852
RCNT = DCOUNT(TMP.FI.NO,SM)

FOR RPTR = 1 TO RCNT
  FREF = TMP.FI.NO<1,1,RPTR>
  LOCATE FREF IN IWH.RECP.NO<1>,1 SETTING FPTR THEN
    RSV.QTY<1,FPTR> = RSV.QTY<1,FPTR> + TMP.FI.QTY<1,1,RPTR>
    MIN.QTY<1,FPTR> = MIN.QTY<1,FPTR> + PICK.QTY<1,1,RPTR>;* T20852
    P = DCOUNT(REL.FLG<1,FPTR>,SM)+ 1
    REL.FLG<1,FPTR,P> = "X"
    REL.NO<1,FPTR,P> = TMP.REL.NO<1,1,RPTR>
    
    REL.QTY<1,FPTR,P> = TMP.REL.QTY<1,1,RPTR>
    IF REL.NO<1,FPTR,P> = "" THEN
      MAT ORR.REC = ""
    END ELSE
      MATREAD ORR.REC FROM ORDER.RELEASE, CONO:REL.NO<1,FPTR,P> ELSE
        MAT ORR.REC = ""
      END
    END
    REL.DATE<1,FPTR,P> = ORR.DATE
  END
NEXT RPTR
*
FOR N = 1 TO TOP.LINES
  BLN = DCOUNT(REL.FLG<1,N>,SM)
  BEGIN CASE
    CASE BLN = 0
      REL.FLG<1,N> = "X"
      REL.QTY<1,N> = RSV.QTY<1,N>
    CASE REL.NO<1,N,BLN> = ""
      REL.QTY<1,N,BLN> = ""
      REL.QTY<1,N,BLN> = RSV.QTY<1,N> - SUM(REL.QTY<1,N>)
    CASE 1
      BLN = BLN + 1
      REL.FLG<1,N,BLN> = "X"
      REL.QTY<1,N,BLN> = RSV.QTY<1,N> - SUM(REL.QTY<1,N>)
  END CASE
NEXT N

DISPARR<1,1> = MTOT.QTY - MTOT.RSV
DISPARR<1,2> = MTOT.RSV + SUM((ORIG.RSV.QTY)) - SUM((RSV.QTY))
DISPARR<1,3> = SUM(RSV.QTY)
DISPARR<1,4> = ""
FOR I = 1 TO 4
  DISPARR<1,I> = OCONV(INT(((DISPARR<1,I>/ICR.DV1) * ICR.MT1) / ICR.DV2 +.5),ICR.CNV1)
NEXT I

GOSUB 1800
TLN = 1; LIMIT = TOP.LINES
FOR I = 1 TO LIMIT
  IF IWH.RSV.FI<1,I> > 0 THEN
    TLN = I; LIMIT = 0
  END
NEXT I
TLN=1;TOP.START.LINE = 0; GOSUB 1900
GOSUB 7200
RETURN ;* THIS IS THE END

*---- Display Total Release
1800*
REL.GTOT = 0
C1 = DCOUNT(REL.QTY,VM)
FOR N1 = 1 TO C1
  C2 = DCOUNT(REL.QTY<1,N1>,SM)
  FOR N2 = 1 TO C2
    IF REL.NO<1,N1,N2> # "" THEN
      REL.GTOT = REL.GTOT + REL.QTY<1,N1,N2>
    END
  NEXT N2
NEXT N1
DISPARR<1,4> = OCONV(INT(((REL.GTOT/ICR.DV1)*ICR.MT1)/ICR.DV2+.5),ICR.CNV1)
RETURN
*
*---- Display scrolling lines
1900*
  CNT = 1;TMP_REC = "";ACT.FI=""
  TMP_AVAIL = ""
  FI.NO = DCOUNT(IWH.RSV.FI,VM)
  FOR N = 1 TO TOP.LINES
    ACT.FI = FI.NO - N + 1
    AVL = IWH.RSV.FI<1,ACT.FI> + ORIG.RSV.QTY<1,ACT.FI> - RSV.QTY<1,ACT.FI>   ;* NA 03-01-94
    QTY = IWH.QTY.FI<1,ACT.FI>   ;* NA 03-01-94
    RSV = IWH.QTY.FI<1,ACT.FI> - IWH.RSV.FI<1,ACT.FI>   ;* NA 03-01-94
    QTY = SUM(REL.QTY<1,ACT.FI>)
    L = DCOUNT(REL.FLG<1,ACT.FI>,SM)
    IF REL.NO<1,ACT.FI,L> = "" THEN
      QTY = QTY - REL.QTY<1,ACT.FI,L>
    END
    RET_ARR<1,N,1> = IWH.PO.NO.FI<1,ACT.FI>
    RET_ARR<1,N,2> = OCONV(IWH.COST.FI<1,ACT.FI>,"MD4")
    RET_ARR<1,N,3> = OCONV(IWH.RECV.FI<1,ACT.FI>,"D2/")
    RET_ARR<1,N,4> = OCONV(INT((RSV/ICR.DV1*ICR.MT1)/ICR.DV2+.5),ICR.CNV1)
    RET_ARR<1,N,5> = OCONV(INT((AVL/ICR.DV1*ICR.MT1)/ICR.DV2+.5),ICR.CNV1)
    RET_ARR<1,N,6> = OCONV(INT((RSV.QTY<1,ACT.FI>/ICR.DV1*ICR.MT1)/ICR.DV2+.5),ICR.CNV1)
    RET_ARR<1,N,7> = OCONV(INT((QTY/ICR.DV1*ICR.MT1)/ICR.DV2+.5),ICR.CNV1)
    TMP_AVAIL = IWH.RSV.FI<1,ACT.FI> + ORIG.RSV.QTY<1,ACT.FI> - RSV.QTY<1,ACT.FI>
    RET_ARR<1,N,8> = INT(((MIN.QTY<1,ACT.FI>)/ICR.DV1*ICR.MT1)/ICR.DV2+.5)
    RET_ARR<1,N,9> = INT(((RSV.QTY<1,ACT.FI>+TMP_AVAIL)/ICR.DV1*ICR.MT1)/ICR.DV2+.5)
    CNT = CNT + 1
  NEXT N
1990*
RETURN

PRE_PROCESS:
   O.ODQ.PROD = "";O.ODQ.WHSE = "";O.ODQ.SEQ = "";O.ODQ.KIT = "";ORIG.PROD = "";ORIG.IWH.RESV = "";ORIG.IWH.QTY = "";ORIG.ALOC.AVL = ""
   IF ISNEW = 0 THEN
      STATUS = "L"; SHPNO = "ALL"
      CALL ORDER_LINE_UPD(CONO,ORDNO,SHPNO,STATUS)
      SHPNO = ""
      O.ODQ.PROD = ODQ.PROD
      O.ODQ.WHSE = ODQ.WHSE
      O.ODQ.SEQ  = ODQ.PROD.SEQ
      O.ODQ.KIT  = ODQ.KIT
      ORIG.PROD = ""
      ORIG.IWH.RESV = ""
      ORIG.IWH.QTY = ""
      ORIG.ALOC.AVL = ""
      NUM.PROD = DCOUNT(ODQ.PROD,VM)
      FOR P = 1 TO NUM.PROD
         IWH.ID = CONO:ODQ.PROD<1,P>
         MATREAD INV.REC FROM INVENTORY, IWH.ID THEN
            IWH.ID = IWH.ID:"!":ODQ.WHSE<1,P>
            MATREAD CATG.REC FROM CATEGORY, CONO:INV.LINE ELSE
               MAT CATG.REC = ""
            END
            MATREAD IWH.REC FROM INV.WHSE, IWH.ID THEN
               ERR.FLG='';ERRMSG='';PERIOD='';OPEN.FLAG = 1
               CALL BUILD_IWH_FI(IWH.ID,MAT IWH.REC,PERIOD,ERR.FLG,ERRMSG,OPEN.FLAG)
               MATREAD FGS.REC FROM FNGD.STATS, IWH.ID ELSE
                  MAT FGS.REC = ""
               END
               PFND = 1   ; * C34499  assume it will be found
               LOCATE IWH.ID IN ORIG.PROD<1>,1 SETTING LINDX ELSE PFND = 0
               IF PFND = 0 OR ODQ.KIT<1,P> = 'M' THEN
                  *If it is a component of a kit, then add it to the end of the list
                  IF ODQ.KIT<1,P> = 'M' THEN
                     LINDX = DCOUNT(ORIG.PROD<1>,VM) + 1
                  END
                  ORIG.IWH.QTY  = INSERT(ORIG.IWH.QTY,1,LINDX,1,IWH.RESV)
                  ORIG.PROD     = INSERT(ORIG.PROD,1,LINDX,1,IWH.ID)
                  TEMP.STR      = CONVERT(VM,SVM,IWH.RSV.FI)
                  ORIG.IWH.RESV = INSERT(ORIG.IWH.RESV,1,LINDX,1,TEMP.STR)
                  TEMP.STR      = CONVERT(VM,SVM,FGS.A.QTY)
                  ORIG.ALOC.AVL = INSERT(ORIG.ALOC.AVL,1,LINDX,1,TEMP.STR)
               END
            END ELSE
               MAT INV.REC = ""
            END
         END
      NEXT P
   END
   NUM.ON.SCRN = ""
   K = 0
   NUM.PROD = DCOUNT(OSD.PROD,VM);LNFLG = 0
   FOR I = 1 TO NUM.PROD
    IF OSD.KIT<1,I>  # "M" THEN
      K = K + 1
      NUM.ON.SCRN<1,K> = I
    END
   NEXT I

   GOSUB 8888
RETURN

8888 *
MAT TEMP.MF = ""
INDX = NUM.ON.SCRN<1,LN>
IF INDX > 0 THEN
   TEMP.MF(01) = OSD.PROD<1,INDX>
   TEMP.MF(02) = OSD.WHSE<1,INDX>
   TEMP.MF(04) = OSD.O.QTY<1,INDX>
   TEMP.MF(06) = OSD.RECP.NO<1,INDX>
   TEMP.MF(09) = OSD.FI.QTY<1,INDX>
   TEMP.MF(10) = OSD.REL.NO<1,INDX>
   TEMP.MF(11) = OSD.R.QTY<1,INDX>
   TEMP.MF(12) = OSD.JOB.QTY<1,INDX>
   TEMP.MF(13) = OSD.JOB<1,INDX>
   TEMP.MF(14) = OSD.A.QTY<1,INDX>
   IF OSD.KIT<1,INDX> = "K" THEN
      TEMP.MF(15) = OSD.KIT.PRICE<1,INDX>
      TEMP.MF(03) = OSD.KIT.G.QTY<1,INDX>
   END ELSE
      TEMP.MF(15) = OSD.PRICE<1,INDX>
      TEMP.MF(03) = OSD.G.QTY<1,INDX>
   END
   TEMP.MF(16) = OSD.OLD.QTY<1,INDX>
   TEMP.MF(17) = OSD.REL.QTY<1,INDX>
   TEMP.MF(18) = OSD.KIT<1,INDX>
   TEMP.MF(19) = OSD.PROD.SEQ<1,INDX>
   TEMP.MF(20) = OSD.P.QTY<1,INDX>;* T20852
END
RETURN

7200 *

SUBGRID_ARRAY = ""
   FOR OPTION = 1 TO TOP.LINES
      SUB_GRID = ""
      FI.NO = DCOUNT(IWH.RSV.FI,VM)
      TLN = FI.NO - OPTION + 1
      AVL = IWH.RSV.FI<1,TLN> + ORIG.RSV.QTY<1,TLN> - RSV.QTY<1,TLN>
      IF AVL < 1 THEN 
         SUB_GRID = VM : VM
      END ELSE
        BLN = DCOUNT(REL.FLG<1,TLN>,SM)
        IF BLN = 0 OR REL.NO<1,TLN,BLN> # "" THEN
          BLN = BLN + 1
          REL.FLG<1,TLN,BLN> = "X"
          REL.QTY<1,TLN,BLN> = ""
          REL.QTY<1,TLN,BLN> = RSV.QTY<1,TLN> - SUM(REL.QTY<1,TLN>)
        END
        BLN = 1
        BOT.LINES = DCOUNT(REL.FLG<1,TLN>, SM)
        BOT.START.LINE = 0
        GOSUB 51900
      END
      SUBGRID_ARRAY := SUB_GRID : DELIM
   NEXT
   SUBGRID_ARRAY = SUBGRID_ARRAY[1,LEN(SUBGRID_ARRAY)-1]
RETURN

*---- Display scrolling lines
51900*
  CNT = 1
  FOR N = 1 TO BOT.LINES
    SUB_GRID<1,N,1> = REL.NO<1,TLN,N>
    SUB_GRID<1,N,2> = OCONV(REL.DATE<1,TLN,N>,"D2/")
    SUB_GRID<1,N,3> = OCONV(INT((REL.QTY<1,TLN,N>/ICR.DV1*ICR.MT1)/ICR.DV2+.5),ICR.CNV1)
    MAXV = ""
    MATREAD ORR.REC FROM ORDER.RELEASE,CONO:REL.NO<1,TLN,N> ELSE MAT ORR.REC = ""
    BEGIN CASE
       CASE ACTION = "S"
          MAXV = OCONV(INT(((REL.QTY<1,TLN,N>/ICR.DV1)*ICR.MT1)/ICR.DV2+.5),ICR.CNV)
       CASE DLN > 0
          MAXV = OCONV(INT(((ORR.QTY<1,DLN>/ICR.DV1)*ICR.MT1)/ICR.DV2+.5),ICR.CNV)
       CASE 1
          MAXV = RSV.QTY<1,TLN>
    END CASE

    SUB_GRID<1,N,4> = MAXV;*OCONV(INT((REL.QTY<1,TLN,N>/ICR.DV1*ICR.MT1)/ICR.DV2+.5),ICR.CNV1) ;* MAX QTY
    SUB_GRID<1,N,5> = 0	;* MIN QTY
    CNT = CNT + 1
  NEXT N
RETURN

91000*
   STATUS = RBO.setProperty("","ServerStatus",1)
   STATUS = RBO.setProperty("","ServerMessage",ERRMSG)
RETURN
