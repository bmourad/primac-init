SUBROUTINE ICSSRA_GET_NEWQTY
********************************************************************************
*   Program name :- ICSSRA_GET_NEWQTY
*   Created:- 9/1/2005
*------------------------------------------------------------------------------*
*

* In Properties:
* --------------
*  
*
* Out Properties:
* ---------------
*  
********************************************************************************
$INCLUDE WWINSERT RBO.H
$INCLUDE ICS.CPYLIB INVENTORY
$INCLUDE ICS.CPYLIB CATEGORY
$INCLUDE ICS.CPYLIB INV.CNV
$INCLUDE ICS.CPYLIB INV.WHSE.LOC
$INCLUDE ICS.CPYLIB INV.WHSE
$INCLUDE ICS.CPYLIB INV_RECP_WHSE
$INCLUDE ICS.CPYLIB INV_SERIAL
$INCLUDE CPYLIB CHAR

* Insert method code here
DEFFUN CALC_STK_QTY(COST.QTY,MAT INV.CNV.REC,LN,ROND)
DEFFUN CALC_COST_QTY(STK.QTY,MAT INV.CNV.REC,LN,ROND)
DEFFUN CALC_STK_QTY(COST.QTY,MAT INV.CNV.REC,LN,ROND)
DEFFUN CALC_DIAM(COST.QTY,STK.QTY,MAT INV.REC)

**********
*Initilization
**********
DIA.FLAG = 0
SAJ_TOT_QTY = ''
CONO = ""
PROD = ""
WHSE.NUM = ""
TEMP_INPUT = ''
ERRMSG = ""
TEMP.QTY = ''
DISP.QTY = ''
DEFAULT = ''
VALUE = ''
DISP.VALUE = ''

DIM SAVE.ADJ.REC(10)
EQU SAJ.TOT.QTY     TO SAVE.ADJ.REC(1);* receipt new qty
EQU SAJ.QTY         TO SAVE.ADJ.REC(2);* receipts serial new qty
EQU SAJ.DIAM        TO SAVE.ADJ.REC(3);* receipts serial new diam
EQU SAJ.STK.QTY     TO SAVE.ADJ.REC(4);* receipts serial stk qty
EQU SAJ.PERIOD      TO SAVE.ADJ.REC(5);* posting period

DIM WORK.REC(10) ; MAT WORK.REC=''
EQU WRK.SER         TO WORK.REC(1);* SERIAL NO
EQU WRK.SER.LOC     TO WORK.REC(2);* (LN,S)
EQU WRK.SER.QTY     TO WORK.REC(3);* original recvd qty on the serial
EQU WRK.SER.RSV.QTY TO WORK.REC(4);* reservable qty
EQU WRK.SER.DIAM    TO WORK.REC(5)
EQU WRK.SER.STK.QTY TO WORK.REC(6)
EQU WRK.SER.DEL.FLG TO WORK.REC(7) ;*T27692

MAT SAVE.ADJ.REC = ""
**************
*OPEN-FILES
**************
OPEN '','INV.WHSE.LOC' TO INV.WHSE.LOC ELSE ERRMSG = 'INV.WHSE.LOC FILE IS MISSING';GOTO 93000
OPEN '','CONTROL' TO CONTROL ELSE ERRMSG = 'CONTROL FILE IS MISSING';GOTO 93000
OPEN '','INV.WHSE' TO INV.WHSE ELSE ERRMSG='INV.WHSE FILE IS MISSING'; GOTO 93000
OPEN '','INV_RECP_WHSE' TO INV_RECP_WHSE ELSE ERRMSG='INV_RECP_WHSE FILE IS MISSING'; GOTO 93000

OPEN '','INVENTORY' TO INVENTORY ELSE ERRMSG='INVENTORY FILE IS MISSING'; GOTO 93000
OPEN '','CATEGORY' TO CATEGORY ELSE ERRMSG='CATEGORY FILE IS MISSING'; GOTO 93000
OPEN '','INV_SERIAL_DELETED' TO INV_SERIAL_DELETED ELSE ERRMSG = 'INV_SERIAL_DELETED FILE IS MISSING';GOTO 93000
OPEN '','INV_SERIAL' TO INV_SERIAL ELSE ERRMSG = 'INV_SERIAL FILE IS MISSING';GOTO 93000

**********
*Main Processing
**********

*STATUS = RBO.getProperty('', 'PMCProperty',PMCProperty)
*CONO = PMCProperty<1,4>
STATUS = RBO.getProperty('', 'PRODUCT_NUMBER',PROD)
STATUS = RBO.getProperty('', 'WAREHOUSE_NUMBER',WHSE.NUM)
STATUS = RBO.getProperty('', 'RECEIPT_NUMBER',RECP.NO)

*STATUS = RBO.getProperty('', 'TEMP_INPUT',TEMP_INPUT)
*STATUS = RBO.getProperty('','IWH_ORG_FI',IWH_ORG_FI)
*STATUS = RBO.getProperty('','IWH_RSV_FI',IWH_RSV_FI)

*STATUS = RBO.getProperty('','WRK_SER_LOC',WRK.SER.LOC)
*STATUS = RBO.getProperty('','WRK_SER_QTY',WRK.SER.QTY)
*STATUS = RBO.getProperty('','SERIAL_NO',WRK.SER)

STATUS = RBO.getProperty('','NEW_QTY',ENT_NEW_QTY)
SS = 0

CONO = '001'

MATREAD INV.REC FROM INVENTORY,CONO:PROD ELSE ERRMSG ="CANNOT READ INV.REC ON "CONO:PROD; GOTO 93000

$INCLUDE ICSBP INV.UM.CNV

*IWLO.ID=CONO:PROD:'!':WHSE.NUM:'!':WRK.SER.LOC
CATG.ID=CONO:INV.LINE
*ISTK.ID=CONO:IRW.SERIAL.NO0
IWH.ID=CONO:PROD:'!':WHSE.NUM
IRW.ID=CONO:RECP.NO:"!":WHSE.NUM

MATREAD IWH.REC FROM INV.WHSE,IWH.ID ELSE ERRMSG ="CANNOT READ INV.WHSE ON ":IWH.ID; GOTO 93000
MATREAD CATG.REC FROM CATEGORY,CATG.ID ELSE ERRMSG ="CANNOT READ CATEGORY ON ":CATG.ID; GOTO 93000
MATREAD IRW.REC FROM INV_RECP_WHSE,IRW.ID ELSE ERRMSG='INV_RECP_WHSE ':IRW.ID:' IS MISSING.';GOTO 93000

ISTK.FND=1
WRK.SER.DEL.FLG=0
DIA.FLAG=0
ERR=0
SCNT=DCOUNT(IRW.SERIAL.NO,VM)
KK = 1
SERIAL_NUM= FIELD(IRW.SERIAL.NO,VM,KK)
  MATREAD ISTK.REC FROM INV_SERIAL,CONO:SERIAL_NUM ELSE 
    ISTK.FND=0
    MATREAD ISTK.REC FROM INV_SERIAL_DELETED,CONO:SERIAL_NUM THEN
      ISTK.FND=1
      WRK.SER.DEL.FLG = 1
    END ELSE ISTK.FND=0
  END

  IF ISTK.FND THEN
*T27692 ^
    WRK.SER          =IRW.SERIAL.NO<1,KK>
    WRK.SER.LOC      =ISTK.LOC
    WRK.SER.QTY	=ISTK.ORG.QTY
    WRK.SER.RSV.QTY  =ISTK.RSVB.QTY
    WRK.SER.DIAM     =ISTK.CUR.DIAM
    WRK.SER.STK.QTY  =ISTK.CUR.STK.QTY
  END

IF NOT(WRK.SER.DEL.FLG) THEN
    GOSUB ENT.ADJUSTMENT
END ELSE
    ERRMSG = 'Cannot adjust a completely used serial'	
	GOTO 93000
END

RETURN
**************
ENT.ADJUSTMENT:
**************
  BEGIN CASE
      CASE INV.PAP.TYPE="ROLL" OR INV.PAP.TYPE="LROLL" OR INV.PAP.TYPE="PCOAT"
        DIA.FLAG=1
      CASE 1
  END CASE  
IWLO.ID = IWH.ID:"!":WRK.SER.LOC
MATREAD IWLO.REC FROM INV.WHSE.LOC,IWLO.ID THEN
	IF CATG.TRK.LVL='S' THEN
	*T27692 v
	    IF NOT(WRK.SER.DEL.FLG) THEN
	      LOCATE WRK.SER IN IWLO.SERIAL<1>,1 SETTING RLOC ELSE
	        ERRMSG="SERIAL ID ":WRK.SER:" IS MISSING FOR THIS LOCATION ":WRK.SER.LOC
	        GOTO 93000 ; ERR=1
	      END
	    END
	*T27692 ^
	END

 IF NOT(ERR) THEN
    EOA=0
    LOOP
      GOSUB ENT.ADJ.QTY
     IF NOT(ERR) THEN
        SAJ.TOT.QTY=""
*	WRK.SER.QTY = ""
*	SERIAL_NUM = ''

      FOR JJ = 1 TO SCNT
	SAJ.QTY= FIELD(ENT_NEW_QTY,VM,JJ)
	    IF SAJ.QTY= "" THEN
              SAJ.TOT.QTY+=WRK.SER.QTY<JJ>
           END ELSE
               SAJ.TOT.QTY+=SAJ.QTY
          END
      NEXT JJ
    STATUS = RBO.setProperty('', 'ServerStatus',SAJ.TOT.QTY:"~~~":SERIAL_NUM:"--":ICR.CNV:"~~":SCNT:"--":WRK.SER.QTY:"->":SAJ.QTY)

        
        IF (DIA.FLAG) THEN
          GOSUB GET.DIAM
        END
        IF SAJ.TOT.QTY="" THEN
       	 DISP.QTY=''
        END ELSE
	        DISP.QTY=CALC_STK_QTY(SAJ.TOT.QTY,MAT INV.CNV.REC,'','')
	        DISP.QTY=OCONV(DISP.QTY,ICR.CNV)
        END
        
     END
      IF NOT(ERR) THEN
          EOA=1
      END
    UNTIL (EOA) DO REPEAT
  END
 END ELSE
  ERRMSG="LOCATION RECORD IS MISSING FOR THIS PRODUCT"
  GOTO 93000
 END
*STATUS = RBO.setProperty('','TEMP',TEMP.QTY)

STATUS = RBO.setProperty('','DISP_NEW_QTY',DISP.VALUE)
STATUS = RBO.setProperty('','TEMPQTY',DISP.QTY)
STATUS = RBO.setProperty('','CURRENT_DIAMETER',DIAM)

RETURN

*************
ENT.ADJ.QTY: 
*************
      ENT_NEW_QTY=ICONV(ENT_NEW_QTY,ICR.CNV)
      ENT_NEW_QTY=CALC_COST_QTY(ENT_NEW_QTY,MAT INV.CNV.REC,'','')
      DISP.VALUE=CALC_STK_QTY(ENT_NEW_QTY,MAT INV.CNV.REC,'','')
      DISP.VALUE=OCONV(DISP.VALUE,ICR.CNV)

      IF ENT_NEW_QTY >= WRK.SER.QTY THEN
        SAJ.QTY = ENT_NEW_QTY
*        VAL.SELS<LN,SS>=SS
        EOI=1
      END ELSE
	
        ;* check receipt reserves
        IF SAJ.QTY = "" THEN
          TEMP.QTY = SAJ.TOT.QTY - WRK.SER.QTY
          TEMP.QTY += ENT_NEW_QTY - IWH.ORG.FI + IWH.RSV.FI
        END ELSE
          TEMP.QTY = SAJ.TOT.QTY - SAJ.QTY
          TEMP.QTY +=(ENT_NEW_QTY - IWH.ORG.FI + IWH.RSV.FI)
        END
*T27692 v
        
        IF (INV.UNIT<1,3>='MSI' AND ABS(TEMP.QTY) <= 50) OR ABS(TEMP.QTY) <= 9 THEN
          ENT_NEW_QTY -= TEMP.QTY
          TEMP.QTY = 0
        END
	
        IF TEMP.QTY < 0 THEN
*         DISP.QTY=IWH.RSV.FI<1,LN>
          DISP.QTY = IWH.ORG.FI - IWH.RSV.FI
          DISP.QTY=CALC_STK_QTY(DISP.QTY,MAT INV.CNV.REC,'','')
          DISP.QTY=OCONV(DISP.QTY,ICR.CNV)
*         ERRMSG="Cannot adjust qty below reserved qty (":DISP.QTY:")"
          ERRMSG="Cannot adjust below used + reserved qty (":DISP.QTY:")"
          GOTO 93000 
        END ELSE
          TOT.LOC.REC=0
          TOT.LOC=0
          TEMP.LOC=WRK.SER.LOC
          FOR I=1 TO SCNT
            BEGIN CASE
              CASE I=SS
                TOT.LOC=TOT.LOC + ENT_NEW_QTY
                TOT.LOC.REC+=WRK.SER.QTY<1,I>
              CASE TEMP.LOC=WRK.SER.LOC
                IF SAJ.QTY = "" THEN
                  TOT.LOC += WRK.SER.QTY<1,I>
                END ELSE
                  TOT.LOC += SAJ.QTY<1,I>
                END
                TOT.LOC.REC += WRK.SER.QTY
              CASE 1
            END CASE
          NEXT I
          BEGIN CASE
	  
            CASE TOT.LOC >= TOT.LOC.REC
            CASE TOT.LOC.REC-TOT.LOC <= IWLO.LOC.ON.HAND
            CASE 1
              ERRMSG='Location on-hand cannot be negative.'
              GOTO 93000 
          END CASE
          IF NOT(ERR) THEN
            ;*C40918 v
	   
*                    IF WRK.SER.RSV.QTY<LN,SS>-VALUE < 0 THEN
            SEQ.QTY=WRK.SER.RSV.QTY  
            SEQ.QTY=CALC_STK_QTY(SEQ.QTY,MAT INV.CNV.REC,'','')
            CHECK.QTY=ENT_NEW_QTY-SEQ.QTY
	   
            IF WRK.SER.RSV.QTY + CHECK.QTY LT 0 THEN
              ;*C40918 ^
              DISP.QTY=WRK.SER.RSV.QTY                               
              DISP.QTY=CALC_STK_QTY(DISP.QTY,MAT INV.CNV.REC,'','')
              DISP.QTY=OCONV(DISP.QTY,ICR.CNV)                        
              ERRMSG="Cannot adjust qty. below reserved qty (":DISP.QTY:")"
              GOTO 93000
            END ELSE
              SAJ.QTY = ENT_NEW_QTY
*              VAL.SELS<LN,SS>=SS
              EOI=1
            END
          END
        END
      END

RETURN
*************
GET.DIAM: 
************
EOI=0
LOOP
  COST.QTY=SAJ.QTY
  STK.QTY=SAJ.STK.QTY
  DIAM=""
  IF (DIA.FLAG) THEN
    DIAM=CALC_DIAM(COST.QTY,STK.QTY,MAT INV.REC)
  END
 IF DIAM # "" THEN
    EOI=1   
    DIAM=OCONV(DIAM,'MD2')
  END ELSE
    * GET THE INPUT FROM USER
    EOI = 1
  END
  
 
UNTIL (EOI) DO REPEAT
RETURN

93000*
    STATUS = RBO.setProperty('', 'ServerStatus',1)
    STATUS = RBO.setProperty('', 'ServerMessage',ERRMSG)
RETURN

