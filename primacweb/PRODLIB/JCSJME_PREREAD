SUBROUTINE JCSJME_PREREAD
********************************************************************************
*   Program name :- JCSJME_PREREAD
*   Created:- 7/22/2003
*------------------------------------------------------------------------------*
**   Program Written by Kauser Jahan


* In Properties:
* --------------
*  CONO
*
* Out Properties:
* ---------------
*  
********************************************************************************
$INCLUDE WWINSERT RBO.H
$INCLUDE JCS.CPYLIB JOB
$INCLUDE JCS.CPYLIB DAILY.MATL
$INCLUDE JCS.CPYLIB JOB.CUTOFF.NO
$INCLUDE JCS.CPYLIB JOB.STAT.CODE
$INCLUDE JCS.CPYLIB FACTOR
$INCLUDE PMC.CPYLIB COMPANY
$INCLUDE PMC.CPYLIB CUSTOMER
$INCLUDE ICS.CPYLIB CATEGORY
$INCLUDE ICS.CPYLIB INVENTORY
$INCLUDE ICS.CPYLIB INV.WHSE


  OPEN '','CONTROL' TO CONTROL ELSE ERRMSG='CONTROL FILE IS MISSING'; GOTO 93000
  OPEN '','JOB' TO JOB ELSE ERRMSG='JOB FILE IS MISSING'; GOTO 93000
  OPEN '','DAILY.MATL' TO DAILY.MATL ELSE ERRMSG='DAILY.MATL FILE IS MISSING'; GOTO 93000
  OPEN '','FACTOR' TO FACTOR ELSE ERRMSG='FACTOR FILE IS MISSING'; GOTO 93000
  OPEN "","CATEGORY" TO CATEGORY ELSE ERRMSG="CATEGORY FILE IS MISSING";GOTO 93000
  OPEN "","INVENTORY" TO INVENTORY ELSE ERRMSG="INVENTORY FILE IS MISSING";GOTO 93000
  OPEN "","INV.WHSE" TO INV.WHSE ELSE ERRMSG="INV.WHSE FILE IS MISSING";GOTO 93000

* Insert method code here
CONO = ''
MAT JOB.REC='' 
MAT FCTR.REC = ''

STATUS=RBO.getProperty('','PMCProperty',PMCProperty)
CONO   = PMCProperty<1,4>

********** CONTROL CONO:'DAILY.TIME' VALUES
READU MATL.ENT.SEQ FROM CONTROL,CONO:"DAILY.MATL" ELSE MATL.ENT.SEQ=10001

********** CONTROL CONO:'JOB.CUTOFF.NO' VALUES
  MATREAD JOB.CUTOFF.REC FROM CONTROL, CONO:'JOB.CUTOFF.NO' ELSE
    MAT JOB.CUTOFF.REC=''
    J.CUTOFF.NUM=0
  END

*********** JOB VALUES
CMD = "SSELECT JOB WITH CONO = '" : CONO : "' AND WITH STATUS <= 5"
UDTEXECUTE CMD

JOB_CODES = ""
JOB_DESCS = ""
JOB_CUST = ""
JOB_DIV = ""
JOB_STATUS = ""
JOB_TRACK_DATE = ""
JOB_TYPE = ""
JOB_RESV_AMT =""
JOB_RESV_QTY=""
JOB_RESV_MATL = ""
JOB_RESV_WHSE = ""

DATA =1
LOOP
  READNEXT ID THEN
	JOB_CODES<1,-1> = ID[4,99]
  END ELSE
	DATA = 0
  END

WHILE DATA DO
REPEAT

	JOB_COUNT=COUNT(JOB_CODES,@VM)
	
	FOR Y = 1 TO JOB_COUNT
		MATREAD JOB.REC FROM JOB,CONO:JOB_CODES<1,Y> THEN
			JOB_DESCS<1,Y> = JOB.DESC
			JOB_CUST<1,Y> = JOB.CUST
			JOB_DIV<1,Y>   = JOB.DIV
			JOB_STATUS<1,Y> = JOB.STATUS
			JOB_TYPE<1,Y> = JOB.TYPE
			JOB_TRACK_DATE<1,Y> = OCONV(JOB.TRACK.DATE<1,1>,"D2/")	
			
			SWAP @VM WITH "~" IN JOB.RESV.MATL	
			JOB_RESV_MATL	<1,Y> = JOB.RESV.MATL<1,1>

			SWAP @VM WITH "~" IN JOB.RESV.WHSE
			JOB_RESV_WHSE	<1,Y> = JOB.RESV.WHSE<1,1>
			
			SWAP @VM WITH "~" IN JOB.RESV.AMT
			JOB_RESV_AMT<1,Y> = JOB.RESV.AMT<1,1>
			
			SWAP @VM WITH "~" IN JOB.RESV.QTY
			JOB_RESV_QTY<1,Y> = JOB.RESV.QTY<1,1>
			
		END
	NEXT Y	

********** FACTOR CODE VALUES
FACTOR_LIST = ""

CMD = "SSELECT FACTOR WITH CONO = '" : CONO : "'"
UDTEXECUTE CMD

DATA = 1
LOOP
	READNEXT ID THEN
		FACTOR_LIST<1,-1> = ID[4,99]
	END ELSE
		DATA = 0
	END
WHILE DATA DO
REPEAT

************* CATEGORY VALUES
CATEGORY_LIST = ""
CATG_TRACK_QOH = ""
CATG_MAJ_LINE = ""
CATG_TRK_LVL = ""
CATG_RSV_SERIAL = ""
CATG_COST_TYPE = ""


CMD = "SSELECT CATEGORY WITH CONO = '" : CONO : "'"
UDTEXECUTE CMD

DATA = 1
LOOP
	READNEXT ID THEN
		CATEGORY_LIST<1,-1> = ID[4,99]
	END ELSE
		DATA = 0
	END
WHILE DATA DO
	CATG.COUNT = DCOUNT(CATEGORY_LIST,@VM)
	FOR K = 1 TO CATG.COUNT
		MATREAD CATG.REC FROM CATEGORY,CONO:CATEGORY_LIST<1,K> THEN
			CATG_MAJ_LINE<1,K> = CATG.MAJ.LINE
			CATG_TRACK_QOH<1,K> = CATG.TRACK.QOH
			CATG_TRK_LVL<1,K> = CATG.TRK.LVL
			CATG_RSV_SERIAL<1,K> = CATG.RSV.SERIAL
			CATG_COST_TYPE<1,K> = CATG.COST.TYPE
		END
	NEXT K
REPEAT

************* INVENTORY VALUES
INV_LIST = ""
INV_FULL_DESC = ""
INV_UNIT = ""
INV_LINE = ""
INV_CUST = ""
INV_PAP_TYPE = ""
INV_WHSE_CODE = ""
INV_MLINE = ""
INV_COST_WT = ""

CMD = "SSELECT INVENTORY WITH CONO = '" : CONO : "' AND WITH INV_M_LINE # 'FNGD'"
UDTEXECUTE CMD

DATA = 1
LOOP
	READNEXT ID THEN
		INV_LIST<1,-1> = ID[4,99]
	END ELSE
		DATA = 0
	END
WHILE DATA DO
	INV.COUNT = DCOUNT(INV_LIST,@VM)
	FOR K = 1 TO INV.COUNT
		MATREAD INV.REC FROM INVENTORY,CONO:INV_LIST<1,K> THEN
			INV_FULL_DESC<1,K> = INV.FULL.DESC	
			SWAP @VM WITH "*" IN INV.UNIT
			INV_UNIT<1,K> = INV.UNIT
			INV_LINE<1,K> = INV.LINE
			INV_MLINE<1,K> =INV.M.LINE
			INV_CUST<1,K> = INV.CUST	
			INV_PAP_TYPE<1,K> = INV.PAP.TYPE
			SWAP @VM WITH "*" IN INV.WHSE.CODE
			INV_WHSE_CODE<1,K> = INV.WHSE.CODE
			INV_COST_WT<1,K> = INV.COST.WT
		END
	NEXT K
REPEAT

************* INV.WHSE VALUES
IWH_LIST = ""
IWH_LOC = ""
IWH_ON_HAND = ""
IWH_RESV = ""
IWH_STD_COST = ""
IWH_AVG_COST = ""
IWH_LIST_COST = ""
IWH_QTY = ""
IWH_COST_FI = ""
FIFOCOST = ""
MAT IWH.REC = ""

CMD = "SSELECT INV.WHSE WITH CONO = '" : CONO : "' AND WITH M_LINE # 'FNGD'"
UDTEXECUTE CMD

DATA = 1
LOOP
	READNEXT ID THEN
		IWH_LIST<1,-1> = ID[4,99]
	END ELSE
		DATA = 0
	END
WHILE DATA DO
	IWH.COUNT = DCOUNT(IWH_LIST,@VM)
	FOR K = 1 TO IWH.COUNT
		MATREAD IWH.REC FROM INV.WHSE,CONO:IWH_LIST<1,K> THEN
			SWAP @VM WITH "*" IN IWH.LOC
			IWH_LOC<1,K> = IWH.LOC	
			IWH_ON_HAND<1,K> = IWH.REC(7)

			IWH_RESV<1,K> = IWH.RESV	
			IWH_STD_COST<1,K> = IWH.STD.COST	
			IWH_AVG_COST<1,K> = IWH.AVG.COST	
			IWH_LIST_COST<1,K> = IWH.LIST.COST
			SWAP @VM WITH "*" IN IWH.QTY.FI
			IWH_QTY<1,K> = IWH.QTY.FI
			SWAP @VM WITH "*" IN IWH.COST.FI
			IWH_COST_FI<1,K> = IWH.COST.FI
			IWH_RECP_PERIOD<1,K> = IWH.RECP.PERIOD
*			FIFOCOST<1,K> = FIFO.COST
		END
	NEXT K
REPEAT

**********DAILY.MATL VALUES
DAILY_LIST = ""

CMD = "SSELECT DAILY.MATL WITH CONO='" : CONO : "'"
UDTEXECUTE CMD

DATA = 1
LOOP
	READNEXT ID THEN
		DAILY_LIST<1,-1> = ID[4,99]
	END ELSE
		DATA = 0
	END
WHILE DATA DO
REPEAT

 
STATUS = RBO.setProperty('','MAX_SEQ',MATL.ENT.SEQ)
STATUS = RBO.setProperty('','J_CUTOFF_NUM',J.CUTOFF.NUM)
STATUS = RBO.setProperty('','J_CUTOFF_PREFIX',J.CUTOFF.PREFIX)
STATUS = RBO.setProperty('','J_CUTOFF_PRE_NO',J.CUTOFF.PRE.NO)
STATUS = RBO.setProperty('','JOB_CODES',JOB_CODES)
STATUS = RBO.setProperty('','JOB_DESCS',JOB_DESCS)
STATUS = RBO.setProperty('','JOB_CUST',JOB_CUST)
STATUS = RBO.setProperty('','JOB_DIV',JOB_DIV)
STATUS = RBO.setProperty('','JOB_STATUS',JOB_STATUS)
STATUS = RBO.setProperty('','JOB_TYPE',JOB_TYPE)
STATUS = RBO.setProperty('','JOB_TRACK_DATE',JOB_TRACK_DATE)
STATUS = RBO.setProperty('','JOB_RESV_WHSE',JOB_RESV_WHSE)
STATUS = RBO.setProperty('','JOB_RESV_MATL',JOB_RESV_MATL)
STATUS = RBO.setProperty('','JOB_RESV_QTY',JOB_RESV_QTY)
STATUS = RBO.setProperty('','JOB_RESV_AMT',JOB_RESV_AMT)
STATUS = RBO.setProperty('','FACTOR_LIST',FACTOR_LIST)
STATUS = RBO.setProperty('','DAILY_LIST',DAILY_LIST)

STATUS = RBO.setProperty('','CATEGORY_LIST',CATEGORY_LIST)
STATUS = RBO.setProperty('','CATG_TRACK_QOH',CATG_TRACK_QOH)
STATUS = RBO.setProperty('','CATG_MAJ_LINE',CATG_MAJ_LINE)
STATUS = RBO.setProperty('','CATG_TRK_LVL',CATG_TRK_LVL)
STATUS = RBO.setProperty('','CATG_RSV_SERIAL',CATG_RSV_SERIAL)
STATUS = RBO.setProperty('','CATG_COST_TYPE',CATG_COST_TYPE)

STATUS = RBO.setProperty('','INV_LIST',INV_LIST)
STATUS = RBO.setProperty('','INV_FULL_DESC',INV_FULL_DESC)
STATUS = RBO.setProperty('','INV_UNIT',INV_UNIT)
STATUS = RBO.setProperty('','INV_MLINE',INV_MLINE)
STATUS = RBO.setProperty('','INV_LINE',INV_LINE)
STATUS = RBO.setProperty('','INV_CUST',INV_CUST)
STATUS = RBO.setProperty('','INV_PAP_TYPE',INV_PAP_TYPE)
STATUS = RBO.setProperty('','INV_WHSE_CODE',INV_WHSE_CODE)
STATUS = RBO.setProperty('','INV_COST_WT',INV_COST_WT)

STATUS = RBO.setProperty('','IWH_LIST',IWH_LIST)
STATUS = RBO.setProperty('','IWH_LOC',IWH_LOC)
STATUS = RBO.setProperty('','IWH_ON_HAND',IWH_ON_HAND)
STATUS = RBO.setProperty('','IWH_RESV',IWH_RESV)
STATUS = RBO.setProperty('','IWH_STD_COST',IWH_STD_COST)
STATUS = RBO.setProperty('','IWH_AVG_COST',IWH_AVG_COST)
STATUS = RBO.setProperty('','IWH_LIST_COST',IWH_LIST_COST)
STATUS = RBO.setProperty('','IWH_QTY',IWH_QTY)
STATUS = RBO.setProperty('','IWH_COST_FI',IWH_COST_FI)
STATUS = RBO.setProperty('','IWH_RECP_PERIOD',IWH_RECP_PERIOD)

* End of method code
RETURN

93000*
STATUS = RBO.setProperty('','ServerStatus',1)
STATUS = RBO.setProperty('','ServerMessage',ERRMSG)
RETURN

