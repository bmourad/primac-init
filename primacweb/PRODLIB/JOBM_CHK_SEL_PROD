SUBROUTINE JOBM_CHK_SEL_PROD
********************************************************************************
*   Program name :- JOBM_CHK_SEL_PROD
*------------------------------------------------------------------------------*
*
*  
* In Properties:
* --------------
*  
IN_PARAM=''
*
* Out Properties:
* ---------------
*  
OUT_PARAM=''
********************************************************************************
$INCLUDE WWINSERT RBO.H
$INCLUDE ICS.CPYLIB INVENTORY
$INCLUDE ICS.CPYLIB INV.WHSE
$INCLUDE ICS.CPYLIB INV.CNV
$INCLUDE PMC.CPYLIB CUSTOMER
$INCLUDE ICS.CPYLIB CATEGORY
$INCLUDE ICS.CPYLIB FNGD.STATS
$INCLUDE CPYLIB CHAR
$INCLUDE OPS.CPYLIB JOB.FNGD.STATS ;* THIS IS REQUIRED FOR FNGD
$INCLUDE JCS.CPYLIB JOB

DEFFUN CalcStkQty(COST.QTY,MAT INV.CNV.REC,ROND,LN)
;* open files

ERRMSG=''
IF FILEINFO(INVENTORY,0)=0 THEN
  OPEN '','INVENTORY' TO INVENTORY ELSE
    ERRMSG = 'INVENTORY FILE IS MISSING'
    GOTO 93000
   END
END
IF FILEINFO(FNGD.STATS,0)=0 THEN
  OPEN '','FNGD.STATS' TO FNGD.STATS ELSE
    ERRMSG = 'FNGD.STATS FILE IS MISSING'
    GOTO 93000
   END
END

IF FILEINFO(INV.WHSE,0)=0 THEN
  OPEN '','INV.WHSE' TO INV.WHSE ELSE
    ERRMSG = 'INV.WHSE FILE IS MISSING'
    GOTO 93000
   END
END

IF FILEINFO(CUSTOMER,0)=0 THEN
  OPEN '','CUSTOMER' TO CUSTOMER ELSE
    ERRMSG = 'CUSTOMER FILE IS MISSING'
    GOTO 93000
   END
END

IF FILEINFO(CATEGORY,0)=0 THEN
  OPEN '','CATEGORY' TO CATEGORY ELSE
    ERRMSG = 'CATEGORY FILE IS MISSING'
    GOTO 93000
   END
END
IF FILEINFO(JOB,0)=0 THEN
  OPEN '','JOB' TO JOB ELSE
    ERRMSG = 'JOB FILE IS MISSING'
    GOTO 93000
  END
END

IF ERRMSG#'' THEN GOTO 93000

;* initialize

;* get ID

STATUS=RBO.getProperty('','ID',ID)

MATREAD JOB.REC FROM JOB,ID ELSE
  MAT JOB.REC = ''
END

STATUS=RBO.getProperty('','JOB_RESV_MATL',JOB.RESV.MATL)
STATUS=RBO.getProperty('','FLG',FLG); *TO CHECK ENTERED PROD.ID IS AGAINST RS OR RD OR FGD
STATUS=RBO.getProperty('','MAST_SUB_FLAG',MAST.SUB.FLAG)
STATUS=RBO.getProperty('','CO_POS',LNO) ;* REQUIRED FOR FNGD
STATUS=RBO.getProperty('','SAVE_INV_JS_REC',SAVE.INV.JS.REC)
SAVE.INV.JS.REC = RAISE(SAVE.INV.JS.REC)
IF JOB.RESV.MATL = 0 THEN JOB.RESV.MATL = ""

CONO=ID[1,3]
JOB_NO=ID[4,8]

;* get database values

IF MAST.SUB.FLAG THEN
	ITYPE='RS'
  	CALL MasterSummarySub(CONO,JOB_NO,SAVE.INV.JS.REC,MAT JOB.REC,ITYPE)

*T28046
   STATUS = RBO.getProperty('','ERRMSG',ERRMSG) 
   IF ERRMSG # "" THEN GOTO 93000
*T28046


END

UMS=''; MATL.TYPE=''
ALLOCATED=''; RESERVED=''; USED=''
RSV.SERIAL=''

MATREAD INV.REC FROM INVENTORY,CONO:JOB.RESV.MATL ELSE
	IF FLG # "FGD" THEN	
		ERRMSG = 'CANNOT LOCATE INVENTORY (' : JOB.RESV.MATL : ')'
	END ELSE
		ERRMSG = "Cannot locate finished goods # ":JOB.RESV.MATL
	END
      	GOTO 93000
END

IF FLG # "FGD" THEN
	IF INV.CUST # "" AND INV.CUST # 0 THEN
		IF "X":INV.CUST # "X":JOB.CUST THEN
       		ERRMSG = "THIS INVENTORY BELONGS TO CUSTOMER ":INV.CUST
		       GOTO 93000
	      END
	END
END

WCNT = DCOUNT(INV.WHSE.CODE,VM)
IF WCNT < 1 THEN
	IF FLG = "FGD" THEN
		ERRMSG = "Cannot locate any warehouses for finished goods # ":JOB.RESV.MATL
	END ELSE
		ERRMSG = 'INVENTORY (':JOB.RESV.MATL:') HAS NO WAREHOUSES'
	END
    	GOTO 93000
END

IF ((FLG = "RS") OR (FLG = "FGD")) THEN
	IF INV.M.LINE = "FNGD" THEN
		IF FLG = "RS" THEN
  			ERRMSG = 'CANNOT RESERVE A FINISHED GOODS PRODUCT'
		      	GOTO 93000
		END
	END ELSE 
		IF FLG = "FGD" THEN
			ERRMSG = 'MUST BE A FINISHED GOODS PRODUCT'
		      	GOTO 93000
		END
	END
END

MATREAD CATG.REC FROM CATEGORY,CONO:INV.LINE THEN
	IF CATG.RSV.SERIAL = 'Y' THEN
       	RSV.SERIAL = 'Y'
      	END ELSE
		RSV.SERIAL = 'N'
	END
END ELSE
	IF FLG = "RD" THEN
		ERRMSG = 'CANNOT LOCATE CATEGORY (':INV.LINE:')'
		GOTO 93000
	END	
END

IF FLG # "FGD" THEN
	IF CATG.TRACK.QOH # "Y" THEN
		ERRMSG = 'CANNOT UPDATE QUANTITY FOR THIS PRODUCT'
	      	GOTO 93000
	END
END


$INCLUDE ICSBP INV.UM.CNV


  ROND=''; LN=''
  UMS = INV.UNIT<1,2>
  MATL.TYPE = INV.PAP.TYPE
  *IF MATL.TYPE = 'REGULAR' THEN MATL.TYPE = 'REGULR'
  ALLOCATED = OCONV(INT(((JOB.ALOC.QTY<1,LNO>/ICR.DV1)*ICR.MT1)/ICR.DV2+.5),ICR.CNV)
  *ALLOCATED = CalcStkQty(JOB.ALOC.QTY<1,LNO>,MAT INV.CNV.REC,ROND,LN)
*  ALLOCATED = OCONV(ALLOCATED,ICR.CNV1)
  RESERVED = OCONV(INT(((JOB.RESV.QTY<1,LNO>/ICR.DV1)*ICR.MT1)/ICR.DV2+.5),ICR.CNV)

*  RESERVED = CalcStkQty(JOB.RESV.QTY<1,LNO>,MAT INV.CNV.REC,ROND,LN)
*  RESERVED = OCONV(RESERVED,ICR.CNV1)
  USED = OCONV(INT(((JOB.USED.QTY<1,LNO>/ICR.DV1)*ICR.MT1)/ICR.DV2+.5),ICR.CNV)

*  USED = CalcStkQty(JOB.USED.QTY<1,LNO>,MAT INV.CNV.REC,ROND,LN)
*  USED = OCONV(USED,ICR.CNV1)
  
IF RSV.SERIAL # 'Y' THEN RSV.SERIAL = 'N'

WHSE.CNT = DCOUNT(INV.WHSE.CODE,VM)
*IF WHSE.CNT = 1 THEN
     VALUE = INV.WHSE.CODE<1,1>
*END ELSE
	*VALUE = ""
      	*FOR I = 2 TO WHSE.CNT
       *	VALUE = VALUE : VM : INV.WHSE.CODE<1,I>
      	*NEXT I
*END

IF FLG = "FGD" THEN
	OPEN "","JOB.FNGD.STATS" TO JOB.FNGD.STATS ELSE ;* REQUIRED FOR FNGD
		ERRMSG = "UNABLE TO OPEN FILE!"
		GOTO 99999
	END
	MATREAD JFS.REC FROM JOB.FNGD.STATS, ID ELSE MAT JFS.REC = ""
	JFS.M.QTY<1,LNO> = OCONV(INT(((JFS.M.QTY<1,LNO>/ICR.DV1)*ICR.MT1)/ICR.DV2+.5),ICR.CNV)
	JFS.A.QTY<1,LNO> = OCONV(INT(((JFS.A.QTY<1,LNO>/ICR.DV1)*ICR.MT1)/ICR.DV2+.5),ICR.CNV)
	JFS.F.QTY<1,LNO> = OCONV(INT(((JFS.F.QTY<1,LNO>/ICR.DV1)*ICR.MT1)/ICR.DV2+.5),ICR.CNV)
	JFS.S.QTY<1,LNO> = OCONV(INT(((JFS.S.QTY<1,LNO>/ICR.DV1)*ICR.MT1)/ICR.DV2+.5),ICR.CNV)
	MINV = JFS.A.QTY<1,LNO> + JFS.F.QTY<1,LNO> + JFS.S.QTY<1,LNO>
	IF MINV > JFS.M.QTY<1,LNO> THEN
		MINV = JFS.M.QTY<1,LNO>
	END
	MINV = INT(((MINV / ICR.DV1) * ICR.MT1) / ICR.DV2 + .5)
	STATUS = RBO.setProperty('','JFS_UMS',MINV)
END
MATREAD CUST.REC FROM CUSTOMER,CONO:INV.CUST THEN
END
MATREAD IWH.REC FROM INV.WHSE,CONO:JOB.RESV.MATL:"!":VALUE THEN 
END
MATREAD FGS.REC FROM FNGD.STATS,CONO:JOB.RESV.MATL:"!":VALUE THEN 
END

DEFAULT=""
 MATREAD CATG.REC FROM CATEGORY, CONO:INV.LINE ELSE
      MAT CATG.REC = ""
   END
   BEGIN CASE
      CASE CATG.FNGD.TYPE = "ES"
         DEFAULT = IWH.EST.SALE
      CASE CATG.FNGD.TYPE = "SP"
         BEGIN CASE
            CASE NOT(NUM(CUST.PRICE.CODE))
               DEFAULT = IWH.SELL<1,1>
            CASE CUST.PRICE.CODE > 0 AND CUST.PRICE.CODE < 5
               DEFAULT = IWH.SELL<1,CUST.PRICE.CODE>
            CASE 1
               DEFAULT = IWH.SELL<1,1>
         END CASE
      CASE CATG.FNGD.TYPE = "SD"
         DEFAULT = IWH.STD.COST
      CASE CATG.FNGD.TYPE = "AV"
         DEFAULT = IWH.AVG.COST
      CASE CATG.FNGD.TYPE = "LP"
         DIV.POS='';FISCAL.FLAG='JC';TRAN.PERIOD=''
         ERR.FLG='';ERRMSG=''
         CALL GET.LAST.COST(IWH.ID,MAT IWH.REC,WAREHOUSE,CONTROL,ERR.FLG,ERRMSG,DIV.POS,FISCAL.FLAG,TRAN.PERIOD,LAST.PRICE)
         IF ERR.FLG='' THEN
            DEFAULT=LAST.PRICE
         END ELSE
            DEFAULT=''
         END
      CASE 1
         DEFAULT = 0
   END CASE

STATUS=RBO.setProperty('','Ums',UMS)
STATUS=RBO.setProperty('','MATL_TYPE',MATL.TYPE)
STATUS=RBO.setProperty('','JOB_ALOC_QTY',0.00)
STATUS=RBO.setProperty('','JOB_RESV_QTY',0.00)
STATUS=RBO.setProperty('','JOB_USED_QTY',0.00)
STATUS=RBO.setProperty('','RSV_SERIAL',RSV.SERIAL)
STATUS=RBO.setProperty('','JOB_RESV_WHSE',VALUE)
STATUS=RBO.setProperty('','INV_CNV',ICR.CNV1) ;* MD0/MD0,
STATUS=RBO.setProperty('','ICR_TYPE',ICR.TYPE)
STATUS=RBO.setProperty('','ICR_SCAL',ICR.SCAL)
STATUS=RBO.setProperty('','CNV_FORMAT',RSV.SERIAL)
STATUS=RBO.setProperty('','InventoryCodes',INV.FULL.DESC)
STATUS=RBO.setProperty('','INVBASEPROD',INV.BASE.SKU)
STATUS=RBO.setProperty('','SAVE_INV_JS_REC',LOWER(SAVE.INV.JS.REC))
STATUS=RBO.setProperty('','JFS_U_PRICE',OCONV(DEFAULT,"MD4"))
STATUS=RBO.setProperty('','FGS_ORDER',FGS.ORDER)
STATUS=RBO.setProperty('','FGS_B_QTY',FGS.B.QTY)
GOTO 99999

93000 
STATUS = RBO.setProperty('','ServerStatus','1')        
STATUS = RBO.setProperty('','ServerMessage',ERRMSG)  

99999
RETURN

