  SUBROUTINE SERTRINQ_H_READ
*********************************************************************
*
* REVISION - [12.0]
*
* PROGRAM  - SERTRINQ_H_READ
*
* AUTHOR   - ALEJANDRO DELGADO
*
* DATE     - 09/30/2002
*
* DESCRIPTION
*
* This program builds the data from INVENTORY file to load into 
* Serial Transaction History Inquiry Screen.
*
*********************************************************************
*
*---- FILE COPY STATEMENTS
*
  $INCLUDE WWINSERT RBO.H
  $INCLUDE ICS.CPYLIB INVENTORY
  $INCLUDE ICS.CPYLIB INV.CNV
  $INCLUDE ICS.CPYLIB INV_AUDIT_HIST
  $INCLUDE ICS.CPYLIB INV_SERIAL
  $INCLUDE ICS.CPYLIB CATEGORY
  $INCLUDE CPYLIB>FILE.VARS
  $INCLUDE CPYLIB CHAR
*
*---- INITIALIZATION
*
  ERRMSG = RBO.getProperty('','ID',SERIAL.NUM)
  CONO = SERIAL.NUM[1,3]
  SERIAL.NUM = SERIAL.NUM[4,99]
  *
  ERRMSG = "" ; IN_PARAM = "" ; OUT_PARAM = ""
  IN_PARAM<1,1> = 'INVENTORY'
  IN_PARAM<1,2> = 'INV_AUDIT_HIST'
  IN_PARAM<1,3> = 'INV_SERIAL'
  IN_PARAM<1,4> = 'CATEGORY'
  CALL GetInvOpenFiles(ERRMSG,IN_PARAM,OUT_PARAM,MAT FILE.VARS)
  IF ERRMSG # "" THEN GOTO SET.ERROR
*
*---- PROCESSING
*
  SYSLIST = ''
  MATREAD ISTK.REC FROM INV_SERIAL, CONO:SERIAL.NUM ELSE
    ERRMSG = SERIAL.NUM:" is not a valid serial tracking ID."
    GOTO SET.ERROR
  END
  MATREAD INV.REC FROM INVENTORY, CONO:ISTK.PROD ELSE MAT INV.REC=""
  MATREAD CATG.REC FROM CATEGORY, CONO:INV.LINE ELSE MAT CATG.REC=""
  ERRMSG = "" ; IN_PARAM = "" ; OUT_PARAM = "" ; MAT INV.CNV.REC = ""
  CALL GetInvUMCnv(ERRMSG,IN_PARAM,OUT_PARAM,MAT INV.CNV.REC,MAT INV.REC)
  *
  SEL.WHSE = '';  SEL.LOC = ''
  SEL.MILL = ''
  SEL.QTY = '';    SEL.AMOUNT = ''
  SEL.DATE = '';  SEL.PERIOD = ''
  SEL.RECNO = ''; SEL.OPER.ID = ''
  SEL.DIV = '';   SEL.SOURCE = ''
  COST.UOM = ''; STOCK.UOM = ''
*
*ADDED NEW
  COST.UOM = INV.UNIT<1,3>
  STOCK.UOM = INV.UNIT<1,2>
*END

  SEQ.ARR = ISTK.AUDIT.NO            
  ID.CNT = DCOUNT(SEQ.ARR,VM)        
  IF ID.CNT >=1 THEN
    FOR I = 1 TO ID.CNT                
      SEQ.ARR<1,I> = CONO:SEQ.ARR<1,I>
    NEXT I                             
    CONVERT VM TO AM IN SEQ.ARR        
    FORMLIST SEQ.ARR TO 0
    CMD = 'SSELECT INV_AUDIT_HIST BY INAH_DATE BY @ID BY DIV BY INAH_WHSE BY INAH_LOC'
    PERFORM CMD RTNLIST SYSLIST CAPTURING RESPONSE
*
    RESPONSE="" ; LN.CNT=0
    DONE = 0
    LOOP
      READNEXT SEL.ID FROM SYSLIST ELSE DONE = 1
    UNTIL (DONE) DO
      MATREAD INAH.REC FROM INV_AUDIT_HIST, SEL.ID THEN
        LN.CNT += 1
        SEL.SOURCE<1,LN.CNT> = INAH.SRC
        SEL.DATE<1,LN.CNT> = OCONV(INAH.DATE,'D2/')
        SEL.RECNO<1,LN.CNT> = INAH.TRAN
        SEL.DIV<1,LN.CNT> = INAH.DV.DP.CC[1,2]
        SEL.WHSE<1,LN.CNT> = INAH.WHSE
        SEL.LOC<1,LN.CNT> = INAH.LOC
        SEL.QTY<1,LN.CNT> = INAH.QTY
        SEL.AMOUNT<1,LN.CNT> = OCONV(INAH.EXT.COST,'MD2')
        SEL.PERIOD<1,LN.CNT> = INAH.PERIOD
        SEL.OPER.ID<1,LN.CNT> = INAH.OPER.ID
        IF CATG.TRK.LVL='S' THEN
          MATREAD ISTK.REC FROM INV_SERIAL, CONO:INAH.SERIAL ELSE MAT ISTK.REC = ""
          SEL.MILL<1,LN.CNT> = ISTK.MILL.ID
        END
        ROND = 0.5
        IF SEL.QTY<1,LN.CNT> < 0 THEN ROND = -0.5 ELSE ROND = .5
        SEL.QTY<1,LN.CNT> = OCONV(INT(((SEL.QTY<1,LN.CNT>/ICR.DV1)*ICR.MT1)/ICR.DV2+ROND),ICR.CNV)
      END ELSE
        MAT INAH.REC = ""
      END
    REPEAT
  END
*
*---- BUILD RBO RECORD
*
  STATUS = RBO.setProperty('','SOURCE',SEL.SOURCE)
  STATUS = RBO.setProperty('','DATE',SEL.DATE)
  STATUS = RBO.setProperty('','RECORD',SEL.RECNO)
  STATUS = RBO.setProperty('','DIV',SEL.DIV)
  STATUS = RBO.setProperty('','WHSE',SEL.WHSE)
  STATUS = RBO.setProperty('','LOC',SEL.LOC)
  STATUS = RBO.setProperty('','QTY',SEL.QTY)
  STATUS = RBO.setProperty('','AMOUNT',SEL.AMOUNT)
  STATUS = RBO.setProperty('','PERIOD',SEL.PERIOD)
  STATUS = RBO.setProperty('','OPERATOR_ID',SEL.OPER.ID)
  STATUS = RBO.setProperty('','MILL_ROLL_ID',SEL.MILL)
  STATUS = RBO.setProperty('','STOCK_UOM',STOCK.UOM)
  RETURN
*
SET.ERROR: 
*
  STATUS = RBO.setProperty('','ServerStatus',1)
  STATUS = RBO.setProperty('','ServerMessage',ERRMSG)
  RETURN
END

