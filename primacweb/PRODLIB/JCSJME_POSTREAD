SUBROUTINE JCSJME_POSTREAD
********************************************************************************
*   Program name :- JCSJME_POSTREAD
*   Created:- 8/1/2005
*   By :- S.Suhail Hussain
********************************************************************************
$INCLUDE WWINSERT RBO.H

$INCLUDE PMC.CPYLIB COMPANY
$INCLUDE PMC.CPYLIB CUSTOMER
$INCLUDE PMC.CPYLIB DIVISION
$INCLUDE PMC.CPYLIB DEPARTMENT
$INCLUDE PMC.CPYLIB COST.CNTR
$INCLUDE JCS.CPYLIB JOB.CUTOFF.NO
$INCLUDE JCS.CPYLIB JOB
$INCLUDE JCS.CPYLIB DAILY.MATL
$INCLUDE ICS.CPYLIB INVENTORY
$INCLUDE ICS.CPYLIB CATEGORY
$INCLUDE ICS.CPYLIB INV.WHSE
$INCLUDE ICS.CPYLIB INV.WHSE.LOC
$INCLUDE ICS.CPYLIB INV.CNV
$INCLUDE JCS.CPYLIB JOB.STAT.CODE
$INCLUDE ICS.CPYLIB WAREHOUSE
$INCLUDE ICS.CPYLIB INV_SERIAL

DEFFUN CALC_STK_QTY(COST.QTY,MAT INV.CNV.REC,ROND,LN)

RET.VALUE = ''
*** OPEN FILES
OPEN "","JOB" TO JOB ELSE ERRMSG="JOB FILE IS MISSING";GOTO 91000
OPEN "","JOB.MATL" TO JOB.MATL ELSE ERRMSG="JOB.MATL FILE IS MISSING";GOTO 91000
OPEN "","COMPANY" TO COMPANY ELSE ERRMSG="FILE COMPANY IS MISSING";GOTO 91000
OPEN "","CUSTOMER" TO CUSTOMER ELSE ERRMSG="FILE CUSTOMER IS MISSING";GOTO 91000
OPEN "","DIVISION" TO DIVISION ELSE ERRMSG="FILE DIVISION IS MISSING";GOTO 91000
OPEN "","DAILY.MATL" TO DAILY.MATL ELSE ERRMSG="FILE DAILY.MATLX IS MISSING";GOTO 91000
OPEN "","CATEGORY" TO CATEGORY ELSE ERRMSG="CATEGORY FILE IS MISSING";GOTO 91000
OPEN "","INVENTORY" TO INVENTORY ELSE ERRMSG="INVENTORY FILE IS MISSING";GOTO 91000
OPEN "","INV.WHSE" TO INV.WHSE ELSE ERRMSG="INV.WHSE FILE IS MISSING";GOTO 91000
OPEN "","INV.WHSE.LOC" TO INV.WHSE.LOC ELSE ERRMSG="INV.WHSE.LOC FILE IS MISSING";GOTO 91000
OPEN "","DEPARTMENT" TO DEPARTMENT ELSE ERRMSG="FILE DEPARTMENT IS MISSING";GOTO 91000
OPEN "","COST.CNTR" TO COST.CNTR ELSE ERRMSG="FILE COST.CNTR IS MISSING";GOTO 91000
OPEN "","CONTROL" TO CONTROL ELSE ERRMSG="FILE CONTROL IS MISSING";GOTO 91000
OPEN "","SPOILAGE.CODES" TO SPOILAGE.CODES ELSE ERRMSG="FILE SPOILAGE.CODES IS MISSING";GOTO 91000
OPEN "","JOB.STAT.CODE" TO JOB.STAT.CODE ELSE ERRMSG="FILE JOB.STAT.CODE IS MISSING";GOTO 91000
OPEN "","WAREHOUSE" TO WAREHOUSE ELSE ERRMSG="FILE WAREHOUSE IS MISSING";GOTO 91000
OPEN "","INV_SERIAL" TO INV_SERIAL ELSE ERRMSG="FILE INV_SERIAL IS MISSING";GOTO 91000

* Insert method code here
STATUS=RBO.getProperty('','PMCProperty',PMCProperty)
STATUS = RBO.getProperty('','ID',ID)

DMT_SEQ_NO = ID
USER_ID = PMCProperty<1,3>
CONO = PMCProperty<1,4>

MATREAD DMT.REC FROM DAILY.MATL,DMT_SEQ_NO ELSE MAT DMT.REC = '';RETURN
MATREAD COMP.REC FROM COMPANY,CONO ELSE MAT COMP.REC = ''
    
DIV.CODE = DMT.DIV
USER.ID = USER_ID
ERRMSG = ''

CALL CK.DIV.SEC.SUB(CONO,DIV.CODE,USER.ID,ERRMSG)
IF ERRMSG # '' THEN
  GOTO 91000
END

DMT.SEQ.NO=DMT_SEQ_NO

POST.OSJ=0
JOB.ID=CONO:DMT.JOB
JOB.NO=DMT.JOB
MATREAD JOB.REC FROM JOB,JOB.ID ELSE
  MAT JOB.REC=""
  FND=0
  IF NUM(DMT.JOB) THEN
    IF DMT.JOB < J.CUTOFF.NUM THEN FND=1
    END ELSE
      JC.CNT=DCOUNT(J.CUTOFF.PREFIX,@VM)
      FOR L=1 TO JC.CNT WHILE FND=0
        PREFX.LEN=LEN(J.CUTOFF.PREFIX<1,L>)
        IF J.CUTOFF.PREFIX<1,L>=DMT.JOB[1,PREFX.LEN] THEN
          CHK.VALUE=DMT.JOB[PREFX.LEN+1,LEN(DMT.JOB)-PREFX.LEN]
          IF NUM(CHK.VALUE) THEN
            IF CHK.VALUE < J.CUTOFF.PRE.NO<1,L> THEN FND=1
          END
        END
      NEXT L
    END
    IF FND=1 THEN
      JOB.DESC<1,1>="* * OUTSIDE JOB * *"
      POST.OSJ=1
    END ELSE
      JOB.DESC<1,1>="UNKNOWN"
    END
  END
  IF CO.JOB.CUST.FLG="C" AND POST.OSJ=0 THEN
    CUST.ID =CONO:JOB.CUST
    MATREAD CUST.REC FROM CUSTOMER,CUST.ID ELSE
      CUST.NAME="UNKNOWN"
    END
    JOB.DESC<1,1>=CUST.NAME
  END
  DIV.ID=CONO:DMT.DIV                      
  MATREAD DIV.REC FROM DIVISION,DIV.ID ELSE
    MAT DIV.REC="";DIV.DESC="UNKNOWN"
  END
  DEPT.ID=CONO:DMT.DEPT
  MATREAD DEPT.REC FROM DEPARTMENT,DEPT.ID ELSE
    MAT DEPT.REC="";DEPT.DESC="UNKNOWN"
  END
  CCTR.ID=CONO:DMT.CCTR
  MATREAD CCTR.REC FROM COST.CNTR,CCTR.ID ELSE
    MAT CCTR.REC="";CCTR.DESC="UNKNOWN"
  END
  IF CCTR.TYPE="F" THEN CCTR.DESC="COST CENTER IS FROZEN"
  INV.ID=CONO:DMT.PROD
  MATREAD INV.REC FROM INVENTORY,INV.ID ELSE
    MAT INV.REC="";INV.FULL.DESC="UNKNOWN"
  END
  LOCATE DMT.WHSE IN INV.WHSE.CODE<1>,1 SETTING WFND ELSE WFND=0
  CATG.ID=CONO:INV.LINE
  MATREAD CATG.REC FROM CATEGORY,CATG.ID ELSE MAT CATG.REC=''
  $INCLUDE ICSBP INV.UM.CNV
  IWH.ID=CONO:DMT.PROD:"!":DMT.WHSE
  MATREAD IWH.REC FROM INV.WHSE,IWH.ID ELSE MAT IWH.REC=''
  ISTK.ID=CONO:DMT.SERIAL
  MATREAD ISTK.REC FROM INV_SERIAL,ISTK.ID ELSE MAT ISTK.REC=''
  GOSUB CHECK.MATL.RESV

        RET.VALUE<1,1>=JOB.DESC<1,1>
        RET.VALUE<1,2>=DIV.DESC
        RET.VALUE<1,3>=DEPT.DESC
        RET.VALUE<1,4> = OCONV(DMT.DATE,"D2/")
        RET.VALUE<1,5>=INV.FULL.DESC
        RET.VALUE<1,6>=DMT.WHSE
        RET.VALUE<1,7>=DMT.LOC
	 
        IF DMT.RS.QTYPE="DR" THEN
          RET.VALUE<1,8>=OCONV(INT(DMT.QTY/10),"MD2")
        END ELSE
          TMPVAL = ''
          TMPVAL = CALC_STK_QTY(DMT.QTY,MAT INV.CNV.REC,'.5','')
          RET.VALUE<1,8>=OCONV(TMPVAL,ICR.CNV)
        END

        BEGIN CASE
          CASE DMT.RS.QTYPE="WU"
            QDESC="Weight used"
          CASE DMT.RS.QTYPE="WR"
            QDESC="Weight remaining"
          CASE DMT.RS.QTYPE="DR"
            QDESC="Diameter remaining"
          CASE DMT.RS.QTYPE[2,1]="U" AND INV.UNIT<1,2>="FT"
            QDESC="Feet used"
          CASE DMT.RS.QTYPE[2,1]="U" AND INV.UNIT<1,2>="PC"
            QDESC="Press counts used"
          CASE DMT.RS.QTYPE="SU"
            QDESC="Stock used"
          CASE DMT.RS.QTYPE="SR"
            QDESC="Stock remaining"
          CASE 1
            QDESC= INV.UNIT<1,2>
        END CASE
        RET.VALUE<1,9>=QDESC

      RET.VALUE<1,10>=OCONV(DMT.TIME,"MTS")
      RET.VALUE<1,11> = OCONV(DMT.COST,"MD4")
      INVUNIT = ''
      INVUNIT = INV.UNIT
      SWAP @VM WITH "*" IN INVUNIT
      RET.VALUE<1,12> = INV.PAP.TYPE
      RET.VALUE<1,13> = INVUNIT
      RET.VALUE<1,14> = CATG.TRK.LVL
      RET.VALUE<1,15> = INV.M.LINE
      RET.VALUE<1,16> = INV.COST.WT
      
      WHSEARR = "";LOCARR = ""
      WHSEARR = INV.WHSE.CODE
      LOCARR = IWH.LOC

      SWAP @VM WITH "*" IN WHSEARR
      SWAP @VM WITH "*" IN LOCARR

      RET.VALUE<1,17> = WHSEARR
      RET.VALUE<1,18> = LOCARR
      RET.VALUE<1,19> = JOB.TYPE
      RET.VALUE<1,20> = CO.SPOIL.FLG
      SWAP '"' WITH "" IN RET.VALUE
STATUS = RBO.setProperty('','SERIAL_INFO',RET.VALUE)

RETURN

*
*****************
CHECK.MATL.RESV: 
*****************
*
PTR=1
LOOP
  LOCATE DMT.PROD IN JOB.RESV.MATL<1>,PTR SETTING MLOC ELSE
    MLOC=0;PTR=0
    RESV.QTY=0;RESV.AMT=0
  END
  IF MLOC AND WFND THEN
    IF INV.WHSE.CODE<1,WFND>=JOB.RESV.WHSE<1,MLOC> THEN
      PTR=0
      RESV.QTY=JOB.RESV.QTY<1,MLOC>;RESV.AMT=JOB.RESV.AMT<1,MLOC>
    END ELSE
      PTR=MLOC+1
    END
  END ELSE
    PTR = 0
  END
WHILE PTR DO
REPEAT
RETURN

91000:
   STATUS = RBO.setProperty('','ServerStatus',1)
   STATUS = RBO.setProperty('','ServerMessage',ERRMSG)
* End of method code
RETURN

