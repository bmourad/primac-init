SUBROUTINE WTRINSM_PRINTDATA
********************************************************************************
*   Program name :- WTRINSM_PRINTDATA
*   Created:- 9/14/2005
*  
********************************************************************************
$INCLUDE WWINSERT RBO.H
$INCLUDE WTR.CPYLIB WIP.TRACK.FORM
$INCLUDE WTR.CPYLIB WIP.TRACK.PALLET
$INCLUDE JCS.CPYLIB JOB
$INCLUDE PMC.CPYLIB CUSTOMER
$INCLUDE PMC.CPYLIB VEND
$INCLUDE PMC.CPYLIB SECURITY

* Insert method code here
**vv OPEN FILES
 OPEN "","CONTROL" TO CONTROL ELSE
   ERRMSG = "CANNOT OPEN CONTROL FILE"
   GOTO 91000
 END
 OPEN '','WIN.PRINTERS' TO WIN.PRINTERS ELSE
   ERRMSG = 'Cannot open WIN.PRINTERS file!'
   GOTO 91000
 END  
 OPEN '','JOB' TO JOB ELSE
   ERRMSG = 'Cannot open JOB file!'
   GOTO 91000
 END  
 OPEN "","CUSTOMER" TO CUSTOMER ELSE
   ERRMSG = "CANNOT OPEN CONTROL FILE"
   GOTO 91000
 END
 OPEN '','WIP.TRACK.FORM' TO WIP.TRACK.FORM ELSE
   ERRMSG = 'Cannot open WIP.TRACK.FORM file!'
   GOTO 91000
 END  
 OPEN "","WIP.TRACK.PALLET" TO WIP.TRACK.PALLET ELSE
   ERRMSG = "CANNOT OPEN WIP.TRACK.PALLET FILE"
   GOTO 91000
 END
 OPEN "","VEND" TO VEND ELSE
   ERRMSG = "CANNOT OPEN VEND FILE"
   GOTO 91000
 END
 OPEN '','SECURITY' TO SECURITY ELSE
   ERRMSG = 'Cannot open SECURITY file!'
   GOTO 91000
 END
**^^ OPEN FILES

 STATUS = RBO.getProperty("","PMCProperty",PMCProperty)
 STATUS = RBO.getProperty("","CLONE_NUM",CLONE.CNT)
 STATUS = RBO.getProperty("","ID",PALLET.ID)
 CONO = PMCProperty<1,4>
 UserID = PMCProperty<1,3>
 ESC = CHAR(27)
 ERRMSG = ""

 MATREAD SEC.REC FROM SECURITY, CONO:UPCASE(UserID) ELSE ERRMSG = "USER ":UserID:" NOT ON FILE";GOTO 91000
 
 MATREAD WIPTP.REC FROM WIP.TRACK.PALLET, CONO:PALLET.ID ELSE ERRMSG = "CANNOT READ WIP.TRACK.PALLET ON " : CONO : PALLET.ID;GOTO 91000
 MATREAD JOB.REC FROM JOB, CONO:WIPTP.JOB THEN
   MATREAD CUST.REC FROM CUSTOMER, CONO:JOB.CUST ELSE
     MAT CUST.REC = ""
   END
 END ELSE
   MAT JOB.REC = ""
   MAT CUST.REC = ""
   CUST.NAME = "???????????????"
 END
 IF WIPTP.VEND = "" THEN
   MAT VEND.REC = ""
 END ELSE
   MATREAD VEND.REC FROM VEND, CONO:WIPTP.VEND ELSE
     MAT VEND.REC = ""
     VEND.DESC = "???????????????"
   END
 END
 
 READ WIN.PRINTERS.REC FROM WIN.PRINTERS,SEC.DFLT.QUEUE ELSE ERRMSG = "CANNOT READ WIN.PRINTERS";GOTO 91000
 
 IF WIN.PRINTERS.REC<3> = "" THEN
   RETURN
 END

 CMD = 'SETPTR ,,,,,,DEST ':WIN.PRINTERS.REC<3>:',NHEAD,BRIEF'
 UDTEXECUTE CMD CAPTURING JUNK
 
 IF JUNK # "" THEN
   ERRMSG = "Invalid Print Queue.  Try again."
   GOTO 91000
 END


*INITIALIZE VARIABLES

 PREV.JOB = WIPTP.JOB 
 CURR.JOB = WIPTP.JOB
 CURR.TO.JOB = WIPTP.TO.JOB
 PREV.TO.JOB = WIPTP.TO.JOB

 IF WIPTP.VER = "" THEN
   PREV.FORM = WIPTP.FORM
 END ELSE
   PREV.FORM = WIPTP.FORM:".":WIPTP.VER
 END

 IF WIPTP.VER = "" THEN
   CURR.FORM = WIPTP.FORM
 END ELSE
   CURR.FORM = WIPTP.FORM:".":WIPTP.VER
 END
 
* 
 GOSUB 5000
 
 IF CLONE.CNT GT 0 THEN
   FOR X = 1 TO CLONE.CNT
     GOSUB 89000
     PALLET.ID = PALID
     GOSUB 89100
     CALL WIPT.LOC.UPD(CONO,PALLET.ID,PREV.LOC,MAT WIPTP.REC,WIP.TRACK.LOC,ERRMSG)
     MATWRITE WIPTP.REC ON WIP.TRACK.PALLET, CONO:PALLET.ID
     GOSUB 5000
  NEXT X
END
STATUS = RBO.setProperty("","ServerMessage",ERRMSG)
RETURN

5000 *
   PRINTER ON
   PRINTER.INIT = ESC:"E"
   PRINTER.INIT = PRINTER.INIT:ESC:"&l0O"
   PRINTER.INIT = PRINTER.INIT:ESC:"(8U"
   PRINTER.INIT = PRINTER.INIT:ESC:"&l0L"  ;* Disable Perf Skipping
   PRINT PRINTER.INIT
*
*---- PRINT BARCODE PALLET ID
*
   HPI = 2.0
   VPI = 0.05
   BPT = 2.5
   VSI = 1.0
   BDATA = "*":PALLET.ID:"*"
   VDATA = PALLET.ID
   VPT = 10
   CALL HP.PRINT.BARCODE.39(HPI,VPI,BPT,VSI,BDATA,VDATA,VPT)
   PLINE=CUST.NAME; PITCH=2.50; VPOS=2.25; WGT=3; GOSUB 5010
   PLINE="Job Number"; PITCH=10.00; VPOS=2.75; WGT=0; GOSUB 5020
   PLINE=WIPTP.JOB; PITCH=3.0; VPOS=3.375; WGT=3; GOSUB 5010
   PLINE="    Signature    "; PITCH=10.00; VPOS=3.875; WGT=0; GOSUB 5020
   BEGIN CASE
      CASE WIPTP.VER = ""
         PLINE = WIPTP.FORM
      CASE 1
         PLINE = WIPTP.FORM:".":WIPTP.VER
   END CASE
   PITCH=3.0; VPOS=4.5; WGT=3; GOSUB 5010
   PLINE="Quantity"; PITCH=10.00; VPOS=5.0; WGT=0; GOSUB 5020
   PLINE=OCONV(WIPTP.CQTY,"MD0,"); PITCH=4.0; VPOS=5.5; WGT=3; GOSUB 5010
   PLINE="To-Job":SPACE(54):"To-Cctr"; PITCH=10.00; VPOS=6.00; WGT=0; GOSUB 5020
   PLINE=WIPTP.TO.JOB:SPACE(29):WIPTP.TO.OPER:SPACE(2); PITCH=5.5; VPOS=6.375; WGT=3; GOSUB 5010
   PLINE="Vendor"; PITCH=10.00; VPOS=6.75; WGT=0; GOSUB 5020
   PLINE=VEND.DESC; PITCH=7.0; VPOS=7.125; WGT=3; GOSUB 5010
   PLINE="Description"; PITCH=10.00; VPOS=7.625; WGT=0; GOSUB 5020
   PLINE=WIPTP.DESC; PITCH=7.0; VPOS=8.0; WGT=3; GOSUB 5010
   PLINE="Pallet ID"; PITCH=10.00; VPOS=8.625; WGT=0; GOSUB 5020
   HPI = 2.0
   VPI = 8.75
   BPT = 2.5
   VSI = 1.0
   BDATA = "*":PALLET.ID:"*"
   VDATA = PALLET.ID
   VPT = 10
   CALL HP.PRINT.BARCODE.39(HPI,VPI,BPT,VSI,BDATA,VDATA,VPT)
   PRINT CHAR(12):
   PRINTER OFF
   PRINTER CLOSE
   RETURN

   *
*---- PRINT CENTERED TEXT
*
5010 *
   PAGE.WIDTH = 8                     ;* PAGE WIDTH IN INCHES
   MAXPITCH = INT((LEN(PLINE)+2) / PAGE.WIDTH * 100 + 0.99)
   MAXPITCH = OCONV(MAXPITCH,"MD2")
   IF MAXPITCH > PITCH THEN PITCH = MAXPITCH
5020 *
   PAGE.CHARS = INT(PAGE.WIDTH * PITCH)-2
   IF LEN(PLINE) >= PAGE.CHARS THEN
      PLINE = SPACE(1):PLINE[1,PAGE.CHARS]
   END ELSE
      PLINE = SPACE(1):SPACE(INT((PAGE.CHARS-LEN(PLINE))/2)):PLINE
   END
   FMT = ESC:"(s"
   FMT = FMT:"0p"                     ;* pitch (0 = fixed, 1 = variable)               ;* pitch (char / inch)
   FMT = FMT:PITCH:"h"                ;* pitch (char / inch)
   FMT = FMT:"0s"                     ;* italic (0 = no, 1 = yes)
   FMT = FMT:WGT:"b"                  ;* weight (0 = normal, 3 = bold)
   FMT = FMT:"4102T"                  ;* font = Letter Gothic
   VPOS = INT(VPOS * 720 + 0.5)
   FMT = FMT:ESC:"&a":VPOS:"V"
   PRINT FMT:PLINE
   RETURN


*
*---- GET NEXT PALLET ID
*
89000 *
   READVU PALID FROM CONTROL, CONO:"LAST.INS.PAL.ID",1 ELSE PALID = "N000000X"
   LOOP
      NPFX = PALID[1,1]
      NSEQ = PALID[2,6]
      NSEQ = NSEQ + 1
      IF NSEQ > 999999 THEN
         NPFX = CHAR(SEQ(NPFX)+1)
         NSEQ = 1
      END
      PALID = NPFX:(1000000+NSEQ)[2,6]
      CALL WIPT.CHECK.DIGIT("C", PALID, "10RL", CKDIG, VALID)
      PALID = PALID:CKDIG
      READ TREC FROM WIP.TRACK.PALLET, CONO:PALID ELSE TREC = "!@#$%"
   UNTIL TREC = "!@#$%" DO
   REPEAT
   WRITEV PALID ON CONTROL, CONO:"LAST.INS.PAL.ID",1
RETURN

*
*---- UPDATE X-REF DATA
*
89100 *
   CALL WIPT.XREF.MAINT(CONO,PREV.JOB,PREV.FORM,CURR.JOB,CURR.FORM,PALLET.ID,GEN.SKID,ERRMSG)
   CALL WIPT.UPDATE.TOJOB.XREF(CONO,PREV.TO.JOB,CURR.TO.JOB,PREV.JOB,CURR.JOB,ERRMSG)
RETURN

91000 *
   STATUS = RBO.setProperty("","ServerStatus",1)
   STATUS = RBO.setProperty("","ServerMessage",ERRMSG)
* End of method code
RETURN

