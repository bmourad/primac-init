SUBROUTINE GET_ALL_WHSE_SERIALS
********************************************************************************
*   Program name :- GET_ALL_WHSE_SERIALS
*   Created:- 6/7/2005
*------------------------------------------------------------------------------*
*
* In Properties:
* --------------
*  
*
* Out Properties:
* ---------------
*  
********************************************************************************
$INCLUDE WWINSERT RBO.H
* Insert method code here
*
**** INSERT FILES EQUATES
*	
$INCLUDE ICS.CPYLIB INVENTORY
$INCLUDE ICS.CPYLIB INV.WHSE
$INCLUDE ICS.CPYLIB INV.WHSE.LOC
$INCLUDE ICS.CPYLIB INV.STATS
$INCLUDE ICS.CPYLIB INV_SERIAL
$INCLUDE ICS.CPYLIB INV_RECEIPTS
$INCLUDE ICS.CPYLIB INV.CNV
*$INCLUDE CPYLIB FILE.VARS
$INCLUDE CPYLIB CHAR
$INCLUDE ICS.CPYLIB CATEGORY
*
**********
*OPEN FILES
**********
   OPEN "","INVENTORY" TO INVENTORY ELSE
      ERRMSG = "Cannot locate the INVENTORY file"; GOTO 93000
   END
   OPEN "","INV.WHSE.LOC" TO INV.WHSE.LOC ELSE
      ERRMSG = "Cannot locate the INV.WHSE.LOC file"; GOTO 93000
   END
   OPEN "","INV.WHSE" TO INV.WHSE ELSE
      ERRMSG = "Cannot locate the INV.WHSE file"; GOTO 93000
   END
   OPEN "","INV_SERIAL" TO INV_SERIAL ELSE
      ERRMSG = "Cannot locate the INV_SERIAL file"; GOTO 93000
   END
   OPEN "","INV_RECEIPTS" TO INV_RECEIPTS ELSE
      ERRMSG = "Cannot locate the INV_RECEIPTS file"; GOTO 93000
   END
   OPEN "","INV_RECP_WHSE" TO INV_RECP_WHSE ELSE
      ERRMSG = "Cannot locate the INV_RECP_WHSE file"; GOTO 93000
   END
   OPEN "","INV_AUDIT_HIST" TO INV_AUDIT_HIST ELSE
      ERRMSG = "Cannot locate the INV_AUDIT_HIST file"; GOTO 93000
   END
   OPEN "","CATEGORY" TO CATEGORY ELSE
      ERRMSG = "Cannot locate the CATEGORY file"; GOTO 93000
   END
   OPEN "","CUSTOMER" TO CUSTOMER ELSE
      ERRMSG = "Cannot locate the CUSTOMER file"; GOTO 93000
   END
   OPEN "","CONTROL" TO CONTROL ELSE
      ERRMSG = "Cannot locate the CONTROL file"; GOTO 93000
   END

*DIM HOLD.IWLO.REC(IWLO.REC.SIZE)
*MAT HOLD.IWLO.REC = ""
*DIM HOLD.IWH.REC(IWH.REC.SIZE)
*MAT HOLD.IWH.REC=''
*******************
*
TMP.SERIAL= ""
*MAT HOLD.IWLO.REC = MAT IWLO.REC
*MAT HOLD.IWH.REC = MAT IWH.REC
*  IF CATG.R.S.ID = "S" THEN
STATUS = RBO.getProperty('','SERIAL_ID',CODE)
CONO = FIELD(CODE,"!",1)
PROD.NUM = FIELD(CODE,"!",2);*"RL1000"
WHSE = FIELD(CODE,"!",3);*"01"
IWH.ID = CONO:PROD.NUM:"!":WHSE

   MATREAD INV.REC FROM INVENTORY,CONO:PROD.NUM ELSE
      MAT INV.REC = ""
   END

   MATREAD CATG.REC FROM CATEGORY, CONO:INV.LINE ELSE
      MAT CATG.REC = ""
   END

MATREAD IWH.REC FROM INV.WHSE,IWH.ID ELSE MAT IWH.REC=''
NBR.LOC = DCOUNT(IWH.LOC<1>,VM)
FOR WL = 1 TO NBR.LOC
  IWLO.ID = CONO:PROD.NUM:"!":WHSE:"!":IWH.LOC<1,WL>
  MATREAD IWLO.REC FROM INV.WHSE.LOC,IWLO.ID THEN
    S.CNT = DCOUNT(IWLO.SERIAL<1>,VM)
    FOR S = 1 TO S.CNT
      S.ID = CONO:IWLO.SERIAL<1,S>
      MATREAD ISTK.REC FROM INV_SERIAL,S.ID THEN
        MATREAD INVR.REC FROM INV_RECEIPTS, CONO:ISTK.RECP ELSE
          MAT INVR.REC = ""                                      
        END                                                       
        IF ISTK.POST.DATE # "" THEN
          LOCATE ISTK.LOC IN TMP.SERIAL<1>,1 SETTING LX THEN
            LOCATE ISTK.CUR.QTY IN TMP.SERIAL<3,LX>,1 BY "AR" SETTING CX THEN
              TMP.SERIAL = INSERT(TMP.SERIAL,2,LX,CX,S.ID[4,999])
              TMP.SERIAL = INSERT(TMP.SERIAL,3,LX,CX,ISTK.CUR.QTY)
              TMP.SERIAL = INSERT(TMP.SERIAL,4,LX,CX,ISTK.ORG.QTY)
              TMP.SERIAL = INSERT(TMP.SERIAL,5,LX,CX,ISTK.CUR.DIAM)
              TMP.SERIAL = INSERT(TMP.SERIAL,6,LX,CX,ISTK.ORG.DIAM)
              TMP.SERIAL = INSERT(TMP.SERIAL,7,LX,CX,ISTK.CUR.STK.QTY)
              TMP.SERIAL = INSERT(TMP.SERIAL,8,LX,CX,ISTK.ORG.STK.QTY)
              TMP.SERIAL = INSERT(TMP.SERIAL,9,LX,CX,ISTK.LA.USED+0)
              TMP.SERIAL = INSERT(TMP.SERIAL,10,LX,CX,INVR.PO)
              TMP.SERIAL = INSERT(TMP.SERIAL,11,LX,CX,INVR.ENT.DATE)
              TMP.SERIAL=INSERT(TMP.SERIAL,12,LX,CX,ISTK.RSVB.QTY)
            END ELSE
              TMP.SERIAL = INSERT(TMP.SERIAL,2,LX,CX,S.ID[4,999])
              TMP.SERIAL = INSERT(TMP.SERIAL,3,LX,CX,ISTK.CUR.QTY)
              TMP.SERIAL = INSERT(TMP.SERIAL,4,LX,CX,ISTK.ORG.QTY)
              TMP.SERIAL = INSERT(TMP.SERIAL,5,LX,CX,ISTK.CUR.DIAM)
              TMP.SERIAL = INSERT(TMP.SERIAL,6,LX,CX,ISTK.ORG.DIAM)
              TMP.SERIAL = INSERT(TMP.SERIAL,7,LX,CX,ISTK.CUR.STK.QTY+0)
              TMP.SERIAL = INSERT(TMP.SERIAL,8,LX,CX,ISTK.ORG.STK.QTY+0)
              TMP.SERIAL = INSERT(TMP.SERIAL,9,LX,CX,ISTK.LA.USED+0)
              TMP.SERIAL = INSERT(TMP.SERIAL,10,LX,CX,INVR.PO)
              TMP.SERIAL = INSERT(TMP.SERIAL,11,LX,CX,INVR.ENT.DATE)
              TMP.SERIAL=INSERT(TMP.SERIAL,12,LX,CX,ISTK.RSVB.QTY)
            END
          END ELSE
            TMP.SERIAL = INSERT(TMP.SERIAL,1,LX,1,ISTK.LOC)
            TMP.SERIAL = INSERT(TMP.SERIAL,2,LX,1,S.ID[4,999])
            TMP.SERIAL = INSERT(TMP.SERIAL,3,LX,1,ISTK.CUR.QTY)
            TMP.SERIAL = INSERT(TMP.SERIAL,4,LX,1,ISTK.ORG.QTY)
            TMP.SERIAL = INSERT(TMP.SERIAL,5,LX,1,ISTK.CUR.DIAM)
            TMP.SERIAL = INSERT(TMP.SERIAL,6,LX,1,ISTK.ORG.DIAM)
            TMP.SERIAL = INSERT(TMP.SERIAL,7,LX,1,ISTK.CUR.STK.QTY+0)
            TMP.SERIAL = INSERT(TMP.SERIAL,8,LX,1,ISTK.ORG.STK.QTY+0)
            TMP.SERIAL = INSERT(TMP.SERIAL,9,LX,1,ISTK.LA.USED+0)
            TMP.SERIAL = INSERT(TMP.SERIAL,10,LX,1,INVR.PO)
            TMP.SERIAL = INSERT(TMP.SERIAL,11,LX,1,INVR.ENT.DATE)
            TMP.SERIAL=INSERT(TMP.SERIAL,12,LX,1,ISTK.RSVB.QTY)
          END
        END
      END ELSE
        MAT ISTK.REC = ""
      END
    NEXT S
  END ELSE
    MAT IWLO.REC = ""
  END
NEXT WL
CURR.LOC = FIELD(CODE,"!",4);*"01";*IWH.LOC<1,1>
**********
R.S.FLG = 0
R.S.CNT = 0
 SCV_REC = ""
               

            IF CATG.TRK.LVL='S' THEN
               
               PTR = 1
               LOCATE CURR.LOC IN TMP.SERIAL<1>,1 SETTING WINDX ELSE WINDX = 0
               IF CATG.TRK.LVL='S' AND WINDX>0 THEN
                  IF WINDX>0 THEN
                     TOT.RS.CNT = DCOUNT(TMP.SERIAL<2,WINDX>,SVM)
                     R.S.CNT=0
                     FOR TRC=1 TO TOT.RS.CNT
                        IF TMP.SERIAL<3,WINDX,TRC>#0 THEN
                           R.S.CNT+=1
                        END
                     NEXT TRC
                     R.S.FLG = 1
                  END
                  BEGIN CASE
                     CASE NOT(R.S.FLG)
                        SCV_REC<1> = ""
                        SCV_REC<2> = ""
                     CASE INV.PAP.TYPE = "REGULAR"
                        SCV_REC<1> = "# Serials  :"
                        SCV_REC<2> = R.S.CNT
                     CASE INV.PAP.TYPE = "SHEET"
                        SCV_REC<1> = "# Skids    :"
                        SCV_REC<2> = R.S.CNT
                     CASE 1
                        SCV_REC<1> = "# Rolls    :"
                        SCV_REC<2> = R.S.CNT
                  END CASE
               END
            END

	    IF R.S.CNT + 0 = 0 THEN
               SCV_REC<1> = ""
               SCV_REC<2> = ""
            END
**********
STATUS = RBO.setProperty('','SERIAL_FLAG',SCV_REC<1>)
STATUS = RBO.setProperty('','SERIAL_NUMBER',SCV_REC<2>)

RETURN

93000*
* End of method code
RETURN

