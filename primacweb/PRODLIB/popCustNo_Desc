SUBROUTINE popCustNo_Desc
********************************************************************************
*   Program name :- popCustNo_Desc
*   Author:- MOHAMMED ABDUL MALIK
*   Created:- 8/27/2003
*------------------------------------------------------------------------------*
*
* In Properties:
* --------------
*
*
* Out Properties:
* ---------------
*  
********************************************************************************
$INCLUDE WWINSERT RBO.H
$INCLUDE PMC.CPYLIB CUSTOMER
$INCLUDE OPS.CPYLIB ORDER.DETAIL
$INCLUDE CPYLIB CHAR
$INCLUDE ICS.CPYLIB INV.CNV
$INCLUDE OPS.CPYLIB BOL
* Insert method code here
$INCLUDE ICS.CPYLIB INVENTORY
$INCLUDE ICS.CPYLIB INV.WHSE
$INCLUDE ICS.CPYLIB CATEGORY
$INCLUDE PMC.CPYLIB COMPANY
$INCLUDE ICS.CPYLIB INV_SERIAL

ERRMSG = ''
  OPEN "","ORDER.DETAIL" TO ORDER.DETAIL ELSE
    ERRMSG = "CANNOT OPEN ORDER.DETAIL FILE"
    GOTO 91000
  END
OPEN "","CONTROL" TO CONTROL ELSE
    ERRMSG = "CANNOT OPEN CONTROL FILE"
    GOTO 91000
  END
  OPEN "","CUSTOMER" TO CUSTOMER ELSE
    ERRMSG = "CANNOT OPEN CUSTOMER FILE"
    GOTO 91000
  END
**********
OPEN "","INVENTORY" TO INVENTORY ELSE
	    ERRMSG = "CANNOT OPEN INVENTORY FILE"
	    GOTO 91000
END
OPEN "","CATEGORY" TO CATEGORY ELSE
	    ERRMSG = "CANNOT OPEN CATEGORY FILE"
	    GOTO 91000
END
OPEN "","INV.WHSE" TO INV.WHSE ELSE
	    ERRMSG = "CANNOT OPEN INV.WHSE FILE"
	    GOTO 91000
END
**********
   IF FILEINFO(INV_SERIAL_TEMP,0)=0 THEN                     
      OPEN '','INV_SERIAL_TEMP' TO INV_SERIAL_TEMP ELSE    
         ERRMSG="INV_SERIAL_TEMP FILE IS MISSING";GOTO 91000   
      END                                                        
   END                                                          
   IF FILEINFO(INV_SERIAL,0)=0 THEN                     
      OPEN '','INV_SERIAL' TO INV_SERIAL ELSE    
         ERRMSG="INV_SERIAL FILE IS MISSING";GOTO 91000   
      END                                                        
   END

**********
  OPEN "","DAILY.BOL" TO DAILY.BOL ELSE ERRMSG = "CANNOT OPEN DAILY.BOL";GOTO 91000
  OPEN "","COMPANY" TO COMPANY ELSE ERRMSG = "CANNOT OPEN COMPANY";GOTO 91000
  DEFFUN CalcStkQty(COST.QTY,MAT INV.CNV.REC,ROND,LN)

CUSTOMER.ID.LIST = ""
CUSTOMER.NAME.LIST =""
STATUS=RBO.getProperty('','PMCProperty',PMCProperty)
STATUS=RBO.getDBVals('BOL_CUST',CUSTOMER.ID)
STATUS=RBO.getProperty('','BOL_QTY',BOL_QTY)
STATUS = RBO.getProperty("","ID",BOL.ID)
CONO= BOL.ID[1,3] ;*PMCProperty<1,4>
CONVBOLQTY=''
BAD.PROD='0'
TEMP.AVAIL=''
TEMP.SID=''
SPTR=''
FIRST=''
UPDCNT = ''
IPTR = ''
BOL_QTY1=''
TMPQTY=''
PQTY=''
PRINT.AVAIL=''
TEMP.LOC.AVAIL=''
TEMP.DESC=''
PCNT=''
RCNT=''
PPTR=''
*---- SETUP UNIT MEASURE CONVERSION AND DISPLAY
   ICR.CNV = "MD0"; ICR.CNV1 = "MD0,"
   ICR.DV1 = 1; ICR.MT1 = 1; ICR.DV2 = 1000
   ICR.TYPE = 3; ICR.SCAL = 0
*----

  MATREAD COMP.REC FROM COMPANY, CONO ELSE
      ERRMSG = "Company Record Is Missing"
      GOTO 91000
  END

MATREAD CUST.REC FROM CUSTOMER,CONO:CUSTOMER.ID THEN
	CUSTOMER.NAME.LIST = CUST.NAME
END
*CONVBOLQTY=OCONV(BOL_QTY,ICR.CNV1)
*BOL_QTY='12000':VM:'44000'
NCNT=DCOUNT(BOL_QTY,VM)
FOR I=1 TO NCNT
 BOL_QTY1<1,I>=INT(BOL_QTY<1,I> / 1000)
 CONVBOLQTY<1,I>=BOL_QTY1<1,I>
NEXT I

STATUS = RBO.setProperty('', 'BOL_CUST_NAME', CUSTOMER.NAME.LIST)
STATUS = RBO.setProperty('', 'CONVBOLQTY', CONVBOLQTY)
STATUS = RBO.setProperty('', 'CO_ICS_PERIOD_FLG', CO.ICS.PERIOD.FLG)

***vvv TEST
   STATUS = RBO.getProperty("","ID",BOL.ID)
    CONO=BOL.ID[1,3]
	

   MATREAD BOL.REC FROM DAILY.BOL,BOL.ID ELSE ERRMSG = "CANNOT READ DAILY.BOL ON : " : BOL.ID:"xxxx"; GOTO 91000
    *STATUS=RBO.setProperty('','BOL_ORDNO',BOL.ORDER)
    STATUS=RBO.setProperty('','BOL_SHIP_TO',BOL.SHIP.TO)
   ORDNO=BOL.ORDER<1,1>   

   MATREAD ORD.DET.REC FROM ORDER.DETAIL, CONO:BOL.ORDER<1,1>:"!":BOL.SHIP.TO ELSE
  	ERRMSG = "Cannot locate POSTREAD Order / Ship to # " CONO:"~":BOL.ORDER<1,1>: "/ ":BOL.SHIP.TO
       GOTO 91000
   END

   PCNT = DCOUNT(OSD.PROD,VM)
	
   FOR PPTR = 1 TO PCNT
      PROD = OSD.PROD<1,PPTR>
      WHSE = OSD.WHSE<1,PPTR>
      KIT  = OSD.KIT<1,PPTR>
      PSEQ = OSD.PROD.SEQ<1,PPTR>
      BOM.NUMBER = OSD.BOM.NUM<1,PPTR>
      GOSUB 7650
      IF NOT(BAD.PROD) THEN
         RCNT = DCOUNT(OSD.RECP.NO<1,PPTR>,SM)
		STATUS = RBO.setProperty('', 'TESTPRODUCT', OSD.RECP.NO)


         IF RCNT = 0 THEN RCNT = 1
         FOR RPTR = 1 TO RCNT
            RECP = OSD.RECP.NO<1,PPTR,RPTR>
            RELNO = OSD.REL.NO<1,PPTR,RPTR>   ;*T24693
            PKTKT=""; WLOC=""; WGHT=""
            RQTY = OSD.FI.QTY<1,PPTR,RPTR>+0
            AQTY = RQTY
       *     GOSUB 7550
         NEXT RPTR
       END
         
   NEXT PPTR
	K = 0
	  FOR I = 1 TO PCNT
         IF TEMP.AVAIL<1,I> > 0 THEN
	     K = K + 1
	     PRINT.AVAIL = TEMP.AVAIL<1,I>
            PQTY = INT(((PRINT.AVAIL / ICR.DV1 ) * ICR.MT1) / ICR.DV2 + .5 )
            TMPQTY<1,K> = OCONV(PQTY,ICR.CNV)
         END
         NEXT I

  STATUS = RBO.setProperty('','OSD_FI_QTY',TMPQTY)
7550 *
   
  TEMP.TYPE=''
   IF FIRST THEN
      BOL.ORDER = ""
      FIRST = 0
   END
   SID = PROD:"!":WHSE:"!":ORDNO:"!":RECP
   SPTR = DCOUNT(TEMP.SID<1>,VM) + 1
   
   IF SPTR THEN
      UPDCNT = UPDCNT + 1
      IPTR = IPTR + 1
      TEMP.SID = INSERT(TEMP.SID,1,IPTR,0,SID)
      BOL.TYPE = INSERT(BOL.TYPE,1,IPTR,0,TEMP.TYPE)
      BOL.ORDER = INSERT(BOL.ORDER,1,IPTR,0,ORDNO)
      BOL.PROD = INSERT(BOL.PROD,1,IPTR,0,PROD)
	
      BOL.WHSE = INSERT(BOL.WHSE,1,IPTR,0,WHSE)
      BOL.LOC = INSERT(BOL.LOC,1,IPTR,0,"")
      BOL.KIT = INSERT(BOL.KIT,1,IPTR,0,KIT)
      BOL.SEQ = INSERT(BOL.SEQ,1,IPTR,0,PSEQ)
      BOL.BOM.NUM = INSERT(BOL.BOM.NUM,1,IPTR,0,BOM.NUMBER)
     * BOL.RECP.NO = INSERT(BOL.RECP.NO,1,IPTR,0,"")
      TEMP.AVAIL = INSERT(TEMP.AVAIL,1,IPTR,0,AQTY)
      BEGIN CASE
         CASE WLOC = ""
            BOL.QTY = INSERT(BOL.QTY,1,IPTR,0,"")
         CASE RQTY <= AQTY
            BOL.QTY = INSERT(BOL.QTY,1,IPTR,0,RQTY)
         CASE 1
            BOL.QTY = INSERT(BOL.QTY,1,IPTR,0,AQTY)
      END CASE
      BOL.RELEASE = INSERT(BOL.RELEASE,1,IPTR,0,RELNO)   ;*T24693
      BOL.PKTKT = INSERT(BOL.PKTKT,1,IPTR,0,PKTKT)
      BOL.SHP.WT = INSERT(BOL.SHP.WT,1,IPTR,0,WGHT)
      BOL.SHP.AMT = INSERT(BOL.SHP.AMT,1,IPTR,0,"")
      BOL.POST.FLAG = INSERT(BOL.POST.FLAG,1,IPTR,0,"")
      BOL.SKD.CNT = INSERT(BOL.SKD.CNT,1,IPTR,0,"");* T20661
      BOL.CRTN.CNT = INSERT(BOL.CRTN.CNT,1,IPTR,0,"");* T20661
      TEMP.LOC.AVAIL = INSERT(TEMP.LOC.AVAIL,1,IPTR,0,"")
      TEMP.DESC = INSERT(TEMP.DESC,1,IPTR,0,"")
   END
RETURN		


7650 *
   BAD.PROD = 0
   MATREAD INV.REC FROM INVENTORY, CONO:PROD ELSE
      ERRMSG = "Invalid Product number."
      GOSUB 91000
      BAD.PROD = 1
      RETURN
   END
   MATREAD CATG.REC FROM CATEGORY, CONO:INV.LINE ELSE
      ERRMSG = "Cannot locate CATEGORY ":INV.LINE:" for product ":PROD
      GOSUB 91000
      BAD.PROD = 1
      RETURN
   END
   MATREAD IWH.REC FROM INV.WHSE, CONO:PROD:"!":WHSE ELSE
      ERRMSG = "Cannot locate INV.WHSE - ":PROD:"!":WHSE
      GOSUB 91000
      BAD.PROD = 1
      RETURN
   END
RETURN


***^^^
*** Calling the BOLM_GetNUM_ON_SCRN  method

*CALL popBOLM_INV_FNGD_NO

*CALL BOLM_GetNUM_ON_SCRN
*** vv TEST ADDED
   *STATUS=RBO.setProperty('','BOL_ORDNO',BOL.ORDER<1,1>)
*** ^^
* End of method code
RETURN

*** ERROR ROUTINE
91000 *
  STATUS = RBO.setProperty('','ServerStatus',1)        
  STATUS = RBO.setProperty('','ServerMessage',ERRMSG) 
RETURN

