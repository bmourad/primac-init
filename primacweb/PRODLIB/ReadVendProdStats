SUBROUTINE ReadVendProdStats
********************************************************************************
*   Program name :- ReadVendProdStats
*   Created:- 7/11/2003
*------------------------------------------------------------------------------*
*

* In Properties:
* --------------
*  
*
* Out Properties:
* ---------------
*  
********************************************************************************
$INCLUDE WWINSERT RBO.H
$INCLUDE APS.CPYLIB VEND.PROD.STATS
$INCLUDE CPYLIB CHAR
$INCLUDE ICS.CPYLIB INVENTORY
$INCLUDE ICS.CPYLIB INV.CNV
$INCLUDE APS.CPYLIB VEND.PO.STATS
* Insert method code here
ERRMSG = ""
PRODID = ""
    OPEN '','VEND.PROD.STATS' TO VEND.PROD.STATS ELSE
        ERRMSG = 'Cannot open VEND.PROD.STATS file!'
        GOTO 1000
    END

    OPEN '','VEND.PO.STATS' TO VEND.PO.STATS ELSE
        ERRMSG = 'Cannot open VEND.PO.STATS file!'
        GOTO 1000
    END

    OPEN '','INVENTORY' TO INVENTORY ELSE
        ERRMSG = 'Cannot open INVENTORY file!'
        GOTO 1000
    END
    
    OPEN '','CONTROL' TO CONTROL ELSE
        ERRMSG = 'Cannot open CONTROL file!'
        GOTO 1000
    END

    STATUS=RBO.getProperty('','ID',ID)
    
WHSE=""
PONUM=""
PRODID=""
    
    CONO   = FIELD(ID,"!",1)[1,3]
    VEND.ID=FIELD(ID,"!",1)[4,99]
    TVO.PO.TYPE = FIELD(ID,"!",2)
    PONUM=FIELD(ID,"!",3)
    PRODID = FIELD(ID,"!",4)    
    
    VENDPO = FIELD(ID,"!",1) : "!" : TVO.PO.TYPE : "!" : FIELD(ID,"!",3)
  
    
    
    IF TVO.PO.TYPE = "R" THEN
    	MATREAD INV.REC FROM INVENTORY,CONO:PRODID ELSE
            MAT INV.REC = ""
    	END
    END    
    
    MATREAD VPS.REC FROM VEND.PO.STATS,VENDPO THEN
       CNT =DCOUNT(VPS.PROD,@VM)
       FOR I= 1 TO CNT
          IF VPS.PROD<1,I>=PRODID THEN
             WHSE=VPS.WHSE<1,I>
          END
       NEXT I
    END ELSE
       MAT VPS.REC=""
    END
    *MATREAD VPS.REC FROM VEND.PO.STATS,VENDPO ELSE
    *    MAT VPS.REC = ""
    *END
    VPDS.KEY=	VENDPO:"!":PRODID:"!":WHSE

    MATREAD VPDS.REC FROM VEND.PROD.STATS,VPDS.KEY ELSE
        ERRMSG='Cannot locate the VEND.PROD.STATS record ':ID; GOTO 1000
    END
    IF INV.COST.WT + 0 = 0 THEN INV.COST.WT = 100

    LOCATE PRODID IN VPS.PROD<1>,1 SETTING POS ELSE POS = 0
    BEGIN CASE
         CASE VPS.U.M<1,POS> = "SHT" AND INV.UNIT<1,3> = "LBS" AND TVO.PO.TYPE = "R"
            ICR.CNV = "MD0"; ICR.DV2 = 1
            ICR.DV1 = INV.M.WT; ICR.MT1 = 10
         CASE VPS.U.M<1,POS> = "PC" AND INV.UNIT<1,3> = "MSI" AND TVO.PO.TYPE = "R"
            ICR.CNV = "MD0"; ICR.DV2 = 1
            ICR.DV1 = INV.PAP.WIDTH/100; ICR.MT1 = 100
         CASE VPS.U.M<1,POS> = "FT" AND INV.UNIT<1,3> = "MSI" AND TVO.PO.TYPE = "R"
            ICR.CNV = "MD0"; ICR.DV2 = 12
            ICR.DV1 = INV.PAP.WIDTH/100; ICR.MT1 = 1000
         CASE 1
            ICR.CNV = "MD2"; ICR.DV2 = 1
            ICR.DV1 = 1; ICR.MT1 = 1
	     UOM = VPS.U.M<1,POS>
    END CASE
    
FOR I = 1 TO DCOUNT(VPDS.ORD.DATE,VM)
	VPDS.ORD.DATE<1,I> = OCONV(VPDS.ORD.DATE<1,I>,"D2/")
       IF ICR.CNV  = "MD0" THEN
	      TEMP  = INT(((VPDS.ORD.QTY<1,I>/ICR.DV1) * ICR.MT1)/ICR.DV2 + .5)
      	      TEMP1 = VPDS.ORD.QTY<1,I> 	     
    	END ELSE
      	      TEMP  = VPDS.ORD.QTY<1,I> / ICR.DV1
             TEMP1 = TEMP   
	      TEMP  = OCONV(TEMP, "MD2")
       END
	BEGIN CASE
      	   CASE TVO.PO.TYPE = "O"
           	IF TEMP1 + 0 # 0 THEN          
          	    BEGIN CASE                             
            		CASE UOM = "M" ; TEMP1 = TEMP1 / 1000
            		CASE UOM = "C" ; TEMP1 = TEMP1 / 100             		
          	    END CASE                               
          	    TEMP.COST = INT(((VPDS.ORD.UN.COST<1,I> /100) * TEMP1) / 100 +.5)
        	END ELSE
          	    TEMP.COST = 0
        	END              
      	   CASE 1                
		IF INV.COST.WT + 0 # 0 THEN
          		TEMP.COST = INT(((VPDS.ORD.UN.COST<1,I>/100) * (VPDS.ORD.QTY<1,I>/(INV.COST.WT/100)))/100 + .5)
       	END ELSE
          		TEMP.COST = 0
       	END       
       END CASE	
	VPDS_ORD_AMT<1,I>     = OCONV(TEMP.COST, "MD2")
	VPDS_ORD_QTY<1,I>     = TEMP
	VPDS_ORD_UN_COST<1,I> = OCONV(VPDS.ORD.UN.COST<1,I>,"MD4")
NEXT I  

FOR I = 1 TO DCOUNT(VPDS.REC.DATE,VM)
	VPDS.REC.DATE<1,I> = OCONV(VPDS.REC.DATE<1,I>,"D2/")
       IF ICR.CNV  = "MD0" THEN
     		TEMP  = INT(((VPDS.REC.QTY<1,I>/ICR.DV1) * ICR.MT1)/ICR.DV2 + .5)
		TEMP1 = VPDS.REC.QTY<1,I>	       
	END ELSE
      		TEMP  = VPDS.REC.QTY<1,I> / ICR.DV1
	       TEMP1 = TEMP
		TEMP  = OCONV(TEMP, "MD2")
  	END
	BEGIN CASE
      	   CASE TVO.PO.TYPE = "O"
           	IF TEMP1 + 0 # 0 THEN          
          	    BEGIN CASE                             
            		CASE UOM = "M" ; TEMP1 = TEMP1 / 1000
            		CASE UOM = "C" ; TEMP1 = TEMP1 / 100             		
          	    END CASE                               
          	    TEMP.COST = INT(((VPDS.REC.UN.COST<1,I> /100) * TEMP1) /100 +.5) 
       	END ELSE
          	    TEMP.COST = 0
        	END
	   CASE TVO.PO.TYPE = "R"
              IF INV.COST.WT + 0 # 0 THEN			
          		TEMP.COST = INT(((VPDS.REC.UN.COST<1,I>/100) * (VPDS.REC.QTY<1,I>/(INV.COST.WT/100)))/100 + .5)
       	END ELSE
          		TEMP.COST = 0
       	END
      	   CASE 1                
		IF INV.COST.WT + 0 # 0 THEN
			IF VPDS.REC.QTY<1,I> < 0 THEN
            			TEMP.COST = INT(((VPDS.REC.UN.COST<1,I>/100) * (VPDS.REC.QTY<1,I>/(INV.COST.WT/100)))/100 - .5)
		       END ELSE
            			TEMP.COST = INT(((VPDS.REC.UN.COST<1,I>/100) * (VPDS.REC.QTY<1,I>/(INV.COST.WT/100)))/100 + .5)
          		END
       	END ELSE
          		TEMP.COST = 0
       	END
       END CASE		
	VPDS_REC_AMT<1,I>     = OCONV(TEMP.COST, "MD2")
	VPDS_REC_QTY<1,I>     = TEMP
	VPDS_REC_UN_COST<1,I> = OCONV(VPDS.REC.UN.COST<1,I>,"MD4")
NEXT I

*FOR I = 1 TO DCOUNT(VPDS.VOU.DATE,VM)
FOR I = 1 TO DCOUNT(VPDS.VOU.DATE,SVM)

*	VPDS.VOU.DATE<1,I> = OCONV(VPDS.VOU.DATE<1,I>,"D2/")
*	VPDS.INV.DATE<1,I> = OCONV(VPDS.INV.DATE<1,I>,"D2/")
	VPDS.VOU.DATE<1,1,I> = OCONV(VPDS.VOU.DATE<1,1,I>,"D2/")
	VPDS.INV.DATE<1,1,I> = OCONV(VPDS.INV.DATE<1,1,I>,"D2/")
	IF ICR.CNV = "MD0" THEN
      		TEMP = INT(((VPDS.QTY<1,1,I>/ICR.DV1) * ICR.MT1)/ICR.DV2 + .5)
       	TEMP1 = VPDS.QTY<1,1,I>		
       END ELSE
       	TEMP = VPDS.QTY<1,1,I> / ICR.DV1
       	TEMP1 = TEMP
		TEMP  = OCONV(TEMP, "MD2")
       END
	BEGIN CASE
      	    CASE TVO.PO.TYPE = "O"
        	IF TEMP1 + 0 # 0 THEN
          	    BEGIN CASE                              
            	     	CASE UOM = "M" ; TEMP1 = TEMP1 / 1000 
                   	CASE UOM = "C" ; TEMP1 = TEMP1 / 100              
          	    END CASE                                
          	    TEMP.COST = INT(((VPDS.UN.COST<1,1,I>/100) * TEMP1) /100 +.5)
        	END ELSE
          	    TEMP.COST = VPDS.UN.COST<1,1,I> * 100
        	END
      	    CASE 1        
	       IF INV.COST.WT + 0 # 0 THEN
          		TEMP.COST = INT(((VPDS.UN.COST<1,1,I>/100) * (VPDS.QTY<1,1,I>/(INV.COST.WT/100)))/100 + .5)
       	END ELSE
          		TEMP.COST = 0
       	END      	    
       END CASE	
	VPDS_AMT<1,1,I>     = OCONV(TEMP.COST, "MD2")
	VPDS_QTY<1,1,I>     = TEMP
*	VPDS_UN_COST<1,1,I> = OCONV(VPDS.UN.COST<1,I>,"MD4")
       VPDS_UN_COST<1,1,I> = OCONV(VPDS.UN.COST<1,1,I>,"MD4")
NEXT I

STATUS=RBO.setProperty('','VPDS_ORD_DATE',VPDS.ORD.DATE)
STATUS=RBO.setProperty('','VPDS_REC_DATE',VPDS.REC.DATE)
STATUS=RBO.setProperty('','VPDS_VOU_NO',VPDS.VOU.NO)
STATUS=RBO.setProperty('','VPDS_INV_NO',VPDS.INV.NO)
STATUS=RBO.setProperty('','VPDS_INV_DATE',VPDS.INV.DATE)
STATUS=RBO.setProperty('','VPDS_VOU_DATE',VPDS.VOU.DATE)
STATUS=RBO.setProperty('','VPDS_PERIOD',VPDS.PERIOD)
STATUS=RBO.setProperty('','VPDS_REC_PERIOD',VPDS.REC.PERIOD)

STATUS=RBO.setProperty('','VPDS_ORD_QTY',VPDS_ORD_QTY)
STATUS=RBO.setProperty('','VPDS_ORD_UN_COST',VPDS_ORD_UN_COST)
STATUS=RBO.setProperty('','VPDS_ORD_AMT',VPDS_ORD_AMT)
STATUS=RBO.setProperty('','VPDS_REC_QTY',VPDS_REC_QTY)
STATUS=RBO.setProperty('','VPDS_REC_UN_COST',VPDS_REC_UN_COST)
STATUS=RBO.setProperty('','VPDS_REC_AMT',VPDS_REC_AMT)
STATUS=RBO.setProperty('','VPDS_QTY',VPDS_QTY)
STATUS=RBO.setProperty('','VPDS_UN_COST',VPDS_UN_COST)
STATUS=RBO.setProperty('','VPDS_AMT',VPDS_AMT)

1000*
    IF ERRMSG # "" THEN
	STATUS = RBO.setProperty('','ServerStatus',1)        
	STATUS = RBO.setProperty('','ServerMessage',ERRMSG)
    END
* End of method code
RETURN



















