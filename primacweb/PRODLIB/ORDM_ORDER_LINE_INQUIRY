SUBROUTINE ORDM_ORDER_LINE_INQUIRY
********************************************************************************
*   Program name :- ORDM_ORDER_LINE_INQUIRY
*   Created:- 1/23/2006
*  
********************************************************************************
$INCLUDE WWINSERT RBO.H
$INCLUDE CPYLIB COMMON1
$INCLUDE JCS.CPYLIB COM.JCS.LINK  
$INCLUDE ICS.CPYLIB COM.INV.MAIN  
$INCLUDE ICS.CPYLIB COM.INV.SERIAL
$INCLUDE JCS.CPYLIB COM.INV.STATS 
$INCLUDE PMC.CPYLIB COM.CUST 
$INCLUDE OPS.CPYLIB COM.ORDER
$INCLUDE OPS.CPYLIB COM.OPS.LINK

$DEFINE INVENTORY
$DEFINE ORDER
$DEFINE ORDERDETAILINQ

$INCLUDE OPS.CPYLIB ORDER
$INCLUDE OPS.CPYLIB ORDER.DETAIL
$INCLUDE OPS.CPYLIB ORDER.DETAIL.INQ
$INCLUDE OPS.CPYLIB ORDER.RELEASE
$INCLUDE ICS.CPYLIB INVENTORY
$INCLUDE ICS.CPYLIB INV.CNV
$INCLUDE PMC.CPYLIB SHIP.TO
$INCLUDE CPYLIB CHAR

OPEN "","ORDER" TO ORDER ELSE ERRMSG = "CANNOT OPEN ORDER FILE";GOTO 93000
OPEN "","ORDER.DETAIL" TO ORDER.DETAIL ELSE ERRMSG = "CANNOT OPEN ORDER.DETAIL FILE";GOTO 93000
OPEN "","ORDER.RELEASE" TO ORDER.RELEASE ELSE ERRMSG = "CANNOT OPEN ORDER.RELEASE FILE";GOTO 93000
OPEN "","INVENTORY" TO INVENTORY ELSE ERRMSG = "CANNOT OPEN INVENTORY FILE";GOTO 93000
OPEN "","SHIP.TO" TO SHIP.TO ELSE ERRMSG = "CANNOT OPEN SHIP.TO FILE";GOTO 93000
OPEN "","CONTROL" TO CONTROL ELSE STOP

STATUS = RBO.getProperty("","PMCProperty",PMCProperty)
STATUS = RBO.getProperty("","OSD_ARRAY",OSDARRAY)
STATUS = RBO.getProperty("","ORDNUMBER",ORDNO)
STATUS = RBO.getProperty("","ORD_SHIP_TO",SHIP_TO)

CONO = PMCProperty<1,4>

OSDCNT = 0
TMPOSDARR = ""
ORD.SHIP.TO = SHIP_TO
MAT ORD.DET.INQ = ""
*WRITE OSDARRAY ON CONTROL,'01HLL'
*WRITE INARR ON CONTROL,'02HLL'
* Insert method code here

   OSDCNT = DCOUNT(OSDARRAY,"¥")
   FOR X = 1 TO OSDCNT 
      TMPOSDARR = FIELD(OSDARRAY,"¥",X,1)
      MATPARSE ORD.DET.REC FROM TMPOSDARR,"ð"
      
      FOR P = 1 TO ORD.DET.REC.SIZE
         ORD.DET.SUM(P,X) = ORD.DET.REC(P)
      NEXT P
   NEXT X

   FOR X = 1 TO OSDCNT
      TMPOSDARR = FIELD(OSDARRAY,"¥",X,1)
      MATPARSE ORD.DET.REC FROM TMPOSDARR,"ð"

      STATUS = "L";SHPNO = SHIP_TO<1,X>
      CALL ORDER_LINE_UPD(CONO,ORDNO,SHPNO,STATUS)
   NEXT X

   *
   *CONVERT ORD.DET.INQ ARRAY TO COST QUANTITY
   *
   *CALL MODIFY_ORD_DET_INDQ(CONO,MAT ORD.DET.INQ,"COST")

   K = 0 
   PROD.SCRN = ""
   ORDER.GQTY = 0
   ORDER.OQTY = 0
   ORDER.IQTY = 0
   ORDER.FQTY = 0
   ORDER.SHIP = 0
   ORDER.ALLO = 0
   ORDER.RESV = 0
   ORDER.JOB = ""
   WHSE.SCRN = ""
   ORDER.STATUS = ""
   PROD.DESC = ""

   NUM.PROD.INQ = DCOUNT(ODQ.PROD,VM)
   FOR I = 1 TO NUM.PROD.INQ
      IF ODQ.KIT<1,I> # "M" THEN
         LOCATE ODQ.PROD<1,I> IN PROD.SCRN<1>,1 BY 'AR' SETTING INDX  ELSE
            PROD.SCRN = INSERT(PROD.SCRN,1,INDX,0,ODQ.PROD<1,I>)
            WHSE.SCRN = INSERT(WHSE.SCRN,1,INDX,0,ODQ.WHSE<1,I>)
            ORDER.GQTY = INSERT(ORDER.GQTY,1,INDX,0,"")
            ORDER.OQTY = INSERT(ORDER.OQTY,1,INDX,0,"")
            ORDER.IQTY = INSERT(ORDER.IQTY,1,INDX,0,"")
            ORDER.FQTY = INSERT(ORDER.FQTY,1,INDX,0,"")
            ORDER.SHIP = INSERT(ORDER.SHIP,1,INDX,0,"")
            ORDER.ALLO = INSERT(ORDER.ALLO,1,INDX,0,"")
            ORDER.RESV = INSERT(ORDER.RESV,1,INDX,0,"")
            ORDER.JOB = INSERT(ORDER.JOB,1,INDX,0,"")
         END
         IF ODQ.KIT<1,I> = "N" THEN
            ORDER.GQTY<1,INDX> = ORDER.GQTY<1,INDX> + ODQ.G.QTY<1,I>
            ORDER.OQTY<1,INDX> = ORDER.OQTY<1,INDX> + ODQ.O.QTY<1,I>
            ORDER.IQTY<1,INDX> = ORDER.IQTY<1,INDX> + ODQ.I.QTY<1,I>
            ORDER.FQTY<1,INDX> = ORDER.FQTY<1,INDX> + ODQ.F.QTY<1,I>
            ORDER.SHIP<1,INDX> = ORDER.SHIP<1,INDX> + ODQ.S.QTY<1,I>
            ORDER.ALLO<1,INDX> = ORDER.ALLO<1,INDX> + ODQ.A.QTY<1,I>
            ORDER.RESV<1,INDX> = ORDER.RESV<1,INDX> + ODQ.R.QTY<1,I>
            ORDER.JOB<1,INDX>  = ODQ.JOB<1,I>
         END ELSE
            ORDER.GQTY<1,INDX> = ORDER.GQTY<1,INDX> + ODQ.KIT.G.QTY<1,I>
            ORDER.OQTY<1,INDX> = ORDER.OQTY<1,INDX> + ODQ.KIT.O.QTY<1,I>
            ORDER.IQTY<1,INDX> = ORDER.IQTY<1,INDX> + ODQ.KIT.I.QTY<1,I>
            ORDER.FQTY<1,INDX> = ORDER.FQTY<1,INDX> + ODQ.KIT.F.QTY<1,I>
            ORDER.SHIP<1,INDX> = ORDER.SHIP<1,INDX> + ODQ.KIT.S.QTY<1,I>
            ORDER.ALLO<1,INDX> = ORDER.ALLO<1,INDX> + ODQ.KIT.A.QTY<1,I>
            ORDER.RESV<1,INDX> = ORDER.RESV<1,INDX> + ODQ.KIT.R.QTY<1,I>
         END
      END
   NEXT I
   LINES = DCOUNT(PROD.SCRN,VM)
   FOR N = 1 TO LINES
      MATREAD INV.REC FROM INVENTORY, CONO:PROD.SCRN<1,N> THEN
         $INCLUDE ICSBP INV.UM.CNV
      END ELSE
         MAT INV.REC = ""; INV.FULL.DESC = "Unknown"
         ICR.CNV = "MD0"; ICR.CNV1 = "MD0,"
         ICR.DV1 = 1; ICR.MT1 = 1; ICR.DV2 = 1000
         ICR.TYPE = 3; ICR.SCAL = 0
      END

      PROD.SCRN<1,N> = PROD.SCRN<1,N>
      WHSE.SCRN<1,N> = WHSE.SCRN<1,N>
      ORDER.GQTY<1,N> = OCONV(INT(((ORDER.GQTY<1,N> / ICR.DV1) * ICR.MT1) / ICR.DV2 + .5),ICR.CNV1)
      ORDER.RESV<1,N> = OCONV(INT(((ORDER.RESV<1,N> / ICR.DV1) * ICR.MT1) / ICR.DV2 + .5),ICR.CNV1)
      ORDER.SHIP<1,N> = OCONV(INT(((ORDER.SHIP<1,N> / ICR.DV1) * ICR.MT1) / ICR.DV2 + .5),ICR.CNV1)
      ORDER.ALLO<1,N> = OCONV(INT(((ORDER.ALLO<1,N> / ICR.DV1) * ICR.MT1) / ICR.DV2 + .5),ICR.CNV1)


      IF ORDER.JOB<1,N,2> = "" THEN
         ORDER.JOB<1,N> = ORDER.JOB<1,N>
      END ELSE
         ORDER.JOB<1,N> = "MULTI"
      END
      BEGIN CASE
         CASE ORDER.IQTY<1,N> >= ORDER.OQTY<1,N>
            STATUS = "I"
         CASE ORDER.SHIP<1,N> >= ORDER.OQTY<1,N>
            STATUS = "S"
         CASE ORDER.ALLO<1,N> < 1
            STATUS = "O"
         CASE ORDER.FQTY<1,N> >= ORDER.ALLO<1,N>
            STATUS = "F"
         CASE 1
            STATUS = "M"
      END CASE
      ORDER.STATUS<1,N> = STATUS
      PROD.DESC<1,N> = INV.FULL.DESC
   NEXT N

   STATUS = RBO.setProperty('','INQ_PROD',PROD.SCRN)
   STATUS = RBO.setProperty('','INQ_PROD_DESC',PROD.DESC)
   STATUS = RBO.setProperty('','INQ_WHSE',WHSE.SCRN)
   STATUS = RBO.setProperty('','INQ_O_QTY',ORDER.GQTY)
   STATUS = RBO.setProperty('','INQ_R_QTY',ORDER.RESV)
   STATUS = RBO.setProperty('','INQ_A_QTY',ORDER.ALLO)
   STATUS = RBO.setProperty('','INQ_S_QTY',ORDER.SHIP)
   STATUS = RBO.setProperty('','INQ_JOB',ORDER.JOB)
   STATUS = RBO.setProperty('','INQ_STATUS',ORDER.STATUS)
RETURN

* End of method code
93000*
   STATUS = RBO.setProperty('', 'ServerStatus', '1')
   STATUS = RBO.setProperty('', 'ServerMessage', ERRMSG)
RETURN
