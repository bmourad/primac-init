SUBROUTINE JOBM_RESV_SUB(CONO,ACTION,DPTR,JOB.NUM)
$INCLUDE CPYLIB COMMON1
$INCLUDE JCS.CPYLIB COM.JCS.LINK
$INCLUDE ICS.CPYLIB COM.INV.MAIN  
$INCLUDE ICS.CPYLIB COM.INV.SERIAL
$INCLUDE JCS.CPYLIB COM.INV.STATS 
$INCLUDE PMC.CPYLIB COM.CUST
$INCLUDE OPS.CPYLIB COM.ORDER
*********************************************************************
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - JCSBP
* PROGRAM     - JOB.RESV.SUB
* DESCRIPTION -
*T20611 stefanie 11/24/1997 * Put in JR's correction that was forgotten.
*                             Posting not zeroing out reserve qtys.
*T26334 epitka 12/19/2001 * REV12
*********************************************************************
$INCLUDE WWINSERT RBO.H
$DEFINE JOB
$INCLUDE JCS.CPYLIB JOB
$DEFINE INVENTORY
$INCLUDE ICS.CPYLIB INVENTORY
$DEFINE CATEGORY
$INCLUDE ICS.CPYLIB CATEGORY
$DEFINE INVSTATS
$INCLUDE ICS.CPYLIB INV.STATS
$DEFINE INVJOBSTATS
$INCLUDE ICS.CPYLIB INV.JOB.STATS
$DEFINE INVWHSE
$INCLUDE ICS.CPYLIB INV.WHSE
$DEFINE SERIALRESV
$INCLUDE JCS.CPYLIB SERIAL.RESV

$INCLUDE ICS.CPYLIB INV.CNV ;*T27341

$DEFINE FILEVARS
$INCLUDE CPYLIB FILE.VARS
$INCLUDE CPYLIB CHAR

OPEN.FLAG=1
SYS.TYPE = 2
DEFFUN CALC.STK.QTY(COST.QTY,MAT INV.CNV.REC,ROND,LN)
IF DPTR = 0 THEN
	DPTR = 1
  	RCNT=DCOUNT(JOB.RESV.MATL,VM)
END ELSE
	RCNT = DPTR
END
FOR RSV = RCNT TO DPTR STEP -1
	RESV.PROD = JOB.RESV.MATL<1,RSV>
  	RESV.WHSE=JOB.RESV.WHSE<1,RSV>
  	MATREAD INV.REC FROM INVENTORY, CONO : RESV.PROD ELSE
    		ERRMSG = 'CANNOT LOCATE INVENTORY ':RESV.PROD:' FOR JOB ':JOB.NUM
    		GOTO 1999
  	END

	$INCLUDE ICSBP INV.UM.CNV
	MATREAD CATG.REC FROM CATEGORY, CONO : INV.LINE ELSE
    		ERRMSG = 'CANNOT LOCATE PROD LINE ':INV.LINE
    		GOTO 1999
  	END
	IWH.ID = CONO : JOB.RESV.MATL<1,RSV> : '!' : JOB.RESV.WHSE<1,RSV>
  	*MATREADU IWH.REC FROM INV.WHSE, IWH.ID THEN
	MATREAD IWH.REC FROM INV.WHSE, IWH.ID THEN
    		MAT ORG.IWH.REC = MAT IWH.REC
    		JOB.ID='' ; PERIOD='' ; SER.ARR=''
		CALL JCS_IWH_SUB(IWH.ID,JOB.ID,PERIOD,SER.ARR,"1",OPEN.FLAG)
	END ELSE
    		ERRMSG = 'CANNOT LOCATE INV.WHSE ':IWH.ID
    		GOTO 1999
  	END
  	IJS.ID = IWH.ID : "!" : JOB.NUM
  	MATREADU INV.JS.REC FROM INV.JOB.STATS, IJS.ID ELSE
*T446	MATREAD INV.JS.REC FROM INV.JOB.STATS, IJS.ID ELSE	
    		MAT INV.JS.REC = ""
    		IJS.JOB.CUST = JOB.CUST
    		IJS.JOB.DATE = JOB.RESV.DATE<1,RSV>
  	END
  	IF INV.COST.WT + 0 = 0 THEN INV.COST.WT = 100
	MATREADU INV.STAT.REC FROM INV.STATS, IWH.ID ELSE MAT INV.STAT.REC = ''
*T446 *MATREAD INV.STAT.REC FROM INV.STATS, IWH.ID ELSE MAT INV.STAT.REC = ''
  	LOCATE JOB.NUM IN ISTAT.JOB<1>,1 SETTING JLOC ELSE
    		ISTAT.JOB<1,JLOC> = JOB.NUM
  	END
  	IF ACTION = "D" THEN
    		JOB.RESV.QTY<1,RSV> = 0
    		JOB.RESV.AMT<1,RSV> = 0
    		IJS.REQ.QTY = ""
    		IJS.REQ.AMT = ""
    		IJS.REQ.DATE = ""
  	END
  	RESV.ARR=''
  	IF SRESV.SERIAL#'' THEN
    		;* this would be true only if product was serialy tracked
    		;* and CATG.RSV.SERIAL='Y'
    		;* if CATG.RESV.SERIAL='N' then reserve is
    		;* kept only at the warehouse level
    		;*SRESV.REC is set in SERIAL.RESERVE.SEL program only
    		PRWHSE=RESV.PROD:"!":RESV.WHSE
    		LCNT=DCOUNT(SRESV.SERIAL,VM)
    		LOCATE PRWHSE IN SRESV.PRWHSE<1> SETTING PRWHSE.POS THEN
      			OLD.PRWHSE=PRWHSE ; EOL=0
      			FOR L=PRWHSE.POS TO LCNT UNTIL EOL
        			IF OLD.PRWHSE=PRWHSE THEN
          				RESV.ARR<1,-1>=SRESV.RECP<1,L>
          				RESV.ARR<2,-1>=SRESV.SERIAL<1,L>
          				RESV.ARR<3,-1>=SRESV.QTY<1,L>
        			END ELSE
          				EOL=1
        			END
        			OLD.PRWHSE=PRWHSE
      			NEXT L
   		 END
  	END
  	RESV.QTY = JOB.RESV.QTY<1,RSV> - IJS.JOB.QTY
	$INCLUDE JCSBP FIFO.RESV.SUB
  	IF ERRMSG # '' THEN
    		JOB.RESV.QTY<1,RSV> = IJS.JOB.QTY
    		RELEASE INV.STATS, IWH.ID
    		RELEASE INV.WHSE, IWH.ID
    		RELEASE INV.JOB.STATS, IJS.ID
   		ACTION = ERRMSG  ;* T20611 <
*T27915
		RSV = DPTR ;*T27915
		CALL JCS_IWH_SUB('','','','',"9",'') ;*T27915
*T27915
    		GOTO 1999
  	END

  	IF IJS.JOB.ALOC + IJS.JOB.QTY = 0 AND IJS.JMT.SEQ = "" AND IJS.REQ.QTY + 0 = 0 THEN
    		DELETE INV.JOB.STATS, IJS.ID
    		ISTAT.JOB = DELETE(ISTAT.JOB,1,JLOC,0)
 	END ELSE
    		MATWRITE INV.JS.REC ON INV.JOB.STATS, IJS.ID
  	END

	IF ISTAT.JOB = '' AND ISTAT.PO = '' THEN
    		DELETE INV.STATS, IWH.ID
  	END ELSE
    		MATWRITE INV.STAT.REC ON INV.STATS, IWH.ID
  	END
	
  	IF CATG.TRACK.QOH = "Y" THEN
    		JOB.ID=CONO:JOB.NUM
    		IF RESV.ARR<2>#'' THEN
      			;* this would only be true for CATG.TRK.LVL='S'
      			;* & CATG.COST.TYPE='AC' & CATG.RESV.SERIAL='Y'
      			LCNT=DCOUNT(RESV.ARR<2>,VM)
      			SER.ARR=''; CNT=''
      			FOR L=1 TO LCNT
        			SCNT=DCOUNT(RESV.ARR<2,L>,SVM)
        			FOR S=1 TO SCNT
          				CNT+=1
          				SER.ARR<1,CNT,1>=RESV.ARR<2,L,S> ;*serial
          				SER.ARR<1,CNT,2>=RESV.ARR<3,L,S>;*qty to be reserved
        			NEXT S
      			NEXT L
    		END
		CALL JCS_IWH_SUB(IWH.ID,JOB.ID,PERIOD,SER.ARR,"5",OPEN.FLAG)
		CALL JCS_IWH_SUB(IWH.ID,'','','',"3",OPEN.FLAG)
		*MATWRITE IWH.REC ON INV.WHSE, IWH.ID
  	END ELSE
    		RELEASE INV.WHSE, IWH.ID
  	END
1999
NEXT RSV
RELEASE
GOTO 99999
99999 RETURN
END

