SUBROUTINE FGRM_CHECK_PROD_WHSE
********************************************************************************
*   Program name :- FGRM_CHECK_PROD_WHSE
*   Created:- 11/21/2005
*   Programmer :- Suhail Hussain S
*------------------------------------------------------------------------------*
*

* In Properties:
* --------------
*  
*
* Out Properties:
* ---------------
*  
********************************************************************************
$INCLUDE WWINSERT RBO.H

$INCLUDE PMC.CPYLIB COMPANY
$INCLUDE JCS.CPYLIB JOB
$INCLUDE PMC.CPYLIB CUSTOMER
$INCLUDE ICS.CPYLIB INVENTORY
$INCLUDE ICS.CPYLIB WAREHOUSE
$INCLUDE OPS.CPYLIB DAILY_FNGD_RECEIPT
$INCLUDE OPS.CPYLIB JOB.FNGD.STATS
$INCLUDE ICS.CPYLIB CATEGORY
$INCLUDE ICS.CPYLIB INV.WHSE
$INCLUDE ICS.CPYLIB INV.CNV
$INCLUDE CPYLIB CHAR

ERRMSG=''
MAT DFR.REC=''
STATUS=RBO.getProperty('','Job',JOBID)
STATUS = RBO.getProperty("","Prod",DFR.PROD)
STATUS = RBO.getProperty("","Whse",DFR.WHSE)
STATUS = RBO.getProperty("","PMCProperty",PMCProperty)
*DFR.WHSE SHOULD BE EITHER null OR SHOULD HAVE A VALUE WHEN SENT THRU WHSE

   USER_ID = PMCProperty<1,1>
   CONO = PMCProperty<1,4>
   
   DEFFUN DIVISION_POSITION(CONO,CONTROL.FILE,DIV.CODE)
   DEFFUN CURRENT_PERIOD(CONO,CONTROL.FILE,DIV.POS,FISCAL.FLAG)

   OPEN "","DAILY_FNGD_RECEIPT" TO DAILY_FNGD_RECEIPT ELSE
      ERRMSG="DAILY_FNGD_RECEIPT" 
      RET_VALUE<1,1> = 0
      RET_VALUE<1,2> = 1
      GOTO 91000
   END
   OPEN "","INV_RECEIPTS" TO INV_RECEIPTS ELSE
      ERRMSG="INV_RECEIPTS"
      RET_VALUE<1,1> = 0
      RET_VALUE<1,2> = 1
      GOTO 91000
   END
   OPEN "","COMPANY" TO COMPANY ELSE
      ERRMSG="COMPANY" 
      RET_VALUE<1,1> = 0
      RET_VALUE<1,2> = 1
      GOTO 91000
   END
   OPEN "","CUSTOMER" TO CUSTOMER ELSE
      ERRMSG="CUSTOMER"
      RET_VALUE<1,1> = 0
      RET_VALUE<1,2> = 1
      GOTO 91000
   END
   OPEN "","JOB" TO JOB ELSE
      ERRMSG="JOB"
      RET_VALUE<1,1> = 0
      RET_VALUE<1,2> = 1
      GOTO 91000
   END
   OPEN "","JOB.FNGD.STATS" TO JOB.FNGD.STATS ELSE
      ERRMSG="JOB.FNGD.STATS"
      RET_VALUE<1,1> = 0
      RET_VALUE<1,2> = 1
      GOTO 91000
   END
   OPEN "","CONTROL" TO CONTROL ELSE
      ERRMSG="CONTROL"
      RET_VALUE<1,1> = 0
      RET_VALUE<1,2> = 1
      GOTO 91000
   END
   OPEN "","INVENTORY" TO INVENTORY ELSE
      ERRMSG="INVENTORY"
      RET_VALUE<1,1> = 0
      RET_VALUE<1,2> = 1
      GOTO 91000
   END
   OPEN "","CATEGORY" TO CATEGORY ELSE
      ERRMSG = "CATEGORY"
      RET_VALUE<1,1> = 0
      RET_VALUE<1,2> = 1
      GOTO 91000
   END
   OPEN "","WAREHOUSE" TO WAREHOUSE ELSE
      ERRMSG = "WAREHOUSE"
      RET_VALUE<1,1> = 0
      RET_VALUE<1,2> = 1
      GOTO 91000
   END
   OPEN "","INV.WHSE" TO INV.WHSE ELSE
      ERRMSG = "INV.WHSE"
      RET_VALUE<1,1> = 0
      RET_VALUE<1,2> = 1
      GOTO 91000
   END
   OPEN "","CONTROL" TO CONTROL ELSE 
      ERRMSG = "CONTROL FILE IS MISSING"
      RET_VALUE<1,1> = 0
      RET_VALUE<1,2> = 1
      GOTO 91000
   END 

   MATREAD JOB.REC FROM JOB, CONO:JOBID ELSE
      ERRMSG="Cannot locate Job # ":JOBID
      RET_VALUE<1,1> = 0
      RET_VALUE<1,2> = 1
      GOTO 91000
   END

   MATREAD CUST.REC FROM CUSTOMER, CONO:JOB.CUST ELSE
      ERRMSG="Cannot locate customer (":JOB.CUST:") for Job # ":JOBID
      RET_VALUE<1,1> = 0
      RET_VALUE<1,2> = 1
      GOTO 91000
   END

   MATREAD JFS.REC FROM JOB.FNGD.STATS, CONO:JOBID ELSE
      MAT JFS.REC=""
   END

* Insert method code here
GOSUB CHECK.LINKS
GOSUB GET.PRODUCT
***
   STATUS = RBO.setProperty("","RET_VALUE",RET_VALUE)
RETURN
*
*************
CHECK.LINKS: 
*************
*
   PDNOS=""; WHNOS=""; REFNOS=""
   FLINES=DCOUNT(JFS.PROD,VM)
   FOR P=1 TO FLINES
      PROD=JFS.PROD<1,P>
      WHSE=JFS.WHSE<1,P>
      LOCATE PROD IN PDNOS,1 SETTING PLOC THEN
         LOCATE WHSE IN WHNOS<PLOC>,1 SETTING WLOC ELSE
            WHNOS<PLOC,WLOC>=WHSE
            REFNOS<PLOC,WLOC>=P
         END
      END ELSE
         PDNOS<PLOC>=PROD
         WHNOS<PLOC>=WHSE
         REFNOS<PLOC>=P
      END
   NEXT P
   RETURN
*

*****************
GET.PRODUCT: 
*****************
*
   ;* determine if entry of product is needed
   BEGIN CASE
      CASE FLINES=1
         DFR.PROD=JFS.PROD<1,1>
         DFR.WHSE=JFS.WHSE<1,1>
         DFR.UN.PRICE=JFS.U.PRICE<1,1>
         GOTO 5019
      CASE DFR.PROD # ""
         GOTO 5019
   END CASE

5019*
   ;* verify product
   LOCATE DFR.PROD IN PDNOS,1 SETTING PLOC ELSE
      ERRMSG="Cannot locate product (":DFR.PROD:") for this Job."
      RET_VALUE<1,1> = 0
      RET_VALUE<1,2> = 1
      GOTO 91000
   END
   MATREAD INV.REC FROM INVENTORY, CONO:DFR.PROD ELSE
      ERRMSG="Cannot locate Product # ":DFR.PROD
      RET_VALUE<1,1> = 0
      RET_VALUE<1,2> = 1
      GOTO 91000
   END
   IF INV.SUBS # "" THEN
      ERRMSG="Cannot receive finished goods for a Master Product"
      RET_VALUE<1,1> = 0
      RET_VALUE<1,2> = 1
      GOTO 91000
   END
   MATREAD CATG.REC FROM CATEGORY, CONO:INV.LINE ELSE
      ERRMSG="Cannot locate Product Line # ":INV.LINE
      RET_VALUE<1,1> = 0
      RET_VALUE<1,2> = 1
      GOTO 91000
   END
   IF CATG.TRK.LVL="S" THEN
      ERRMSG="Cannot use this function to receive palletized goods"
      RET_VALUE<1,1> = 0
      RET_VALUE<1,2> = 1
      GOTO 91000
   END
   $INCLUDE ICSBP INV.UM.CNV
   ;* display warehouse
   WCNT=DCOUNT(WHNOS<PLOC>,VM)
   BEGIN CASE
      CASE WCNT=1
         ECD.RET.VALUE=WHNOS<PLOC,1>         
         GOTO 5025
      CASE DFR.WHSE # ""
         ECD.RET.VALUE=DFR.WHSE
         GOTO 5025
   END CASE
5020*
   *enter warehouse
   RET_VALUE<1,1> = 0
   RET_VALUE<1,2> = 2
   SWAP @VM WITH "," IN WHNOS
   RET_VALUE<1,3> = WHNOS
RETURN

5025*
   DFR.WHSE=ECD.RET.VALUE
   ;*verify warehouse
   LOCATE DFR.WHSE IN WHNOS<PLOC>,1 SETTING WLOC ELSE
      ERRMSG="Warehouse (":DFR.WHSE:") is not valid for product (":DFR.PROD:") on this order"
      RET_VALUE<1,1> = 0
      RET_VALUE<1,2> = 2
      GOTO 91000
   END
   FLN=REFNOS<PLOC,WLOC>
   MATREAD IWH.REC FROM INV.WHSE, CONO:DFR.PROD:"!":DFR.WHSE ELSE
      ERRMSG="Cannot locate warehouse (":DFR.WHSE:") for product # ":DFR.PROD
      RET_VALUE<1,1> = 0
      RET_VALUE<1,2> = 2
      GOTO 91000
   END
   MATREAD WHSE.REC FROM WAREHOUSE, CONO:ECD.RET.VALUE ELSE MAT WHSE.REC=''
   DIV.CODE=WHS.DIV; USER.ID=UPCASE(USER_ID); ERRMSG=''
   CALL CK_DIV_SEC_SUB(CONO,DIV.CODE,USER.ID,ERRMSG)
   IF ERRMSG # '' THEN
      RET_VALUE<1,1> = 0
      RET_VALUE<1,2> = 2
      GOTO 91000
   END
   GOSUB 8500
   IF ERRMSG#'' THEN 
      RET_VALUE<1,1> = 0
      RET_VALUE<1,2> = 2
      GOTO 91000
   END 
   MATREAD WHSE.REC FROM WAREHOUSE, CONO:DFR.WHSE ELSE MAT WHSE.REC=''
   IF WHS.DIV # JOB.DIV AND WHS.DIV # "00" THEN
      ERRMSG="INVENTORY WAREHOUSE DIVISION DOES NOT MATCH JOB DIVISION"
      RET_VALUE<1,1> = 0
      RET_VALUE<1,2> = 2
      GOTO 91000
   END
   RET_VALUE<1,1> = 1
   RET_VALUE<1,2> = 0
   RET_VALUE<1,3> = DFR.WHSE
5099*
   RETURN
*
*---- Retrive Fiscal Months per Division
*
*********
8500: 
*********
*
   DIV.POS=DIVISION_POSITION(CONO,CONTROL,DIV.CODE)
   BEGIN CASE                                              
      CASE DIV.POS<1,1>=''                                  
         DIV.POS=DIV.POS<1,2>                                
         CUR.PERIOD=CURRENT_PERIOD(CONO,CONTROL,DIV.POS,"IC")
         IF CUR.PERIOD<1,1>='' THEN                          
            CUR.PERIOD=CUR.PERIOD<1,2>           
         END ELSE                                            
            IF CUR.PERIOD<1,2>='-2' THEN                      
               ERRMSG=CUR.PERIOD<1,2>                          
            END                                               
         END                                                 
      CASE DIV.POS<1,1>='-1'                                
         ERRMSG=DIV.POS<1,2>                                 
      CASE DIV.POS<1,1>='-2'                                
         ERRMSG=DIV.POS<1,2>                                 
   END CASE                                                
   RETURN

* End of method code
91000*
   STATUS = RBO.setProperty("","ServerMessage",ERRMSG)
   STATUS = RBO.setProperty("","ServerStatus",1)
   STATUS = RBO.setProperty("","RET_VALUE",RET_VALUE)
RETURN

