SUBROUTINE POST_FNGD_ADJ_SUB(INVRID,ERRMSG,MAT O.INVR.REC,ADJ.CODE,ADJ.PERIOD,CUR.PERIOD)
$INCLUDE CPYLIB COMMON1
$INCLUDE JCS.CPYLIB COM.JCS.LINK  
$INCLUDE ICS.CPYLIB COM.INV.MAIN  
$INCLUDE ICS.CPYLIB COM.INV.SERIAL
$INCLUDE JCS.CPYLIB COM.INV.STATS 
$INCLUDE PMC.CPYLIB COM.CUST
$INCLUDE OPS.CPYLIB COM.ORDER
*********************************************************************
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - EPRIMAC
* PROGRAM     - POST_FNGD_ADJ_SUB
* BY          - KHAJA ZIAUDDIN
* DATE        - 07/16/2003  (mm/dd/yyyy)
* DESCRIPTION   
*		   
*ENDDOC
*************************************************************
$INCLUDE WWINSERT RBO.H

$INCLUDE PMC.CPYLIB COMPANY
$DEFINE CUSTOMER
$INCLUDE PMC.CPYLIB CUSTOMER
$DEFINE JOB
$INCLUDE JCS.CPYLIB JOB
$DEFINE INVENTORY
$INCLUDE ICS.CPYLIB INVENTORY
$DEFINE CATEGORY
$INCLUDE ICS.CPYLIB CATEGORY
$DEFINE INVWHSE
$INCLUDE ICS.CPYLIB INV.WHSE
$DEFINE INVWHSELOC
$INCLUDE ICS.CPYLIB INV.WHSE.LOC
$INCLUDE ICS.CPYLIB INV.ADJ.CODES           
$INCLUDE ICS.CPYLIB INV.CNV
$DEFINE FNGDSTATS
$INCLUDE ICS.CPYLIB FNGD.STATS
$INCLUDE ICS.CPYLIB FNGD_ADJ_HIST
$DEFINE FNGDJOBSTATS
$INCLUDE ICS.CPYLIB FNGD.JOB.STATS
$DEFINE ORDER
$INCLUDE OPS.CPYLIB ORDER
$DEFINE ORDERDETAIL
$INCLUDE OPS.CPYLIB ORDER.DETAIL
$DEFINE ORDERDETAILINQ
$INCLUDE OPS.CPYLIB ORDER.DETAIL.INQ
$DEFINE JOBFNGDSTATS
$INCLUDE OPS.CPYLIB JOB.FNGD.STATS
$DEFINE FILEVARS
$INCLUDE CPYLIB FILE.VARS
$DEFINE INVRECEIPTS
$INCLUDE ICS.CPYLIB INV_RECEIPTS
$DEFINE INVRECPWHSE
$INCLUDE ICS.CPYLIB INV_RECP_WHSE
$DEFINE INVSERIAL
$INCLUDE ICS.CPYLIB INV_SERIAL
$DEFINE INVAUDITHIST
$INCLUDE ICS.CPYLIB INV_AUDIT_HIST
*
DEFFUN GET_INAH_SEQ (CONO,CONTROL.FILE,INV_AUDIT_HIST.FILE)
DEFFUN CALC_STK_QTY(COST.QTY,MAT INV.CNV.REC,ROND,LN)
DEFFUN CALC_DIAM(COST.QTY,STK.QTY,MAT INV.CNV.REC)
*
*---- Initialization
*
DIM O.INVR.REC(45)
DIM S.INVR.REC(45)
OPEN.FLAG=1
*
*---- Get all the related records
*
IF INVR.ADJ.PRT.DATE='' THEN
  ERRMSG="Must print the Adjustment before posting"
  GOTO 99999
END
*
ERRMSG=""
MAT FAH.REC=""
CONO=INVRID[1,3]
RECPNO=INVRID[4,99]
TODAY=DATE()
LIMIT=INVR.REC.SIZE
FOR I=1 TO LIMIT
  IF INVR.REC(I) # O.INVR.REC(I) THEN LIMIT=0
NEXT I
IF LIMIT THEN
  ERRMSG="No logged adjustments, Receipt will remain un-adjusted"
  GOTO 99999
END
MATREAD IADJ.REC FROM INV.ADJ.CODES, CONO:ADJ.CODE ELSE
  MAT IADJ.REC=''
END
INV.ID=CONO:INVR.PROD
MATREADU INV.REC FROM INVENTORY, INV.ID ELSE
  ERRMSG="Cannot locate Product # ":INVR.PROD
  GOTO 99900
END
IF INV.M.LINE # "FNGD" AND INV.M.LINE # "SFNGD" THEN
  ERRMSG=INVR.PROD:" is not setup as a Finished Goods Product"
  GOTO 99900
END
MATREAD CATG.REC FROM CATEGORY, CONO:INV.LINE ELSE
  ERRMSG="Cannot locate Product Line # ":INV.LINE
  GOTO 99900
END
MATREADU JFS.REC FROM JOB.FNGD.STATS, CONO:INVR.JOB ELSE
  ERRMSG="NO Finished Goods for Job # ":INVR.JOB
  GOTO 99800
END
$INCLUDE ICSBP INV.UM.CNV
PTR=1
LOOP
  LOCATE INVR.PROD IN JFS.PROD<1>,PTR SETTING JFSL THEN
    IF JFS.WHSE<1,JFSL>=INVR.ORG.WHSE THEN PTR=0
  END ELSE
    PTR=0; JFSL=0
  END
WHILE PTR DO
  PTR=JFSL+1
REPEAT
IF NOT(JFSL) THEN
  ERRMSG="No ":INVR.PROD:" product for Job # ":INVR.JOB
  GOTO 99800
END
TOT.QTY=SUM(INVR.ORD.QTY)
TOT.SQTY=SUM(INVR.ORD.SQTY)
INVR.TOT.COST=0
INVR.TOT.AMT=0
OCNT=DCOUNT(INVR.ORDER,@VM)
FOR OPTR=1 TO OCNT
  RECV.QTY=INVR.ORD.QTY<1,OPTR>+0
  UNIT.COST=INVR.UNIT.COST
  UNIT.SALE=INVR.UN.SALE<1,OPTR>
  TOT.COST=INT(UNIT.COST/100*(RECV.QTY/1000)/(INV.COST.WT/100)+0.5)
  TOT.AMT=INT(UNIT.SALE/100*(RECV.QTY/1000)/(INV.COST.WT/100)+0.5)
  INVR.TOT.COST+=TOT.COST
  INVR.TOT.AMT+=TOT.AMT
NEXT OPTR
TEMP.QTY=INVR.ORD.QTY
TEMP.UN.SALE=INVR.UN.SALE
TEMP.UN.COST=INVR.UNIT.COST

*
FAH.PROD=INVR.PROD; FAH.WHSE=INVR.ORG.WHSE
FAH.LOC=ISTK.LOC
FAH.REC.DATE=INVR.ENT.DATE; FAH.PERIOD=ADJ.PERIOD
FAH.UN.COST=INVR.UNIT.COST; FAH.UN.SALE=INVR.UN.SALE
FAH.COST=INVR.TOT.COST; FAH.SALE=INVR.TOT.AMT
FAH.SQTY=TOT.SQTY; FAH.QTY=TOT.QTY
MAT S.INVR.REC=MAT INVR.REC
MAT INVR.REC=MAT O.INVR.REC
TEMP.OLD.QTY=INVR.ORD.QTY
TEMP.OLD.UN.SALE=INVR.UN.SALE
TEMP.OLD.UN.COST=INVR.UNIT.COST
FAH.CUST=INVR.CUST; FAH.JOB=INVR.JOB
FAH.OLD.WHSE=FAH.WHSE; FAH.OLD.LOC=ISTK.LOC
FAH.OLD.REC.DATE=INVR.ENT.DATE; FAH.OLD.RECP.NO=RECPNO
FAH.OLD.UN.COST=INVR.UNIT.COST; FAH.OLD.UN.SALE=INVR.UN.SALE
FAH.OLD.COST=INVR.TOT.COST; FAH.OLD.SALE=INVR.TOT.AMT
FAH.OLD.SQTY=TOT.SQTY; FAH.OLD.QTY=TOT.QTY

*
BEGIN CASE
  CASE TEMP.QTY # TEMP.OLD.QTY
  CASE FAH.QTY # FAH.OLD.QTY
  CASE FAH.SQTY # FAH.OLD.SQTY
  CASE FAH.LOC # FAH.OLD.LOC
  CASE FAH.COST # FAH.OLD.COST
  CASE FAH.SALE # FAH.OLD.SALE
 CASE 1
   MAT INVR.REC=MAT S.INVR.REC
    GOTO 99800
END CASE
*
IWH.ID=INV.ID:"!":INVR.ORG.WHSE
MATREADU IWH.REC FROM INV.WHSE, IWH.ID THEN
  ACTION=1 ; LOC.SEQ='' ; LAST='' ; PERIOD=''           
  INAH.PROD=INVR.PROD ; INAH.WHSE=INVR.ORG.WHSE
  MAT ORG.IWH.REC = MAT IWH.REC
  CALL OPS_IWH_SUB(CONO,PERIOD,LOC.SEQ,LAST,ACTION,OPEN.FLAG)
END ELSE
  ERRMSG="Cannot locate INV.WHSE # ":INVR.PROD:", ":INVR.ORG.WHSE
  GOTO 99700
END
*
TEMP.NEW.QTY=""
FCNT=DCOUNT(INVR.ORDER,@VM)
LOCATE RECPNO IN IWH.RECP.NO<1>,1 SETTING RPOS ELSE
  ERRMSG="Cannot locate Receipt ":RECPNO:" in the INV.WHSE record"
  GOTO 99500                                                             
END

FOR FPTR=1 TO FCNT
  ORD.ID=INVR.ORDER<1,FPTR>
  TEMP.NEW.QTY+=TEMP.QTY<1,FPTR>
  BEGIN CASE
    CASE INVR.CUST#IWH.VDR.FI<1,RPOS>
      ERRMSG="Warehouse / Receipt Customer No. mismatch ":IWH.VDR.FI<1,RPOS>:" / ":INVR.CUST
      GOTO 99500
    CASE INVR.JOB # IWH.PO.NO.FI<1,RPOS>
      ERRMSG="Warehouse / Receipt Job No. mismatch ":IWH.PO.NO.FI<1,RPOS>:" / ":INVR.JOB
      GOTO 99500
  END CASE
NEXT FPTR
*
LOCATE ISTK.LOC IN IWH.LOC<1>,1 SETTING LLOC ELSE
  ERRMSG="Cannot locate location ":ISTK.LOC:" for INV.WHSE # ":INVR.PROD:", ":INVR.ORG.WHSE
  GOTO 99700
END
IWLO.ID=IWH.ID:"!":ISTK.LOC
MATREADU IWLO.REC FROM INV.WHSE.LOC, IWLO.ID ELSE
  ERRMSG="Cannot locate INV / WHSE / LOC # ":INVR.PROD:"/":INVR.ORG.WHSE:"/":ISTK.LOC
  GOTO 99600
END
*
FJS.ID=IWH.ID:"!":INVR.JOB
MATREADU FJS.REC FROM FNGD.JOB.STATS, FJS.ID ELSE
  ERRMSG="Cannot locate FNGD.JOB.STATS # ":INVR.PROD:", ":INVR.ORG.WHSE:", ":INVR.JOB
  GOTO 99400
END
MATREADU FGS.REC FROM FNGD.STATS, IWH.ID ELSE
  ERRMSG="Cannot locate FNGD.STATS # ":INVR.PROD:", ":INVR.ORG.WHSE
  GOTO 99300
END
LOCATE INVR.JOB IN FGS.JOB<1>,1 SETTING JFGL ELSE
  ERRMSG="Cannot locate JOB # ":INVR.JOB:" in FNGD.STATS # ":INVR.PROD:", ":INVR.ORG.WHSE
  GOTO 99300
END
*
GOSUB PROCESS.DISTRIBUTION
IF LOCK.FLAG THEN
  GOTO 99300
END ELSE
  GOTO 99999
END
*
**************************************************************************
***** S U B R O U T I N E S **********************************************
**************************************************************************
*
**********************
PROCESS.DISTRIBUTION: 
**********************
*
LOCATE RECPNO IN IWH.RECP.NO<1>,1 SETTING RPOS THEN
  DIFF.QTY.FI=TEMP.NEW.QTY-IWH.ORG.FI<1,RPOS>
  INAH.NEW.QTY=TEMP.NEW.QTY
  INAH.CUR.QTY=IWH.QTY.FI<1,RPOS>
END ELSE
  DIFF.QTY.FI=0
END
UNIT.COST=TEMP.UN.COST
ROND=".5"
IF DIFF.QTY.FI < 0 THEN
  ROND='-.5'
END
DIFF.COST=INT(UNIT.COST/100*(DIFF.QTY.FI/1000)/(INV.COST.WT/100)+ROND)
IF DIFF.QTY.FI # 0 THEN
  GOSUB SET.INAH
  GOSUB ADJUST.IRW
  GOSUB ADJUST.SERIAL
  INVR.DEPL.QTY+=DIFF.QTY.FI
  INVR.AUDIT.NO<1,-1>=INAH.SEQ
  LOCATE "*FNGD*" IN INVR.ORDER<1> SETTING OPOS THEN
    INVR.ORD.QTY<1,OPOS>+=DIFF.QTY.FI
    INVR.ORD.SQTY<1,OPOS>=CALC_STK_QTY(INVR.ORD.QTY<1,OPOS>,MAT INV.CNV.REC,".5",'')
  END
  INAH.ID=CONO:INAH.SEQ
  MATWRITEU INAH.REC ON INV_AUDIT_HIST,INAH.ID
  MATWRITEU INVR.REC ON INV_RECEIPTS,INVRID
  IRW.ID=CONO:RECPNO:"!":INVR.ORG.WHSE
  MATWRITEU IRW.REC ON INV_RECP_WHSE,IRW.ID
  ISTK.ID=CONO:IRW.SERIAL.NO
  MATWRITEU ISTK.REC ON INV_SERIAL,ISTK.ID
  IWLO.LOC.ON.HAND+=DIFF.QTY.FI
  MATWRITEU IWLO.REC ON INV.WHSE.LOC,IWLO.ID
  IWH.QTY.FI<1,RPOS>=IWH.QTY.FI<1,RPOS>+DIFF.QTY.FI
  IWH.ORG.FI<1,RPOS>=IWH.ORG.FI<1,RPOS>+DIFF.QTY.FI
  IWH.RSV.FI<1,RPOS>=IWH.RSV.FI<1,RPOS>+DIFF.QTY.FI
  IF IWH.QTY.FI<1,RPOS> < IWH.RSV.FI<1,RPOS> THEN
    IWH.RSV.FI<1,RPOS>=IWH.QTY.FI<1,RPOS>
  END
  IF IWH.RSV.FI<1,RPOS> < 0 THEN
    IWH.RSV.FI<1,RPOS>=0
  END
  IWH.ON.HAND=IWH.ON.HAND+DIFF.QTY.FI
  IF CUR.PERIOD=ADJ.PERIOD THEN
    CALL INV_AVG_COST_MAINT(MAT IWH.REC, INV.COST.WT)
  END
  MAT ORG.IWH.REC=MAT IWH.REC         
  IWH.VDR.FI = ""                     
  IWH.PO.NO.FI = ""                   
  IWH.PO.LN.FI = ""                   
  IWH.ORG.FI = ""                     
  IWH.RSV.FI = ""                     
  IWH.QTY.FI = ""                     
  IWH.COST.FI = ""                    
  IWH.ACT.COST = ""                   
  MATWRITE IWH.REC ON INV.WHSE, IWH.ID
  MAT IWH.REC = MAT ORG.IWH.REC       
  LOCK.FLAG=1
  OCNT=DCOUNT(INVR.ORDER,@VM)
  FOR OPTR=1 TO OCNT
    DIFF.QTY = TEMP.QTY<1,OPTR> - TEMP.OLD.QTY<1,OPTR> 
    IF DIFF.QTY = 0 THEN CONTINUE                      
    ORD.ID=INVR.ORDER<1,OPTR>
    SHPNO=INVR.SHIP.TO<1,OPTR>
    GOSUB CHECK.ORDER
    IF ERRMSG # "" THEN GOTO 99200
    IF NOT(LOCK.FLAG) THEN GOSUB 8000
    GOSUB ADJUST.ALLOCATION
    GOSUB 4000
    GOSUB WRITE.RECORDS
    IF ORD.ID#"*FNGD*" THEN
      GOSUB RESERVE.FNGD
    END
  NEXT OPTR
END
RETURN
*
**************
CHECK.ORDER: 
**************
*
PLOC=0; PDLOC=0; JLOC=0; PLLOC=0
IF ORD.ID="*FNGD*" OR IADJ.TYPE#'P' THEN
  MAT ORD.REC=''
  CUSTID=INVR.CUST
END ELSE
  MATREADU ORD.REC FROM ORDER, CONO:ORD.ID ELSE
    ERRMSG="Cannot locate ORDER # ":ORD.ID
    RETURN
  END
  CUSTID=ORD.CUST
  STATUS="L"; SHPTO="ALL"
  CALL ORDER_LINE_UPD(CONO,ORD.ID,SHPTO,STATUS)
  PTR=1
  LOOP
    LOCATE INVR.PROD IN ODQ.PROD<1>,PTR SETTING PLOC THEN
      IF INVR.ORG.WHSE=ODQ.WHSE<1,PLOC> THEN PTR=0
    END ELSE
      PLOC=0; PTR=0
    END
  WHILE PTR DO
    PTR=PLOC+1
  REPEAT
  IF PLOC=0 THEN
    ERRMSG="Cannot locate Product, Whse # ":INVR.PROD:", ":INVR.ORG.WHSE:" for ORDER # ":ORD.ID
    RETURN
  END
  PTR=1
  LOOP
    LOCATE SHPNO IN ODQ.FI.SHPNO<1,PLOC>,PTR SETTING PLLOC THEN
      IF ODQ.RECP.NO<1,PLOC,PLLOC>=RECPNO THEN PTR=0
    END ELSE
      PLLOC=0; PTR=0
    END
  WHILE PTR DO
    PTR=PLLOC+1
  REPEAT
  IF PLLOC=0 THEN
    ERRMSG="Cannot locate receipt reference ":RECPNO:" for Order # ":ORD.ID
    GOTO 99200
  END
  PDLOC=0; JLOC=0
  PTR=1
  LOOP
    LOCATE INVR.JOB IN ODQ.JOB<1,PLOC>,PTR SETTING JLOC THEN
      IF SHPNO="" OR ODQ.JOB.SHPNO<1,PLOC,JLOC>=SHPNO THEN PTR=0
    END ELSE
      JLOC=0; PTR=0
    END
  WHILE PTR DO
    PTR=JLOC+1
  REPEAT
  IF JLOC > 0 THEN
    SHPNO=ODQ.JOB.SHPNO<1,PLOC,JLOC>
    LOCATE SHPNO IN ORD.SHIP.TO<1>,1 SETTING S THEN
      FOR P=1 TO ORD.DET.REC.SIZE
        ORD.DET.REC(P)=ORD.DET.SUM(P,S)
      NEXT P
      PTR=1
      LOOP
        LOCATE INVR.PROD IN OSD.PROD<1>,PTR SETTING PDLOC THEN
          IF INVR.ORG.WHSE=ODQ.WHSE<1,PDLOC> THEN PTR=0
        END ELSE
          PDLOC=0; PTR=0
        END
      WHILE PTR DO
        PTR=PDLOC+1
      REPEAT
    END
  END
END
RETURN
*
*********
4000*
*********
*
MAT INVR.REC=MAT S.INVR.REC
IF DIFF.QTY.FI # 0 THEN FAH.ADJ.TYPE="Q"
FAH.OPER.ID=@LOGNAME
*
JFS.F.QTY<1,JFSL>+=DIFF.QTY
FJS.F.QTY+=DIFF.QTY
FGS.M.QTY<1,JFSL>-=JFS.F.QTY<1,JFSL>
IF FGS.M.QTY<1,JFGL> < 0 THEN FGS.M.QTY<1,JFGL>=0
*
*---- Receipt Bucket (Fifo)
*
RETURN
*
******************
ADJUST.ALLOCATION: 
******************
*
MAT INVR.REC=MAT O.INVR.REC
IF PDLOC THEN
  LOCATE ORD.ID IN JFS.ORDER<1,JFSL>,1 SETTING OLOC THEN
    JFS.ORD.QTY<1,JFSL,OLOC>=JFS.ORD.QTY<1,JFSL,OLOC> - DIFF.QTY
    IF JFS.ORD.QTY<1,JFSL,OLOC> < 1 THEN
      JFS.ORDER=DELETE(JFS.ORDER,1,JFSL,OLOC)
      JFS.ORD.QTY=DELETE(JFS.ORD.QTY,1,JFSL,OLOC)
    END
    JFS.A.QTY<1,JFSL>=SUM(JFS.ORD.QTY<1,JFSL>)
    FGS.A.QTY<1,JFGL>=JFS.A.QTY<1,JFSL>
  END
  LOCATE ORD.ID IN FJS.ORD<1>,1 SETTING OLOC THEN
    FJS.ORD.QTY<1,OLOC>=FJS.ORD.QTY<1,OLOC> - DIFF.QTY
    IF FJS.ORD.QTY<1,OLOC> < 1 THEN
      FJS.ORD=DELETE(FJS.ORD,1,OLOC,0)
      FJS.ORD.QTY=DELETE(FJS.ORD.QTY,1,OLOC,0)
    END
    FJS.A.QTY=SUM(FJS.ORD.QTY<1,JFSL>)
  END
END
RETURN
*
***************
WRITE.RECORDS: 
***************
*
MATWRITE INV.REC ON INVENTORY, INV.ID
;*                           
MATWRITE JFS.REC ON JOB.FNGD.STATS, CONO:INVR.JOB
MATWRITE FJS.REC ON FNGD.JOB.STATS, FJS.ID
MATWRITE FGS.REC ON FNGD.STATS, IWH.ID
LOCK.FLAG=0
RETURN
*
****************
RESERVE.FNGD: 
****************
*
IF ORD.ID#"*FNGD*" AND IADJ.TYPE="P" THEN
  ODQ.FI.QTY<1,PLOC,PLLOC>=ODQ.FI.QTY<1,PLOC,PLLOC>+DIFF.QTY
  ODQ.R.QTY<1,PLOC>=SUM(ODQ.FI.QTY<1,PLOC>)
  ODQ.F.QTY<1,PLOC>=ODQ.F.QTY<1,PLOC>+DIFF.QTY.FI
  ODQ.JOB.QTY<1,PLOC,JLOC>=ODQ.JOB.QTY<1,PLOC,JLOC> - DIFF.QTY
  IF ODQ.JOB.QTY<1,PLOC,JLOC> < 1 THEN
    ODQ.JOB=DELETE(ODQ.JOB,1,PLOC,JLOC)
    ODQ.JOB.SHPNO=DELETE(ODQ.JOB.SHPNO,1,PLOC,JLOC)
    ODQ.JOB.QTY=DELETE(ODQ.JOB.QTY,1,PLOC,JLOC)
  END
  ODQ.A.QTY<1,PLOC>=SUM(ODQ.JOB.QTY<1,PLOC>)
  PTR=JLOC+1
  LOCATE INVR.JOB IN ODQ.JOB<1,PLOC>,PTR SETTING JLOC ELSE
    JLOC=0
  END
*
  LOCATE INVR.JOB IN ORD.JOB<1>,1 SETTING JLOC ELSE
    ORD.JOB<1,JLOC>=INVR.JOB
  END
  PCNT=DCOUNT(ODQ.JOB,@VM)
  FOR P=1 TO PCNT
    LOCATE INVR.JOB IN ODQ.JOB<1,P>,1 SETTING JFND THEN
      PCNT=0
    END
  NEXT P
  IF PCNT THEN
    ORD.JOB=DELETE(ORD.JOB,1,JLOC,0)
  END
*
  STATUS="U"; SHPTO=""
  CALL ORDER_LINE_UPD(CONO,ORD.ID,SHPTO,STATUS)
END
RETURN
*
*---- Re-Read records written by this program and ORDER.LINE.UPD
*
8000*
MATREADU INV.REC FROM INVENTORY, INV.ID ELSE
  ERRMSG ="INVENTORY file has been corrupted???" ; GOTO 93000
END
MATREADU JFS.REC FROM JOB.FNGD.STATS, CONO:INVR.JOB ELSE
  ERRMSG="JOB.FNGD.STATS file has been corrupted???" ; GOTO 93000
END
MATREADU IWH.REC FROM INV.WHSE, IWH.ID ELSE
  ERRMSG ="INV.WHSE file has been corrupted???" ; GOTO 93000
END
MATREADU IWLO.REC FROM INV.WHSE.LOC, IWLO.ID ELSE
  ERRMSG ="INV.WHSE.LOC file has been corrupted???" ; GOTO 93000
END
MATREADU FJS.REC FROM FNGD.JOB.STATS, FJS.ID ELSE
  ERRMSG ="FNGD.JOB.STATS file has been corrupted???" ; GOTO 93000
END
MATREADU FGS.REC FROM FNGD.STATS, IWH.ID ELSE
  ERRMSG="FNGD.STATS file has been corrupted???" ; GOTO 93000
END
LOCK.FLAG=1
RETURN
*
**************
SET.INAH: 
**************
*
INAH.SEQ=GET_INAH_SEQ(CONO,CONTROL,INV_AUDIT_HIST)
INAH.PROD=INVR.PROD
INAH.WHSE=INVR.ORG.WHSE
INAH.LOC= ISTK.LOC
INAH.DATE=TODAY
INAH.TYPE="A"
INAH.SRC="IQ"
INAH.ACCT=CATG.INV
INAH.ADJ.ACCT=CATG.ADJ
INAH.JOB=INVR.JOB
INAH.QTY=DIFF.QTY.FI
INAH.EXT.COST= DIFF.COST
INAH.UNIT.COST=INVR.UNIT.COST
INAH.PERIOD=ADJ.PERIOD
RETURN
*
*********************
ADJUST.SERIAL: 
*********************
*
ISTK.ID=CONO:IRW.SERIAL.NO
ISTK.ORG.QTY +=DIFF.QTY.FI
ISTK.ORG.STK.QTY=CALC_STK_QTY(ISTK.ORG.QTY,MAT INV.CNV.REC,'.5','')
IF CATG.TYPE='L' OR CATG.TYPE='LR' OR CATG.TYPE='PC' THEN
  DIAM=CALC_DIAM(ISTK.ORG.QTY,ISTK.ORG.STK.QTY,MAT INV.REC)
  ISTK.ORG.DIAM= DIAM
END
ISTK.CUR.QTY+=DIFF.QTY.FI
ISTK.RSVB.QTY+=DIFF.QTY.FI
ISTK.CUR.STK.QTY=CALC_STK_QTY(ISTK.CUR.QTY,MAT INV.CNV.REC,'.5','')
INAH.NEW.STK.QTY=ISTK.CUR.STK.QTY
DIAM=CALC_DIAM(ISTK.CUR.QTY,ISTK.CUR.STK.QTY,MAT INV.REC)
ISTK.CUR.DIAM=DIAM ; INAH.NEW.DIAM=DIAM
ISTK.AUDIT.NO<1,-1> = INAH.SEQ
RETURN
*
*************
ADJUST.IRW: 
*************
*
IRW.ID=CONO:RECPNO:"!":INVR.ORG.WHSE
IRW.ON.HAND+=DIFF.QTY.FI
IRW.ORG.QTY+=DIFF.QTY.FI
IRW.CUR.QTY+=DIFF.QTY.FI
IRW.RSVB.QTY+=DIFF.QTY.FI
RETURN
*
99200*
RELEASE ORDER, CONO:ORD.ID
99300*
RELEASE FNGD.STATS, IWH.ID
99400*
RELEASE FNGD.JOB.STATS, FJS.ID
99500*
99600*
RELEASE INV.WHSE.LOC, IWLO.ID
99700*
RELEASE INV.WHSE, IWH.ID
99800*
RELEASE JOB.FNGD.STATS, CONO:INVR.JOB
99900*
RELEASE INVENTORY, INV.ID
99999

93000
STATUS = RBO.setProperty('','ServerStatus',1)
STATUS = RBO.setProperty('','ServerMessage',ERRMSG)
END



