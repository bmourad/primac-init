*********************************************************************
* REVISION    - [12.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* PROGRAM     - EOD_POST_PreProcess
* DESCRIPTION - This is the generic pre-process for all module's EOD/EOM
* POSTING Processes.
* ID property will contain: CONO:ModulePrefix(e.g.,"APD"):"FISCAL"
* The ModulePrefix will determine the work filenames to be created/used.
*ENDDOC
*********************************************************************
*
***** INSERT FILE EQUATE
*
$INCLUDE WWINSERT RBO.H
$INCLUDE PMC.CPYLIB COMPANY
$INCLUDE PMC.CPYLIB SALESDATES
$INCLUDE PMC.CPYLIB FISCAL
$INCLUDE PMC.CPYLIB DIVISION ;* T23278
$INCLUDE CPYLIB CHAR
*
**** INTITIALIZATION
*
***** SETUP ERRMSG ROUTINE
*
ERRMSG=''
*
*
STATUS = RBO.getProperty('','PMCProperty',PMCProperty)
CONO=PMCProperty<1,4>
STATUS = RBO.getProperty('','ID',ID)

MODULE=ID[4,3]
BEGIN CASE
CASE MODULE[1,2] = 'AP'
CASE MODULE[1,2] = 'AR'
CASE 1
  MODULE = MODULE[1,2]
END CASE

STATUS = RBO.getProperty('','DivCode',DIV.CODE)
STATUS = RBO.getProperty('','FngdFlag',FNGD.FLAG)

FR.NEXT.PER = ""
*
***** OPEN FILES
*
  OPEN '','COMPANY' TO COMPANY ELSE ERRMSG='COMPANY FILE MISSING';GOTO 93000
  OPEN '','CONTROL' TO CONTROL ELSE ERRMSG='CONTROL FILE MISSING';GOTO 93000
  OPEN '','DIVISION' TO DIVISION ELSE ERRMSG='DIVISION FILE IS MISSING';GOTO 93000;* T23278
  OPEN '','SECURITY' TO SECURITY ELSE ERRMSG='SECURITY FILE MISSING';GOTO 93000
  OPEN '','EOD.HIST' TO EOD.HIST ELSE ERRMSG='EOD.HIST FILE MISSING';GOTO 93000
*
  MATREAD FISCAL.REC FROM CONTROL, CONO:'JCFISCAL' ELSE
    ERRMSG = 'CANNOT LOCATE CONTROL, ':CONO:'JCFISCAL'
    GOTO 93000
  END
  READ PERIOD.REC FROM CONTROL, CONO:'ACCT.PERIODS' ELSE
    PERIOD.REC = ''
    PERIOD.REC<1> = 12
  END
  NUM.PERIODS = PERIOD.REC<1>
  READ SECURITY.REC FROM CONTROL, CONO:"DIV.SECURITY" ELSE
    SECURITY.REC = 'N'
    SECURITY.REC<2> = 'N'
  END

  IF SECURITY.REC<1> # "Y" THEN DIV.CODE = "ALL"
  READ DIVISION.REC FROM CONTROL, CONO:"DIVISIONS" ELSE
    ERRMSG = "CANNOT LOCATE CONTROL, DIVISIONS"
    GOTO 93000
  END

  IF SECURITY.REC<1> = "Y" AND SECURITY.REC<2> = "Y" THEN
    LOCATE DIV.CODE IN DIVISION.REC<1>,1 SETTING POS ELSE 
      ERRMSG = "Division ":DIV.CODE:" not found on Control File DIVISIONS Record"
      GOTO 93000
    END
  END ELSE
    POS = 1
  END
*
  MATREAD COMP.REC FROM COMPANY, CONO ELSE
      ERRMSG = "COMPANY RECORD IS MISSING"
      GOTO 93000
  END
  SYS.FISCAL = MODULE:'FISCAL'
*
*
  JC.PER = FR.CURR.PER<1,POS>
  JC.YEAR = FR.CURR.PER<1,POS>[1,4]
  JC.CURR = FR.CURR.PER<1,POS>[5,2]
  MATREADU FISCAL.REC FROM CONTROL, CONO:SYS.FISCAL ELSE
    RELEASE CONTROL, CONO:SYS.FISCAL
    ERRMSG = 'CANNOT LOCATE CONTROL, ':SYS.FISCAL
    GOTO 93000
  END

  IF FR.PRINT<1,POS> = "X" THEN
    RELEASE CONTROL, CONO:SYS.FISCAL
    ERRMSG = 'E R R O R !!! FLAG IS SET TO ABORT ALL END OF PERIOD PROCEDURES'
    GOTO 93000
  END

  MATREAD SALESDATES.REC FROM CONTROL, CONO:'SALESDATES' ELSE
    RELEASE CONTROL, CONO:SYS.FISCAL
    ERRMSG = 'CANNOT LOCATE CONTROL, SALESDATES'
    GOTO 93000
  END

  READ FISCALMON FROM CONTROL, CONO:'FISCAL' ELSE
    RELEASE CONTROL, CONO:SYS.FISCAL
    ERRMSG = 'CANNOT LOCATE CONTROL, FISCAL'
    GOTO 93000
  END

  READ OPENDATES FROM CONTROL, CONO:'OPENDATES' ELSE
    RELEASE CONTROL, CONO:SYS.FISCAL
    ERRMSG = 'CANNOT LOCATE CONTROL, OPENDATES'
    GOTO 93000
  END

  EOD.HID = ''
  IF SECURITY.REC<2> = 'Y' THEN EOD.HID = '!':DIV.CODE
  IF FNGD.FLAG # "F" THEN
     READ EOD.HIST.REC FROM EOD.HIST, CONO:SYS.FISCAL:FR.CURR.PER<1,POS>:EOD.HID ELSE
        EOD.HIST.REC = ""
     END
  END ELSE
     IF CO.OPS # 'Y' THEN
        ERRMSG='You have not licensed this function.'
        GOTO 93000
     END
     READ EOD.HIST.REC FROM EOD.HIST, CONO:'FNGD.EOM':FR.CURR.PER<1,POS>:EOD.HID ELSE
        EOD.HIST.REC = ""
     END
  END
*
  CurrSalesMon = SALD.CURR<1,1>
  CurrSalesAlphaMon = SALD.CURR<1,3>
  CurrSalesDate = OCONV(SALD.CURR<1,2>,'D2/')
  GenLedMon = FISCALMON[5,2]
  GenLedAlphaMon = SALESDATES.REC(GenLedMon+1)<1,2>
  GenLedOpenDate = OCONV(OPENDATES<GenLedMon>,'D2/')
  CurrPeriod = FR.CURR.PER<1,POS>
  CurrYear = FR.CURR.PER<1,POS>[1,4]
  CurrMon = FR.CURR.PER<1,POS>[5,2]
  YRS = CurrYear - JC.YEAR
  CurrAlphaMon = SALESDATES.REC(CurrMon+1)<1,2>
  IF FR.NEXT.PER<1,POS> # '' THEN;* T23278
    WARN.MESG = 'WARNING !!! THIS PROCESS WILL OVERLAY PREVIOUS PROCESSING'
    STATUS = RBO.setProperty('','WarnMesg',WARN.MESG)
  END
  LINES = DCOUNT(EOD.HIST.REC, AM)
  PerPostHistDates = ''
  IF LINES < 1 THEN LINES = 1
  FOR I = 1 TO LINES
    PerPostHistDates<1,I> = OCONV(EOD.HIST.REC<I>,'D2/')
  NEXT I
  IF FR.CURR.DATE<1,POS> = '' THEN;* T23278
    CurrDate = OCONV(SALESDATES.REC(CurrMon+1)<1,1>,"D/")
    CurrDate = CurrDate[1,6] : CurrDate[7,4] + YRS
  END ELSE
    CurrDate = OCONV(FR.CURR.DATE<1,POS>,'D/')
  END
*
  FR.NEXT.PER<1,POS> = CurrMon + 1
  IF LEN(FR.NEXT.PER<1,POS>) = 1 THEN FR.NEXT.PER<1,POS> = "0" : FR.NEXT.PER<1,POS>
  IF LEN(CurrMon) = 1 THEN CurrMon = "0" : CurrMon

  IF FR.NEXT.PER<1,POS> > NUM.PERIODS THEN
    FR.NEXT.DATE<1,POS> = OCONV(SALESDATES.REC(2)<1,1>,"D/")
    FR.NEXT.DATE<1,POS> = FR.NEXT.DATE<1,POS>[1,6] : FR.NEXT.DATE<1,POS>[7,4] + YRS + 1
    FR.NEXT.DATE<1,POS> = ICONV(FR.NEXT.DATE<1,POS>,"D/")
    FR.NEXT.PER<1,POS> = CurrYear + 1 : '01'
  END ELSE
    FR.NEXT.DATE<1,POS> = OCONV(SALESDATES.REC(FR.NEXT.PER<1,POS> + 1)<1,1>,"D/")
   
FR.NEXT.DATE<1,POS> = FR.NEXT.DATE<1,POS>[1,6] : FR.NEXT.DATE<1,POS>[7,4] + YRS
    FR.NEXT.DATE<1,POS> = ICONV(FR.NEXT.DATE<1,POS>,"D/")
    FR.NEXT.PER<1,POS> = CurrYear : FR.NEXT.PER<1,POS>
  END

  IF FR.NEXT.PER<1,POS> = "" THEN;* T23278
    ERRMSG='Next Period not set in control record'
    GOTO 93000
  END
  FR.NEXT.DATE<1,POS> = OCONV(FR.NEXT.DATE<1,POS>,'D2/')
* Set return properties here

  STATUS=RBO.setProperty('','DivPos',POS)	
  STATUS=RBO.setProperty('','CurrSalesMon',CurrSalesMon)
  STATUS=RBO.setProperty('','CurrSalesAlphaMon',CurrSalesAlphaMon)
  STATUS=RBO.setProperty('','CurrSalesDate',CurrSalesDate)
  STATUS=RBO.setProperty('','PerPostHistDates',PerPostHistDates)
  STATUS=RBO.setProperty('','GenLedMon',GenLedMon)
  STATUS=RBO.setProperty('','GenLedAlphaMon',GenLedAlphaMon)
  STATUS=RBO.setProperty('','GenLedOpenDate',GenLedOpenDate)
  STATUS=RBO.setProperty('','CurrMon',CurrMon)
  STATUS=RBO.setProperty('','CurrAlphaMon',CurrAlphaMon)
  STATUS=RBO.setProperty('','CurrDate',CurrDate)
  STATUS=RBO.setProperty('','FR_NEXT_PER',FR.NEXT.PER)
  STATUS=RBO.setProperty('','FR_NEXT_DATE',FR.NEXT.DATE)

  GOTO 99999
93000 *
  STATUS=RBO.setProperty('','ServerStatus','1')
  STATUS=RBO.setProperty('','ServerMessage',ERRMSG)
  RELEASE
99999 END
