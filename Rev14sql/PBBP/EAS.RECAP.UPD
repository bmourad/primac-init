*********************************************************************
*COPY>PB.CPYLIB>EAS_RECAP
*COPY>APS.CPYLIB>SQV
*COPY>POS.CPYLIB>ACCRUED.LIAB.HIST
*COPY>ARS.CPYLIB>OPEN.RECV
*COPY>ICS.CPYLIB>INVENTORY
*COPY>ICS.CPYLIB>INV.WHSE
*COPY>ICS.CPYLIB>CATEGORY
*COPY>JCS.CPYLIB>JOB
*COPY>OPS.CPYLIB>ORDER
*COPY>PMC.CPYLIB>PO
*COPY>POS.CPYLIB>OUTSIDE.PO
*COPY>POS.CPYLIB>MISC.PO
*COPY>PMC.CPYLIB>COMPANY
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*
*---- OPEN ALL FILES
*
OPEN "","EAS_RECAP" TO EAS_RECAP ELSE PRINT 'EAS_RECAP MISSING'; STOP
OPEN "","OAP" TO OAP ELSE PRINT 'OAP MISSING'; STOP
OPEN "","SQV" TO SQV ELSE PRINT 'SQV MISSING'; STOP
OPEN "","VEND" TO VEND ELSE PRINT 'VEND MISSING'; STOP
OPEN "","ACCRUED_LIAB_HIST" TO ACCRUED.LIAB.HIST ELSE PRINT 'ACCRUED_LIAB_HIST MISSING'; STOP
OPEN "","OPEN.RECV" TO OPEN.RECV ELSE PRINT 'OPEN.RECV MISSING'; STOP
OPEN "","INVENTORY" TO INVENTORY ELSE PRINT 'INVENTORY MISSING'; STOP
OPEN "","INV.WHSE" TO INV.WHSE ELSE PRINT 'INV.WHSE MISSING'; STOP
OPEN "","CATEGORY" TO CATEGORY ELSE PRINT 'CATEGORY MISSING'; STOP
OPEN "","JOB" TO JOB ELSE PRINT 'JOB MISSING'; STOP
OPEN "","JOB.FNGD.STATS" TO JOB.FNGD.STATS ELSE PRINT 'JOB.FNGD.STATS MISSING'; STOP
OPEN "","ORDER" TO ORDER ELSE PRINT 'ORDER MISSING'; STOP
OPEN "","PO" TO PO ELSE PRINT 'PO MISSING'; STOP
OPEN "","OUTSIDE.PO" TO OUTSIDE.PO ELSE PRINT 'OUTSIDE.PO MISSING'; STOP
OPEN "","MISC.PO" TO MISC.PO ELSE PRINT 'MISC.PO MISSING'; STOP
OPEN "","COMPANY" TO COMPANY ELSE PRINT 'COMPANY MISSING'; STOP
OPEN "","CONTROL" TO CONTROL ELSE PRINT 'CONTROL MISSING'; STOP
OPEN "","VEND" TO VEND ELSE PRINT 'VEND MISSING'; STOP
*
*---- INITIALIZE
*
TODAY = DATE()
CURR = TODAY - 30
OVR30 = TODAY - 60
OVR60 = TODAY - 90
OVR90 = TODAY - 120
SELECT COMPANY
CDATA = 1
LOOP
  READNEXT CONO ELSE CDATA = 0
WHILE CDATA DO
  REC = ''
  READU REC FROM CONTROL, CONO:'EASCONTROL' THEN
    MATREAD EARC.REC FROM EAS_RECAP, CONO:'999999' THEN
      IF TODAY > EARC.DATE THEN
        SEQ = REC<3> + 1
        IF SEQ > 999998 THEN SEQ = 1
        REC<3> = STR('0',6-LEN(SEQ)):SEQ
        MATWRITE EARC.REC ON EAS_RECAP, CONO:REC<3>
      END
    END
  END ELSE
    REC<3> = '000000'
  END
  SEQ = REC<3> + 1
  REC<1> = TODAY
  REC<2> = TIME()
  WRITE REC ON CONTROL, CONO:'EASCONTROL'
  MAT EARC.REC = ''
  EARC.DATE = REC<1>
  EARC.TIME = REC<2>
  IF SEQ-7 > 0 THEN
    EARC.SEQ.LSTWK=CONO:STR('0',6-LEN(SEQ-7)):SEQ-7
  END
  IF SEQ-31 > 0 THEN
    EARC.SEQ.LSTMN=CONO:STR('0',6-LEN(SEQ-31)):SEQ-31
  END
  IF SEQ-365 > 0 THEN
    EARC.SEQ.LSTYR=CONO:STR('0',6-LEN(SEQ-365)):SEQ-365
  END
  READV EARC.FIS.GL FROM CONTROL, CONO:'FISCAL',1 ELSE EARC.FIS.GL = ''
  EARC.FIS.GL = EARC.FIS.GL<1,1>
  READV EARC.FIS.AP.CSH FROM CONTROL, CONO:'APDFISCAL',1 ELSE EARC.FIS.AP.CSH = ''
  EARC.FIS.AP.CSH = EARC.FIS.AP.CSH<1,1>
  READV EARC.FIS.AP.VCH FROM CONTROL, CONO:'APVFISCAL',1 ELSE EARC.FIS.AP.VCH = ''
  EARC.FIS.AP.VCH = EARC.FIS.AP.VCH<1,1>
  READV EARC.FIS.AR.CSH FROM CONTROL, CONO:'ARCFISCAL',1 ELSE EARC.FIS.AR.CSH = ''
  EARC.FIS.AR.CSH = EARC.FIS.AR.CSH<1,1>
  READV EARC.FIS.AR.SLS FROM CONTROL, CONO:'ARSFISCAL',1 ELSE EARC.FIS.AR.SLS = ''
  EARC.FIS.AR.SLS = EARC.FIS.AR.SLS<1,1>
  READV EARC.FIS.FA FROM CONTROL, CONO:'FAFISCAL',1 ELSE EARC.FIS.FA = ''
  EARC.FIS.FA = EARC.FIS.FA<1,1>
  READV EARC.FIS.IC.STK FROM CONTROL, CONO:'ICFISCAL',1 ELSE EARC.FIS.IC.STK = ''
  EARC.FIS.IC.STK = EARC.FIS.IC.STK<1,1>
  EARC.FIS.IC.FNG = EARC.FIS.IC.STK
  READV EARC.FIS.JC FROM CONTROL, CONO:'JCFISCAL',1 ELSE EARC.FIS.JC = ''
  EARC.FIS.JC = EARC.FIS.JC<1,1>
  READV EARC.FIS.OP FROM CONTROL, CONO:'OPFISCAL',1 ELSE EARC.FIS.OP = ''
  EARC.FIS.OP = EARC.FIS.OP<1,1>
  READV EARC.FIS.PR FROM CONTROL, CONO:'PRFISCAL',1 ELSE EARC.FIS.PR = ''
  EARC.FIS.PR = EARC.FIS.PR<1,1>
*
*---- AP AGING
*
* SENTENCE = 'SELECT OAP WITH CONO = "':CONO:'" AND WITH OAP_MON <= "':EARC.FIS.AP.VCH:'"'
  SENTENCE = 'SELECT OAP WITH CONO = "':CONO:'"'
  PERFORM SENTENCE RTNLIST IDLIST
  DATA = 1
  LOOP
    READNEXT ID FROM IDLIST ELSE DATA = 0
  WHILE DATA DO
    MATREAD SQV.REC FROM SQV, ID THEN
      READV VEND.STATUS FROM VEND, CONO:SQV.VEND,15 ELSE VEND.STATUS = ''
      TOT.PAID.AMT = 0 ; TOT.DSC.PAID = 0
      PCNT = DCOUNT(SQV.PAID.DATE, VM)
      FOR P = 1 TO PCNT
        IF SQV.PAID.DATE<1,P> <= TODAY THEN
          TOT.PAID.AMT = TOT.PAID.AMT + SQV.PAID.AMT<1,P>
          TOT.DSC.PAID = TOT.DSC.PAID + SQV.DSC.PAID<1,P>
        END
      NEXT P
      IF TOT.PAID.AMT # SQV.GRS.AMT - TOT.DSC.PAID THEN
        NET.AMT = SQV.GRS.AMT - (TOT.PAID.AMT + TOT.DSC.PAID)
        BEGIN CASE
        CASE VEND.STATUS = "H" OR SQV.DUE.DATE = "HOLD"
        CASE SQV.INV.DATE >= CURR
          EARC.AP.CUR = EARC.AP.CUR + NET.AMT
        CASE SQV.INV.DATE >= OVR30
          EARC.AP.30 = EARC.AP.30 + NET.AMT
        CASE SQV.INV.DATE >= OVR60
          EARC.AP.60 = EARC.AP.60 + NET.AMT
        CASE SQV.INV.DATE >= OVR90
          EARC.AP.90 = EARC.AP.90 + NET.AMT
        CASE 1
          EARC.AP.120 = EARC.AP.120 + NET.AMT
        END CASE
      END
    END
  REPEAT
*
*---- ACCRUED LIABILITY
*
* SENTENCE = 'SELECT ACCRUED_LIAB_HIST WITH CONO = "':CONO:'" AND WITH ALH_MON <= "':EARC.FIS.AP.VCH:'" AND WITH ALH_CLOSED # ""'
  SENTENCE = 'SELECT ACCRUED_LIAB_HIST WITH CONO = "':CONO:'" AND WITH ALH_CLOSED = ""'
  PERFORM SENTENCE RTNLIST IDLIST
  DATA = 1
  LOOP
    READNEXT ID FROM IDLIST ELSE DATA = 0
  WHILE DATA DO
    MATREAD ALH.REC FROM ACCRUED.LIAB.HIST, ID THEN
      EARC.AP.ACR.LIB = EARC.AP.ACR.LIB + ALH.AMT
    END
  REPEAT
*
*---- AR AGING
*
* SENTENCE = 'SELECT OPEN.RECV WITH CONO = "':CONO:'" AND WITH OR_MON <= "':EEARC.FIS.AR.SLS:'"'
  SENTENCE = 'SELECT OPEN.RECV WITH CONO = "':CONO:'"'
  PERFORM SENTENCE RTNLIST IDLIST
  DATA = 1
  LOOP
    READNEXT ID FROM IDLIST ELSE DATA = 0
  WHILE DATA DO
    MATREAD OR.REC FROM OPEN.RECV, ID THEN
      IF OR.TR.DATE<1,1> <= TODAY THEN
        DATE.FLG = 1
        INV.AMT = 0
        TCNT = DCOUNT(OR.TR.DATE,VM)
        FOR T = 1 TO TCNT
          BEGIN CASE
          CASE DATE.FLG = 0
          CASE OR.INV.AMT<1,1> > 0 AND OR.INV.AMT<1,T> < 0
            DATE.FLG = 0
          CASE OR.INV.AMT<1,1> < 0 AND OR.INV.AMT<1,T> > 0
            DATE.FLG = 0
          CASE OR.TR.DATE<1,1> # OR.TR.DATE<1,T>
            DATE.FLG = 0
          END CASE
          IF (DATE.FLG OR OR.TR.DATE<1,T> <= OR.TR.DATE<1,1>) OR (DATE.FLG OR OR.TR.DATE<1,T> <= TODAY) THEN
            IF OR.TYPE<1,1>[1,1] # "C" THEN
              INV.AMT = INV.AMT + OR.INV.AMT<1,T>
            END
          END
        NEXT T
        BEGIN CASE
        CASE OR.TYPE<1,1>[1,1] = "C"
        CASE OR.INV.DATE >= CURR
          EARC.AR.CUR = EARC.AR.CUR + INV.AMT
        CASE OR.INV.DATE >= OVR30
          EARC.AR.30 = EARC.AR.30 + INV.AMT
        CASE OR.INV.DATE >= OVR60
          EARC.AR.60 = EARC.AR.60 + INV.AMT
        CASE OR.INV.DATE >= OVR90
          EARC.AR.90 = EARC.AR.90 + INV.AMT
        CASE 1
          EARC.AR.120 = EARC.AR.120 + INV.AMT
        END CASE
      END
    END
  REPEAT
*
*---- INVENTORY
*
  SENTENCE = 'SSELECT INV.WHSE BY IWH_M_LINE BY IWH_PAP_TYPE BY IWH_LINE WITH CONO = "':CONO:'"'
  PERFORM SENTENCE RTNLIST IDLIST
  PREV.PROD = ''
  PREV.LINE = ''
  DATA = 1
  LOOP
    READNEXT ID FROM IDLIST ELSE DATA = 0
  WHILE DATA DO
    MATREAD IWH.REC FROM INV.WHSE, ID THEN
      PROD = FIELD(ID,'!',1)
      IF PROD # PREV.PROD THEN
        MATREAD INV.REC FROM INVENTORY, PROD ELSE MAT INV.REC = ''
        IF INV.COST.WT * 1 = 0 THEN INV.COST.WT = 100
        PREV.PROD = PROD
      END
      IF INV.LINE # PREV.LINE THEN
        MATREAD CATG.REC FROM CATEGORY, CONO:INV.LINE ELSE MAT CATG.REC = ''
        PREV.LINE = INV.LINE
      END
      COST = 0
      BEGIN CASE
      CASE CATG.COST.TYPE = 'SD'
        COST = INT((IWH.STD.COST/10000) * ((IWH.ON.HAND/10) / (INV.COST.WT/100)) + .5)
      CASE CATG.COST.TYPE = 'AV'
        COST = INT((IWH.AVG.COST/10000) * ((IWH.ON.HAND/10) / (INV.COST.WT/100)) + .5)
      CASE CATG.COST.TYPE = 'LT'
        COST = INT((IWH.LIST.COST/10000) * ((IWH.ON.HAND/10) / (INV.COST.WT/100)) + .5)
      CASE CATG.COST.TYPE = 'LC'
        COST = IWH.COST.FI<1,DCOUNT(IWH.QTY.FI,VM)>
        COST = INT((COST/10000) * ((IWH.ON.HAND/10) / (INV.COST.WT/100)) + .5)
      CASE CATG.COST.TYPE = 'FI'
        FCNT = DCOUNT(IWH.QTY.FI,VM)
        FOR F = 1 TO FCNT
          COST = COST + (IWH.COST.FI<1,F>/10000) * ((IWH.QTY.FI<1,F>/10) / (INV.COST.WT/100))
        NEXT F
        COST = INT(COST + .5)
      END CASE
      BEGIN CASE
      CASE INV.M.LINE = 'FNGD'
        EARC.INV.FNGD = EARC.INV.FNGD + COST
      CASE INV.PAP.TYPE = 'REGULAR'
        EARC.INV.OTH = EARC.INV.OTH + COST
      CASE 1
        EARC.INV.PAP = EARC.INV.PAP + COST
      END CASE
    END
  REPEAT
*
*---- WORK IN PROCESS AND CUSTOM SALES
*
  SENTENCE = 'SELECT JOB WITH CONO = "':CONO:'"'
  PERFORM SENTENCE RTNLIST IDLIST
  DATA = 1
  LOOP
    READNEXT ID FROM IDLIST ELSE DATA = 0
  WHILE DATA DO
    MATREAD JOB.REC FROM JOB, ID THEN
      IF JOB.STATUS<1,1>+0 < 6 AND JOB.STATUS<1,1>+0 # 4 THEN
        EARC.WIP.LAB = EARC.WIP.LAB + SUM(JOB.LB.WIP<1,2>)
        EARC.WIP.MATL = EARC.WIP.MATL + SUM(JOB.MT.WIP<1,2>)
        EARC.WIP.OSP = EARC.WIP.OSP + SUM(JOB.OS.WIP<1,2>)
        EARC.WIP.SHP = EARC.WIP.SHP + SUM(JOB.SP.WIP<1,2>)
        EARC.WIP.MSC = EARC.WIP.MSC + SUM(JOB.MS.WIP<1,2>)
        READV REC FROM JOB.FNGD.STATS, ID,1 ELSE
          EARC.SLS.CUS = EARC.SLS.CUS + (JOB.EST.SALE - JOB.TOT.INV)
        END
      END
    END
  REPEAT
*
*---- FNGD SALES
*
  SENTENCE = 'SELECT ORDER WITH CONO = "':CONO:'"'
  PERFORM SENTENCE RTNLIST IDLIST
  DATA = 1
  LOOP
    READNEXT ID FROM IDLIST ELSE DATA = 0
  WHILE DATA DO
    MATREAD ORD.REC FROM ORDER, ID THEN
      IF ORD.STATUS<1,1>#'CLOSED' AND ORD.STATUS<1,1>#'CANCEL' AND ORD.STATUS<1,1>#'COMPLETE' THEN
        EARC.SLS.FNGD = EARC.SLS.FNGD + (ORD.TOT.AMT - ORD.TOT.INV)
      END
    END
  REPEAT
*
*---- PO ONORDER
*
  SENTENCE = 'SELECT PO WITH CONO = "':CONO:'"'
  PERFORM SENTENCE RTNLIST IDLIST
  DATA = 1
  LOOP
    READNEXT ID FROM IDLIST ELSE DATA = 0
  WHILE DATA DO
    MATREAD PO.REC FROM PO, ID THEN
      PCNT = DCOUNT(PO.PROD.NUM,VM)
      FOR P = 1 TO PCNT
        IF PO.QTY.OPEN<1,P> > 0 THEN
          MATREAD INV.REC FROM INVENTORY, CONO:PO.PROD.NUM<1,P> ELSE MAT INV.REC = ''
          UN.PRICE = INT((PO.GROS.PRICE<1,P> * (1- (PO.DISCOUNT<1,P>/10000))) / INV.SBR +.5)
          IF INV.COST.WT * 1 = 0 THEN INV.COST.WT = 100
          OPEN.PRICE = INT((UN.PRICE / 10000) * ((PO.QTY.OPEN<1,P>/10)/(INV.COST.WT/100)))
          IF INV.PAP.TYPE = 'REGULAR' THEN
            EARC.PO.STK.OTH = EARC.PO.STK.OTH + OPEN.PRICE
          END ELSE
            EARC.PO.STK.PAP = EARC.PO.STK.PAP + OPEN.PRICE
          END
        END
      NEXT P
    END
  REPEAT
*
*---- OUTSIDE PO ONORDER
*
  SENTENCE = 'SELECT OUTSIDE.PO WITH CONO = "':CONO:'"'
  PERFORM SENTENCE RTNLIST IDLIST
  DATA = 1
  LOOP
    READNEXT ID FROM IDLIST ELSE DATA = 0
  WHILE DATA DO
    MATREAD OPO.REC FROM OUTSIDE.PO, ID THEN
      JCNT = DCOUNT(OPO.JOB.NO,VM)
      FOR J = 1 TO JCNT
        IF OPO.QTY<1,J> - OPO.QTY.RECVD<1,J> - OPO.CANCEL.QTY<1,J> > 0 THEN
          OPEN.PRICE = OPO.EST.COST<1,J> - OPO.AMT.RECVD<1,J> - OPO.CANCEL.COST<1,J>
          EARC.PO.OSP = EARC.PO.OSP + OPEN.PRICE
        END
      NEXT J
    END
  REPEAT
*
*---- MISC PO ONORDER
*
  SENTENCE = 'SELECT MISC.PO WITH CONO = "':CONO:'"'
  PERFORM SENTENCE RTNLIST IDLIST
  DATA = 1
  LOOP
    READNEXT ID FROM IDLIST ELSE DATA = 0
  WHILE DATA DO
    MATREAD MPO.REC FROM MISC.PO, ID THEN
      PCNT = DCOUNT(MPO.PROD.NUM,VM)
      FOR P = 1 TO PCNT
        IF MPO.TOT.OPEN<1,P> > 0 THEN
          IF MPO.DISCOUNT<1,P> * 1 # 0 THEN
            UN.PRICE = MPO.GROS.PRICE<1,P> - (INT(((MPO.GROS.PRICE<1,P> * MPO.DISCOUNT<1,P>) / 10000)))
          END ELSE
            UN.PRICE = MPO.GROS.PRICE<1,P>
          END
          OPEN.PRICE = INT((UN.PRICE * MPO.TOT.OPEN<1,P>)/10000 + .5)
          EARC.PO.MSC = EARC.PO.MSC + OPEN.PRICE
        END
      NEXT P
    END
  REPEAT
  EARC.PO.TOT = EARC.PO.STK.PAP + EARC.PO.STK.OTH + EARC.PO.OSP + EARC.PO.MSC
*
*
*
  MATWRITE EARC.REC ON EAS_RECAP, CONO:'999999'
REPEAT
PRINT "*** EAS.RECAP.UPD FINISHED ***"
END
