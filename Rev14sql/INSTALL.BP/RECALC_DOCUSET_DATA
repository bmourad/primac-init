   SUBROUTINE RECALC_DOCUSET_DATA(RTN_CODE,TKT_ID,DOCUSET_ID)
*COPY>CPYLIB>COM1
*********************************************************************
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* Revision      - [11.B]
* Revision Date - 09/11/98
* System        - PRIMAC
* Library       - JISBP/RECALC_DOCUSET_DATA
* Author        - Ziad Yamout, VERCOM Software, Inc.
*********************************************************************
*
*---- Data Structure Libraries
*
*COPY>JIS.CPYLIB>DOCUSET_SFIS_DATA
*COPY>JIS.CPYLIB>SYS_SCN_DEF
*COPY>JIS.CPYLIB>SYS_TKT_DEF
*COPY>JIS.CPYLIB>SYS_FIELDS
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>CHAR
   DIM DREC(400)
   EQU FLD_FNAME TO FLD_ESTK
   EQU FLD_VNAME TO FLD_TSTK
*
*---- INITIALIZE
*
   CONO = TKT_ID[1,3]
   RTN_CODE = ""
   SUBRFLG = "@SUBR"
   PREV_FORM = ""
   FLD_FNO = ""; FLD_NAME = ""; FLD_DSD_ID = ""
   FLD_SUBR = ""; FLD_EXPR = ""; FLD_ESTK = ""; FLD_TSTK = ""
   FLD_SBR_VID = ""; FLD_SBR_VVALUE = ""
   FLD_SBR_FPTR = ""; FLD_SBR_VPTR = ""
   FLD_FNAME = ""; FLD_VNAME = ""; FLD_CNV = ""; FLD_TYPE = ""
*
*---- OPEN FILES
*
   OPEN "","CPYLIB" TO CPYLIB ELSE
      RTN_CODE = "Cannot locate the CPYLIB file"
   END
   OPEN "","DOCUSET_SFIS_DATA" TO DOCUSET_SFIS_DATA ELSE
      RTN_CODE = "Cannot locate the DOCUSET_SFIS_DATA file"
   END
   OPEN "","SYS_TKT_DEF" TO SYS_TKT_DEF ELSE
      RTN_CODE = "Cannot locate the SYS_TKT_DEF file"
   END
   OPEN "","SYS_SCN_DEF" TO SYS_SCN_DEF ELSE
      RTN_CODE = "Cannot locate the SYS_SCN_DEF file"
   END
   OPEN "","SYS_FIELDS" TO SYS_FIELDS ELSE
      RTN_CODE = "Cannot locate the SYS_FIELDS file"
   END
*  OPEN "","DOCUSET_CONTROL" TO DOCUSET_CONTROL ELSE
*     RTN_CODE = "Cannot locate the DOCUSET_CONTROL file"
*  END
*  TRN_FILENAME = DOCUSET_ID:"_TRN"
   TRN_FILENAME = "JOB_JKT_IMG"
   OPEN "", TRN_FILENAME TO TRN_FILE ELSE
      RTN_CODE = "Cannot locate the ":TRN_FILENAME:" file"
   END
   IF RTN_CODE # "" THEN GOTO 99999
   READ FVAR_REC FROM CPYLIB, "FILE.VARS" ELSE
      RTN_CODE = "Cannot locate CPYLIB, FILE.VARS"
      GOTO 99999
   END
   PFX = "^IGNORE^"
   CALL CPYLIB_SUB(FVAR_REC,PFX,ARRAY_NAME,FVAR_SIZE,RTN_CODE)
   IF RTN_CODE # "" THEN GOTO 99999
*   FVAR_REC := AM:"TITLE.ID":AM:"TITLE.ID.DET":AM:"TITLE.LIST":AM:"PROJECTION"
   MATREAD STKD.REC FROM SYS_TKT_DEF, DOCUSET_ID ELSE
      RTN_CODE = "Cannot locate Docuset # ":DOCUSET_ID
      GOTO 99999
   END
   READ FLD_NAMES FROM SYS_TKT_DEF, DOCUSET_ID:"*FLD" ELSE
      RTN_CODE = "Cannot locate Docuset # ":DOCUSET_ID
      GOTO 99999
   END
*
*---- LOAD FIELD DEFINTIONS
*
   FCNT = DCOUNT(STKD_SCN,VM)
   FOR F = 1 TO FCNT
      FORM_NAME = STKD_SCN<1,F>
      MATREAD SSD.REC FROM SYS_SCN_DEF, FORM_NAME THEN
         FLDCNT = DCOUNT(SSD_FIELDS,VM)
         FOR I = 1 TO FLDCNT
            LOCATE SSD_FIELDS<1,I> IN FLD_NAMES,1 SETTING FNO THEN
               FLD_NAME<FNO> = SSD_FIELDS<1,I>
               FLD_CNV<FNO> = SSD_FLD_CNV<1,I>
               FLD_EXPR<FNO> = SSD_FLD_EXPR<1,I>
               FLD_ESTK<FNO> = SSD_FLD_ESTK<1,I>
               FLD_TSTK<FNO> = SSD_FLD_TSTK<1,I>
               FLD_SUBR<FNO> = SSD_FLD_SUBR<1,I>
               FLD_SBR_VID<FNO> = SSD_SBR_VID<1,I>
               FLD_SBR_VVALUE<FNO> = SSD_SBR_VVALUE<1,I>
*              FLD_FNO<I> = FNO
               IF FLD_EXPR<FNO> = SUBRFLG THEN
                  CNT = DCOUNT(SSD_SBR_FNAME<1,I>,SVM)
                  FOR J = 1 TO CNT
                     TBL_NAME = SSD_SBR_FNAME<1,I,J>
                     LOCATE TBL_NAME IN SSD_S_TABLE<1>,1 SETTING FND ELSE
                        SSD_S_TABLE<1,FND> = TBL_NAME
                     END
                  NEXT J
                  CNT = DCOUNT(FLD_FNAME<FNO>,SVM)
                  FOR J = 1 TO CNT
                     LOCATE FLD_FNAME<FNO,1,J> IN FVAR_REC,1 SETTING FND THEN
                        FLD_SBR_FPTR<FNO,J> = FND
                     END ELSE
                        FLD_EXPR<FNO> = ""; FLD_SUBR<FNO> = ""
                        FLD_FNAME<FNO> = ""; FLD_VNAME<FNO> = ""
                        FLD_SBR_VID = ""; FLD_SBR_VVALUE = ""
                     END
                  NEXT J
                  CNT = DCOUNT(FLD_VNAME<FNO>,SVM)
                  FOR J = 1 TO CNT
                     LOCATE FLD_VNAME<FNO,1,J> IN FLD_NAMES,1 SETTING FND THEN
                        FLD_SBR_VPTR<FNO,J> = FND
                     END ELSE
                        IF FLD_VNAME<FNO,1,J>[1,1] = "^" THEN
                           FLD_SBR_VPTR<FNO,J> = 0
                        END ELSE
                           FLD_SBR_VPTR<FNO,J> = FNO
                        END
                     END
                  NEXT J
               END
            END
         NEXT I
         STCNT = DCOUNT(SSD_S_TABLE,VM)
         FOR ST = 1 TO STCNT
            LOCATE SSD_S_TABLE<1,ST> IN FVAR_REC,1 SETTING FND ELSE
               FVAR_REC<FND> = SSD_S_TABLE<1,ST>
            END
         NEXT ST
      END
   NEXT F
*
*---- RETIEVE BUFFER DATA
*
*  MATREAD DREC FROM TRN_FILE, TKT_ID:"!":DOCUSET_ID ELSE MAT DREC = ""
   MATREAD DREC FROM TRN_FILE, TKT_ID ELSE MAT DREC = ""
*
   SENTENCE = 'SSELECT DOCUSET_SFIS_DATA BY DSD_FORM WITH TKT_ID = "':TKT_ID:'" AND WITH DSD_DOCUSET = "':DOCUSET_ID:'"'
   PERFORM SENTENCE CAPTURING JUNK
*
   DATA = 1
   LOOP
      READNEXT DSD_ID ELSE DATA = 0
   WHILE DATA DO
      MATREAD DSD.REC FROM DOCUSET_SFIS_DATA, DSD_ID THEN
         IF DSD_FORM # PREV_FORM THEN
            MATREAD SSD.REC FROM SYS_SCN_DEF, DSD_FORM ELSE MAT SSD.REC = ""
         END
         PREV_FORM = DSD_FORM
         LOCATE DSD_NAME IN SSD_FIELDS<1>,1 SETTING FNO THEN
            IF SSD_FLD_TABLE<1,FNO> = "" THEN
               LOCATE DSD_NAME IN FLD_NAMES, 1 SETTING FNO THEN
                  VALUE = ""
                  BEGIN CASE
                  CASE DSD_STRING # ""
                     VALUE = DSD_STRING
                  CASE DSD_INTEGER # ""
                     VALUE = DSD_INTEGER
                  CASE DSD_LONG # ""
                     VALUE = DSD_LONG
                  CASE DSD_DECIMAL # ""
                     VALUE = DSD_DECIMAL
                  CASE DSD_DATE # ""
                     VALUE = DSD_DATE
                  CASE DSD_TIME # ""
                     VALUE = DSD_TIME
                  CASE DSD_BOOLEAN # ""
                     IF DSD_BOOLEAN = 1 THEN VALUE = "Y" ELSE VALUE = "N"
                  END CASE
                  DREC(FNO)<1,DSD_MVNO,DSD_SMVNO> = VALUE
                  FLD_DSD_ID<FNO,DSD_MVNO,DSD_SMVNO> = DSD_ID
               END
            END
         END
      END
   REPEAT
*
*---- PROCESS CALCULATED FIELDS
*
   GOSUB 70000
*
*---- UPDATE BUFFER
*
   FOR FNO = 1 TO FLDCNT
      IF FLD_EXPR<FNO> # "" OR FLD_SUBR<FNO> # "" THEN
         MCNT = DCOUNT(FLD_DSD_ID<FNO>,VM)
         FOR MNO = 1 TO MCNT
            SCNT = DCOUNT(FLD_DSD_ID<FNO,MNO>,SM)
            FOR SNO = 1 TO SCNT
               DSD_ID = FLD_DSD_ID<FNO,MNO,SNO>
               IF DSD_ID # "" THEN
                  MATREAD DSD.REC FROM DOCUSET_SFIS_DATA, DSD_ID THEN
                     VALUE = DREC(FNO)<1,MNO,SNO>
                     BEGIN CASE
                     CASE DSD_STRING # ""
                        DSD_STRING = VALUE
                     CASE DSD_INTEGER # ""
                        DSD_INTEGER = VALUE
                     CASE DSD_LONG # ""
                        DSD_LONG = VALUE
                     CASE DSD_DECIMAL # ""
                        DSD_DECIMAL = VALUE
                     CASE DSD_DATE # ""
                        DSD_DATE = VALUE
                     CASE DSD_TIME # ""
                        DSD_TIME = VALUE
                     CASE DSD_BOOLEAN # ""
                        IF VALUE = "Y" THEN
                           DSD_BOOLEAN = 1
                        END ELSE
                           DSD_BOOLEAN = 0
                        END
                     CASE 1
                        DSD_STRING = VALUE
                     END CASE
                     MATWRITE DSD.REC ON DOCUSET_SFIS_DATA, DSD_ID
                  END
               END
            NEXT SNO
         NEXT MNO
      END
   NEXT FNO
   GOTO 99999
*
*---- PROCESS ALL SUBROUTINES/FORMULAS
*
70000*
   FLDCNT = DCOUNT(FLD_NAME,AM)
   FOR FPTR = 1 TO FLDCNT
*     FNO = FLD_FNO<FPTR>
      FNO = FPTR
      BEGIN CASE
      CASE FLD_EXPR<FNO> = SUBRFLG
         I_FNAME = FLD_FNAME<FNO>
         I_VNAME = FLD_VNAME<FNO>
         GOSUB 71000
         DREC(FNO) = VALUE
      CASE FLD_EXPR<FNO> # ""
         ESTACK = FLD_ESTK<FNO>
         TSTACK = FLD_TSTK<FNO>
         GOSUB 72000
         DREC(FNO) = VALUE
      END CASE
   NEXT FPTR
   RETURN
*
*---- Call Subroutines
71000*
   SUBRNAME = FLD_SUBR<FNO>
   I_FNAME = CHANGE(FLD_FNAME<FNO>,SM,AM)
   I_FPTR = CHANGE(FLD_SBR_FPTR<FNO>,VM,AM)
   I_VNAME = CHANGE(FLD_VNAME<FNO>,SM,AM)
   I_SNAME = CHANGE(FLD_SBR_VID<FNO>,SM,AM)
   I_SREC = CHANGE(FLD_SBR_VVALUE<FNO>,SM,AM)
   I_VREC = ""
   CNT = DCOUNT(FLD_SBR_VPTR<FNO>,VM)
   FOR V = 1 TO CNT
      VNO = FLD_SBR_VPTR<FNO,V>
      VNAME = I_VNAME<V>
      BEGIN CASE
      CASE VNO < 1
         I_VREC<V> = FIELD(VNAME,"^",2)
      CASE VNAME = "ESTJ_COMP" AND DREC(VNO) = "ALL"
*           I_VREC<V> = COMP_NOS<1,1>
         I_VREC<V> = 1
         FOR VV = 2 TO 32
            I_VREC<V,1,VV> = VV
         NEXT VV
      CASE 1
         I_VREC<V> = DREC(VNO)
      END CASE
   NEXT V
   CALL @SUBRNAME(CONO,RTN_CODE,I_FNAME,I_FPTR,I_VNAME,I_VREC,I_SNAME,I_SREC,VALUE)
*  IF RTN_CODE # "" THEN
*     RTN_CODE = RTN_CODE : " (":FLD_NAME<FNO>:")"
*     GOSUB 91000
*  END
   RETURN
*
*---- PROCESS FORMULA
72000*
   ESTACK = CHANGE(ESTACK,SM,AM)
   TSTACK = CHANGE(TSTACK,SM,AM)
   RTN_CODE = ""
   ECNT = DCOUNT(TSTACK,AM)
   FOR EPTR = 1 TO ECNT WHILE RTN_CODE = ""
      IF TSTACK<EPTR> = "V" THEN
         EXPVAR = ESTACK<EPTR>
         BEGIN CASE
         CASE EXPVAR = "CO"
            ESTACK<EPTR> = CONO
            TSTACK<EPTR> = "X"
         CASE EXPVAR = "@CONO"
            ESTACK<EPTR> = CONO
            TSTACK<EPTR> = "X"
         CASE EXPVAR = "@DATE"
            ESTACK<EPTR> = DATE()
            TSTACK<EPTR> = "X"
         CASE EXPVAR = "@TIME"
            ESTACK<EPTR> = TIME()
            TSTACK<EPTR> = "X"
         CASE 1
            FLDNAME = ESTACK<EPTR>
            GOSUB 72100
            IF VERROR THEN
               RTN_CODE = "INVALID CALCULATION VARIABLE - ":FLDNAME
            END ELSE
               ESTACK<EPTR> = VALUE
               TSTACK<EPTR> = "N"
            END
         END CASE
      END
   NEXT EPTR
   IF RTN_CODE = "" THEN
*
*---- For EXPFNAME & EXPFPTR utilize the logic for I_FNAME & I_FPTR
*---- in calling subroutines @SUBRNAME
*
      CALL SCREEN_CALC(ESTACK,TSTACK,AM,EXPFNAME,EXPFPTR,VALUE,RTN_CODE)
*     IF RTN_CODE # "" THEN
*        RTN_CODE = RTN_CODE : " (":FLD_NAME<FNO>:")"
*        GOSUB 91000
*     END
*  END ELSE
*     GOSUB 91000
   END
   RETURN
*
*---- DERIVE FORMULA NAME VALUE
72100*
   VERROR = 1
   LOCATE FLDNAME IN FLD_NAMES,1 SETTING DPTR ELSE RETURN
* ??? The MVNO and the SMVNO are not utilized from the formula ???
   VALUE = DREC(DPTR)
   IF FLDNAME = "ESTJ_COMP" AND VALUE = "ALL" THEN
*        VALUE = COMP_NOS<1,1>
      VALUE = 1
      FOR V = 2 TO 32
         VALUE<1,1,V> = V
      NEXT V
   END
   CNV = FLD_CNV<DPTR>
   BEGIN CASE
   CASE CNV[1,2] # "MD"
   CASE CNV = "MD0"
   CASE 1
      CNV = CHANGE(CNV,",","")
      CNV = CHANGE(CNV,"$","")
      CNV = CHANGE(CNV,"-","")
      IF CNV # "MD0" THEN
         MVCNT = DCOUNT(VALUE,VM)
         FOR IMV = 1 TO MVCNT
            SMVCNT = DCOUNT(VALUE<1,IMV>,SVM)
            FOR ISMV = 1 TO SMVCNT
               VALUE<1,IMV,ISMV> = OCONV(VALUE<1,IMV,ISMV>,CNV)
            NEXT ISMV
         NEXT IMV
      END
   END CASE
   VERROR = 0
   RETURN
*
*--- End
*
99999*
   IF RTN_CODE = "" THEN RTN_CODE = 0
END
