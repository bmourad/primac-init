   SUBROUTINE NEW_DOCUSET_DATA(RTN_CODE,TKT_ID,DOCUSET_ID)
*COPY>CPYLIB>COM1
*********************************************************************
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* Revision      - [11.B]
* Revision Date - 09/11/98
* System        - PRIMAC
* Library       - JISBP/NEW_DOCUSET_DATA
* Author        - Ziad Yamout, VERCOM Software, Inc.
*********************************************************************
*
*---- Data Structure Libraries
*
*COPY>JIS.CPYLIB>DOCUSET_SFIS_DATA
*COPY>JIS.CPYLIB>SYS_SCN_DEF
*COPY>JIS.CPYLIB>SYS_TKT_DEF
*COPY>JIS.CPYLIB>SYS_FIELDS
*COPY>JIS.CPYLIB>SYS_FILES
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>CHAR
*
*
*  SYS.TYPE = 1; CALL SYSCOM(MAT SYSCOM.REC)
   RTN_CODE = ''
*
   DIM DREC(400)
   DIM TBL_REC(60)
   DIM TBL_ID(60)
   DIM TBL_ID_TYPE(60)
   DIM TBL_KEY(60)
   DIM TBL_ID_FNO(60)
*
   EQU FLD_FNAME TO FLD_ESTK
   EQU FLD_VNAME TO FLD_TSTK
*
   EXPFNAME = ""; EXPFPTR = ""
   SUBRFLG = "@SUBR"
   CALC_FLDS = "@DATE"
   CALC_FLDS<2> = "@TIME"
*
   MAT DREC = ""
   OPN_FILES = ""
   SCN_CMPS = ""; PRT_CMPS = ""
   SCN_FLDS = ""; FLD_ORG = ""
   FLD_FNO = ""
   FLD_FPTR = ""; FLD_TPTR = ""; FLD_IPTR = ""
   FLD_X = ""; FLD_Y = ""
   FLD_CNV = ""; FLD_FMT = ""
   FLD_LOC = ""; FLD_REF = ""
   FLD_MVNO = ""; FLD_SMVNO = ""
   MVNO_MV = ""; SMVNO_MV = ""
   MVNO_SMV = ""; SMVNO_SMV = ""
   MVNO_REF = ""; SMVNO_REF = ""
   MVNO_RCNT = 0; SMVNO_RCNT = 0
   FLD_LINES = ""; FLD_LNSPC = ""
   FLD_LNK = ""; FLD_LPTR = ""; FLD_LCNT = ""
   FLD_LCHR = ""; FLD_HIDE = ""
   FLD_DSTLST = ""
   FLD_SUBR = ""; FLD_EXPR = ""; FLD_ESTK = ""; FLD_TSTK = ""
   FLD_SBR_VID = ""; FLD_SBR_VVALUE = ""
   FLD_SBR_FPTR = ""; FLD_SBR_VPTR = ""
   TBL_READ = ""; TBL_IDX = ""; TBL_LOC = ""; TBL_FLD_LOC = ""
*
   KEYCNT = 1
   SCN_LOC = 1
   CONO = TKT_ID[1,3]
   DREC(1) = TKT_ID[4,99]
*
*---- OPEN FILES
*
   OPEN "","CPYLIB" TO CPYLIB ELSE
      RTN_CODE = "Cannot locate the CPYLIB file"
   END
   OPEN "","JOB" TO JOB ELSE
      RTN_CODE = "Cannot locate the JOB file"
   END
   OPEN "","DOCUSET_SFIS_DATA" TO DOCUSET_SFIS_DATA ELSE
      RTN_CODE = "Cannot locate the DOCUSET_SFIS_DATA file"
   END
   OPEN "","SYS_TKT_DEF" TO SYS_TKT_DEF ELSE
      RTN_CODE = "Cannot locate the SYS_TKT_DEF file"
   END
   OPEN "","SYS_SCN_DEF" TO SYS_SCN_DEF ELSE
      RTN_CODE = "Cannot locate the SYS_SCN_DEF file"
   END
   OPEN "","SYS_FIELDS" TO SYS_FIELDS ELSE
      RTN_CODE = "Cannot locate the SYS_FIELDS file"
   END
   OPEN "","SYS_FILES" TO SYS_FILES ELSE
      RTN_CODE = "Cannot locate the SYS_FILES file"
   END
*  OPEN "","DOCUSET_CONTROL" TO DOCUSET_CONTROL ELSE
*     RTN_CODE = "Cannot locate the DOCUSET_CONTROL file"
*  END
*  TRN_FILENAME = DOCUSET_ID:"_TRN"
   TRN_FILENAME = "JOB_JKT_IMG"
   OPEN "", TRN_FILENAME TO TRN_FILE ELSE
      RTN_CODE = "Cannot locate the ":TRN_FILENAME:" file"
   END
   IF RTN_CODE # "" THEN GOTO 99999
   READ FVAR_REC FROM CPYLIB, "FILE.VARS" ELSE
      RTN_CODE = "Cannot locate CPYLIB, FILE.VARS"
      GOTO 99999
   END
   READ REC FROM JOB, FIELD(TKT_ID,'-',1) ELSE
      RTN_CODE = "Cannot locate Job # ":FIELD(TKT_ID,'-',1)
      GOTO 99999
   END
   PFX = "^IGNORE^"
   CALL CPYLIB_SUB(FVAR_REC,PFX,ARRAY_NAME,FVAR_SIZE,RTN_CODE)
   IF RTN_CODE # "" THEN GOTO 99999
   MATREAD STKD.REC FROM SYS_TKT_DEF, DOCUSET_ID ELSE
      RTN_CODE = "Cannot locate Docuset # ":DOCUSET_ID
      GOTO 99999
   END
   READ FLD_NAMES FROM SYS_TKT_DEF, DOCUSET_ID:"*FLD" ELSE
      FLD_NAMES = ""
      SCNT = DCOUNT(STKD_SCN,VM)
      FOR SPTR = 1 TO SCNT
         MATREAD SSD.REC FROM SYS_SCN_DEF, STKD_SCN<1,SPTR> THEN
            FCNT = DCOUNT(SSD_FIELDS,VM)
            FOR FPTR = 1 TO FCNT
               FLDNAME = SSD_FIELDS<1,FPTR>
               LOCATE FLDNAME IN FLD_NAMES,1 SETTING P ELSE
                  FLD_NAMES<P> = FLDNAME
               END
            NEXT FPTR
         END
      NEXT SPTR
      WRITE FLD_NAMES ON SYS_TKT_DEF, DOCUSET_ID:"*FLD"
*      RTN_CODE = "Cannot locate Docuset # ":DOCUSET_ID
*      GOTO 99999
   END
*
*---- LOAD FIELD DEFINTIONS
*
   FCNT = DCOUNT(STKD_SCN,VM)
   FOR F = 1 TO FCNT
      FORM_NAME = STKD_SCN<1,F>
      MATREAD SSD.REC FROM SYS_SCN_DEF, FORM_NAME THEN
         LOCATE SSD_M_TABLE IN FVAR_REC,1 SETTING MTBL_PTR ELSE
            LIMIT = 1; MTBL_PTR = 0
            FOR I = FVAR_SIZE TO LIMIT STEP -1
               IF FVAR_REC<I> = "" THEN
                  FVAR_REC<I> = CONVERT(".","_",SSD_M_TABLE)
                  LIMIT = FVAR_SIZE; MTBL_PTR = I
               END
            NEXT I
            IF MTBL_PTR = 0 THEN
               RTN_CODE = "Cannot determine the ":SSD_M_TABLE:" main table link pointer"
               GOTO 99999
            END
         END
         BEGIN CASE
         CASE F = 1
            OPEN "",SSD_M_TABLE TO FILE.VARS(MTBL_PTR) ELSE
               RTN_CODE = "Cannot locate the ":SSD_M_TABLE:" table"
               GOTO 99999
            END
            OPN_FILES = MTBL_PTR
         CASE MTBL_PTR # OPN_FILES<1>
            RTN_CODE = "Master data file mismatch between screens"
            GOTO 99999
         END CASE
*
         STCNT = DCOUNT(SSD_S_TABLE,VM)
         FOR ST = 1 TO STCNT
            LOCATE SSD_S_TABLE<1,ST> IN FVAR_REC,1 SETTING FND THEN
               LOCATE FND IN OPN_FILES,2 SETTING OFPTR ELSE
                  OPEN "",SSD_S_TABLE<1,ST> TO FILE.VARS(FND) THEN
                     OPN_FILES<OFPTR> = FND
                  END ELSE
                     RTN_CODE = "Cannot locate the [":SSD_S_TABLE<1,ST>:"] table"
                     STCNT = 0
                  END
               END
            END ELSE
               LIMIT = 1; FND = 0
               FOR I = FVAR_SIZE TO LIMIT STEP -1
                  IF FVAR_REC<I> = "" THEN
                     FVAR_REC<I> = SSD_S_TABLE<1,ST>
                     LIMIT = FVAR_SIZE; FND = I
                  END
               NEXT I
               IF FND = 0 THEN
                  RTN_CODE = "Cannot initiate the (":SSD_S_TABLE<1,ST>:") table link pointer"
                  STCNT = 0
               END ELSE
                  LOCATE FND IN OPN_FILES,2 SETTING OFPTR ELSE
                     OPEN "",SSD_S_TABLE<1,ST> TO FILE.VARS(FND) THEN
                        OPN_FILES<OFPTR> = FND
                     END ELSE
                        RTN_CODE = "Cannot locate the [":SSD_S_TABLE<1,ST>:"] table"
                        STCNT = 0
                     END
                  END
               END
            END
         NEXT ST
         IF RTN_CODE # "" THEN GOTO 99999
         READ TKT FROM FILE.VARS(MTBL_PTR), TKT_ID ELSE TKT = ""
*
         FLDCNT = DCOUNT(SSD_FIELDS,VM)
         FOR I = 1 TO FLDCNT
            FLD_NAME = SSD_FIELDS<1,I>
            ORG_NAME = SSD_FLD_ORG<1,I>
            TBL_NAME = SSD_FLD_TABLE<1,I>
            LOCATE FLD_NAME IN FLD_NAMES,1 SETTING FNO ELSE GOTO 19
            SCN_FLDS<FNO> = FLD_NAME
            FLD_CNV<FNO> = SSD_FLD_CNV<1,I>
            FLD_EXPR<FNO> = SSD_FLD_EXPR<1,I>
            FLD_ESTK<FNO> = SSD_FLD_ESTK<1,I>
            FLD_TSTK<FNO> = SSD_FLD_TSTK<1,I>
            FLD_SUBR<FNO> = SSD_FLD_SUBR<1,I>
            FLD_SBR_VID<FNO> = SSD_SBR_VID<1,I>
            FLD_SBR_VVALUE<FNO> = SSD_SBR_VVALUE<1,I>
            FLD_LOC<FNO> = SSD_FLD_ATTNO<1,I>
            FLD_LCHR<FNO> = SSD_FLD_LCHR<1,I>
            FLD_FNO<I> = FNO
*
            IF ORG_NAME # "" THEN
               LOCATE ORG_NAME IN SCN_FLDS,1 SETTING ONO THEN FLD_ORG<FNO> = ONO
            END
            LOCATE FLD_NAME IN CALC_FLDS,1 SETTING CALC_FLG ELSE
               LOCATE ORG_NAME IN CALC_FLDS,1 SETTING CALC_FLG ELSE
                  CALC_FLG = 0
               END
            END
            BEGIN CASE
            CASE CALC_FLG
               FLD_FPTR<FNO> = 0
               FLD_TPTR<FNO> = 0
               GOTO 17
            CASE TBL_NAME = ""
               IF FNO > 1 THEN DREC(FNO) = TKT<FLD_LOC<FNO>>
               FLD_FPTR<FNO> = MTBL_PTR
               FLD_TPTR<FNO> = 0
               GOTO 17
            END CASE
            LOCATE TBL_NAME IN TBL_IDX,1 SETTING FND THEN
               IF SSD_FLD_LNKREF<1,I> = "" THEN
                  FLD_FPTR<FNO> = TBL_LOC<FND>
                  FLD_TPTR<FNO> = FND
                  TBL_FLD_LOC<FND,-1> = FNO
                  GOTO 17
               END ELSE
                  FPTR = TBL_LOC<FND>
                  FND = DCOUNT(TBL_IDX,AM) + 1
               END
            END ELSE
               LOCATE TBL_NAME IN FVAR_REC,1 SETTING FPTR ELSE GOTO 17
            END
            MATREAD SFR.REC FROM SYS_FILES, TBL_NAME ELSE GOTO 17
            TBL_ID_FNO(FND) = ""
            ICNT = DCOUNT(SFR.ID,VM)
            FOR II = 1 TO ICNT
               BEGIN CASE
               CASE SFR.ID<1,II> = "CO"
               CASE SFR.ID.TYPE<1,II> = "T"
               CASE 1
                  IF SSD_FLD_LNKREF<1,I> = "" THEN
                     LOCATE SFR.ID<1,II> IN SSD_FLD_PFX<1>,1 SETTING PLOC ELSE
                        PLOC = 0
                     END
                  END ELSE
                     LOCATE SSD_FLD_LNKREF<1,I> IN SSD_FIELDS<1>,1 SETTING PLOC THEN
                        IF SSD_FLD_PFX<1,PLOC> # SFR.ID<1,II> THEN
                           PLOC = 0
                        END
                     END ELSE
                        PLOC = 0
                     END
                  END
                  BEGIN CASE
                  CASE PLOC >= I
                     GOTO 17
                  CASE PLOC
                     TBL_ID_FNO(FND)<II> = FLD_FNO<PLOC>
                     IF FLD_IPTR<FLD_FNO<PLOC>> < 1 THEN
                        FLD_IPTR<FLD_FNO<PLOC>> = FND
                     END
                  CASE 1
                     GOTO 17
                  END CASE
               END CASE
            NEXT II
            IF ICNT THEN
               TBL_ID(FND) = SFR.ID
               TBL_ID_TYPE(FND) = SFR.ID.TYPE
               TBL_IDX<FND> = TBL_NAME
               TBL_LOC<FND> = FPTR
               TBL_FLD_LOC<FND> = FNO
               FLD_FPTR<FNO> = FPTR
               FLD_TPTR<FNO> = FND
            END
17*
            FLD_MVNO<FNO> = FIELD(SSD_FLD_MVNO<1,I>,",",1)
            MVNO_MV<FNO> = FIELD(SSD_FLD_MVNO<1,I>,",",2)
            MVNO_SMV<FNO> = FIELD(SSD_FLD_MVNO<1,I>,",",3)
            IF NOT(NUM(FLD_MVNO<FNO>)) THEN
               MVNO_RCNT = MVNO_RCNT + 1
               MVNO_REF<MVNO_RCNT> = FNO
               BEGIN CASE
               CASE NOT(NUM(MVNO_MV<FNO>))
                  MVNO_MV<FNO> = 1
               CASE MVNO_MV<FNO> < 1
                  MVNO_MV<FNO> = 1
               END CASE
               BEGIN CASE
               CASE NOT(NUM(MVNO_SMV<FNO>))
                  MVNO_SMV<FNO> = 1
*           CASE MVNO_SMV<FNO> < 1
*              MVNO_SMV<FNO> = 1
               END CASE
            END
            FLD_SMVNO<FNO> = FIELD(SSD_FLD_SMVNO<1,I>,",",1)
            SMVNO_MV<FNO> = FIELD(SSD_FLD_SMVNO<1,I>,",",2)
            SMVNO_SMV<FNO> = FIELD(SSD_FLD_SMVNO<1,I>,",",3)
            IF NOT(NUM(FLD_SMVNO<FNO>)) THEN
               SMVNO_RCNT = SMVNO_RCNT + 1
               SMVNO_REF<SMVNO_RCNT> = FNO
               BEGIN CASE
               CASE NOT(NUM(SMVNO_MV<FNO>))
                  SMVNO_MV<FNO> = 1
               CASE SMVNO_MV<FNO> < 1
                  SMVNO_MV<FNO> = 1
               END CASE
               BEGIN CASE
               CASE NOT(NUM(SMVNO_SMV<FNO>))
                  SMVNO_SMV<FNO> = 1
*           CASE SMVNO_SMV<FNO> < 1
*              SMVNO_SMV<FNO> = 1
               END CASE
            END
            FLD_LINES<FNO> = SSD_FLD_LINES<1,I>
            FLD_LNSPC<FNO> = SSD_FLD_LNSPC<1,I>
            FLD_HIDE<FNO> = SSD_FLD_HIDE<1,I>
            IF SSD_FLD_LNK<1,I> # "" AND FLD_LINES<FNO> > 1 AND FLD_HIDE<FNO> < 1 THEN
               FLD_LNK<FNO> = SSD_FLD_LNK<1,I>
            END
*
            IF FLD_EXPR<FNO> = SUBRFLG THEN
               CNT = DCOUNT(SSD_SBR_FNAME<1,I>,SVM)
               FOR J = 1 TO CNT
                  TBL_NAME = SSD_SBR_FNAME<1,I,J>
                  LOCATE TBL_NAME IN SSD_S_TABLE<1>,1 SETTING FND ELSE
                     SSD_S_TABLE<1,FND> = TBL_NAME
                  END
               NEXT J
               CNT = DCOUNT(FLD_FNAME<FNO>,SVM)
               FOR J = 1 TO CNT
                  LOCATE FLD_FNAME<FNO,1,J> IN FVAR_REC,1 SETTING FND THEN
                     FLD_SBR_FPTR<FNO,J> = FND
                  END ELSE
                     FLD_EXPR<FNO> = ""; FLD_SUBR<FNO> = ""
                     FLD_FNAME<FNO> = ""; FLD_VNAME<FNO> = ""
                     FLD_SBR_VID = ""; FLD_SBR_VVALUE = ""
                  END
               NEXT J
               CNT = DCOUNT(FLD_VNAME<FNO>,SVM)
               FOR J = 1 TO CNT
                  LOCATE FLD_VNAME<FNO,1,J> IN FLD_NAMES,1 SETTING FND THEN
                     FLD_SBR_VPTR<FNO,J> = FND
                  END ELSE
                     IF FLD_VNAME<FNO,1,J>[1,1] = "^" THEN
                        FLD_SBR_VPTR<FNO,J> = 0
                     END ELSE
                        FLD_SBR_VPTR<FNO,J> = FNO
                     END
                  END
               NEXT J
            END
19*
         NEXT I
      END
   NEXT F
****************
****************
*
   IF MVNO_RCNT THEN
      MVNO_RPTR = ""
      FOR IR = MVNO_RCNT TO 1 STEP -1
         FNO = MVNO_REF<IR>
         LOCATE FLD_MVNO<FNO> IN SCN_FLDS,1 SETTING FND THEN
            MVNO_RPTR<IR> = FND
         END ELSE
            FLD_MVNO<FNO> = 1
            MVNO_REF = DELETE(MVNO_REF,IR,0,0)
            MVNO_RPTR = DELETE(MVNO_RPTR,IR,0,0)
         END
      NEXT IR
      MVNO_RCNT = DCOUNT(MVNO_REF,AM)
   END
   IF SMVNO_RCNT THEN
      SMVNO_RPTR = ""
      FOR IR = SMVNO_RCNT TO 1 STEP -1
         FNO = SMVNO_REF<IR>
         LOCATE FLD_SMVNO<FNO> IN SCN_FLDS,1 SETTING FND THEN
            SMVNO_RPTR<IR> = FND
         END ELSE
            FLD_SMVNO<FNO> = 1
            SMVNO_REF = DELETE(SMVNO_REF,IR,0,0)
            SMVNO_RPTR = DELETE(SMVNO_RPTR,IR,0,0)
         END
      NEXT IR
      SMVNO_RCNT = DCOUNT(SMVNO_REF,AM)
   END
****************
****************
   TBLCNT = DCOUNT(TBL_IDX,AM)
   FOR TT = 1 TO TBLCNT
      TBL_TO_READ = TT
      GOSUB 4010
   NEXT TT
   TBL_READ = ""
   GOSUB 4090
   FOR I = 1 TO MVNO_RCNT
      FNO = MVNO_REF<I>; RNO = MVNO_RPTR<I>
      GOSUB 4030
   NEXT I
   FOR I = 1 TO SMVNO_RCNT
      FNO = SMVNO_REF<I>; RNO = SMVNO_RPTR<I>
      GOSUB 4050
   NEXT I
   GOSUB 70000
   FOR I = 1 TO MVNO_RCNT
      FNO = MVNO_REF<I>; RNO = MVNO_RPTR<I>
      GOSUB 4030
   NEXT I
   FOR I = 1 TO SMVNO_RCNT
      FNO = SMVNO_REF<I>; RNO = SMVNO_RPTR<I>
      GOSUB 4050
   NEXT I
*  MATWRITE DREC ON TRN_FILE, TKT_ID:"!":DOCUSET_ID
   MATWRITE DREC ON TRN_FILE, TKT_ID
*
   GOTO 99999
****************
****************
4010*
   TTR = TBL_TO_READ<1>
   TBL_READ<-1> = TTR
   TBL_TO_READ = DELETE(TBL_TO_READ,1,0,0)
   IDNO = 0; TBL_KEY(TTR) = ""
   ICNT = DCOUNT(TBL_ID(TTR),VM)
   FOR IL = 1 TO ICNT
      BEGIN CASE
      CASE TBL_ID(TTR)<1,IL> = "CO"
         TBL_KEY(TTR) = TBL_KEY(TTR):CONO
      CASE TBL_ID_TYPE(TTR)<1,IL> = "T"
         TBL_KEY(TTR) = TBL_KEY(TTR):TBL_ID(TTR)<1,IL>
      CASE 1
         IDNO = IDNO + 1
         FNO = TBL_ID_FNO(TTR)<IL>
*
*---- Multiple Multi & Sub multi values are not supported for Item IDs
*---- Also, MVNO & SMVNO cannot reference a different ID.
*
         IF NOT(NUM(FLD_MVNO<FNO>)) THEN
            LOCATE FNO IN MVNO_REF,1 SETTING III THEN
               RNO = MVNO_RPTR<III>
               GOSUB 4030
            END ELSE
               FLD_MVNO<FNO> = 9999
            END
         END
         IF NOT(NUM(FLD_SMVNO<FNO>)) THEN
            LOCATE FNO IN SMVNO_REF,1 SETTING III THEN
               RNO = SMVNO_RPTR<III>
               GOSUB 4050
            END ELSE
               FLD_SMVNO<FNO> = 9999
            END
         END
         BEGIN CASE
         CASE FLD_SMVNO<FNO> < 1
            IF IL = ICNT THEN
               MVKEY = FLD_MVNO<FNO>; SMVKEY = 0
               KEYCNT = DCOUNT(DREC(FNO)<1,MVKEY>,SVM)
               IDVALUE = CHANGE(DREC(FNO)<1,MVKEY>,SVM,AM)
            END ELSE
               IDVALUE = DREC(FNO)<1,FLD_MVNO<FNO>,1>
            END
         CASE FLD_MVNO<FNO> < 1
            IF IL = ICNT THEN
               MVKEY = 0; SMVKEY = FLD_SMVNO<FNO>
               KEYCNT = DCOUNT(DREC(FNO),VM)
               IDVALUE = DREC(FNO)<1,1,SMVKEY>
               FOR V = 2 TO KEYCNT
                  IDVALUE<V> = DREC(FNO)<1,V,SMVKEY>
               NEXT V
            END ELSE
               IDVALUE = DREC(FNO)<1,1,FLD_SMVNO<FNO>>
            END
         CASE 1
            IDVALUE = DREC(FNO)<1,FLD_MVNO<FNO>,FLD_SMVNO<FNO>>
         END CASE
         IF KEYCNT = 1 THEN
            TBL_KEY(TTR) = TBL_KEY(TTR):IDVALUE
         END ELSE
            TBLKEY = TBL_KEY(TTR)
            TBL_KEY(TTR) = TBLKEY:IDVALUE
            FOR V = 2 TO KEYCNT
               TBL_KEY(TTR)<V> = TBLKEY:IDVALUE<V>
            NEXT V
         END
      END CASE
   NEXT IL
   READ TBL_REC(TTR) FROM FILE.VARS(TBL_LOC<TTR>), TBL_KEY(TTR)<1> ELSE
      RTN_CODE = "Cannot locate (":TBL_IDX<TTR>:") record # ":TBL_KEY(TTR)<1>
      GOTO 99999
      TBL_REC(TTR) = ''
   END
   CNT = DCOUNT(TBL_FLD_LOC<TTR>,VM)
   FOR IL = 1 TO CNT
      FNO = TBL_FLD_LOC<TTR,IL>
      DREC(FNO) = TBL_REC(TTR)<FLD_LOC<FNO>>
   NEXT IL
   GOSUB 4070
   KEYCNT = 1
   RETURN
*
4030*
   IF MVNO_SMV<FNO> = 0 THEN
      IF SCN_CMPS<1,SCN_LOC> THEN
         XNO = SCN_CMPS<1,SCN_LOC>
      END ELSE
         XNO = 1
      END
   END ELSE
      XNO = MVNO_SMV<FNO>
   END
   BEGIN CASE
   CASE DREC(RNO) = "ALL"
      BEGIN CASE
      CASE SCN_FLDS<RNO> # "ESTJ_COMP"
         FLD_MVNO<FNO> = 1
      CASE MVNO_SMV<FNO> > 1
         FLD_MVNO<FNO> = MVNO_SMV<FNO>
      CASE XNO > 1
         FLD_MVNO<FNO> = XNO
      CASE MVNO_MV<FNO> > 1
         FLD_MVNO<FNO> = MVNO_MV<FNO>
      CASE 1
         FLD_MVNO<FNO> = 1
      END CASE
   CASE NUM(DREC(RNO)<1,MVNO_MV<FNO>,XNO>)
      FLD_MVNO<FNO> = DREC(RNO)<1,MVNO_MV<FNO>,XNO> + 0
      IF FLD_MVNO<FNO> < 1 THEN FLD_MVNO<FNO> = 9999
   CASE 1
      FLD_MVNO<FNO> = 1
   END CASE
   RETURN
*
4050*
   IF SMVNO_SMV<FNO> = 0 THEN
      IF SCN_CMPS<1,SCN_LOC> THEN
         XNO = SCN_CMPS<1,SCN_LOC>
      END ELSE
         XNO = 1
      END
   END ELSE
      XNO = SMVNO_SMV<FNO>
   END
   BEGIN CASE
   CASE DREC(RNO) = "ALL"
      BEGIN CASE
      CASE SCN_FLDS<RNO> # "ESTJ_COMP"
         FLD_SMVNO<FNO> = 1
      CASE SMVNO_SMV<FNO> > 1
         FLD_SMVNO<FNO> = SMVNO_SMV<FNO>
      CASE XNO > 1
         FLD_SMVNO<FNO> = XNO
      CASE SMVNO_MV<FNO> > 1
         FLD_SMVNO<FNO> = SMVNO_MV<FNO>
      CASE 1
         FLD_SMVNO<FNO> = 1
      END CASE
   CASE NUM(DREC(RNO)<1,SMVNO_MV<FNO>,XNO>)
      FLD_SMVNO<FNO> = DREC(RNO)<1,SMVNO_MV<FNO>,XNO> + 0
      IF FLD_SMVNO<FNO> < 1 THEN FLD_SMVNO<FNO> = 9999
   CASE 1
      FLD_SMVNO<FNO> = 1
   END CASE
   RETURN
*
4070*
   BEGIN CASE
   CASE KEYCNT = 1
   CASE SMVKEY
      FOR V = 2 TO KEYCNT
         READ TBL_REC(TTR) FROM FILE.VARS(TBL_LOC<TTR>), TBL_KEY(TTR)<V> THEN
            FOR IL = 1 TO CNT
               FNO = TBL_FLD_LOC<TTR,IL>
               DREC(FNO)<1,V> = TBL_REC(TTR)<FLD_LOC<FNO>,1>
            NEXT IL
         END ELSE
            RTN_CODE = "Cannot locate (":TBL_IDX<TTR>:") record # ":TBL_KEY(TTR)<V>
            GOTO 99999
            TBL_REC(TTR) = ''
         END
      NEXT V
   CASE MVKEY
      FOR V = 2 TO KEYCNT
         READ TBL_REC(TTR) FROM FILE.VARS(TBL_LOC<TTR>), TBL_KEY(TTR)<V> THEN
            FOR IL = 1 TO CNT
               FNO = TBL_FLD_LOC<TTR,IL>
               DREC(FNO)<1,MVKEY,V> = TBL_REC(TTR)<FLD_LOC<FNO>,1,1>
            NEXT IL
         END ELSE
            RTN_CODE = "Cannot locate (":TBL_IDX<TTR>:") record # ":TBL_KEY(TTR)<V>
            GOTO 99999
            TBL_REC(TTR) = ''
         END
      NEXT V
   END CASE
   RETURN
*
4090*
   IF SCN_LOC = 1 THEN
*CRT @(0,23):SCN_NAMES:"|":SCN_CMPS:"|":; INPUT XOXO:
*---- Establish ESTJ_COMP if any ----*
      LOCATE "Y" IN SCN_CMPS<1>,1 SETTING TTTR ELSE
         SCN_CMPS = ""
         LOCATE "Y" IN PRT_CMPS<1>,1 SETTING TTTR ELSE
            PRT_CMPS = ""; GOTO 4095
         END
      END
      LOCATE "ESTIMATE.JOB" IN TBL_IDX,1 SETTING TTTR ELSE
         SCN_CMPS = ""; PRT_CMPS = ""
         GOTO 4095
      END
      COMP_NOS = TBL_REC(TTTR)<2>
      IF COMP_NOS = "ALL" THEN
         LOCATE "ESTIMATE" IN TBL_IDX,1 SETTING TTTR THEN
            SSCN_CNT = TBL_REC(TTTR)<51>
            COMP_NOS = 1
            FOR ITTR = 2 TO SSCN_CNT
               COMP_NOS<1,1,ITTR> = ITTR
            NEXT ITTR
         END ELSE
            SSCN_CNT = 1
            COMP_NOS = 1
         END
      END ELSE
         SSCN_CNT = DCOUNT(COMP_NOS,SVM)
      END
*---- If only one component ----*
      IF SSCN_CNT = 1 THEN
         LOOP
            LOCATE "Y" IN SCN_CMPS<1>,1 SETTING TTTR ELSE TTTR = 0
         WHILE TTTR DO
*        SCN_CMPS<1,TTTR> = COMP_NOS<1,1,1>
            SCN_CMPS<1,TTTR> = 1
         REPEAT
         LOOP
            LOCATE "Y" IN PRT_CMPS<1>,1 SETTING TTTR ELSE TTTR = 0
         WHILE TTTR DO
*        PRT_CMPS<1,TTTR> = COMP_NOS<1,1,1>
            PRT_CMPS<1,TTTR> = 1
         REPEAT
         GOTO 4095
      END
*---- Duplicate the multi component screen with the # of components ----*
*---- The # updated is the SMV # in the ESTIMATE.JOB file ----*
*---- While the COMP_NOS is the MV # in the ESTIMATE file ----*
      SCN_NAMES = FIELD(ORG_SCN_NAMES,",",1)
      SSCN = SCN_NAMES
      IF ORG_SCN_CMPS<1,1> = "Y" THEN
*     SCN_CMPS = COMP_NOS<1,1,1>
         SCN_CMPS = 1
         FOR ITTR = 2 TO SSCN_CNT
            SCN_NAMES = SCN_NAMES : "," : SSCN
*        SCN_CMPS<1,ITTR> = COMP_NOS<1,1,ITTR>
            SCN_CMPS<1,ITTR> = ITTR
         NEXT ITTR
      END ELSE
         SCN_CMPS = 0
      END
      TTTR = 2
      LOOP
         SSCN = FIELD(ORG_SCN_NAMES,",",TTTR)
      WHILE SSCN DO
         IF ORG_SCN_CMPS<1,TTTR> = "Y" THEN
            FOR ITTR = 1 TO SSCN_CNT
               SCN_NAMES = SCN_NAMES : "," : SSCN
*           SCN_CMPS<1,ITTR> = COMP_NOS<1,1,ITTR>
               SCN_CMPS<1,-1> = ITTR
            NEXT ITTR
         END ELSE
            SCN_NAMES = SCN_NAMES : "," : SSCN
            SCN_CMPS<1,-1> = 0
         END
         TTTR = TTTR + 1
      REPEAT
      PRT_NAMES = FIELD(ORG_PRT_NAMES,",",1)
      BLNPRT = ORG_BLNPRT<1,1>; ELNPRT = ORG_ELNPRT<1,1>
      IF ORG_PRT_CMPS<1,1> = "Y" THEN
*     PRT_CMPS = COMP_NOS<1,1,1>
         PRT_CMPS = 1
         SSCN = PRT_NAMES
         SBPRT = ORG_BLNPRT<1,1>; SEPRT = ORG_ELNPRT<1,1>
         FOR ITTR = 2 TO SSCN_CNT
            PRT_NAMES = PRT_NAMES : "," : SSCN
            BLNPRT<1,-1> = SBPRT; ELNPRT<1,-1> = SEPRT
*        PRT_CMPS<1,ITTR> = COMP_NOS<1,1,ITTR>
            PRT_CMPS<1,ITTR> = ITTR
         NEXT ITTR
      END ELSE
         PRT_CMPS = 0
      END
      TTTR = 2
      LOOP
         SSCN = FIELD(ORG_PRT_NAMES,",",TTTR)
         SBPRT = ORG_BLNPRT<1,TTTR>; SEPRT = ORG_ELNPRT<1,TTTR>
      WHILE SSCN DO
         IF ORG_PRT_CMPS<1,TTTR> = "Y" THEN
            FOR ITTR = 1 TO SSCN_CNT
               PRT_NAMES = PRT_NAMES : "," : SSCN
               BLNPRT<1,-1> = SBPRT; ELNPRT<1,-1> = SEPRT
*           PRT_CMPS<1,ITTR> = COMP_NOS<1,1,ITTR>
               PRT_CMPS<1,-1> = ITTR
            NEXT ITTR
         END ELSE
            PRT_NAMES = PRT_NAMES : "," : SSCN
            BLNPRT<1,-1> = SBPRT; ELNPRT<1,-1> = SEPRT
            PRT_CMPS<1,-1> = 0
         END
         TTTR = TTTR + 1
      REPEAT
4095*
*CRT @(0,23):CL:SCN_NAMES:"|":SCN_CMPS:"|":; INPUT XOXO:
*CRT @(0,23):CL:PRT_NAMES:"|":PRT_CMPS:"|":; INPUT XOXO:
   END
   RETURN
**********************************************************************
**********************************************************************
*
*---- PROCESS ALL SUBROUTINES/FORMULAS
*
70000*
   FLDCNT = DCOUNT(SCN_FLDS,AM)
   FOR FPTR = 1 TO FLDCNT
*     FNO = FLD_FNO<FPTR>
      FNO = FPTR
      BEGIN CASE
      CASE FLD_EXPR<FNO> = SUBRFLG
         I_FNAME = FLD_FNAME<FNO>
         I_VNAME = FLD_VNAME<FNO>
         GOSUB 71000
         DREC(FNO) = VALUE
      CASE FLD_EXPR<FNO> # ""
         ESTACK = FLD_ESTK<FNO>
         TSTACK = FLD_TSTK<FNO>
         GOSUB 72000
         DREC(FNO) = VALUE
      END CASE
   NEXT FPTR
   RETURN
*
*---- Call Subroutines
71000*
   SUBRNAME = FLD_SUBR<FNO>
   I_FNAME = CHANGE(FLD_FNAME<FNO>,SM,AM)
   I_FPTR = CHANGE(FLD_SBR_FPTR<FNO>,VM,AM)
   I_VNAME = CHANGE(FLD_VNAME<FNO>,SM,AM)
   I_SNAME = CHANGE(FLD_SBR_VID<FNO>,SM,AM)
   I_SREC = CHANGE(FLD_SBR_VVALUE<FNO>,SM,AM)
   I_VREC = ""
   CNT = DCOUNT(FLD_SBR_VPTR<FNO>,VM)
   FOR V = 1 TO CNT
      VNO = FLD_SBR_VPTR<FNO,V>
      VNAME = I_VNAME<V>
      BEGIN CASE
      CASE VNO < 1
         I_VREC<V> = FIELD(VNAME,"^",2)
      CASE VNAME = "ESTJ_COMP" AND DREC(VNO) = "ALL"
*           I_VREC<V> = COMP_NOS<1,1>
         I_VREC<V> = 1
         FOR VV = 2 TO 32
            I_VREC<V,1,VV> = VV
         NEXT VV
      CASE 1
         I_VREC<V> = DREC(VNO)
      END CASE
   NEXT V
   CALL @SUBRNAME(CONO,RTN_CODE,I_FNAME,I_FPTR,I_VNAME,I_VREC,I_SNAME,I_SREC,VALUE)
   IF RTN_CODE # "" THEN
      RTN_CODE = RTN_CODE : " (":SCN_FLDS<FNO>:")"
      GOTO 99999
   END
   RETURN
*
*---- PROCESS FORMULA
72000*
   ESTACK = CHANGE(ESTACK,SM,AM)
   TSTACK = CHANGE(TSTACK,SM,AM)
   RTN_CODE = ""
   ECNT = DCOUNT(TSTACK,AM)
   FOR EPTR = 1 TO ECNT WHILE RTN_CODE = ""
      IF TSTACK<EPTR> = "V" THEN
         EXPVAR = ESTACK<EPTR>
         BEGIN CASE
         CASE EXPVAR = "CO"
            ESTACK<EPTR> = CONO
            TSTACK<EPTR> = "X"
         CASE EXPVAR = "@CONO"
            ESTACK<EPTR> = CONO
            TSTACK<EPTR> = "X"
         CASE EXPVAR = "@DATE"
            ESTACK<EPTR> = DATE()
            TSTACK<EPTR> = "X"
         CASE EXPVAR = "@TIME"
            ESTACK<EPTR> = TIME()
            TSTACK<EPTR> = "X"
         CASE 1
            FLDNAME = ESTACK<EPTR>
            GOSUB 72100
            IF VERROR THEN
               RTN_CODE = "INVALID CALCULATION VARIABLE - ":FLDNAME
            END ELSE
               ESTACK<EPTR> = VALUE
               TSTACK<EPTR> = "N"
            END
         END CASE
      END
   NEXT EPTR
   IF RTN_CODE = "" THEN
*
*---- For EXPFNAME & EXPFPTR utilize the logic for I_FNAME & I_FPTR
*---- in calling subroutines @SUBRNAME
*
      CALL SCREEN_CALC(ESTACK,TSTACK,AM,EXPFNAME,EXPFPTR,VALUE,RTN_CODE)
      IF RTN_CODE # "" THEN
         RTN_CODE = RTN_CODE : " (":SCN_FLDS<FNO>:")"
         GOTO 99999
      END
   END ELSE
      GOTO 99999
   END
   RTN_CODE = ""
   RETURN
*
*---- DERIVE FORMULA NAME VALUE
72100*
   VERROR = 1
   LOCATE FLDNAME IN SCN_FLDS,1 SETTING DPTR ELSE RETURN
* ??? The MVNO and the SMVNO are not utilized from the formula ???
   VALUE = DREC(DPTR)
   IF FLDNAME = "ESTJ_COMP" AND VALUE = "ALL" THEN
*        VALUE = COMP_NOS<1,1>
      VALUE = 1
      FOR V = 2 TO 32
         VALUE<1,1,V> = V
      NEXT V
   END
   CNV = FLD_CNV<DPTR>
   BEGIN CASE
   CASE CNV[1,2] # "MD"
   CASE CNV = "MD0"
   CASE 1
      CNV = CHANGE(CNV,",","")
      CNV = CHANGE(CNV,"$","")
      CNV = CHANGE(CNV,"-","")
      IF CNV # "MD0" THEN
         MVCNT = DCOUNT(VALUE,VM)
         FOR IMV = 1 TO MVCNT
            SMVCNT = DCOUNT(VALUE<1,IMV>,SVM)
            FOR ISMV = 1 TO SMVCNT
               VALUE<1,IMV,ISMV> = OCONV(VALUE<1,IMV,ISMV>,CNV)
            NEXT ISMV
         NEXT IMV
      END
   END CASE
   VERROR = 0
   RETURN
*
*--- End
*
99999*
   IF RTN_CODE = "" THEN
      RTN_CODE = 0
   END ELSE
      DELETE TRN_FILE, TKT_ID:"!":DOCUSET_ID
   END
END
