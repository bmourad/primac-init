*COPY>CPYLIB>COM1
*COPY>POS.CPYLIB>COM.PO
*COPY>POS.CPYLIB>COM.PO.INTRF
*********************************************************************
* REVISION    - [08.2]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* PROGRAM     - PO.MAINT
* BY          - JIHAD YAMOUT , C.B.A
* DATE        - 02/22/84
* DESCRIPTION
* This program is used to create and maintain Regular P/O's.
*
* -------- UPDATE  ON 08/02/90 BY SCOTT MCHARGUE -------------------
* 01/25/94 TASK 17919 DOUG S ADD NEW FIELD FOR ACCRUE
* 10/20/95 TASK 19404 CT6, POS DIVISIONALIZATION
* 5/96 CLS - ADD VENDOR PHONE AND FAX TO HEADER SCREEN
*T23082 gat 07/20/1998 * FIX PO GUI PROBLEM
*********************************************************************
**** INSERT FILES EQUATES
*COPY>PMC.CPYLIB>PO
*COPY>ICS.CPYLIB>INVENTORY
*COPY>ICS.CPYLIB>INV.STATS
*COPY>ICS.CPYLIB>WAREHOUSE
*COPY>PMC.CPYLIB>DIVISION
*COPY>ICS.CPYLIB>CATEGORY
*COPY>PMC.CPYLIB>TERMS
*COPY>PMC.CPYLIB>SHIP.VIA
*COPY>ICS.CPYLIB>INV.WHSE
*COPY>PMC.CPYLIB>VEND
*COPY>APS.CPYLIB>VEND.STATS
*COPY>APS.CPYLIB>VEND.PO.STATS
*COPY>APS.CPYLIB>VEND.PROD.STATS
*COPY>PMC.CPYLIB>COMPANY
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>EDIT.COM.DRIVER
*COPY>CPYLIB>FILE.VARS
*COPY>APS.CPYLIB>APS.FILE.VARS
*COPY>CPYLIB>GEN.XREF
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>CHAR
*COPY>ICS.CPYLIB>PO.RSKI.XREF
*COPY>ICS.CPYLIB>ROLL.SKID.INFO
   DIM PROD.DEL(5)
**** SETUP FOR SYSTEM ERRMSGS
   SYS.TYPE = 1
   CALL SYSCOM(MAT SYSCOM.REC)
**** OPEN FILES
   OPEN '','INVENTORY' TO INVENTORY ELSE ERRMSG = 'INVENTORY FILE IS MISSING'; GOTO 93000
   OPEN '','CUSTOMER' TO CUSTOMER ELSE ERRMSG = 'CUSTOMER FILE IS MISSING'; GOTO 93000
   OPEN '','JOB' TO JOB ELSE ERRMSG = 'JOB FILE IS MISSING'; GOTO 93000
   OPEN '','INVENTORY.XREF' TO INVENTORY.XREF ELSE ERRMSG = 'INVENTORY.XREF FILE IS MISSING'; GOTO 93000
   OPEN '','PO' TO PO ELSE ERRMSG = 'PO FILE IS MISSING'; GOTO 93000
   OPEN '','TERMS' TO TERMS ELSE ERRMSG = 'TERMS FILE IS MISSING'; GOTO 93000
   OPEN '','INV.STATS' TO INV.STATS ELSE ERRMSG = 'INV.STATS FILE IS MISSING'; GOTO 93000
   OPEN '','INV.JOB.STATS' TO INV.JOB.STATS ELSE ERRMSG = 'INV.JOB.STATS FILE IS MISSING'; GOTO 93000
   OPEN '','WAREHOUSE' TO WAREHOUSE ELSE ERRMSG = 'WAREHOUSE FILE IS MISSING'; GOTO 93000
   OPEN '','INV.WHSE' TO INV.WHSE ELSE ERRMSG = 'INV.WHSE IS MISSING'; GOTO 93000
   OPEN '','SHIP.VIA' TO SHIP.VIA ELSE ERRMSG = 'SHIP.VIA FILE IS MISSING'; GOTO 93000
   OPEN '','CATEGORY' TO CATEGORY ELSE ERRMSG = 'CATEGORY FILE IS MISSING'; GOTO 93000
   OPEN '','COMPANY' TO COMPANY ELSE ERRMSG = 'COMPANY FILE IS MISSING'; GOTO 93000
   OPEN '','VEND' TO VEND ELSE ERRMSG = 'VENDOR FILE IS MISSING'; GOTO 93000
   OPEN '','POS.SCREENS' TO M.SCREENS ELSE ERRMSG = 'POS.SCREENS FILE IS MISSING'; GOTO 93000
   OPEN '','CONTROL' TO CONTROL ELSE ERRMSG = 'CONTROL FILE IS MISSING'; GOTO 93000
   OPEN '','VENDOR.XREF' TO VENDOR.XREF ELSE ERRMSG = 'VENDOR.XREF FILE IS MISSING'; GOTO 93000
   OPEN '','PREFIX' TO PREFIX ELSE ERRMSG = 'PREFIX FILE IS MISSING'; GOTO 93000
   OPEN '','ROLL.SKID.INFO' TO ROLL.SKID.INFO ELSE ERRMSG = 'ROLL.SKID.INFO FILE IS MISSING'; GOTO 93000
   OPEN '','PO.RSKI.XREF' TO PO.RSKI.XREF ELSE ERRMSG = 'PO.RSKI.XREF FILE IS MISSING'; GOTO 93000
   OPEN '','SLIT.TRANS' TO SLIT.TRANS ELSE ERRMSG = 'SLIT.TRANS FILE IS MISSING'; GOTO 93000
*** TASK 19404
   OPEN '','DIVISION' TO DIVISION ELSE ERRMSG = 'DIVISION FILE IS MISSING'; GOTO 93000
*** Open DEPARTMENT, COST.CNTR, XREF.DATA for PO.DET.MAINT
   OPEN '','DEPARTMENT' TO DEPARTMENT ELSE ERRMSG = 'DEPARTMENT FILE IS MISSING'; GOTO 93000
   OPEN '','COST.CNTR' TO COST.CNTR ELSE ERRMSG = 'COST.CNTR FILE IS MISSING'; GOTO 93000
   OPEN '','XREF.DATA' TO XREF.DATA ELSE ERRMSG = 'XREF.DATA FILE IS MISSING'; GOTO 93000
***
*
***** GET COMPANY NAME
*
   MAT COMP.REC = ''
   CONO = ''
   CALL GET.CONO(CONO,MAT COMP.REC)
   IF CONO = 'END' THEN GOTO 99999
   IF CO.APS.R.INTRF > 2 THEN
     OPEN '','VEND.STATS' TO VEND.STATS ELSE
       ERRMSG = "VEND.STATS FILE IS MISSING"; GOTO 93000
     END
     OPEN '','VEND.PO.STATS' TO VEND.PO.STATS ELSE
       ERRMSG = "VEND.PO.STATS FILE IS MISSING"; GOTO 93000
     END
     OPEN '','VEND.PROD.STATS' TO VEND.PROD.STATS ELSE
       ERRMSG = "VEND.PROD.STATS FILE IS MISSING"; GOTO 93000
     END
   END
*
**** SET UP GEN.XREF.REC
*
   MAT GEN.XREF.REC = ''
   GXR.CO = CONO
   GXR.HEADING<1,2> = 'DESCRIPTION'
   GXR.ATT<1,1> = 0
   GXR.ATT<1,2> = 1
   GXR.LEN<1,1> = 10
   GXR.LEN<1,2> = 30
***** MAIN PROCESSING
   MAT RSKI.REC = ''
   MAT EDIT.COM.DRIVER = ''
   ECD.SCRN.CNT = 3
   ECD.SCRN.NAME<1> = 'PO.MAINT'
   ECD.SCRN.NAME<2> = 'PO.IN.MAINT'
   ECD.SCRN.NAME<3> = 'PO.DET.MAINT'
* T23082
   ECD.SCRN.NO = 1
* T23082
   ECD.ACTION=1;CALL SCRN.EDIT
**** PRINT SCREEN
1*
   ECD.SCRN.NO = 1
   MAT SCV.REC = ""
   ECD.ACTION=6;CALL SCRN.EDIT
***** ENTER PO NUMBER
5*
   NEW = 0
   MAT PO.REC = ''
   MAT PROD.DEL = ""
   PREV.PO.VEND=""
   OPTION = ""
   ECD.NUM = 5
   ECD.ACTION=4;CALL SCRN.EDIT
   BEGIN CASE
   CASE ECD.RET.VALUE = 'END'
     GOTO 99999
   CASE ECD.RET.VALUE = "N"
     NEW = 1
     PO.CODE = ECD.RET.VALUE
   CASE ECD.RET.VALUE # ""
     PO.CODE = ECD.RET.VALUE
     MATREADU PO.REC FROM PO, CONO:PO.CODE ELSE
       READU REC FROM SLIT.TRANS, CONO:PO.CODE THEN
         ERRMSG='SLIT TRANSACTION ALREADY EXISTS WITH THIS NUMBER'
         GOSUB 91000; RELEASE SLIT.TRANS, REC; GOTO 5
       END
       IF INDEX(PO.CODE,"S",1) THEN
         LENPO = LEN(PO.CODE)
         NPOCODE = PO.CODE[1,LENPO-1]
         IF NPOCODE # "" AND NUM(NPOCODE) THEN
           * this key is not allowed could be a slit.trans key.
           ERRMSG=PO.CODE:" is not allowed.  Could be a Slit Trans Key."
           GOSUB 91000 ; GOTO 5
         END
       END
       X = 0; Y = 21; TYP = 8; MAXL = 1
       PMSG = PO.CODE:" IS NOT ON FILE. DO YOU WANT TO ADD (Y/N)"
       CALL EDIT.SUB
P_X  = 0 ; P_Y = 21 ; P_VALUE = "" ; P_OPT = "CL"
CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
       IF VALUE = "Y" THEN
         NEW = 1
       END ELSE
         RELEASE PO, CONO:PO.CODE
         GOTO 5
       END
     END
   END CASE
   IF NEW THEN
     FOR S = 1 TO 13 UNTIL ECD.RET.VALUE = "END"
       ON S GOSUB 50,70,100,120,200,250,300,350,400,450,500,600,700
     NEXT S
     IF ECD.RET.VALUE = "END" THEN
       IF PO.CODE # "N" THEN RELEASE PO, CONO:PO.CODE
       GOTO 1
     END
   END ELSE
     GOSUB 1000
     ECD.ACTION = 3; CALL SCRN.EDIT
   END
***** ENTER OPTIONS
   MORE = 1
   LOOP
     ECD.NUM = 31
     ECD.ACTION=4;CALL SCRN.EDIT
     OPTION = ECD.RET.VALUE
     BEGIN CASE
     CASE OPTION = 'END' OR OPTION = 'E'
       IF PO.CODE # "N" THEN RELEASE PO, CONO:PO.CODE
       MORE = 0
* CASE NUM(OPTION) AND OPTION > 0 AND PO.PRT.FLG # "N"
     CASE NUM(OPTION) AND OPTION > 0
       ON OPTION GOSUB 70,100,120,200,250,300,350,400,450,500,600,700
     CASE OPTION = 'N'
       CALL PO.IN.MAINT(CONO,PO.CODE,MAT PROD.DEL)
       ECD.SCRN.NO = 1
       ECD.ACTION=2;CALL SCRN.EDIT
       ECD.ACTION=3;CALL SCRN.EDIT
       PD.CNT = 0;LAST.DATE = ""
       PD.CNT = COUNT(PO.DEL.DATE,VM) + (PO.DEL.DATE # "")
       FOR PD = 1 TO PD.CNT
         IF PO.DEL.DATE<1,PD> > LAST.DATE THEN LAST.DATE = PO.DEL.DATE<1,PD>
       NEXT PD
       PO.DUE.DATE = LAST.DATE
       SCV.REC(19)<ECD.SCRN.NO,1> = PO.DUE.DATE
       ECD.NUM = 19;ECD.ACTION = 5;CALL SCRN.EDIT
     CASE OPTION = 'F'
2000*
       IF PO.CODE = "N" THEN
         FND = 1
         READU PO.SEQ FROM CONTROL, CONO:"POCODE" ELSE PO.SEQ = 10000
         LOOP
         WHILE FND DO
           PO.CODE = PO.SEQ
           PO.SEQ = PO.CODE + 1
           READU REC FROM PO, CONO:PO.CODE ELSE
             READU REC FROM PO, CONO:PO.CODE ELSE FND = 0
           END
           REC = ""
           IF FND THEN RELEASE PO, CONO:PO.CODE
         REPEAT
         WRITE PO.SEQ ON CONTROL, CONO:"POCODE"
         ECD.NUM = 5; SCV.REC(5)<ECD.SCRN.NO> = PO.CODE
         ECD.ACTION = 5; CALL SCRN.EDIT
         ERRMSG = "Note new PO number"; GOSUB 91000
       END
       PD.CNT = 0;LAST.DATE = ""
       PD.CNT = COUNT(PO.DEL.DATE,VM) + (PO.DEL.DATE # "")
       FOR PD = 1 TO PD.CNT
         IF PO.DEL.DATE<1,PD> > LAST.DATE THEN LAST.DATE = PO.DEL.DATE<1,PD>
       NEXT PD
       PO.DUE.DATE = LAST.DATE
       CALL PO.UPDATE(PO.CODE,CONO,MAT PROD.DEL)
       IF CO.APS.R.INTRF > 2 THEN
         CALL VEND.STAT.UPDATE(CONO,PO.CODE,"R")
       END
       GOSUB 20000         ;* GENERATE BAR CODE LABEL INFO
       MORE = 0
     END CASE
   WHILE MORE DO REPEAT
   GOTO 1
*
*** ENTER OWNING DIVISION NUMBER; * TASK 19404
*
50*
   ECD.NUM=41; ECD.ACTION=4
   CALL SCRN.EDIT
   IF ECD.RET.VALUE # "END" THEN
      PO.DIV.OWNER = ECD.RET.VALUE
      IF PO.DIV.OWNER # "00" THEN
         MATREAD DIV.REC FROM DIVISION,CONO:PO.DIV.OWNER ELSE
            ERRMSG = "Invalid division number used for PO owning division"
            GOSUB 91000; PO.DIV.OWNER = ""; GOTO 50
         END
      END
   END
   RETURN
*
*** ENTER PO DATE
*
70*
   ECD.NUM = 40;ECD.ACTION = 4; CALL SCRN.EDIT
   IF ECD.RET.VALUE # "END" THEN
     PO.DATE = ECD.RET.VALUE
   END
   RETURN
*** ENTER VEND CODE AND PRINT VEND INFORMATION
100*
   IF NOT(NEW) THEN
     ERRMSG = "CANNOT MODIFY VENDOR INFORMATION ON EXISTING PURCHASE ORDER"
     GOSUB 91000
     RETURN
   END
   ECD.NUM = 9
   ECD.VALDAT.CODE = 2
   ECD.VALDAT.FILE = VEND
   ECD.PREFIX.ID = CONO
   ECD.ACTION=4;CALL SCRN.EDIT
   PO.VEND.NO = ECD.RET.VALUE
   IF PREV.PO.VEND # PO.VEND.NO THEN
     FOR VV = 10 TO 15
       SCV.REC(VV)<ECD.SCRN.NO,1> = ""
       ECD.NUM = VV;ECD.ACTION=5;CALL SCRN.EDIT
     NEXT VV
   END
   BEGIN CASE
   CASE ECD.RET.VALUE = 'END'
     GOTO 110
   CASE ECD.RET.VALUE # '' AND ECD.VALDAT.ITEM # ''
     FOR V = 1 TO VEND.REC.SIZE
       VEND.REC(V) = ECD.VALDAT.ITEM<V>
     NEXT V
     SCV.REC(10)<ECD.SCRN.NO,1> = VEND.PO.DESC
     SCV.REC(11)<ECD.SCRN.NO,1> = VEND.PO.ADDR1
     SCV.REC(12)<ECD.SCRN.NO,1> = VEND.PO.ADDR2
     SCV.REC(13)<ECD.SCRN.NO,1> = FIELD(VEND.PO.CT.ST, ",",1)
     SCV.REC(14)<ECD.SCRN.NO,1> = FIELD(VEND.PO.CT.ST, ",",2)
     SCV.REC(15)<ECD.SCRN.NO,1> = VEND.PO.ZIP
     SCV.REC(42)<ECD.SCRN.NO,1> = VEND.PHONE
     SCV.REC(43)<ECD.SCRN.NO,1> = VEND.FAX
     ECD.ACTION=3;CALL SCRN.EDIT
   CASE ECD.RET.VALUE = ''
     ECD.NUM = 10
     ECD.ACTION=4;CALL SCRN.EDIT
     IF ECD.RET.VALUE = '' OR ECD.RET.VALUE = 'END' THEN GOTO 100
     GXR.XREF = VENDOR.XREF
     GXR.FILE = VEND
     GXR.LOC = 1
     GXR.TOP.LINE = 'VEND XREF SEARCH'
     GXR.HEADING<1,1> = 'VEND NO'
     GXR.ID = ''
     GXR.SRCH.ID = ECD.RET.VALUE
     CALL GEN.XREF(MAT GEN.XREF.REC,PREFIX)
     ECD.ACTION=2;CALL SCRN.EDIT
     IF GXR.ID = '' THEN
       SCV.REC(10)<1> = ''
       ECD.ACTION=3;CALL SCRN.EDIT
       GOTO 100
     END ELSE
       MATREAD VEND.REC FROM VEND , CONO:GXR.ID ELSE
         ERRMSG = 'VENDOR NOT ON FILE'
         GOSUB 91000
         SCV.REC(10)<1> = ''
         GOTO 100
       END
       PO.VEND.NO = GXR.ID
       SCV.REC(9)<1> = PO.VEND.NO
       SCV.REC(10)<ECD.SCRN.NO,1> = VEND.PO.DESC
       SCV.REC(11)<ECD.SCRN.NO,1> = VEND.PO.ADDR1
       SCV.REC(12)<ECD.SCRN.NO,1> = VEND.PO.ADDR2
       SCV.REC(13)<ECD.SCRN.NO,1> = FIELD(VEND.PO.CT.ST, ",",1)
       SCV.REC(14)<ECD.SCRN.NO,1> = FIELD(VEND.PO.CT.ST, ",",2)
       SCV.REC(15)<ECD.SCRN.NO,1> = VEND.PO.ZIP
     SCV.REC(42)<ECD.SCRN.NO,1> = VEND.PHONE
     SCV.REC(43)<ECD.SCRN.NO,1> = VEND.FAX
       ECD.ACTION=3;CALL SCRN.EDIT
     END
   END CASE
110*
   PREV.PO.VEND = PO.VEND.NO
   RETURN
**** ENTER SHIP TO INFORMATION
120*
   ECD.NUM = 32
   ECD.VALDAT.CODE = 2
   ECD.VALDAT.FILE = WAREHOUSE
   ECD.PREFIX.ID = CONO
   ECD.ACTION=4;CALL SCRN.EDIT
   PO.SHIP.WHSE = ECD.RET.VALUE
   BEGIN CASE
   CASE ECD.RET.VALUE = 'END'
     GOTO 130
   CASE ECD.RET.VALUE # '' AND ECD.VALDAT.ITEM # ''
     FOR V = 1 TO WHSE.REC.SIZE
       WHSE.REC(V) = ECD.VALDAT.ITEM<V>
     NEXT V
*TASK 19404 vvv
     IF WHS.DIV # PO.DIV.OWNER AND PO.DIV.OWNER # "00" THEN
       ERRMSG = "Warehouse Division does not match the Owning Division"
       GOSUB 91000
       GOTO 120
     END
*TASK 19404 ^^
     SCV.REC(33)<ECD.SCRN.NO,1> = WHS.DESC
     SCV.REC(34)<ECD.SCRN.NO,1> = WHS.ADDR1
     SCV.REC(35)<ECD.SCRN.NO,1> = WHS.ADDR2
     SCV.REC(36)<ECD.SCRN.NO,1> = WHS.CITY
     SCV.REC(37)<ECD.SCRN.NO,1> = WHS.STATE
     SCV.REC(38)<ECD.SCRN.NO,1> = WHS.ZIP
     ECD.ACTION=3;CALL SCRN.EDIT
     PO.SHIP.NAME = WHS.DESC
     PO.SHIP.ADD1 = WHS.ADDR1
     PO.SHIP.ADD2 = WHS.ADDR2
     PO.SHIP.ADD3 = WHS.CITY:',':WHS.STATE
     PO.SHIP.ADD4 = WHS.ZIP
   END CASE
130*
   RETURN
**** ENTER VEND ORDER NO
200*
   ECD.NUM = 20
   ECD.ACTION=4;CALL SCRN.EDIT
   IF ECD.RET.VALUE # 'END' THEN
     PO.VDR.ORD = ECD.RET.VALUE
   END
   RETURN
**** ENTER WRITTEN BY
250*
   ECD.NUM = 21
   ECD.ACTION=4;CALL SCRN.EDIT
   IF ECD.RET.VALUE # 'END' THEN
     PO.WRIT.BY = ECD.RET.VALUE
   END
   RETURN
**** ENTER CONTACT
300*
   ECD.NUM = 22
   ECD.ACTION=4;CALL SCRN.EDIT
   IF ECD.RET.VALUE # 'END' THEN
     PO.CONTACT = ECD.RET.VALUE
   END
   RETURN
**** ENTER SHIP VIA
350*
   ECD.NUM = 23
   ECD.VALDAT.CODE = '2'
   ECD.VALDAT.FILE = SHIP.VIA
   ECD.PREFIX.ID = CONO
   ECD.ACTION=4;CALL SCRN.EDIT
   IF ECD.RET.VALUE # 'END' THEN
     FOR SV = 1 TO SHIP.VIA.REC.SIZE
       SHIP.VIA.REC(SV) = ECD.VALDAT.ITEM<SV>
     NEXT SV
     PO.SHIP.VIA = ECD.RET.VALUE
     PO.VIA.DESC = SHPV.DESC
     SCV.REC(24)<ECD.SCRN.NO,1> = PO.VIA.DESC
     ECD.NUM = 24
     ECD.ACTION=5;CALL SCRN.EDIT
   END
   RETURN
**** ENTER FOB
400*
   ECD.NUM = 25
   ECD.ACTION=4;CALL SCRN.EDIT
   IF ECD.RET.VALUE # 'END' THEN
     PO.FOB = ECD.RET.VALUE
   END
   RETURN
**** ENTER INTRNL INST
450*
   ECD.NUM = 26
   ECD.ACTION=4;CALL SCRN.EDIT
   IF ECD.RET.VALUE # 'END' THEN
     PO.INTRAL.INT = ECD.RET.VALUE
   END
   RETURN
**** ENTER TERMS CODE AND PRINT DESC AND DISC %
500*
   ECD.NUM = 27
   ECD.DEFAULT = VEND.TERMS<1,2>
   ECD.ACTION=4;CALL SCRN.EDIT
   IF ECD.RET.VALUE = 'END' THEN GOTO 501
   IF NOT(ECD.RET.VALUE MATCH "3N") AND NOT(ECD.RET.VALUE MATCH "1X2N") THEN GOTO 500
   PO.TERMS.DESC = ECD.RET.VALUE
*
   ECD.NUM = 28
   ECD.DEFAULT = VEND.TERMS<1,1>[1,4]
   ECD.ACTION=4;CALL SCRN.EDIT
   IF ECD.RET.VALUE = "END" THEN GOTO 501
   ECD.RET.VALUE = STR("0",4-LEN(ECD.RET.VALUE)):ECD.RET.VALUE
   PO.TERMS.DIS = ECD.RET.VALUE
   IF PO.TERMS.DESC[1,1] = "P" THEN
     ECD.NUM = 29;SCV.REC(29)<1> = "";ECD.ACTION=5;CALL SCRN.EDIT
     GOTO 501
   END
*
   ECD.NUM = 29
   ECD.DEFAULT = VEND.TERMS<1,1>[5,2]
   ECD.ACTION=4;CALL SCRN.EDIT
   IF ECD.RET.VALUE = "END" THEN GOTO 500
   PO.TERMS.DATE = ECD.RET.VALUE
*
501*
   RETURN
*** INPUT ACCRUE FLAG
600*
   IF SUM(PO.TOT.RECEVED) = 0 THEN
     ECD.NUM = 16
     ECD.ACTION=4;CALL SCRN.EDIT
     IF ECD.RET.VALUE # 'END' THEN
       PO.ACCRUE = ECD.RET.VALUE
     END
   END
   RETURN
*** INPUT PRINT FLG
700*
   ECD.NUM = 39
   IF PO.PRT.FLG = "P" THEN
     ECD.VALDAT = "Y,C"
   END ELSE
     ECD.VALDAT = "Y,N"
     ECD.O.R = "O"
     ECD.DEFAULT = "Y"
   END
   ECD.ACTION=4;CALL SCRN.EDIT
   IF ECD.RET.VALUE # 'END' THEN
     PO.PRT.FLG = ECD.RET.VALUE
   END
   RETURN
***** GET ALL VALUES FROM FILE
1000*
   VEND.KEY = CONO:PO.VEND.NO
   MATREAD VEND.REC FROM VEND , VEND.KEY ELSE
     MAT VEND.REC = "????????????????"
   END
   SCV.REC(9)<ECD.SCRN.NO,1> = PO.VEND.NO
   SCV.REC(10)<ECD.SCRN.NO,1> = VEND.PO.DESC
   SCV.REC(11)<ECD.SCRN.NO,1> = VEND.PO.ADDR1
   SCV.REC(12)<ECD.SCRN.NO,1> = VEND.PO.ADDR2
   SCV.REC(13)<ECD.SCRN.NO,1> = FIELD(VEND.PO.CT.ST, ",",1)
   SCV.REC(14)<ECD.SCRN.NO,1> = FIELD(VEND.PO.CT.ST, ",",2)
   SCV.REC(15)<ECD.SCRN.NO,1> = VEND.PO.ZIP
     SCV.REC(42)<ECD.SCRN.NO,1> = VEND.PHONE
     SCV.REC(43)<ECD.SCRN.NO,1> = VEND.FAX
   SCV.REC(16)<ECD.SCRN.NO,1> = PO.ACCRUE
   SCV.REC(19)<ECD.SCRN.NO,1> = PO.DUE.DATE
   SCV.REC(20)<ECD.SCRN.NO,1> = PO.VDR.ORD
   SCV.REC(21)<ECD.SCRN.NO,1> = PO.WRIT.BY
   SCV.REC(22)<ECD.SCRN.NO,1> = PO.CONTACT
   SCV.REC(23)<ECD.SCRN.NO,1> = PO.SHIP.VIA
   SCV.REC(24)<ECD.SCRN.NO,1> = PO.VIA.DESC
   SCV.REC(25)<ECD.SCRN.NO,1> = PO.FOB
   SCV.REC(26)<ECD.SCRN.NO,1> = PO.INTRAL.INT
   SCV.REC(29)<ECD.SCRN.NO,1> = PO.TERMS.DATE
   SCV.REC(27)<ECD.SCRN.NO,1> = PO.TERMS.DESC
   SCV.REC(28)<ECD.SCRN.NO,1> = PO.TERMS.DIS
   SCV.REC(32)<ECD.SCRN.NO,1> = PO.SHIP.WHSE
   SCV.REC(33)<ECD.SCRN.NO,1> = PO.SHIP.NAME
   SCV.REC(34)<ECD.SCRN.NO,1> = PO.SHIP.ADD1
   SCV.REC(35)<ECD.SCRN.NO,1> = PO.SHIP.ADD2
   SCV.REC(36)<ECD.SCRN.NO,1> = FIELD(PO.SHIP.ADD3, ",",1)
   SCV.REC(37)<ECD.SCRN.NO,1> = FIELD(PO.SHIP.ADD3, ",",2)
   SCV.REC(38)<ECD.SCRN.NO,1> = PO.SHIP.ADD4
   SCV.REC(39)<ECD.SCRN.NO,1> = PO.PRT.FLG
   SCV.REC(40)<ECD.SCRN.NO,1> = PO.DATE
   SCV.REC(41)<ECD.SCRN.NO,1> = PO.DIV.OWNER ;* TASK 19404
   RETURN
*
*---- GENERATE BARCODE LABEL DATA
*
20000*
   READ RL.SK.CONTROL FROM CONTROL,CONO:"RL.SK.CONTROL" ELSE
     RL.SK.CONTROL = ""
   END
   VALUE = "N"
   LOCATE "Y" IN RL.SK.CONTROL SETTING POS THEN
     PO.LINE.CNT = DCOUNT(PO.PROD.NUM,VM)
     GENERAL.ROLL.SKID = "Y"
     FOR PO.LINE.PTR = 1 TO PO.LINE.CNT WHILE GENERAL.ROLL.SKID="Y"
       MATREAD INV.REC FROM INVENTORY, CONO:PO.PROD.NUM<1,PO.LINE.PTR> ELSE  MAT INV.REC = ""
*           IF (INV.PAP.TYPE = 'ROLL' AND RL.SK.CONTROL<1> = 'Y') OR (INV.PAP.TYPE = 'SHEET' AND RL.SK.CONTROL<2> = 'Y') THEN
       BCFLAG = 0
       IF RL.SK.CONTROL<1>="Y" AND (INV.PAP.TYPE="ROLL" OR INV.PAP.TYPE="LROLL" OR INV.PAP.TYPE="PCOAT") THEN BCFLAG=1
       IF RL.SK.CONTROL<2>="Y" AND INV.PAP.TYPE="SHEET" THEN BCFLAG=1
       IF BCFLAG THEN
         MATREAD CATG.REC FROM CATEGORY, CONO:INV.LINE ELSE MAT CATG.REC = ""
         IF CATG.R.S.ID = "N" THEN GENERAL.ROLL.SKID="N"
       END
     NEXT PO.LINE.PTR
     IF GENERAL.ROLL.SKID = "N" THEN
       X=0;Y=21;TYP=8;MAXL=1;PMSG='Create BARCODE label information (Y/N) :'
       CALL EDIT.SUB
P_X  = 0 ; P_Y = 21 ; P_VALUE = "" ; P_OPT = "CL"
CALL VSI_PLINE(P_X,P_Y,P_VALUE,P_OPT)
     END
   END
   IF VALUE = 'Y' THEN
     MAT RSXRF.REC = ""
     PO.LINE.CNT = DCOUNT(PO.PROD.NUM,VM)
     CNT = 0
     FOR PO.LINE.PTR = 1 TO PO.LINE.CNT
       LINE.CNT = 0
       MATREAD INV.REC FROM INVENTORY, CONO:PO.PROD.NUM<1,PO.LINE.PTR> ELSE
         ERRMSG = "NO INVENTORY RECORD FOR PRODUCT " PO.PROD.NUM<1,PO.LINE.PTR>
         GOSUB 91000
         RETURN
       END
       MATREAD CATG.REC FROM CATEGORY, CONO:INV.LINE ELSE MAT CATG.REC = ""
       IF CATG.R.S.ID # "Y" THEN
*              IF (INV.PAP.TYPE = 'ROLL' AND RL.SK.CONTROL<1> = 'Y') OR (INV.PAP.TYPE = 'SHEET' AND RL.SK.CONTROL<2> = 'Y') THEN
         BCFLAG = 0
         IF RL.SK.CONTROL<1>="Y" AND (INV.PAP.TYPE="ROLL" OR INV.PAP.TYPE="LROLL" OR INV.PAP.TYPE="PCOAT") THEN BCFLAG=1
         IF RL.SK.CONTROL<2>="Y" AND INV.PAP.TYPE="SHEET" THEN BCFLAG=1
         IF BCFLAG THEN
           TASK = 'SSELECT ROLL.SKID.INFO WITH CONO = "':CONO:'" AND WITH RSKI.PO.NO = "': PO.CODE: '" AND WITH RSKI.PO.LINE = "': PO.LINE.PTR: '"'
           PERFORM TASK RTNLIST ITEM.LIST CAPTURING ITEMS.MSG
           DONE = 0
           LOOP
             READNEXT KEY FROM ITEM.LIST ELSE DONE = 1
           UNTIL DONE DO
             MATREADU RSKI.REC FROM ROLL.SKID.INFO, KEY ELSE
               ERRMSG = 'CANNOT FIND ROLL SKID INFORMATION RECORD'
               GOTO 93000
             END
             GOSUB 20050
             MATWRITE RSKI.REC ON ROLL.SKID.INFO, KEY
             RSXRF.RS.NO<1,CNT> = KEY[4,99]
           REPEAT
           MAT RSKI.REC = ""
           LOOP WHILE LINE.CNT < PO.NO.OF.ROLLS<1,PO.LINE.PTR> DO
             READU BARCODE FROM CONTROL, CONO:"BARCODE.SEQ" ELSE BARCODE = 0
             BOK = 0
             LOOP
               BARCODE = BARCODE + 1
               IF BARCODE > 9999999 THEN BARCODE = 1
               BARCODE = STR("0",7-LEN(BARCODE)):BARCODE
               CALL CHECK.DIGIT ("C",BARCODE,"10RL",CKDIG,VALID)
               IF VALID THEN
                 READVU CHKREC FROM ROLL.SKID.INFO, CONO:BARCODE:CKDIG,1 ELSE BOK = 1
               END
             UNTIL BOK DO
               RELEASE ROLL.SKID.INFO, CONO:BARCODE:CKDIG
             REPEAT
             WRITE BARCODE ON CONTROL, CONO:"BARCODE.SEQ"
             GOSUB 20050
             RSKI.PRINT.DATE = ''
             MATWRITE RSKI.REC ON ROLL.SKID.INFO, CONO:BARCODE:CKDIG
             RSXRF.RS.NO<1,CNT> = BARCODE:CKDIG
           REPEAT
         END
       END
     NEXT PO.LINE.PTR
     IF RSXRF.RS.NO # "" THEN
       MATWRITE RSXRF.REC ON PO.RSKI.XREF, CONO:PO.CODE
     END
   END
   RETURN
*
*------------------ WRITE ROLL SKID INFO RECORD ---------------------
*
20050*
   RSKI.PO.NO=PO.CODE
   RSKI.PO.LINE=PO.LINE.PTR
   RSKI.INV.NO=PO.PROD.NUM<1,PO.LINE.PTR>
   RSKI.WHSE = PO.WHSE<1,PO.LINE.PTR>
   RSKI.UNIT = PO.UNIT.FLG<1,PO.LINE.PTR>
   CNT= CNT + 1
   LINE.CNT = LINE.CNT + 1
   RETURN
*
**** CALLS FOR SYSCOM
*
91000 ERR.TYPE = 1; CALL SYSCOM(MAT SYSCOM.REC)
   RETURN
92000 ERR.TYPE = 2; CALL SYSCOM(MAT SYSCOM.REC)
   RETURN
93000 ERR.TYPE = 3; CALL SYSCOM(MAT SYSCOM.REC)
99999 * PRINT * @(-1) * :
   RELEASE
 END
