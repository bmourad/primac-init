*COPY>CPYLIB>COM1
*********************************************************************
* REVISION    - [08.0]
* Copyright 1982 by Computer Business Associates (Vercom Software, Inc.)
* SYSTEM      - PRIMAC
* SOURCE      - JCSBP
* PROGRAM     - JOB.PURGE.DET
* BY          - JIHAD YAMOUT , CBA
* DATE        - 06/11/84
* DESCRIPTION - THIS PROGRAM UPDATES JOB FILE WITH STATUS = '7' READY
* TO BE PURGED.
* MODIFIED    - CK 2.9.90. MOD TO CHECK JOB.STATS FOR BLANK RECORD
* IF BLANK, DELETE JOB.STATS RECORD AND CONTINUE PURGE
*ENDDOC
*********************************************************************
*--- INSERT FILES EQUATES
*
*COPY>PMC.CPYLIB>COMPANY
*COPY>POS.CPYLIB>OUTSIDE.PO
*COPY>PMC.CPYLIB>FISCAL
*COPY>JCS.CPYLIB>JOB
*COPY>JCS.CPYLIB>JOB.STATS
*COPY>CPYLIB>SYSCOM
*COPY>CPYLIB>EDIT.COM
*COPY>CPYLIB>FILE.VARS
*COPY>CPYLIB>CHAR
*** SETUP FOR SYSTEM ERRMSG
SYS.TYPE = 1
CALL SYSCOM(MAT SYSCOM.REC)
*** OPEN ALL FILES
OPEN 'COMPANY' TO COMPANY ELSE ERRMSG = 'COMPANY FILE IS MISSING' ; GOTO 93000
OPEN 'JOB' TO JOB ELSE ERRMSG = 'JOB FILE IS MISSING' ; GOTO 93000
OPEN 'JOB.STATS' TO JOB.STATS ELSE ERRMSG = 'JOB.STATS FILE IS MISSING' ; GOTO 93000
OPEN 'INVOICE' TO INVOICE ELSE ERRMSG = 'INVOICE FILE IS MISSING' ; GOTO 93000
OPEN 'DAILY.INVOICE' TO DAILY.INVOICE ELSE ERRMSG = 'DAILY.INVOICE FILE IS MISSING' ; GOTO 93000
OPEN 'CONTROL' TO CONTROL ELSE ERRMSG = 'CONTROL FILE IS MISSING' ; GOTO 93000
*** GET CONO FROM PROC
PROCREAD KEY ELSE
ERRMSG = 'THIS PROCESS SHOULD BE RUN FROM A PROC';GOTO 93000
END
CONO = KEY<1>
MATREAD COMP.REC FROM COMPANY, CONO ELSE
  ERRMSG = 'COMPANY RECORD IS MISSING' ; GOTO 93000
END
MATREAD FISCAL.REC FROM CONTROL, CONO:"JCFISCAL" ELSE
  ERRMSG = "CANNOT LOCATE CONTROL, JCS FISCAL PERIOD"
  GOTO 93000
END
*** MAIN PROCESS
UPDATE.FLG = 0
MAT EDIT.COM = ""
TYP = 0 ; CALL EDIT.SUB ; FILL = "#"
READV NO.DATE FROM CONTROL, CONO:"DET.DATES",1 ELSE
  NO.DATE = ""
END
*** ENTER CUTOFF DAYS
10 *
X = 0 ; Y = 15 ; TYP = 3 ; PMSG = "ENTER PURGE CUTOFF # OF DAYS OR (END)" ; MAXL = 3 ; O.R = "R"
IF NO.DATE # "" THEN
  O.R = "O" ; DEFAULT = NO.DATE
END
CALL EDIT.SUB
BEGIN CASE
CASE VALUE = "END"
  X = "END"
  PROCWRITE X
  GOTO 99999
CASE VALUE # NO.DATE
  S.VALUE = VALUE
  X = 0 ; Y = 22 ; TYP = 8
  PMSG = "OK TO USE (":S.VALUE:") AS CUTOFF DAYS (Y)ES OR (N)O"
  CALL EDIT.SUB
  IF VALUE = "N" THEN GOTO 10
  NO.DATE = S.VALUE
  WRITEV NO.DATE ON CONTROL , CONO:"DET.DATES",1
END CASE
DATA = 1
LOOP
  READNEXT ID ELSE DATA = 0
WHILE DATA DO
  MATREADU JOB.REC FROM JOB ,ID ELSE GOTO 111
  FND = 1
  MATREAD JSTAT.REC FROM JOB.STATS ,ID ELSE
    MAT JSTAT.REC = ''
    FND = 0
  END
  IF FND THEN 
    FOR XYZ = 1 TO 17
      IF JSTAT.REC(XYZ) # '' THEN
        GOTO 111
      END
    NEXT XYZ
    DELETE JOB.STATS,ID
  END
  BEGIN CASE
  CASE JOB.STATUS = ""
    GOTO 111
  CASE JOB.WIP<1,2,1>+JOB.WIP<1,2,2>+JOB.WIP<1,2,3>+JOB.WIP<1,2,4> <> 0
    GOTO 111
  CASE JOB.TOT.BAL + 0 <> 0
    GOTO 111
  CASE JOB.WIP<1,5> >= FR.CURR.PER
    GOTO 111
  END CASE
  COUNT.NO = COUNT(JOB.RESV.MATL,VM) + (JOB.RESV.MATL # "")
  CONT.PROCESS = 1
  FOR X = 1 TO COUNT.NO WHILE CONT.PROCESS
      TEMP.ALOC = JOB.ALOC.QTY<1,X>
      TEMP.RESV = JOB.RESV.QTY<1,X>
      TEMP.ALOC = TEMP.ALOC + 0
      TEMP.RESV = TEMP.RESV + 0
    IF TEMP.ALOC # 0 OR TEMP.RESV # 0 THEN
      CONT.PROCESS = 0
    END
  NEXT X
  IF NOT(CONT.PROCESS) THEN
    GOTO 111
  END
  INV.CNT = COUNT(JOB.INV.NO, VM) + (JOB.INV.NO # "")
  IF INV.CNT > 0 THEN
    FND = 1
    READ DUMMY FROM INVOICE, CONO:JOB.INV.NO<1,INV.CNT> ELSE FND = 0
    IF FND THEN GOTO 111
    READ DUMMY FROM DAILY.INVOICE , CONO:JOB.INV.NO<1,INV.CNT> ELSE FND = 0
    IF FND THEN GOTO 111
    BEGIN CASE
    CASE JOB.INV.DATE<1,INV.CNT> # ""
      INV.DATE = JOB.INV.DATE<1,INV.CNT>
    CASE JOB.TRACK.DATE<1,9> # ""
      INV.DATE = JOB.TRACK.DATE<1,9>
    CASE JOB.TRACK.DATE<1,10> # ""
      INV.DATE = JOB.TRACK.DATE<1,10>
    CASE 1
      GOTO 111
    END CASE
    IF (DATE() - INV.DATE) > NO.DATE THEN
      JOB.STATUS = INSERT(JOB.STATUS,1,1,0,"7")
      JOB.STAT.DATE = INSERT(JOB.STAT.DATE,1,1,0,DATE())
      GOSUB 1000
      UPDATE.FLG = 1
    END
  END ELSE
    STATS.UPD = 1
    IF ID[4,1] = "X" THEN
      READ DIV.NUMS FROM CONTROL,CONO:"DIVISIONS" ELSE NULL
      DFND = 0
      LOCATE ID[9,2] IN DIV.NUMS<1>,1 SETTING DFND ELSE DFND = 0
      IF DFND THEN
        IF ID[11,1] = 1 OR ID[11,1] = 2 OR ID[11,1] = 3 OR ID[11,1] = 4 OR ID[11,1] = 5 THEN
          IF JOB.TYPE = "N" AND JOB.TRACK.DATE<1,10> # "" THEN
            IF (DATE() - JOB.TRACK.DATE<1,10>) > NO.DATE THEN
              JOB.STATUS = INSERT(JOB.STATUS,1,1,0,"7")
              JOB.STAT.DATE = INSERT(JOB.STAT.DATE,1,1,0,DATE())
              GOSUB 1000
              UPDATE.FLG = 1
              STATS.UPD = 0
            END
          END
        END
      END
    END
    IF STATS.UPD THEN
      FND = 0
      LOCATE "9" IN JOB.STATUS<1>,1 SETTING FND ELSE FND = 0
      IF FND THEN
        XX = FND
        IF (DATE() - JOB.STAT.DATE<1,XX>) > NO.DATE THEN
          JOB.STATUS = INSERT(JOB.STATUS,1,1,0,"7")
          JOB.STAT.DATE = INSERT(JOB.STAT.DATE,1,1,0,DATE())
          GOSUB 1000
          UPDATE.FLG = 1
        END
      END ELSE
        IF JOB.TRACK.DATE<1,10> # "" THEN
          IF (DATE() - JOB.TRACK.DATE<1,10>) > NO.DATE THEN
            JOB.STATUS = INSERT(JOB.STATUS,1,1,0,"7")
            JOB.STAT.DATE = INSERT(JOB.STAT.DATE,1,1,0,DATE())
            GOSUB 1000
            UPDATE.FLG = 1
          END
        END
      END
    END
  END
111 *
  RELEASE JOB, ID
REPEAT
IF UPDATE.FLG = 0 THEN
  PROCWRITE "END"
END
GOTO 99999
*** WRITE BACK JOB RECORD
1000 *
MATWRITE JOB.REC ON JOB , ID
RETURN
*** PRINT ERRMSG
91000 ERR.TYPE = 1; CALL SYSCOM(MAT SYSCOM.REC)
RETURN
92000 ERR.TYPE = 2; CALL SYSCOM(MAT SYSCOM.REC)
RETURN
93000 ERR.TYPE = 3; CALL SYSCOM(MAT SYSCOM.REC)
99999 PRINT @(-1)
END
